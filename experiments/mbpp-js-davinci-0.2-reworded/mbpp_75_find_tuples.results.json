{
  "name": "mbpp_75_find_tuples",
  "language": "js",
  "prompt": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_75_find_tuples.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag === true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        let flag = true;\n        for(let j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K !== 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmproa5dv1u.js:17:10)\n    at Object.<anonymous> (/tmp/tmproa5dv1u.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i].length > 0){\n            var flag = true;\n            for(var j = 0; j < test_list[i].length; j++){\n                if(test_list[i][j] % K != 0){\n                    flag = false;\n                    break;\n                }\n            }\n            if(flag){\n                result.push(test_list[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[[2, 4, 6], [1, 2, 3], [3, 8, 9]], [[4, 8, 12], [1, 2, 3], [3, 6, 9]]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j]%K!=0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_lno61pm.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_lno61pm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nvar test_list = [[[1,2,3], [4,5,6], [7,8,9]], [[10,11,12], [13,14,15], [16,17,18]], [[19,20,21], [22,23,24], [25,26,27]]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i].length > 0){\n            var flag = true;\n            for(var j = 0; j < test_list[i].length; j++){\n                if(test_list[i][j] % K != 0){\n                    flag = false;\n                    break;\n                }\n            }\n            if(flag){\n                result.push(test_list[i]);\n            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[[1, 2, 3], [1, 2, 3]], [[2, 4, 6], [2, 4, 6]], [[2, 4, 6], [2, 4, 7]]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag === true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_lno61pm.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_lno61pm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_lno61pm.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_lno61pm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K !== 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if(count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j]%K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i].every(function(x){return x % K == 0;})){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    let result = [];\n    for (let i = 0; i < test_list.length; i++){\n        let count = 0;\n        for (let j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var divisible = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                divisible = false;\n                break;\n            }\n        }\n        if (divisible){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[10, 11, 12], [13, 14, 15], [16, 17, 18]]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag === true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 7, 4], [12, 14, 6], [9, 6, 3]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_lhuqhpk.js:19:10)\n    at Object.<anonymous> (/tmp/tmp_lhuqhpk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_lno61pm.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_lno61pm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = 1;\n                break;\n            }\n        }\n        if (flag == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[[1, 2, 3], [4, 5, 6]], [[2, 4, 6], [1, 3, 5]]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i] % K === 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmpeeyh5e4c.js:17:10)\n    at Object.<anonymous> (/tmp/tmpeeyh5e4c.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i].every(function(x){return x % K == 0;})){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count += 1;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[[1, 2, 3], [1, 2, 3]], [[2, 4, 6], [2, 4, 6]], [[2, 4, 6], [2, 4, 6], [2, 4, 6]]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp9a7iq2__.js:17:10)\n    at Object.<anonymous> (/tmp/tmp9a7iq2__.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i].length > 0){\n            var flag = true;\n            for(var j = 0; j < test_list[i].length; j++){\n                if(test_list[i][j] % K != 0){\n                    flag = false;\n                    break;\n                }\n            }\n            if(flag){\n                result.push(test_list[i]);\n            }\n        }\n    }\n    return result;\n}\n\nvar test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        let flag = true;\n        for(let j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        if(test_list[i].every(x => x % K == 0)){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i] % K == 0) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp7xf1l564.js:17:10)\n    at Object.<anonymous> (/tmp/tmp7xf1l564.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[[2, 4, 6], [1, 2, 3], [3, 8, 9]], [[2, 4, 6], [1, 2, 3], [3, 6, 9]]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_lno61pm.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_lno61pm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    var count = 0;\n    for(var i = 0; i < test_list.length; i++){\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if(count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n        count = 0;\n    }\n    return result;\n}\n\nvar test_list = [[[1,2,3], [4,5,6], [7,8,9]], [[10,11,12], [13,14,15], [16,17,18]]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K !== 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i].every(function(x){\n            return x % K == 0;\n        })){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmproa5dv1u.js:17:10)\n    at Object.<anonymous> (/tmp/tmproa5dv1u.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_lno61pm.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_lno61pm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_lno61pm.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_lno61pm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        let flag = true;\n        for(let j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag) result.push(test_list[i]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_lno61pm.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_lno61pm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_lno61pm.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_lno61pm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12], [13, 14, 15, 16, 17, 18]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmpmmvs4i8l.js:19:10)\n    at Object.<anonymous> (/tmp/tmpmmvs4i8l.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K !== 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j]%K!=0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_lno61pm.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_lno61pm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    6,\n    24,\n    12\n  ],\n  [\n    12,\n    18,\n    21\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmproa5dv1u.js:17:10)\n    at Object.<anonymous> (/tmp/tmproa5dv1u.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 6, 24, 12 ], [ 12, 18, 21 ] ],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K !== 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[[1, 2], [2, 3], [3, 4]], [[1, 2, 3, 4], [2, 4, 6, 8], [3, 6, 9, 12]]];\nvar K = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag)\n            result.push(test_list[i]);\n    }\n    return result;\n}\n\nvar test_list = [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[10, 11, 12], [13, 14, 15], [16, 17, 18]]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[10, 11, 12], [13, 14, 15], [16, 17, 18]]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = []\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false\n                break\n            }\n        }\n        if(flag){\n            result.push(test_list[i])\n        }\n    }\n    return result\n}\n\nvar test_list = [[[1, 2], [2, 3], [3, 4]], [[1, 2, 3], [2, 3, 4], [3, 4, 5]]]\nvar K = 2\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K !== 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i][0] % K === 0 && test_list[i][1] % K === 0 && test_list[i][2] % K === 0) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = []\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count += 1\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i])\n        }\n    }\n    return result\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i].every(function(x){return x % K == 0;})){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[2, 7, 4], [12, 14, 6], [9, 6, 3]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_lhuqhpk.js:19:10)\n    at Object.<anonymous> (/tmp/tmp_lhuqhpk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nvar test_list = [[[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[10, 11, 12], [13, 14, 15], [16, 17, 18]]];\nvar K = 3;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var count = 0;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K == 0){\n                count++;\n            }\n        }\n        if (count == test_list[i].length){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i][0] % K == 0 && test_list[i][1] % K == 0 && test_list[i][2] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        if (test_list[i].every(function(x){return x % K === 0;})){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i].every(function(x){ return x % K == 0;})){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i] % K == 0){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp_lno61pm.js:17:10)\n    at Object.<anonymous> (/tmp/tmp_lno61pm.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++){\n            if (test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if (flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var tuple = test_list[i];\n        var flag = true;\n        for(var j=0; j<tuple.length; j++){\n            if(tuple[j]%K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(tuple);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        var flag = true;\n        for(var j=0; j<test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        if(test_list[i].every(function(x){\n            return x % K == 0;\n        })){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    let result = [];\n    for(let i = 0; i < test_list.length; i++){\n        let flag = true;\n        for(let j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K !== 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        if (test_list[i] % K == 0) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    6,\n    24,\n    12\n  ]\n]\n    at test (/tmp/tmp7xf1l564.js:17:10)\n    at Object.<anonymous> (/tmp/tmp7xf1l564.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ [ 6, 24, 12 ] ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for (var i = 0; i < test_list.length; i++) {\n        var flag = true;\n        for (var j = 0; j < test_list[i].length; j++) {\n            if (test_list[i][j] % K != 0) {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag == true){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i=0; i<test_list.length; i++){\n        if(test_list[i].every(function(x){return x%K == 0;})){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1666124178,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples(test_list, K){\n    var result = [];\n    for(var i = 0; i < test_list.length; i++){\n        var flag = true;\n        for(var j = 0; j < test_list[i].length; j++){\n            if(test_list[i][j] % K != 0){\n                flag = false;\n                break;\n            }\n        }\n        if(flag){\n            result.push(test_list[i]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_tuples;\n  assert.deepEqual(candidate([[6, 24, 12], [7, 9, 6], [12, 18, 21]], 6),[[6, 24, 12]]);\n  assert.deepEqual(candidate([[5, 25, 30], [4, 2, 3], [7, 8, 9]], 5),[[5, 25, 30]]);\n  assert.deepEqual(candidate([[7, 9, 16], [8, 16, 4], [19, 17, 18]], 4),[[8, 16, 4]]);\n}\n\ntest();",
      "timestamp": 1665509800,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
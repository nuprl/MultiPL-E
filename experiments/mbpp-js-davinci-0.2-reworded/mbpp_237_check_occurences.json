{
  "name": "mbpp_237_check_occurences",
  "language": "js",
  "prompt": "//Write a function that takes in an array of arrays and returns an object mapping each unique array to the number of times it occurs in the array.\nfunction check_occurences(test_list){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_237_check_occurences.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_occurences;\n  assert.deepEqual(candidate([[3, 1], [1, 3], [2, 5], [5, 2], [6, 3]]),{[1, 3]: 2, [2, 5]: 2, [3, 6]: 1});\n  assert.deepEqual(candidate([[4, 2], [2, 4], [3, 6], [6, 3], [7, 4]]),{[2, 4]: 2, [3, 6]: 2, [4, 7]: 1});\n  assert.deepEqual(candidate([[13, 2], [11, 23], [12, 25], [25, 12], [16, 23]]),{[2, 13]: 1, [11, 23]: 1, [12, 25]: 2, [16, 23]: 1});\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var count = {};\n    for (var i = 0; i < test_list.length; i++) {\n        var num = test_list[i];\n        count[num] = count[num] ? count[num] + 1 : 1;\n    }\n    return count;\n}\n",
    "    var count = {};\n    for(var i = 0; i < test_list.length; i++){\n        var num = test_list[i];\n        count[num] = count[num] ? count[num] + 1 : 1;\n    }\n    return count;\n}\n",
    "    var result = {};\n    for(var i = 0; i < test_list.length; i++){\n        var key = test_list[i];\n        if(result[key] == undefined){\n            result[key] = 1;\n        }\n        else{\n            result[key] += 1;\n        }\n    }\n    return result;\n}\n",
    "    var occurences = {};\n    for (var i = 0; i < test_list.length; i++){\n        var key = test_list[i];\n        if (occurences[key]){\n            occurences[key] += 1;\n        }\n        else{\n            occurences[key] = 1;\n        }\n    }\n    return occurences;\n}\n",
    "    var count = {};\n    for(var i = 0; i < test_list.length; i++){\n        var num = test_list[i];\n        count[num] = count[num] ? count[num] + 1 : 1;\n    }\n    return count;\n}\n",
    "    var count = {};\n    for (var i = 0; i < test_list.length; i++) {\n        var num = test_list[i];\n        count[num] = count[num] ? count[num] + 1 : 1;\n    }\n    return count;\n}",
    "    var occurences = {};\n    for(var i = 0; i < test_list.length; i++){\n        var current_array = test_list[i];\n        var current_array_string = JSON.stringify(current_array);\n        if(occurences[current_array_string] === undefined){\n            occurences[current_array_string] = 1;\n        }\n        else{\n            occurences[current_array_string] += 1;\n        }\n    }\n    return occurences;\n}\n\nvar test_list = [[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2,",
    "    var result = {};\n    for (var i = 0; i < test_list.length; i++){\n        var key = test_list[i];\n        if (result[key] == undefined){\n            result[key] = 1;\n        } else {\n            result[key] += 1;\n        }\n    }\n    return result;\n}\n",
    "    var occurences = {};\n    for (var i = 0; i < test_list.length; i++){\n        var key = test_list[i];\n        if (occurences[key]){\n            occurences[key] += 1;\n        }\n        else{\n            occurences[key] = 1;\n        }\n    }\n    return occurences;\n}\n",
    "    var result = {};\n    for(var i = 0; i < test_list.length; i++){\n        var test_array = test_list[i];\n        var test_array_string = test_array.join(\",\");\n        if(result[test_array_string] === undefined){\n            result[test_array_string] = 1;\n        }\n        else{\n            result[test_array_string] += 1;\n        }\n    }\n    return result;\n}\n",
    "    var dict = {};\n    for (var i = 0; i < test_list.length; i++){\n        var key = test_list[i];\n        if (dict[key]){\n            dict[key] += 1;\n        } else {\n            dict[key] = 1;\n        }\n    }\n    return dict;\n}\n\nvar test_list = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10];",
    "    var occurences = {};\n    for(var i = 0; i < test_list.length; i++){\n        var key = test_list[i];\n        if(occurences[key]){\n            occurences[key] += 1;\n        }\n        else{\n            occurences[key] = 1;\n        }\n    }\n    return occurences;\n}\n\nvar test_list = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10];",
    "    var occurences = {};\n    for(var i = 0; i < test_list.length; i++){\n        var test = test_list[i];\n        if(occurences[test]){\n            occurences[test] += 1;\n        }\n        else{\n            occurences[test] = 1;\n        }\n    }\n    return occurences;\n}\n\nvar test_list = [[1,2,3],[1,2,3],[1,2,3],[4,5,6],[4,5,6],[4,5,6]];",
    "    var result = {};\n    for (var i = 0; i < test_list.length; i++){\n        var current_list = test_list[i];\n        if (result[current_list] === undefined){\n            result[current_list] = 1;\n        }\n        else{\n            result[current_list] += 1;\n        }\n    }\n    return result;\n}\n\nvar test_list = [[1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2",
    "    var occurences = {};\n    for (var i = 0; i < test_list.length; i++){\n        var key = test_list[i];\n        if (occurences[key]){\n            occurences[key] += 1;\n        } else {\n            occurences[key] = 1;\n        }\n    }\n    return occurences;\n}\n",
    "    var result = {};\n    for(var i=0; i<test_list.length; i++){\n        var key = test_list[i];\n        if(result[key] == undefined){\n            result[key] = 1;\n        }\n        else{\n            result[key] += 1;\n        }\n    }\n    return result;\n}\n",
    "    var count = {};\n    for (var i = 0; i < test_list.length; i++) {\n        var key = test_list[i];\n        if (count[key]) {\n            count[key] += 1;\n        } else {\n            count[key] = 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = {};\n    for(var i = 0; i < test_list.length; i++){\n        var num = test_list[i];\n        count[num] = count[num] ? count[num] + 1 : 1;\n    }\n    return count;\n}\n",
    "    var occurences = {};\n    for (var i = 0; i < test_list.length; i++){\n        var current_list = test_list[i];\n        if (occurences[current_list] == undefined){\n            occurences[current_list] = 1;\n        }\n        else{\n            occurences[current_list] += 1;\n        }\n    }\n    return occurences;\n}\n\nvar test_list = [[1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [1,2,3], [",
    "    var count = {};\n    for(var i = 0; i < test_list.length; i++){\n        var key = JSON.stringify(test_list[i]);\n        if(count[key]){\n            count[key]++;\n        }\n        else{\n            count[key] = 1;\n        }\n    }\n    return count;\n}\n\nvar test_list = [[1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,2,3,4], [1,"
  ]
}
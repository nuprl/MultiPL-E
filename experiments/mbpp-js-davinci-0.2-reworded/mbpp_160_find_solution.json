{
  "name": "mbpp_160_find_solution",
  "language": "js",
  "prompt": "//Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undefined if no solution exists.\nfunction find_solution(a, b, n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_solution;\n  assert.deepEqual(candidate(2, 3, 7),[2, 1]);\n  assert.deepEqual(candidate(4, 2, 7),undefined);\n  assert.deepEqual(candidate(1, 13, 17),[4, 1]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y === n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n",
    "    for(var x = 0; x < n; x++){\n        for(var y = 0; y < n; y++){\n            if(a*x + b*y === n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n",
    "    if(n % gcd(a, b) != 0){\n        return undefined;\n    }\n    let x = 0;\n    let y = 0;\n    let d = gcd(a, b);\n    x = (n / d) * (a / d);\n    y = (n / d) * (b / d);\n    return [x, y];\n}\n",
    "  if(a == 0 && b == 0){\n    return undefined;\n  }\n  if(a == 0){\n    return [0, n/b];\n  }\n  if(b == 0){\n    return [n/a, 0];\n  }\n  var x = 0;\n  var y = 0;\n  while(a*x + b*y != n){\n    if(a*x + b*y < n){\n      x++;\n    }\n    else{\n      y++;\n    }\n  }\n  return [x, y];\n}\n",
    "    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n",
    "\tif(n % gcd(a, b) != 0)\n\t\treturn undefined;\n\telse{\n\t\tvar x = 0;\n\t\tvar y = n / b;\n\t\tvar d = gcd(a, b);\n\t\treturn [x, y];\n\t}\n}\n",
    "\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n",
    "\tfor(var x = 0; x < n; x++){\n\t\tfor(var y = 0; y < n; y++){\n\t\t\tif(a*x + b*y === n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n",
    "    for(var x = 0; x <= n; x++){\n        for(var y = 0; y <= n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n",
    "\tfor(var x = 0; x < n; x++){\n\t\tfor(var y = 0; y < n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n",
    "\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a*x + b*y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n",
    "    if(n % a === 0){\n        return [n / a, 0];\n    }\n    if(n % b === 0){\n        return [0, n / b];\n    }\n    for(let i = 0; i < n; i++){\n        for(let j = 0; j < n; j++){\n            if(a * i + b * j === n){\n                return [i, j];\n            }\n        }\n    }\n    return undefined;\n}\n",
    "\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n",
    "  if(n % gcd(a, b) != 0) return undefined;\n  let x = 0;\n  let y = n / b;\n  while(x * a + y * b != n){\n    if(x * a + y * b < n){\n      x++;\n    }else{\n      y--;\n    }\n  }\n  return [x, y];\n}\n",
    "\tif(a > n || b > n){\n\t\treturn undefined;\n\t}else if(n % a === 0){\n\t\treturn [n / a, 0];\n\t}else if(n % b === 0){\n\t\treturn [0, n / b];\n\t}else{\n\t\tvar result = find_solution(b, a % b, n);\n\t\treturn [result[1], result[0] - Math.floor(a / b) * result[1]];\n\t}\n}\n",
    "    if(n % a === 0){\n        return [n / a, 0];\n    }\n    if(n % b === 0){\n        return [0, n / b];\n    }\n    for(let i = 0; i < n; i++){\n        for(let j = 0; j < n; j++){\n            if(a * i + b * j === n){\n                return [i, j];\n            }\n        }\n    }\n    return undefined;\n}\n",
    "  if(n % gcd(a, b) != 0) return undefined;\n  return [x, y];\n}\n",
    "    for(let x = 0; x < n; x++){\n        for(let y = 0; y < n; y++){\n            if(a * x + b * y == n){\n                return [x, y];\n            }\n        }\n    }\n    return undefined;\n}\n",
    "  if (n % gcd(a, b) != 0) return undefined;\n  var x = 0, y = 0;\n  var d = gcd(a, b);\n  return [x, y];\n}\n",
    "\tfor(var x = 0; x <= n; x++){\n\t\tfor(var y = 0; y <= n; y++){\n\t\t\tif(a * x + b * y == n){\n\t\t\t\treturn [x, y];\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n"
  ]
}
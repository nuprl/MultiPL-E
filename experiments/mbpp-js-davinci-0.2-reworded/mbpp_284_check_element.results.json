{
  "name": "mbpp_284_check_element",
  "language": "js",
  "prompt": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_284_check_element.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i=0; i<list.length; i++){\n        if(list[i]!=element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(let i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    var count = 0;\n    for(var i = 0; i < list.length; i++){\n        if(list[i] == element){\n            count++;\n        }\n    }\n    if(count == list.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i=0; i<list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i=0; i<list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for (var i = 0; i < list.length; i++){\n        if (list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    var count = 0;\n    for(var i = 0; i < list.length; i++){\n        if(list[i] == element){\n            count++;\n        }\n    }\n    if(count == list.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i=0; i<list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i=0; i<list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for (var i = 0; i < list.length; i++){\n        if (list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for (var i = 0; i < list.length; i++){\n        if (list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i=0; i<list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n  var result = true;\n  for (var i = 0; i < list.length; i++) {\n    if (list[i] != element) {\n      result = false;\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    var count = 0;\n    for(var i = 0; i < list.length; i++){\n        if(list[i] == element){\n            count++;\n        }\n    }\n    if(count == list.length){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    var count = 0;\n    for(var i = 0; i < list.length; i++){\n        if(list[i] == element){\n            count++;\n        }\n    }\n    if(count == list.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    var count = 0;\n    for(var i = 0; i < list.length; i++){\n        if(list[i] == element){\n            count += 1;\n        }\n    }\n    if(count == list.length){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for (var i = 0; i < list.length; i++){\n        if (list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n\tvar result = true;\n\tfor(var i = 0; i < list.length; i++){\n\t\tif(list[i] !== element){\n\t\t\tresult = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n\tfor(var i = 0; i < list.length; i++){\n\t\tif(list[i] != element){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n\tvar count = 0;\n\tfor(var i = 0; i < list.length; i++){\n\t\tif(list[i] == element){\n\t\t\tcount += 1;\n\t\t}\n\t}\n\tif(count == list.length){\n\t\treturn true;\n\t}\n\telse{\n\t\treturn false;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for (var i = 0; i < list.length; i++){\n        if (list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(let i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    var result = true;\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            result = false;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    var count = 0;\n    for(var i = 0; i < list.length; i++){\n        if(list[i] == element){\n            count += 1;\n        }\n    }\n    if(count == list.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for (var i = 0; i < list.length; i++){\n        if (list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i=0; i<list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1666123734,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] !== element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that takes in an array and element and checks whether all items in the array are equal to the given element.\nfunction check_element(list, element){\n    for(var i = 0; i < list.length; i++){\n        if(list[i] != element){\n            return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_element;\n  assert.deepEqual(candidate([\"green\", \"orange\", \"black\", \"white\"], \"blue\"),false);\n  assert.deepEqual(candidate([1, 2, 3, 4], 7),false);\n  assert.deepEqual(candidate([\"green\", \"green\", \"green\", \"green\"], \"green\"),true);\n}\n\ntest();",
      "timestamp": 1665509674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
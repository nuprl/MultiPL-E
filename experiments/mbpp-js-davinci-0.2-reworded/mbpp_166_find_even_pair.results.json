{
  "name": "mbpp_166_find_even_pair",
  "language": "js",
  "prompt": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_166_find_even_pair.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0)\n                count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  let count = 0;\n  for(let i = 0; i < A.length; i++){\n    for(let j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  let count = 0;\n  for(let i = 0; i < A.length; i++){\n    for(let j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  let count = 0;\n  for(let i = 0; i < A.length; i++){\n    for(let j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i=0; i<A.length; i++){\n        for(var j=i+1; j<A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i=0; i<A.length; i++){\n        for(var j=i+1; j<A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i+1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 === 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i]^A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i=0;i<A.length;i++){\n        for(var j=i+1;j<A.length;j++){\n            if((A[i]^A[j])%2==0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\nvar A = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  let count = 0;\n  for(let i = 0; i < A.length; i++){\n    for(let j = i+1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i=0; i<A.length; i++){\n        for(var j=i+1; j<A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  let count = 0;\n  for(let i = 0; i < A.length; i++){\n    for(let j = i+1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var even_count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                even_count++;\n            }\n        }\n    }\n    return even_count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for (let i = 0; i < A.length; i++){\n        for (let j = i + 1; j < A.length; j++){\n            if ((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if(A[i] ^ A[j] % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmps78i8acg.js:19:10)\n    at Object.<anonymous> (/tmp/tmps78i8acg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i+1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 === 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i+1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = i + 1; j < A.length; j++){\n      if((A[i] ^ A[j]) % 2 === 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var result = 0;\n    var hash = {};\n    for(var i = 0; i < A.length; i++){\n        if(hash[A[i]]){\n            hash[A[i]]++;\n        }else{\n            hash[A[i]] = 1;\n        }\n    }\n    for(var key in hash){\n        var count = hash[key];\n        if(count % 2 == 0){\n            result += count;\n        }else{\n            result += count - 1;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpcm8rie8g.js:28:10)\n    at Object.<anonymous> (/tmp/tmpcm8rie8g.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    let count = 0;\n    for(let i = 0; i < A.length; i++){\n        for(let j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i+1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n  var count = 0;\n  for(var i = 0; i < A.length; i++){\n    for(var j = 0; j < A.length; j++){\n      if(i != j && (A[i] ^ A[j]) % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp2wegkf1s.js:19:10)\n    at Object.<anonymous> (/tmp/tmp2wegkf1s.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n\tvar count = 0;\n\tfor(var i = 0; i < A.length; i++){\n\t\tfor(var j = i + 1; j < A.length; j++){\n\t\t\tif((A[i] ^ A[j]) % 2 == 0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1666122756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 == 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that counts the number of pairs of integers in an array that xor to an even number.\nfunction find_even_pair(A){\n    var count = 0;\n    for(var i = 0; i < A.length; i++){\n        for(var j = i + 1; j < A.length; j++){\n            if((A[i] ^ A[j]) % 2 === 0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_even_pair;\n  assert.deepEqual(candidate([5, 4, 7, 2, 1]),4);\n  assert.deepEqual(candidate([7, 2, 8, 1, 0, 5, 11]),9);\n  assert.deepEqual(candidate([1, 2, 3]),1);\n}\n\ntest();",
      "timestamp": 1665510175,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
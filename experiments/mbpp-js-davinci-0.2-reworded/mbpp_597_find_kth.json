{
  "name": "mbpp_597_find_kth",
  "language": "js",
  "prompt": "//Write a function to find kth element from the given two sorted arrays.\nfunction find_kth(arr1, arr2, k){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_597_find_kth.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_kth;\n  assert.deepEqual(candidate([2, 3, 6, 7, 9], [1, 4, 8, 10], 5),6);\n  assert.deepEqual(candidate([100, 112, 256, 349, 770], [72, 86, 113, 119, 265, 445, 892], 7),256);\n  assert.deepEqual(candidate([3, 4, 7, 8, 10], [2, 5, 9, 11], 6),8);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  var result = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      result = arr1[i];\n      i++;\n    } else {\n      result = arr2[j];\n      j++;\n    }\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(i < arr1.length){\n    result = arr1[i];\n    i++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(j < arr2.length){\n    result = arr2[j];\n    j++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n}\n\nfind_kth([1, 3, 5, 7], [2, 4, 6, 8], 4);\n",
    "    if(arr1.length == 0)\n        return arr2[k-1];\n    if(arr2.length == 0)\n        return arr1[k-1];\n    if(k == 1)\n        return Math.min(arr1[0], arr2[0]);\n    var i = Math.min(parseInt(arr1.length), parseInt(k/2));\n    var j = Math.min(parseInt(arr2.length), parseInt(k/2));\n    if(arr1[i-1] > arr2[j-1]){\n        return find_kth(arr1, arr2.slice(j), k-j);\n    }\n    else{\n        return find_kth(arr1.slice(i), arr2, k-i);\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count === k){\n        return arr1[i];\n      }\n      i++;\n    } else {\n      count++;\n      if(count === k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  } else {\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(count == k-1){\n        return arr1[i];\n      }\n      i++;\n      count++;\n    }\n    else{\n      if(count == k-1){\n        return arr2[j];\n      }\n      j++;\n      count++;\n    }\n  }\n  if(i == arr1.length){\n    return arr2[j+k-1];\n  }\n  else{\n    return arr1[i+k-1];\n  }\n}\n",
    "  var len1 = arr1.length;\n  var len2 = arr2.length;\n  var i = 0;\n  var j = 0;\n  while(i < len1 && j < len2){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 == k){\n        return arr1[i];\n      }\n      i++;\n    }\n    else{\n      if(i + j + 1 == k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i < len1){\n    return arr1[i + k - len2 - 1];\n  }\n  else{\n    return arr2[j + k - len1 - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count === k){\n        return arr1[i];\n      }\n      i++;\n    } else {\n      count++;\n      if(count === k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i === arr1.length){\n    return arr2[k - arr1.length - 1];\n  }\n  if(j === arr2.length){\n    return arr1[k - arr2.length - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(count === k - 1){\n        return arr1[i];\n      }\n      i++;\n    } else {\n      if(count === k - 1){\n        return arr2[j];\n      }\n      j++;\n    }\n    count++;\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }\n  if(j < arr2.length){\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        } else {\n            j++;\n        }\n        count++;\n        if(count == k){\n            break;\n        }\n    }\n    if(i == arr1.length){\n        return arr2[j];\n    }\n    if(j == arr2.length){\n        return arr1[i];\n    }\n    return Math.min(arr1[i], arr2[j]);\n}",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    var result;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            result = arr1[i];\n            i++;\n        }\n        else{\n            result = arr2[j];\n            j++;\n        }\n        count++;\n        if(count == k){\n            return result;\n        }\n    }\n    while(i < arr1.length){\n        result = arr1[i];\n        i++;\n        count++;\n        if(count == k){\n            return result;\n        }\n    }\n    while(j < arr2.length){\n        result = arr2[j];\n        j++;\n        count++;\n        if(count == k){\n            return result;\n        }\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    } else {\n      j++;\n    }\n    count++;\n    if(count === k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      } else {\n        return arr2[j];\n      }\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  } else {\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(count < k){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n  }\n  if(i === arr1.length){\n    return arr2[j-1];\n  }else if(j === arr2.length){\n    return arr1[i-1];\n  }else{\n    return Math.max(arr1[i-1], arr2[j-1]);\n  }\n}\n",
    "  var i = 0, j = 0;\n  while (i < arr1.length && j < arr2.length){\n    if (arr1[i] < arr2[j]){\n      if (i + j == k - 1){\n        return arr1[i];\n      }\n      i++;\n    } else {\n      if (i + j == k - 1){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if (i < arr1.length){\n    return arr1[k - j - 1];\n  } else {\n    return arr2[k - i - 1];\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(count == k-1){\n                return arr1[i];\n            }\n            i++;\n            count++;\n        }\n        else{\n            if(count == k-1){\n                return arr2[j];\n            }\n            j++;\n            count++;\n        }\n    }\n    while(i < arr1.length){\n        if(count == k-1){\n            return arr1[i];\n        }\n        i++;\n        count++;\n    }\n    while(j < arr2.length){\n        if(count == k-1){\n            return arr2[j];\n        }\n        j++;\n        count++;\n    }\n}\n",
    "  if(arr1.length === 0) return arr2[k-1];\n  if(arr2.length === 0) return arr1[k-1];\n  if(k === 1) return Math.min(arr1[0], arr2[0]);\n\n  var i = Math.min(Math.floor(k/2), arr1.length);\n  var j = Math.min(Math.floor(k/2), arr2.length);\n\n  if(arr1[i-1] > arr2[j-1]){\n    return find_kth(arr1, arr2.slice(j), k-j);\n  } else {\n    return find_kth(arr1.slice(i), arr2, k-i);\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var kth;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            kth = arr1[i];\n            i++;\n        } else {\n            kth = arr2[j];\n            j++;\n        }\n        k--;\n        if(k == 0)\n            break;\n    }\n    if(i == arr1.length){\n        while(j < arr2.length){\n            kth = arr2[j];\n            j++;\n            k--;\n            if(k == 0)\n                break;\n        }\n    }\n    if(j == arr2.length){\n        while(i < arr1.length){\n            kth = arr1[i];\n            i++;\n            k--;\n            if(k == 0)\n                break;\n        }\n    }\n    return kth;\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count === k){\n        return arr1[i];\n      }\n      i++;\n    }else{\n      count++;\n      if(count === k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  while(i < arr1.length){\n    count++;\n    if(count === k){\n      return arr1[i];\n    }\n    i++;\n  }\n  while(j < arr2.length){\n    count++;\n    if(count === k){\n      return arr2[j];\n    }\n    j++;\n  }\n}\n",
    "  if(arr1.length == 0)\n    return arr2[k-1];\n  if(arr2.length == 0)\n    return arr1[k-1];\n  if(k == 1)\n    return Math.min(arr1[0], arr2[0]);\n  var i = Math.min(Math.floor(k/2), arr1.length);\n  var j = Math.min(k-i, arr2.length);\n  if(arr1[i-1] > arr2[j-1])\n    return find_kth(arr1, arr2.slice(j), k-j);\n  else\n    return find_kth(arr1.slice(i), arr2, k-i);\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(count == k - 1){\n                return arr1[i];\n            }\n            i++;\n            count++;\n        }else{\n            if(count == k - 1){\n                return arr2[j];\n            }\n            j++;\n            count++;\n        }\n    }\n    if(i == arr1.length){\n        return arr2[j + k - count - 1];\n    }else{\n        return arr1[i + k - count - 1];\n    }\n}\n",
    "  if(arr1.length + arr2.length < k) return -1;\n  var i = 0, j = 0;\n  while(k > 0){\n    if(i < arr1.length && j < arr2.length){\n      if(arr1[i] < arr2[j]){\n        i++;\n      }else{\n        j++;\n      }\n    }else if(i < arr1.length){\n      i++;\n    }else{\n      j++;\n    }\n    k--;\n  }\n  if(i < arr1.length && j < arr2.length){\n    return Math.min(arr1[i], arr2[j]);\n  }else if(i < arr1.length){\n    return arr1[i];\n  }else{\n    return arr2[j];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count === k){\n        return arr1[i];\n      }\n      i++;\n    }\n    else{\n      count++;\n      if(count === k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }\n  else{\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "  if(arr1.length === 0){\n    return arr2[k-1];\n  }\n  if(arr2.length === 0){\n    return arr1[k-1];\n  }\n  if(k === 1){\n    return Math.min(arr1[0], arr2[0]);\n  }\n  var i = Math.min(parseInt(arr1.length), parseInt(k/2));\n  var j = Math.min(parseInt(arr2.length), parseInt(k/2));\n  if(arr1[i-1] > arr2[j-1]){\n    return find_kth(arr1, arr2.slice(j), k-j);\n  }\n  else{\n    return find_kth(arr1.slice(i), arr2, k-i);\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(count == k-1){\n        return arr1[i];\n      }\n      i++;\n      count++;\n    } else {\n      if(count == k-1){\n        return arr2[j];\n      }\n      j++;\n      count++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i+k-count-1];\n  }\n  if(j < arr2.length){\n    return arr2[j+k-count-1];\n  }\n}\n",
    "  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    if(i + j === k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      }else{\n        return arr2[j];\n      }\n    }\n  }\n  if(i < arr1.length){\n    return arr1[k - j];\n  }else{\n    return arr2[k - i];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count === k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      }else{\n        return arr2[j];\n      }\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }else{\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count === k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      }else{\n        return arr2[j];\n      }\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }\n  if(j < arr2.length){\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }else{\n            j++;\n        }\n        count++;\n        if(count == k){\n            break;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i];\n    }else{\n        return arr2[j];\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count == k){\n        return arr1[i];\n      }\n      i++;\n    }\n    else{\n      count++;\n      if(count == k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }\n  else{\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count === k){\n        return arr1[i];\n      }\n      i++;\n    } else {\n      count++;\n      if(count === k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  while(i < arr1.length){\n    count++;\n    if(count === k){\n      return arr1[i];\n    }\n    i++;\n  }\n  while(j < arr2.length){\n    count++;\n    if(count === k){\n      return arr2[j];\n    }\n    j++;\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0, j = 0;\n  while(i + j < k){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i];\n  }else{\n    return arr2[j];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count === k){\n        return arr1[i];\n      }\n      i++;\n    }else{\n      count++;\n      if(count === k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  while(i < arr1.length){\n    count++;\n    if(count === k){\n      return arr1[i];\n    }\n    i++;\n  }\n  while(j < arr2.length){\n    count++;\n    if(count === k){\n      return arr2[j];\n    }\n    j++;\n  }\n}\n",
    "  if(arr1.length == 0)\n    return arr2[k-1];\n  if(arr2.length == 0)\n    return arr1[k-1];\n  if(k == 1)\n    return Math.min(arr1[0], arr2[0]);\n  var i = Math.min(parseInt(arr1.length), parseInt(k/2));\n  var j = Math.min(parseInt(arr2.length), parseInt(k/2));\n  if(arr1[i-1] > arr2[j-1]){\n    return find_kth(arr1, arr2.slice(j), k-j);\n  }\n  else{\n    return find_kth(arr1.slice(i), arr2, k-i);\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            count++;\n            if(count === k){\n                return arr1[i];\n            }\n            i++;\n        }\n        else{\n            count++;\n            if(count === k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    while(i < arr1.length){\n        count++;\n        if(count === k){\n            return arr1[i];\n        }\n        i++;\n    }\n    while(j < arr2.length){\n        count++;\n        if(count === k){\n            return arr2[j];\n        }\n        j++;\n    }\n}\n",
    "  if(arr1.length + arr2.length < k) return -1;\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count === k) return arr1[i];\n      i++;\n    }else{\n      count++;\n      if(count === k) return arr2[j];\n      j++;\n    }\n  }\n  while(i < arr1.length){\n    count++;\n    if(count === k) return arr1[i];\n    i++;\n  }\n  while(j < arr2.length){\n    count++;\n    if(count === k) return arr2[j];\n    j++;\n  }\n}\n",
    "    var i = 0, j = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(i + j == k){\n                return arr1[i];\n            }\n            i++;\n        }else{\n            if(i + j == k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i + k - j];\n    }\n    return arr2[j + k - i];\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count == k){\n      break;\n    }\n  }\n  if(i == arr1.length){\n    return arr2[j];\n  }else{\n    return arr1[i];\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(count == k - 1){\n                return arr1[i];\n            }\n            i++;\n            count++;\n        }\n        else{\n            if(count == k - 1){\n                return arr2[j];\n            }\n            j++;\n            count++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i + k - count - 1];\n    }\n    else{\n        return arr2[j + k - count - 1];\n    }\n}\n",
    "    if(arr1.length == 0)\n        return arr2[k-1];\n    if(arr2.length == 0)\n        return arr1[k-1];\n    if(k == 1)\n        return Math.min(arr1[0], arr2[0]);\n    var i = Math.min(parseInt(arr1.length), parseInt(k/2));\n    var j = Math.min(parseInt(arr2.length), parseInt(k/2));\n    if(arr1[i-1] > arr2[j-1]){\n        return find_kth(arr1, arr2.slice(j), k-j);\n    }\n    else{\n        return find_kth(arr1.slice(i), arr2, k-i);\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count == k){\n      break;\n    }\n  }\n  if(i == arr1.length){\n    return arr2[j];\n  }else{\n    return arr1[i];\n  }\n}\n\nvar arr1 = [2, 3, 6, 7, 9];\nvar arr2 = [1, 4, 8, 10];",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }else{\n            j++;\n        }\n        count++;\n        if(count === k){\n            if(arr1[i] < arr2[j]){\n                return arr1[i];\n            }else{\n                return arr2[j];\n            }\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i + k - count - 1];\n    }\n    if(j < arr2.length){\n        return arr2[j + k - count - 1];\n    }\n}\n",
    "  if(arr1.length + arr2.length < k){\n    return null;\n  }\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(count === k - 1){\n        return arr1[i];\n      }\n      i++;\n    } else {\n      if(count === k - 1){\n        return arr2[j];\n      }\n      j++;\n    }\n    count++;\n  }\n  if(i === arr1.length){\n    return arr2[j + k - count - 1];\n  }\n  if(j === arr2.length){\n    return arr1[i + k - count - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(count === k - 1){\n        return arr1[i];\n      }\n      i++;\n      count++;\n    } else {\n      if(count === k - 1){\n        return arr2[j];\n      }\n      j++;\n      count++;\n    }\n  }\n  if(i === arr1.length){\n    return arr2[j + k - count - 1];\n  } else {\n    return arr1[i + k - count - 1];\n  }\n}\n",
    "\tvar i = 0;\n\tvar j = 0;\n\tvar count = 0;\n\twhile(i < arr1.length && j < arr2.length){\n\t\tif(arr1[i] < arr2[j]){\n\t\t\tcount++;\n\t\t\tif(count == k){\n\t\t\t\treturn arr1[i];\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\telse{\n\t\t\tcount++;\n\t\t\tif(count == k){\n\t\t\t\treturn arr2[j];\n\t\t\t}\n\t\t\tj++;\n\t\t}\n\t}\n\twhile(i < arr1.length){\n\t\tcount++;\n\t\tif(count == k){\n\t\t\treturn arr1[i];\n\t\t}\n\t\ti++;\n\t}\n\twhile(j < arr2.length){\n\t\tcount++;\n\t\tif(count == k){\n\t\t\treturn arr2[j];\n\t\t}\n\t\tj++;\n\t}\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count == k){\n      break;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i];\n  }else{\n    return arr2[j];\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(count === k - 1) return arr1[i];\n      i++;\n      count++;\n    }else{\n      if(count === k - 1) return arr2[j];\n      j++;\n      count++;\n    }\n  }\n  while(i < arr1.length){\n    if(count === k - 1) return arr1[i];\n    i++;\n    count++;\n  }\n  while(j < arr2.length){\n    if(count === k - 1) return arr2[j];\n    j++;\n    count++;\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count == k){\n      break;\n    }\n  }\n  if(i < arr1.length && j < arr2.length){\n    return Math.min(arr1[i], arr2[j]);\n  }else if(i < arr1.length){\n    return arr1[i];\n  }else{\n    return arr2[j];\n  }\n}\n",
    "    var i = 0, j = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(i+j == k-1){\n                return arr1[i];\n            }\n            i++;\n        }\n        else{\n            if(i+j == k-1){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i+k-j-1];\n    }\n    if(j < arr2.length){\n        return arr2[j+k-i-1];\n    }\n}\n",
    "  var m = arr1.length,\n      n = arr2.length,\n      index1 = 0,\n      index2 = 0;\n  while(k > 0 && index1 < m && index2 < n){\n    if(arr1[index1] < arr2[index2]){\n      index1 += 1;\n    }else{\n      index2 += 1;\n    }\n    k -= 1;\n  }\n  if(index1 === m){\n    return arr2[index2 + k - 1];\n  }\n  if(index2 === n){\n    return arr1[index1 + k - 1];\n  }\n  return Math.min(arr1[index1], arr2[index2]);\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    var result = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            result = arr1[i];\n            i++;\n        }else{\n            result = arr2[j];\n            j++;\n        }\n        count++;\n        if(count == k){\n            return result;\n        }\n    }\n    while(i < arr1.length){\n        result = arr1[i];\n        i++;\n        count++;\n        if(count == k){\n            return result;\n        }\n    }\n    while(j < arr2.length){\n        result = arr2[j];\n        j++;\n        count++;\n        if(count == k){\n            return result;\n        }\n    }\n}\n",
    "    var i = 0;\n    var j = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }else{\n            j++;\n        }\n        if(i + j == k){\n            return arr1[i] < arr2[j] ? arr1[i] : arr2[j];\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i + k - j - 1];\n    }\n    return arr2[j + k - i - 1];\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count === k){\n        return arr1[i];\n      }\n      i++;\n    }\n    else{\n      count++;\n      if(count === k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }\n  else{\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 === k) return arr1[i];\n      i++;\n    }else{\n      if(i + j + 1 === k) return arr2[j];\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[k - j - 1];\n  }else{\n    return arr2[k - i - 1];\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  if(arr1.length === 0) return arr2[k-1];\n  if(arr2.length === 0) return arr1[k-1];\n  if(k === 1) return Math.min(arr1[0], arr2[0]);\n  var i = Math.min(Math.floor(k/2), arr1.length);\n  var j = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[i-1] < arr2[j-1]){\n    return find_kth(arr1.slice(i), arr2, k-i);\n  }else{\n    return find_kth(arr1, arr2.slice(j), k-j);\n  }\n}\n",
    "  if(arr1.length == 0) return arr2[k-1];\n  if(arr2.length == 0) return arr1[k-1];\n  if(k == 1) return Math.min(arr1[0], arr2[0]);\n  var i = Math.min(Math.floor(k/2), arr1.length);\n  var j = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[i-1] > arr2[j-1]){\n    return find_kth(arr1, arr2.slice(j), k-j);\n  }\n  else{\n    return find_kth(arr1.slice(i), arr2, k-i);\n  }\n}\n",
    "  if(arr1.length === 0)\n    return arr2[k-1];\n  if(arr2.length === 0)\n    return arr1[k-1];\n  if(k === 1)\n    return Math.min(arr1[0], arr2[0]);\n\n  var i = Math.min(parseInt(arr1.length/k), parseInt(arr2.length/k));\n  if(arr1[i] > arr2[i]){\n    return find_kth(arr1, arr2.slice(i), k-i);\n  }\n  else{\n    return find_kth(arr1.slice(i), arr2, k-i);\n  }\n}\n",
    "  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 === k){\n        return arr1[i];\n      }\n      i++;\n    }else{\n      if(i + j + 1 === k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[k - j - 1];\n  }else{\n    return arr2[k - i - 1];\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  var prev = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      prev = arr1[i];\n      i++;\n    }else{\n      prev = arr2[j];\n      j++;\n    }\n    count++;\n    if(count === k) return prev;\n  }\n  while(i < arr1.length){\n    prev = arr1[i];\n    i++;\n    count++;\n    if(count === k) return prev;\n  }\n  while(j < arr2.length){\n    prev = arr2[j];\n    j++;\n    count++;\n    if(count === k) return prev;\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count === k){\n      break;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i];\n  }\n  return arr2[j];\n}\n\nvar arr1 = [1, 3, 5, 7, 9];\nvar arr2 = [2, 4, 6, 8, 10];",
    "    if(arr1.length == 0) return arr2[k-1];\n    if(arr2.length == 0) return arr1[k-1];\n    if(k == 1) return Math.min(arr1[0], arr2[0]);\n    var mid1 = Math.min(k/2, arr1.length);\n    var mid2 = Math.min(k/2, arr2.length);\n    if(arr1[mid1-1] < arr2[mid2-1]){\n        return find_kth(arr1.slice(mid1), arr2, k-mid1);\n    }else{\n        return find_kth(arr1, arr2.slice(mid2), k-mid2);\n    }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  if(arr1.length === 0) return arr2[k-1];\n  if(arr2.length === 0) return arr1[k-1];\n  if(k === 1) return Math.min(arr1[0], arr2[0]);\n  var mid1 = Math.min(Math.floor(k/2), arr1.length);\n  var mid2 = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[mid1-1] < arr2[mid2-1]){\n    return find_kth(arr1.slice(mid1), arr2, k-mid1);\n  }else{\n    return find_kth(arr1, arr2.slice(mid2), k-mid2);\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }\n        else{\n            j++;\n        }\n        count++;\n        if(count == k){\n            break;\n        }\n    }\n    if(i == arr1.length){\n        return arr2[j];\n    }\n    else{\n        return arr1[i];\n    }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }\n        else{\n            j++;\n        }\n        count++;\n        if(count === k){\n            if(arr1[i] < arr2[j]){\n                return arr1[i];\n            }\n            else{\n                return arr2[j];\n            }\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i + k - count - 1];\n    }\n    else{\n        return arr2[j + k - count - 1];\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  var result = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      result = arr1[i];\n      i++;\n    } else {\n      result = arr2[j];\n      j++;\n    }\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(i < arr1.length){\n    result = arr1[i];\n    i++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(j < arr2.length){\n    result = arr2[j];\n    j++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 === k) return arr1[i];\n      i++;\n    }else{\n      if(i + j + 1 === k) return arr2[j];\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - j - 1];\n  }else{\n    return arr2[j + k - i - 1];\n  }\n}\n",
    "    if(arr1.length == 0) return arr2[k-1];\n    if(arr2.length == 0) return arr1[k-1];\n    if(k == 1) return Math.min(arr1[0], arr2[0]);\n\n    var i = Math.min(Math.floor(k/2), arr1.length);\n    var j = Math.min(k - i, arr2.length);\n    if(arr1[i-1] > arr2[j-1]){\n        return find_kth(arr1, arr2.slice(j), k-j);\n    }else{\n        return find_kth(arr1.slice(i), arr2, k-i);\n    }\n}\n",
    "  if(arr1.length == 0)\n    return arr2[k-1];\n  if(arr2.length == 0)\n    return arr1[k-1];\n  if(k == 1)\n    return Math.min(arr1[0], arr2[0]);\n  var mid1 = Math.min(Math.floor(k/2), arr1.length);\n  var mid2 = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[mid1-1] < arr2[mid2-1])\n    return find_kth(arr1.slice(mid1), arr2, k-mid1);\n  else\n    return find_kth(arr1, arr2.slice(mid2), k-mid2);\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(count === k - 1){\n        return arr1[i];\n      }\n      i++;\n      count++;\n    } else {\n      if(count === k - 1){\n        return arr2[j];\n      }\n      j++;\n      count++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }\n  if(j < arr2.length){\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  if(arr1.length === 0) return arr2[k-1];\n  if(arr2.length === 0) return arr1[k-1];\n  if(k === 1) return Math.min(arr1[0], arr2[0]);\n  var mid1 = Math.min(k/2, arr1.length);\n  var mid2 = Math.min(k/2, arr2.length);\n  if(arr1[mid1-1] < arr2[mid2-1]){\n    return find_kth(arr1.slice(mid1), arr2, k-mid1);\n  }else{\n    return find_kth(arr1, arr2.slice(mid2), k-mid2);\n  }\n}\n",
    "    if(arr1.length == 0)\n        return arr2[k-1];\n    if(arr2.length == 0)\n        return arr1[k-1];\n    if(k == 1)\n        return Math.min(arr1[0], arr2[0]);\n    var i = Math.min(parseInt(arr1.length, 10), parseInt(k/2, 10)) - 1;\n    var j = Math.min(parseInt(arr2.length, 10), parseInt(k/2, 10)) - 1;\n    if(arr1[i] > arr2[j]){\n        return find_kth(arr1, arr2.slice(j+1), k - j - 1);\n    }\n    else{\n        return find_kth(arr1.slice(i+1), arr2, k - i - 1);\n    }\n}\n",
    "  if(arr1.length + arr2.length < k) return -1;\n  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j == k - 1) return arr1[i];\n      i++;\n    }else{\n      if(i + j == k - 1) return arr2[j];\n      j++;\n    }\n  }\n  if(i < arr1.length) return arr1[k - j - 1];\n  if(j < arr2.length) return arr2[k - i - 1];\n}\n",
    "  if(arr1.length + arr2.length < k) return -1;\n  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    if(i + j === k) return arr1[i] < arr2[j] ? arr1[i] : arr2[j];\n  }\n  if(i < arr1.length) return arr1[k - j - 1];\n  if(j < arr2.length) return arr2[k - i - 1];\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count == k) break;\n  }\n  if(i == arr1.length){\n    return arr2[j];\n  }else{\n    return arr1[i];\n  }\n}\n",
    "  var i = 0, j = 0;\n  var result;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      result = arr1[i];\n      i++;\n    } else {\n      result = arr2[j];\n      j++;\n    }\n    k--;\n    if(k == 0)\n      break;\n  }\n  if(i < arr1.length){\n    result = arr1[i + k - 1];\n  }\n  if(j < arr2.length){\n    result = arr2[j + k - 1];\n  }\n  return result;\n}\n",
    "    if(arr1.length == 0)\n        return arr2[k-1];\n    if(arr2.length == 0)\n        return arr1[k-1];\n    if(k == 1)\n        return Math.min(arr1[0], arr2[0]);\n    var i = Math.min(parseInt(arr1.length), parseInt(k/2));\n    var j = Math.min(parseInt(arr2.length), parseInt(k/2));\n    if(arr1[i-1] > arr2[j-1]){\n        var new_arr = arr2.slice(j);\n        return find_kth(arr1, new_arr, k-j);\n    }\n    else{\n        var new_arr = arr1.slice(i);\n        return find_kth(new_arr, arr2, k-i);\n    }\n}\n",
    "    if(arr1.length + arr2.length < k) return null;\n    var i = 0, j = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(i + j + 1 === k) return arr1[i];\n            i++;\n        }else{\n            if(i + j + 1 === k) return arr2[j];\n            j++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i + k - j - 1];\n    }else{\n        return arr2[j + k - i - 1];\n    }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        } else {\n            j++;\n        }\n        count++;\n        if(count === k){\n            break;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i];\n    } else {\n        return arr2[j];\n    }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  if(arr1.length === 0) return arr2[k-1];\n  if(arr2.length === 0) return arr1[k-1];\n  if(k === 1) return Math.min(arr1[0], arr2[0]);\n  var i = Math.min(Math.floor(k/2), arr1.length);\n  var j = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[i-1] < arr2[j-1]){\n    return find_kth(arr1.slice(i), arr2, k-i);\n  }else{\n    return find_kth(arr1, arr2.slice(j), k-j);\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count == k){\n        return arr1[i];\n      }\n      i++;\n    }\n    else{\n      count++;\n      if(count == k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }\n  if(j < arr2.length){\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }\n    else{\n      j++;\n    }\n    count++;\n    if(count == k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      }\n      else{\n        return arr2[j];\n      }\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }\n  else{\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "    if(arr1.length + arr2.length < k){\n        return null;\n    }\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(count < k){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }else{\n            j++;\n        }\n        count++;\n    }\n    return arr1[i] < arr2[j] ? arr1[i] : arr2[j];\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0;\n  var j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 === k) return arr1[i];\n      i++;\n    }else{\n      if(i + j + 1 === k) return arr2[j];\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[k - j - 1];\n  }else{\n    return arr2[k - i - 1];\n  }\n}\n",
    "    if(arr1.length + arr2.length < k){\n        return null;\n    }\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            count++;\n            if(count === k){\n                return arr1[i];\n            }\n            i++;\n        }else{\n            count++;\n            if(count === k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    while(i < arr1.length){\n        count++;\n        if(count === k){\n            return arr1[i];\n        }\n        i++;\n    }\n    while(j < arr2.length){\n        count++;\n        if(count === k){\n            return arr2[j];\n        }\n        j++;\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count == k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      }else{\n        return arr2[j];\n      }\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }else{\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }else{\n            j++;\n        }\n        count++;\n        if(count == k){\n            break;\n        }\n    }\n    if(count == k){\n        if(i < arr1.length && j < arr2.length){\n            return Math.min(arr1[i], arr2[j]);\n        }else if(i < arr1.length){\n            return arr1[i];\n        }else{\n            return arr2[j];\n        }\n    }\n    return -1;\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    var result;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            result = arr1[i];\n            i++;\n        }else{\n            result = arr2[j];\n            j++;\n        }\n        count++;\n        if(count === k){\n            break;\n        }\n    }\n    return result;\n}\n",
    "    if(arr1.length + arr2.length < k) return null;\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            count++;\n            if(count === k) return arr1[i];\n            i++;\n        }else{\n            count++;\n            if(count === k) return arr2[j];\n            j++;\n        }\n    }\n    while(i < arr1.length){\n        count++;\n        if(count === k) return arr1[i];\n        i++;\n    }\n    while(j < arr2.length){\n        count++;\n        if(count === k) return arr2[j];\n        j++;\n    }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            count++;\n            if(count == k){\n                return arr1[i];\n            }\n            i++;\n        }\n        else{\n            count++;\n            if(count == k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    while(i < arr1.length){\n        count++;\n        if(count == k){\n            return arr1[i];\n        }\n        i++;\n    }\n    while(j < arr2.length){\n        count++;\n        if(count == k){\n            return arr2[j];\n        }\n        j++;\n    }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0;\n  var j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 === k) return arr1[i];\n      i++;\n    }else{\n      if(i + j + 1 === k) return arr2[j];\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - j - 1];\n  }else{\n    return arr2[j + k - i - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count === k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      }else{\n        return arr2[j];\n      }\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }else{\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  var result;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      result = arr1[i];\n      i++;\n    }\n    else{\n      result = arr2[j];\n      j++;\n    }\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(i < arr1.length){\n    result = arr1[i];\n    i++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(j < arr2.length){\n    result = arr2[j];\n    j++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 === k) return arr1[i];\n      i++;\n    }else{\n      if(i + j + 1 === k) return arr2[j];\n      j++;\n    }\n  }\n  if(i === arr1.length){\n    return arr2[k - arr1.length - 1];\n  }else{\n    return arr1[k - arr2.length - 1];\n  }\n}\n",
    "  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j == k - 1){\n        return arr1[i];\n      }\n      i++;\n    }else{\n      if(i + j == k - 1){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[k - j - 1];\n  }\n  if(j < arr2.length){\n    return arr2[k - i - 1];\n  }\n}\n",
    "  if(arr1.length == 0) return arr2[k-1];\n  if(arr2.length == 0) return arr1[k-1];\n  if(k == 1) return Math.min(arr1[0], arr2[0]);\n  var mid1 = Math.min(Math.floor(k/2), arr1.length);\n  var mid2 = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[mid1-1] < arr2[mid2-1]){\n    return find_kth(arr1.slice(mid1), arr2, k-mid1);\n  }else{\n    return find_kth(arr1, arr2.slice(mid2), k-mid2);\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count == k){\n        return arr1[i];\n      }\n      i++;\n    }\n    else{\n      count++;\n      if(count == k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  while(i < arr1.length){\n    count++;\n    if(count == k){\n      return arr1[i];\n    }\n    i++;\n  }\n  while(j < arr2.length){\n    count++;\n    if(count == k){\n      return arr2[j];\n    }\n    j++;\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }else{\n            j++;\n        }\n        count++;\n        if(count == k){\n            break;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i];\n    }else{\n        return arr2[j];\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }\n    else{\n      j++;\n    }\n    count++;\n    if(count == k){\n      break;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i];\n  }\n  else{\n    return arr2[j];\n  }\n}\n",
    "    var i = 0, j = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(i + j == k - 1){\n                return arr1[i];\n            }\n            i++;\n        }else{\n            if(i + j == k - 1){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i + k - j - 1];\n    }\n    if(j < arr2.length){\n        return arr2[j + k - i - 1];\n    }\n}\n",
    "  var len1 = arr1.length;\n  var len2 = arr2.length;\n  var i = 0, j = 0;\n  while(i < len1 && j < len2){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 == k){\n        return arr1[i];\n      }\n      i++;\n    }else{\n      if(i + j + 1 == k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i < len1){\n    return arr1[i + k - len2 - 1];\n  }\n  if(j < len2){\n    return arr2[j + k - len1 - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    } else {\n      j++;\n    }\n    count++;\n    if(count === k){\n      break;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i];\n  } else {\n    return arr2[j];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var result = [];\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      result.push(arr1[i]);\n      i++;\n    } else {\n      result.push(arr2[j]);\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    result = result.concat(arr1.slice(i));\n  } else {\n    result = result.concat(arr2.slice(j));\n  }\n  return result[k-1];\n}\n",
    "    if(arr1.length == 0)\n        return arr2[k-1];\n    if(arr2.length == 0)\n        return arr1[k-1];\n    if(k == 1)\n        return Math.min(arr1[0], arr2[0]);\n    var i = Math.min(Math.floor(k/2), arr1.length);\n    var j = Math.min(k - i, arr2.length);\n    if(arr1[i-1] < arr2[j-1]){\n        return find_kth(arr1.slice(i), arr2, k-i);\n    }\n    else{\n        return find_kth(arr1, arr2.slice(j), k-j);\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  var result = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      result = arr1[i];\n      i++;\n    } else {\n      result = arr2[j];\n      j++;\n    }\n    count++;\n    if(count == k){\n      break;\n    }\n  }\n  if(i == arr1.length){\n    while(j < arr2.length){\n      result = arr2[j];\n      j++;\n      count++;\n      if(count == k){\n        break;\n      }\n    }\n  }\n  if(j == arr2.length){\n    while(i < arr1.length){\n      result = arr1[i];\n      i++;\n      count++;\n      if(count == k){\n        break;\n      }\n    }\n  }\n  return result;\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count === k){\n        return arr1[i];\n      }\n      i++;\n    } else {\n      count++;\n      if(count === k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  while(i < arr1.length){\n    count++;\n    if(count === k){\n      return arr1[i];\n    }\n    i++;\n  }\n  while(j < arr2.length){\n    count++;\n    if(count === k){\n      return arr2[j];\n    }\n    j++;\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 === k) return arr1[i];\n      i++;\n    }else{\n      if(i + j + 1 === k) return arr2[j];\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[k - j - 1];\n  }else{\n    return arr2[k - i - 1];\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }\n        else{\n            j++;\n        }\n        count++;\n        if(count == k){\n            if(arr1[i] < arr2[j]){\n                return arr1[i];\n            }\n            else{\n                return arr2[j];\n            }\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i + k - count - 1];\n    }\n    else{\n        return arr2[j + k - count - 1];\n    }\n}\n",
    "  if(arr1.length === 0) return arr2[k-1];\n  if(arr2.length === 0) return arr1[k-1];\n  if(k === 1) return Math.min(arr1[0], arr2[0]);\n\n  var mid1 = Math.min(Math.floor(k/2), arr1.length);\n  var mid2 = Math.min(Math.floor(k/2), arr2.length);\n\n  if(arr1[mid1-1] < arr2[mid2-1]){\n    return find_kth(arr1.slice(mid1), arr2, k-mid1);\n  } else {\n    return find_kth(arr1, arr2.slice(mid2), k-mid2);\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  var result;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      result = arr1[i];\n      i++;\n    } else {\n      result = arr2[j];\n      j++;\n    }\n    count++;\n    if(count == k){\n      break;\n    }\n  }\n  if(i == arr1.length){\n    result = arr2[j + k - count - 1];\n  }\n  if(j == arr2.length){\n    result = arr1[i + k - count - 1];\n  }\n  return result;\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(count < k){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }else{\n            j++;\n        }\n        count++;\n    }\n    if(arr1[i] < arr2[j]){\n        return arr1[i];\n    }else{\n        return arr2[j];\n    }\n}\n\nvar arr1 = [1, 3, 5, 7, 9];\nvar arr2 = [2, 4, 6, 8, 10];",
    "    if(arr1.length + arr2.length < k) return -1;\n    let i = 0, j = 0;\n    while(i < arr1.length && j < arr2.length && k > 0){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }else{\n            j++;\n        }\n        k--;\n    }\n    while(k > 0 && i < arr1.length){\n        i++;\n        k--;\n    }\n    while(k > 0 && j < arr2.length){\n        j++;\n        k--;\n    }\n    if(i < arr1.length && j < arr2.length){\n        return Math.min(arr1[i], arr2[j]);\n    }else if(i < arr1.length){\n        return arr1[i];\n    }else{\n        return arr2[j];\n    }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            count++;\n            if(count == k){\n                return arr1[i];\n            }\n            i++;\n        }\n        else{\n            count++;\n            if(count == k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    while(i < arr1.length){\n        count++;\n        if(count == k){\n            return arr1[i];\n        }\n        i++;\n    }\n    while(j < arr2.length){\n        count++;\n        if(count == k){\n            return arr2[j];\n        }\n        j++;\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count == k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      }else{\n        return arr2[j];\n      }\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }else{\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count === k) break;\n  }\n  if(count === k) return Math.min(arr1[i], arr2[j]);\n  if(i === arr1.length){\n    return arr2[j + k - count - 1];\n  }else{\n    return arr1[i + k - count - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    } else {\n      j++;\n    }\n    count++;\n    if(count == k){\n      break;\n    }\n  }\n  if(i == arr1.length){\n    return arr2[j];\n  } else {\n    return arr1[i];\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  if(arr1.length === 0) return arr2[k-1];\n  if(arr2.length === 0) return arr1[k-1];\n  if(k === 1) return Math.min(arr1[0], arr2[0]);\n  var i = Math.min(Math.floor(k/2), arr1.length);\n  var j = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[i-1] < arr2[j-1]){\n    return find_kth(arr1.slice(i), arr2, k-i);\n  }else{\n    return find_kth(arr1, arr2.slice(j), k-j);\n  }\n}\n",
    "  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j == k - 1) return arr1[i];\n      i++;\n    }else{\n      if(i + j == k - 1) return arr2[j];\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - j - 1];\n  }\n  return arr2[j + k - i - 1];\n}\n",
    "    if(arr1.length + arr2.length < k) return null;\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }else{\n            j++;\n        }\n        count++;\n        if(count === k) break;\n    }\n    if(count === k){\n        if(arr1[i] < arr2[j]){\n            return arr1[i];\n        }else{\n            return arr2[j];\n        }\n    }else{\n        if(i === arr1.length){\n            return arr2[k - arr1.length - 1];\n        }else{\n            return arr1[k - arr2.length - 1];\n        }\n    }\n}\n",
    "    if(arr1.length == 0)\n        return arr2[k-1];\n    if(arr2.length == 0)\n        return arr1[k-1];\n    if(k == 1)\n        return Math.min(arr1[0], arr2[0]);\n    var i = Math.min(Math.floor(k/2), arr1.length);\n    var j = Math.min(k-i, arr2.length);\n    if(arr1[i-1] > arr2[j-1])\n        return find_kth(arr1, arr2.slice(j), k-j);\n    else\n        return find_kth(arr1.slice(i), arr2, k-i);\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count == k){\n        return arr1[i];\n      }\n      i++;\n    }else{\n      count++;\n      if(count == k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }\n  if(j < arr2.length){\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    var result = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            result = arr1[i];\n            i++;\n        }\n        else{\n            result = arr2[j];\n            j++;\n        }\n        count++;\n        if(count == k){\n            return result;\n        }\n    }\n    while(i < arr1.length){\n        result = arr1[i];\n        i++;\n        count++;\n        if(count == k){\n            return result;\n        }\n    }\n    while(j < arr2.length){\n        result = arr2[j];\n        j++;\n        count++;\n        if(count == k){\n            return result;\n        }\n    }\n}\n\nvar arr1 = [1, 5, 9, 10, 15, 20];\nvar arr2 = [2, 3, 8, 13];",
    "    var i = 0, j = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(i + j + 1 === k){\n                return arr1[i];\n            }\n            i++;\n        }else{\n            if(i + j + 1 === k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i + k - j - 1];\n    }else{\n        return arr2[j + k - i - 1];\n    }\n}\n",
    "  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 == k){\n        return arr1[i];\n      }\n      i++;\n    }else{\n      if(i + j + 1 == k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[k - j - 1];\n  }\n  if(j < arr2.length){\n    return arr2[k - i - 1];\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            count++;\n            if(count === k){\n                return arr1[i];\n            }\n            i++;\n        } else {\n            count++;\n            if(count === k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    while(i < arr1.length){\n        count++;\n        if(count === k){\n            return arr1[i];\n        }\n        i++;\n    }\n    while(j < arr2.length){\n        count++;\n        if(count === k){\n            return arr2[j];\n        }\n        j++;\n    }\n}\n\nvar arr1 = [1, 3, 5, 7, 9];\nvar arr2 = [2, 4, 6, 8, 10];",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0;\n  var j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 === k) return arr1[i];\n      i++;\n    } else {\n      if(i + j + 1 === k) return arr2[j];\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[k - j - 1];\n  } else {\n    return arr2[k - i - 1];\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0;\n  var j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 === k) return arr1[i];\n      i++;\n    }else{\n      if(i + j + 1 === k) return arr2[j];\n      j++;\n    }\n  }\n  if(i === arr1.length){\n    return arr2[k - arr1.length - 1];\n  }else{\n    return arr1[k - arr2.length - 1];\n  }\n}\n",
    "  if(arr1.length === 0){\n    return arr2[k-1];\n  }\n  if(arr2.length === 0){\n    return arr1[k-1];\n  }\n  if(k === 1){\n    return Math.min(arr1[0], arr2[0]);\n  }\n  var i = Math.min(Math.floor(k/2), arr1.length);\n  var j = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[i-1] > arr2[j-1]){\n    return find_kth(arr1, arr2.slice(j), k-j);\n  }else{\n    return find_kth(arr1.slice(i), arr2, k-i);\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(count == k-1){\n                return arr1[i];\n            }\n            i++;\n            count++;\n        }\n        else{\n            if(count == k-1){\n                return arr2[j];\n            }\n            j++;\n            count++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i+k-1-count];\n    }\n    else{\n        return arr2[j+k-1-count];\n    }\n}\n",
    "  if(arr1.length == 0) return arr2[k-1];\n  if(arr2.length == 0) return arr1[k-1];\n  if(k == 1) return Math.min(arr1[0], arr2[0]);\n  var i = Math.min(Math.floor(k/2), arr1.length);\n  var j = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[i-1] > arr2[j-1]){\n    return find_kth(arr1, arr2.slice(j), k-j);\n  }else{\n    return find_kth(arr1.slice(i), arr2, k-i);\n  }\n}\n",
    "  if(arr1.length + arr2.length < k){\n    return null;\n  }\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(count === k - 1){\n        return arr1[i];\n      }\n      i++;\n      count++;\n    }else{\n      if(count === k - 1){\n        return arr2[j];\n      }\n      j++;\n      count++;\n    }\n  }\n  while(i < arr1.length){\n    if(count === k - 1){\n      return arr1[i];\n    }\n    i++;\n    count++;\n  }\n  while(j < arr2.length){\n    if(count === k - 1){\n      return arr2[j];\n    }\n    j++;\n    count++;\n  }\n}\n",
    "    if(arr1.length + arr2.length < k) return -1;\n    var i = 0;\n    var j = 0;\n    while(k > 0 && i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }else{\n            j++;\n        }\n        k--;\n    }\n    if(k == 0) return Math.min(arr1[i], arr2[j]);\n    if(i == arr1.length) return arr2[j+k-1];\n    if(j == arr2.length) return arr1[i+k-1];\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count == k){\n        return arr1[i];\n      }\n      i++;\n    }else{\n      count++;\n      if(count == k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  while(i < arr1.length){\n    count++;\n    if(count == k){\n      return arr1[i];\n    }\n    i++;\n  }\n  while(j < arr2.length){\n    count++;\n    if(count == k){\n      return arr2[j];\n    }\n    j++;\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            count++;\n            if(count == k){\n                return arr1[i];\n            }\n            i++;\n        }else{\n            count++;\n            if(count == k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    while(i < arr1.length){\n        count++;\n        if(count == k){\n            return arr1[i];\n        }\n        i++;\n    }\n    while(j < arr2.length){\n        count++;\n        if(count == k){\n            return arr2[j];\n        }\n        j++;\n    }\n}\n",
    "  if(arr1.length === 0) return arr2[k-1];\n  if(arr2.length === 0) return arr1[k-1];\n  if(k === 1) return Math.min(arr1[0], arr2[0]);\n  var mid1 = Math.min(Math.floor(k/2), arr1.length);\n  var mid2 = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[mid1-1] < arr2[mid2-1]){\n    return find_kth(arr1.slice(mid1), arr2, k-mid1);\n  }else{\n    return find_kth(arr1, arr2.slice(mid2), k-mid2);\n  }\n}\n",
    "    var i = 0, j = 0, count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(count === k - 1){\n                return arr1[i];\n            }\n            i++;\n            count++;\n        }else{\n            if(count === k - 1){\n                return arr2[j];\n            }\n            j++;\n            count++;\n        }\n    }\n    while(i < arr1.length){\n        if(count === k - 1){\n            return arr1[i];\n        }\n        i++;\n        count++;\n    }\n    while(j < arr2.length){\n        if(count === k - 1){\n            return arr2[j];\n        }\n        j++;\n        count++;\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count === k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      }else{\n        return arr2[j];\n      }\n    }\n  }\n  if(i === arr1.length){\n    return arr2[j + k - count - 1];\n  }else{\n    return arr1[i + k - count - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count === k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      }else{\n        return arr2[j];\n      }\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }else{\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }\n    else{\n      j++;\n    }\n    count++;\n    if(count == k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      }\n      else{\n        return arr2[j];\n      }\n    }\n  }\n  if(i == arr1.length){\n    return arr2[j + k - count - 1];\n  }\n  else{\n    return arr1[i + k - count - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(count < k){\n    if(arr1[i] < arr2[j]){\n      i++;\n    } else {\n      j++;\n    }\n    count++;\n  }\n  if(arr1[i] < arr2[j]){\n    return arr1[i];\n  } else {\n    return arr2[j];\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count === k) return arr1[i];\n      i++;\n    }else{\n      count++;\n      if(count === k) return arr2[j];\n      j++;\n    }\n  }\n  while(i < arr1.length){\n    count++;\n    if(count === k) return arr1[i];\n    i++;\n  }\n  while(j < arr2.length){\n    count++;\n    if(count === k) return arr2[j];\n    j++;\n  }\n}\n",
    "    var i = 0, j = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(i + j + 1 == k){\n                return arr1[i];\n            }\n            i++;\n        }else{\n            if(i + j + 1 == k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[k - j - 1];\n    }\n    if(j < arr2.length){\n        return arr2[k - i - 1];\n    }\n    return null;\n}\n",
    "    var m = arr1.length;\n    var n = arr2.length;\n    if(m + n < k) return -1;\n    var index1 = 0, index2 = 0;\n    while(index1 < m && index2 < n){\n        if(arr1[index1] < arr2[index2]){\n            if(index1 + index2 == k - 1) return arr1[index1];\n            index1++;\n        }else{\n            if(index1 + index2 == k - 1) return arr2[index2];\n            index2++;\n        }\n    }\n    if(index1 < m){\n        return arr1[index1 + k - 1 - m - n];\n    }\n    if(index2 < n){\n        return arr2[index2 + k - 1 - m - n];\n    }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0;\n  var j = 0;\n  while(k > 0){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    k--;\n  }\n  return arr1[i] < arr2[j] ? arr1[i] : arr2[j];\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    } else {\n      j++;\n    }\n    count++;\n    if(count === k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      } else {\n        return arr2[j];\n      }\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  } else {\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  if(arr1.length === 0) return arr2[k-1];\n  if(arr2.length === 0) return arr1[k-1];\n  if(k === 1) return Math.min(arr1[0], arr2[0]);\n  var mid1 = Math.min(k/2, arr1.length);\n  var mid2 = Math.min(k/2, arr2.length);\n  if(arr1[mid1-1] < arr2[mid2-1]){\n    return find_kth(arr1.slice(mid1), arr2, k-mid1);\n  }else{\n    return find_kth(arr1, arr2.slice(mid2), k-mid2);\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            count++;\n            if(count == k){\n                return arr1[i];\n            }\n            i++;\n        }\n        else{\n            count++;\n            if(count == k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    while(i < arr1.length){\n        count++;\n        if(count == k){\n            return arr1[i];\n        }\n        i++;\n    }\n    while(j < arr2.length){\n        count++;\n        if(count == k){\n            return arr2[j];\n        }\n        j++;\n    }\n}\n\nvar arr1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar arr2 = [11, 12, 13, 14, 15, 16, 17, 18, 19, 20];",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(count < k){\n    if(arr1[i] < arr2[j]){\n      i++;\n    } else {\n      j++;\n    }\n    count++;\n  }\n  if(arr1[i] < arr2[j]){\n    return arr1[i];\n  } else {\n    return arr2[j];\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return -1;\n  if(arr1.length > arr2.length) return find_kth(arr2, arr1, k);\n  if(arr1.length === 0) return arr2[k-1];\n  if(k === 1) return Math.min(arr1[0], arr2[0]);\n  var i = Math.min(Math.floor(k/2), arr1.length);\n  var j = Math.min(k - i, arr2.length);\n  if(arr1[i-1] > arr2[j-1]){\n    return find_kth(arr1, arr2.slice(j), k-j);\n  } else {\n    return find_kth(arr1.slice(i), arr2, k-i);\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count === k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      }else{\n        return arr2[j];\n      }\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }\n  if(j < arr2.length){\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "    if(arr1.length + arr2.length < k) return -1;\n    var i = 0;\n    var j = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(i + j == k - 1) return arr1[i];\n            i++;\n        }else{\n            if(i + j == k - 1) return arr2[j];\n            j++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i + k - j - 1];\n    }\n    if(j < arr2.length){\n        return arr2[j + k - i - 1];\n    }\n}\n",
    "    if(arr1.length == 0) return arr2[k-1];\n    if(arr2.length == 0) return arr1[k-1];\n    if(k == 1) return Math.min(arr1[0], arr2[0]);\n    var i = Math.min(Math.floor(k/2), arr1.length);\n    var j = Math.min(k - i, arr2.length);\n    if(arr1[i-1] > arr2[j-1]){\n        return find_kth(arr1, arr2.slice(j), k-j);\n    }else{\n        return find_kth(arr1.slice(i), arr2, k-i);\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count === k){\n      break;\n    }\n  }\n  if(i === arr1.length){\n    return arr2[j];\n  }else{\n    return arr1[i];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(count === k-1){\n        return arr1[i];\n      }\n      i++;\n    }else{\n      if(count === k-1){\n        return arr2[j];\n      }\n      j++;\n    }\n    count++;\n  }\n  if(i < arr1.length){\n    return arr1[i+k-count-1];\n  }\n  if(j < arr2.length){\n    return arr2[j+k-count-1];\n  }\n}\n",
    "  if(arr1.length === 0){\n    return arr2[k-1];\n  }\n  if(arr2.length === 0){\n    return arr1[k-1];\n  }\n  if(k === 1){\n    return Math.min(arr1[0], arr2[0]);\n  }\n  var mid1 = Math.min(Math.floor(k/2), arr1.length);\n  var mid2 = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[mid1-1] < arr2[mid2-1]){\n    return find_kth(arr1.slice(mid1), arr2, k-mid1);\n  }\n  else{\n    return find_kth(arr1, arr2.slice(mid2), k-mid2);\n  }\n}\n",
    "    if(arr1.length + arr2.length < k) return null;\n    var i = 0;\n    var j = 0;\n    var result = [];\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            result.push(arr1[i]);\n            i++;\n        } else {\n            result.push(arr2[j]);\n            j++;\n        }\n    }\n    while(i < arr1.length){\n        result.push(arr1[i]);\n        i++;\n    }\n    while(j < arr2.length){\n        result.push(arr2[j]);\n        j++;\n    }\n    return result[k-1];\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  if(arr1.length === 0) return arr2[k-1];\n  if(arr2.length === 0) return arr1[k-1];\n  if(k === 1) return Math.min(arr1[0], arr2[0]);\n  var i = Math.min(Math.floor(k/2), arr1.length);\n  var j = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[i-1] > arr2[j-1]){\n    return find_kth(arr1, arr2.slice(j), k-j);\n  }else{\n    return find_kth(arr1.slice(i), arr2, k-i);\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(count == k){\n                return arr1[i];\n            }\n            i++;\n            count++;\n        }\n        else{\n            if(count == k){\n                return arr2[j];\n            }\n            j++;\n            count++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[k-j];\n    }\n    else{\n        return arr2[k-i];\n    }\n}\n",
    "    if(arr1.length + arr2.length < k) return null;\n    if(arr1.length === 0) return arr2[k-1];\n    if(arr2.length === 0) return arr1[k-1];\n    if(k === 1) return Math.min(arr1[0], arr2[0]);\n    var i = Math.min(Math.floor(k/2), arr1.length);\n    var j = Math.min(Math.floor(k/2), arr2.length);\n    if(arr1[i-1] < arr2[j-1]){\n        return find_kth(arr1.slice(i), arr2, k-i);\n    }else{\n        return find_kth(arr1, arr2.slice(j), k-j);\n    }\n}\n",
    "\tif(arr1.length == 0)\n\t\treturn arr2[k-1];\n\tif(arr2.length == 0)\n\t\treturn arr1[k-1];\n\tif(k == 1)\n\t\treturn Math.min(arr1[0], arr2[0]);\n\tvar i = Math.min(parseInt(arr1.length), parseInt(k/2));\n\tvar j = Math.min(parseInt(arr2.length), parseInt(k/2));\n\tif(arr1[i-1] > arr2[j-1])\n\t\treturn find_kth(arr1, arr2.slice(j), k-j);\n\telse\n\t\treturn find_kth(arr1.slice(i), arr2, k-i);\n}\n",
    "    var i = 0;\n    var j = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        } else {\n            j++;\n        }\n        if(i + j == k){\n            if(arr1[i] < arr2[j]){\n                return arr1[i];\n            } else {\n                return arr2[j];\n            }\n        }\n    }\n    if(i < arr1.length){\n        return arr1[k - j];\n    } else {\n        return arr2[k - i];\n    }\n}\n",
    "    var i = 0, j = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(i + j + 1 == k){\n                return arr1[i];\n            }\n            i++;\n        }else{\n            if(i + j + 1 == k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[k - j - 1];\n    }\n    if(j < arr2.length){\n        return arr2[k - i - 1];\n    }\n}\n",
    "  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j == k - 1){\n        return arr1[i];\n      }\n      i++;\n    }else{\n      if(i + j == k - 1){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - 1 - j];\n  }else{\n    return arr2[j + k - 1 - i];\n  }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            count++;\n            if(count == k){\n                return arr1[i];\n            }\n            i++;\n        }else{\n            count++;\n            if(count == k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    while(i < arr1.length){\n        count++;\n        if(count == k){\n            return arr1[i];\n        }\n        i++;\n    }\n    while(j < arr2.length){\n        count++;\n        if(count == k){\n            return arr2[j];\n        }\n        j++;\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      count++;\n      if(count == k){\n        return arr1[i];\n      }\n      i++;\n    }else{\n      count++;\n      if(count == k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  while(i < arr1.length){\n    count++;\n    if(count == k){\n      return arr1[i];\n    }\n    i++;\n  }\n  while(j < arr2.length){\n    count++;\n    if(count == k){\n      return arr2[j];\n    }\n    j++;\n  }\n}\n",
    "  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j == k - 1) return arr1[i];\n      i++;\n    }else{\n      if(i + j == k - 1) return arr2[j];\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - 1 - j];\n  }else{\n    return arr2[j + k - 1 - i];\n  }\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 === k) return arr1[i];\n      i++;\n    }else{\n      if(i + j + 1 === k) return arr2[j];\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[k - j - 1];\n  }else{\n    return arr2[k - i - 1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  var result = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      result = arr1[i];\n      i++;\n    } else {\n      result = arr2[j];\n      j++;\n    }\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(i < arr1.length){\n    result = arr1[i];\n    i++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(j < arr2.length){\n    result = arr2[j];\n    j++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n}\n\nvar arr1 = [1, 3, 5, 7, 9];\nvar arr2 = [2, 4, 6, 8, 10];",
    "    var i = 0, j = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(i + j + 1 === k){\n                return arr1[i];\n            }\n            i++;\n        }else{\n            if(i + j + 1 === k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i + k - j - 1];\n    }\n    if(j < arr2.length){\n        return arr2[j + k - i - 1];\n    }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(count < k){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }else{\n            j++;\n        }\n        count++;\n    }\n    if(arr1[i] < arr2[j]){\n        return arr1[i];\n    }else{\n        return arr2[j];\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(count == k-1){\n        return arr1[i];\n      }\n      i++;\n      count++;\n    } else {\n      if(count == k-1){\n        return arr2[j];\n      }\n      j++;\n      count++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i+k-count-1];\n  }\n  if(j < arr2.length){\n    return arr2[j+k-count-1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var result = [];\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      result.push(arr1[i]);\n      i++;\n    } else {\n      result.push(arr2[j]);\n      j++;\n    }\n  }\n  while(i < arr1.length){\n    result.push(arr1[i]);\n    i++;\n  }\n  while(j < arr2.length){\n    result.push(arr2[j]);\n    j++;\n  }\n  return result[k-1];\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  if(arr1.length === 0) return arr2[k-1];\n  if(arr2.length === 0) return arr1[k-1];\n  if(k === 1) return Math.min(arr1[0], arr2[0]);\n  var mid1 = Math.min(Math.floor(k/2), arr1.length);\n  var mid2 = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[mid1-1] < arr2[mid2-1]){\n    return find_kth(arr1.slice(mid1), arr2, k-mid1);\n  }else{\n    return find_kth(arr1, arr2.slice(mid2), k-mid2);\n  }\n}\n",
    "  if(arr1.length == 0) return arr2[k-1];\n  if(arr2.length == 0) return arr1[k-1];\n  if(k == 1) return Math.min(arr1[0], arr2[0]);\n  var mid1 = Math.min(Math.floor(k/2), arr1.length);\n  var mid2 = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[mid1-1] < arr2[mid2-1]){\n    return find_kth(arr1.slice(mid1), arr2, k-mid1);\n  } else {\n    return find_kth(arr1, arr2.slice(mid2), k-mid2);\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count === k){\n      break;\n    }\n  }\n  if(i === arr1.length){\n    return arr2[j];\n  }\n  if(j === arr2.length){\n    return arr1[i];\n  }\n  return Math.min(arr1[i], arr2[j]);\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count === k) break;\n  }\n  if(count === k){\n    if(i === arr1.length){\n      return arr2[j];\n    }else if(j === arr2.length){\n      return arr1[i];\n    }else{\n      return Math.min(arr1[i], arr2[j]);\n    }\n  }\n  if(i === arr1.length){\n    return arr2[k - arr1.length - 1];\n  }else{\n    return arr1[k - arr2.length - 1];\n  }\n}\n",
    "    var i = 0, j = 0;\n    var result = [];\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            result.push(arr1[i]);\n            i++;\n        } else {\n            result.push(arr2[j]);\n            j++;\n        }\n    }\n    while(i < arr1.length){\n        result.push(arr1[i]);\n        i++;\n    }\n    while(j < arr2.length){\n        result.push(arr2[j]);\n        j++;\n    }\n    return result[k-1];\n}\n",
    "    if(arr1.length == 0){\n        return arr2[k-1];\n    }\n    if(arr2.length == 0){\n        return arr1[k-1];\n    }\n    if(k == 1){\n        return Math.min(arr1[0], arr2[0]);\n    }\n    var i = Math.min(parseInt(arr1.length), parseInt(k/2));\n    var j = Math.min(parseInt(arr2.length), parseInt(k/2));\n    if(arr1[i-1] > arr2[j-1]){\n        return find_kth(arr1, arr2.slice(j), k-j);\n    }\n    else{\n        return find_kth(arr1.slice(i), arr2, k-i);\n    }\n}\n",
    "    if(arr1.length == 0)\n        return arr2[k-1];\n    if(arr2.length == 0)\n        return arr1[k-1];\n    if(k == 1)\n        return Math.min(arr1[0], arr2[0]);\n    var mid1 = Math.min(arr1.length, Math.floor(k/2));\n    var mid2 = Math.min(arr2.length, Math.floor(k/2));\n    if(arr1[mid1-1] > arr2[mid2-1])\n        return find_kth(arr1, arr2.slice(mid2), k-mid2);\n    else\n        return find_kth(arr1.slice(mid1), arr2, k-mid1);\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  var result;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      result = arr1[i];\n      i++;\n    }else{\n      result = arr2[j];\n      j++;\n    }\n    count++;\n    if(count === k) break;\n  }\n  if(i === arr1.length){\n    while(j < arr2.length){\n      result = arr2[j];\n      j++;\n      count++;\n      if(count === k) break;\n    }\n  }\n  if(j === arr2.length){\n    while(i < arr1.length){\n      result = arr1[i];\n      i++;\n      count++;\n      if(count === k) break;\n    }\n  }\n  return result;\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  if(arr1.length === 0) return arr2[k-1];\n  if(arr2.length === 0) return arr1[k-1];\n  if(k === 1) return Math.min(arr1[0], arr2[0]);\n  var mid1 = Math.min(k/2, arr1.length);\n  var mid2 = Math.min(k/2, arr2.length);\n  if(arr1[mid1-1] < arr2[mid2-1]){\n    return find_kth(arr1.slice(mid1), arr2, k-mid1);\n  }else{\n    return find_kth(arr1, arr2.slice(mid2), k-mid2);\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    } else {\n      j++;\n    }\n    count++;\n    if(count === k){\n      break;\n    }\n  }\n  if(i === arr1.length){\n    return arr2[j];\n  } else {\n    return arr1[i];\n  }\n}\n",
    "  if(arr1.length+arr2.length < k) return -1;\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count == k) break;\n  }\n  if(count < k){\n    if(i == arr1.length){\n      return arr2[j+k-count-1];\n    }else{\n      return arr1[i+k-count-1];\n    }\n  }else{\n    if(arr1[i] < arr2[j]){\n      return arr1[i];\n    }else{\n      return arr2[j];\n    }\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count == k){\n      return arr1[i] < arr2[j] ? arr1[i] : arr2[j];\n    }\n  }\n  while(i < arr1.length){\n    i++;\n    count++;\n    if(count == k){\n      return arr1[i];\n    }\n  }\n  while(j < arr2.length){\n    j++;\n    count++;\n    if(count == k){\n      return arr2[j];\n    }\n  }\n}\n",
    "    var i = 0, j = 0;\n    while(k > 0){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }\n        else{\n            j++;\n        }\n        k--;\n    }\n    return arr1[i] < arr2[j] ? arr1[i] : arr2[j];\n}\n",
    "    var i = 0, j = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(i + j + 1 === k){\n                return arr1[i];\n            }\n            i++;\n        }else{\n            if(i + j + 1 === k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i + k - j - 1];\n    }\n    return arr2[j + k - i - 1];\n}\n",
    "  var i = 0, j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(count == k-1){\n        return arr1[i];\n      }\n      i++;\n      count++;\n    }\n    else{\n      if(count == k-1){\n        return arr2[j];\n      }\n      j++;\n      count++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i+k-count-1];\n  }\n  if(j < arr2.length){\n    return arr2[j+k-count-1];\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(count === k-1){\n        return arr1[i];\n      }\n      i++;\n      count++;\n    }else{\n      if(count === k-1){\n        return arr2[j];\n      }\n      j++;\n      count++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i+k-1];\n  }else{\n    return arr2[j+k-1];\n  }\n}\n",
    "    var i = 0, j = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            if(i + j + 1 == k){\n                return arr1[i];\n            }\n            i++;\n        }\n        else{\n            if(i + j + 1 == k){\n                return arr2[j];\n            }\n            j++;\n        }\n    }\n    if(i < arr1.length){\n        return arr1[i + k - j - 1];\n    }\n    else{\n        return arr2[j + k - i - 1];\n    }\n}\n",
    "  var i = 0, j = 0;\n  while(k > 0){\n    if(arr1[i] < arr2[j]){\n      i++;\n    } else {\n      j++;\n    }\n    k--;\n  }\n  if(arr1[i] < arr2[j]){\n    return arr1[i];\n  } else {\n    return arr2[j];\n  }\n}\n",
    "  var i = 0, j = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      if(i + j + 1 == k){\n        return arr1[i];\n      }\n      i++;\n    }else{\n      if(i + j + 1 == k){\n        return arr2[j];\n      }\n      j++;\n    }\n  }\n  if(i < arr1.length){\n    return arr1[k - j - 1];\n  }\n  if(j < arr2.length){\n    return arr2[k - i - 1];\n  }\n}\n",
    "  if(arr1.length == 0)\n    return arr2[k-1];\n  if(arr2.length == 0)\n    return arr1[k-1];\n  if(k == 1)\n    return Math.min(arr1[0], arr2[0]);\n  var i = Math.min(parseInt(arr1.length/k), parseInt(k/2));\n  var j = k - i;\n  if(arr1[i-1] > arr2[j-1])\n    return find_kth(arr1, arr2.slice(j), k-j);\n  else\n    return find_kth(arr1.slice(i), arr2, k-i);\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  var result;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      result = arr1[i];\n      i++;\n    } else {\n      result = arr2[j];\n      j++;\n    }\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(i < arr1.length){\n    result = arr1[i];\n    i++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(j < arr2.length){\n    result = arr2[j];\n    j++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n}\n",
    "  if(arr1.length === 0){\n    return arr2[k-1];\n  }\n  if(arr2.length === 0){\n    return arr1[k-1];\n  }\n  if(k === 1){\n    return Math.min(arr1[0], arr2[0]);\n  }\n  var i = Math.min(Math.floor(k/2), arr1.length);\n  var j = Math.min(Math.floor(k/2), arr2.length);\n  if(arr1[i-1] < arr2[j-1]){\n    return find_kth(arr1.slice(i), arr2, k-i);\n  }else{\n    return find_kth(arr1, arr2.slice(j), k-j);\n  }\n}\n",
    "    if(arr1.length === 0){\n        return arr2[k-1];\n    }\n    if(arr2.length === 0){\n        return arr1[k-1];\n    }\n    if(k === 1){\n        return Math.min(arr1[0], arr2[0]);\n    }\n    var mid1 = Math.min(arr1.length, Math.floor(k/2));\n    var mid2 = Math.min(arr2.length, Math.floor(k/2));\n    if(arr1[mid1-1] < arr2[mid2-1]){\n        return find_kth(arr1.slice(mid1), arr2, k-mid1);\n    }else{\n        return find_kth(arr1, arr2.slice(mid2), k-mid2);\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  var result;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      result = arr1[i];\n      i++;\n    }\n    else{\n      result = arr2[j];\n      j++;\n    }\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(i < arr1.length){\n    result = arr1[i];\n    i++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(j < arr2.length){\n    result = arr2[j];\n    j++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    } else {\n      j++;\n    }\n    count++;\n    if(count === k){\n      break;\n    }\n  }\n  if(i === arr1.length){\n    return arr2[j];\n  }\n  if(j === arr2.length){\n    return arr1[i];\n  }\n  return Math.min(arr1[i], arr2[j]);\n}\n",
    "  if(arr1.length + arr2.length < k) return null;\n  var i = 0, j = 0;\n  var arr = [];\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      arr.push(arr1[i]);\n      i++;\n    }else{\n      arr.push(arr2[j]);\n      j++;\n    }\n  }\n  while(i < arr1.length){\n    arr.push(arr1[i]);\n    i++;\n  }\n  while(j < arr2.length){\n    arr.push(arr2[j]);\n    j++;\n  }\n  return arr[k - 1];\n}\n\nvar arr1 = [1, 3, 5, 7, 9];\nvar arr2 = [2, 4, 6, 8, 10];",
    "    if(arr1.length == 0)\n        return arr2[k-1];\n    if(arr2.length == 0)\n        return arr1[k-1];\n    if(k == 1)\n        return Math.min(arr1[0], arr2[0]);\n    var mid1 = Math.min(Math.floor(k/2), arr1.length);\n    var mid2 = Math.min(Math.floor(k/2), arr2.length);\n    if(arr1[mid1-1] < arr2[mid2-1]){\n        return find_kth(arr1.slice(mid1), arr2, k-mid1);\n    }\n    else{\n        return find_kth(arr1, arr2.slice(mid2), k-mid2);\n    }\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      i++;\n    }else{\n      j++;\n    }\n    count++;\n    if(count === k){\n      if(arr1[i] < arr2[j]){\n        return arr1[i];\n      }else{\n        return arr2[j];\n      }\n    }\n  }\n  if(i < arr1.length){\n    return arr1[i + k - count - 1];\n  }else{\n    return arr2[j + k - count - 1];\n  }\n}\n",
    "  var index1 = 0, index2 = 0;\n  var result;\n  while(index1 < arr1.length && index2 < arr2.length){\n    if(arr1[index1] < arr2[index2]){\n      result = arr1[index1];\n      index1++;\n    } else {\n      result = arr2[index2];\n      index2++;\n    }\n    k--;\n    if(k == 0){\n      break;\n    }\n  }\n  if(index1 == arr1.length){\n    result = arr2[index2 + k - 1];\n  }\n  if(index2 == arr2.length){\n    result = arr1[index1 + k - 1];\n  }\n  return result;\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }\n        else{\n            j++;\n        }\n        count++;\n        if(count == k){\n            break;\n        }\n    }\n    if(count == k){\n        if(i < arr1.length && j < arr2.length){\n            if(arr1[i] < arr2[j]){\n                return arr1[i];\n            }\n            else{\n                return arr2[j];\n            }\n        }\n        else if(i < arr1.length){\n            return arr1[i];\n        }\n        else{\n            return arr2[j];\n        }\n    }\n    else{\n        return -1;\n    }\n}\n",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < arr1.length && j < arr2.length){\n        if(arr1[i] < arr2[j]){\n            i++;\n        }else{\n            j++;\n        }\n        count++;\n        if(count == k){\n            break;\n        }\n    }\n    if(i == arr1.length){\n        return arr2[j];\n    }\n    if(j == arr2.length){\n        return arr1[i];\n    }\n    return Math.min(arr1[i], arr2[j]);\n}\n",
    "  var i = 0;\n  var j = 0;\n  var count = 0;\n  var result = 0;\n  while(i < arr1.length && j < arr2.length){\n    if(arr1[i] < arr2[j]){\n      result = arr1[i];\n      i++;\n    }\n    else{\n      result = arr2[j];\n      j++;\n    }\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(i < arr1.length){\n    result = arr1[i];\n    i++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n  while(j < arr2.length){\n    result = arr2[j];\n    j++;\n    count++;\n    if(count === k){\n      return result;\n    }\n  }\n}\n"
  ]
}
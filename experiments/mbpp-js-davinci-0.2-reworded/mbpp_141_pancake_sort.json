{
  "name": "mbpp_141_pancake_sort",
  "language": "js",
  "prompt": "//Write a function to sort an array of elements.\nfunction pancake_sort(nums){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_141_pancake_sort.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pancake_sort;\n  assert.deepEqual(candidate([15, 79, 25, 38, 69]),[15, 25, 38, 69, 79]);\n  assert.deepEqual(candidate([98, 12, 54, 36, 85]),[12, 36, 54, 85, 98]);\n  assert.deepEqual(candidate([41, 42, 32, 12, 23]),[12, 23, 32, 41, 42]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    for(let i = nums.length - 1; i > 0; i--){\n        let max = i;\n        for(let j = 0; j < i; j++){\n            if(nums[j] > nums[max]){\n                max = j;\n            }\n        }\n        flip(nums, max);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for(var i = nums.length - 1; i > 0; i--){\n        var max = 0;\n        for(var j = 0; j <= i; j++){\n            if(nums[j] > nums[max]){\n                max = j;\n            }\n        }\n        flip(nums, max);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let i = nums.length - 1;\n    while(i > 0){\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n        i--;\n    }\n    return nums;\n}\n",
    "    for(let i = nums.length - 1; i > 0; i--){\n        let max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    var i, j, k, temp;\n    for(i = nums.length - 1; i > 0; i--){\n        for(j = 0; j < i; j++){\n            if(nums[j] > nums[j + 1]){\n                temp = nums[j];\n                nums[j] = nums[j + 1];\n                nums[j + 1] = temp;\n            }\n        }\n    }\n    return nums;\n}\n",
    "    for(var i = nums.length - 1; i > 0; i--){\n        var max_index = find_max_index(nums, i);\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for(var i = nums.length - 1; i > 0; i--){\n        var max = nums[0];\n        var maxIndex = 0;\n        for(var j = 1; j <= i; j++){\n            if(nums[j] > max){\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        if(maxIndex != i){\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "    for(var i = nums.length - 1; i > 0; i--){\n        var max_index = 0;\n        for(var j = 1; j <= i; j++){\n            if(nums[j] > nums[max_index]){\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, i);\n    }\n}\n",
    "    for(let i=nums.length-1;i>=0;i--){\n        let max_index = find_max_index(nums,i);\n        if(max_index != i){\n            flip(nums,max_index);\n            flip(nums,i);\n        }\n    }\n    return nums;\n}\n",
    "    for(let i = nums.length - 1; i > 0; i--){\n        let max = 0;\n        for(let j = 0; j <= i; j++){\n            if(nums[j] > nums[max]){\n                max = j;\n            }\n        }\n        flip(nums, max);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "\tvar i, j, k;\n\tfor(i = nums.length - 1; i > 0; i--){\n\t\tk = max_index(nums, i);\n\t\tif(k != i){\n\t\t\tflip(nums, k);\n\t\t\tflip(nums, i);\n\t\t}\n\t}\n\treturn nums;\n}\n",
    "    for(var i=nums.length-1;i>=0;i--){\n        var max_index = find_max_index(nums,i);\n        flip(nums,max_index);\n        flip(nums,i);\n    }\n    return nums;\n}\n",
    "    for(var i = nums.length - 1; i > 0; i--){\n        var max = nums[0];\n        var maxIndex = 0;\n        for(var j = 0; j <= i; j++){\n            if(nums[j] > max){\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        flip(nums, maxIndex);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    for(var i = nums.length; i > 0; i--){\n        var max = nums.indexOf(Math.max(...nums.slice(0,i)));\n        if(max != i-1){\n            nums = flip(nums, max+1);\n            nums = flip(nums, i);\n        }\n    }\n    return nums;\n}\n",
    "\tvar i, j, temp;\n\tfor(i = nums.length - 1; i > 0; i--){\n\t\tfor(j = 0; j < i; j++){\n\t\t\tif(nums[j] > nums[j + 1]){\n\t\t\t\ttemp = nums[j];\n\t\t\t\tnums[j] = nums[j + 1];\n\t\t\t\tnums[j + 1] = temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn nums;\n}\n",
    "\tfor(var i=nums.length-1;i>=0;i--){\n\t\tvar max_index=find_max(nums,i);\n\t\tif(max_index!=i){\n\t\t\tflip(nums,max_index);\n\t\t\tflip(nums,i);\n\t\t}\n\t}\n\treturn nums;\n}",
    "    for(let i = nums.length - 1; i > 0; i--){\n        let max = nums[0];\n        let maxIndex = 0;\n        for(let j = 1; j <= i; j++){\n            if(nums[j] > max){\n                max = nums[j];\n                maxIndex = j;\n            }\n        }\n        flip(nums, maxIndex);\n        flip(nums, i);\n    }\n    return nums;\n}\n",
    "    let n = nums.length;\n    for(let i = 0; i < n; i++){\n        let max = nums[0];\n        let max_index = 0;\n        for(let j = 0; j < n - i; j++){\n            if(nums[j] > max){\n                max = nums[j];\n                max_index = j;\n            }\n        }\n        flip(nums, max_index);\n        flip(nums, n - i - 1);\n    }\n    return nums;\n}\n",
    "\tvar i, j, temp;\n\tfor(i = nums.length - 1; i > 0; i--){\n\t\tfor(j = 0; j < i; j++){\n\t\t\tif(nums[j] > nums[j+1]){\n\t\t\t\ttemp = nums[j];\n\t\t\t\tnums[j] = nums[j+1];\n\t\t\t\tnums[j+1] = temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn nums;\n}\n",
    "    for(var i = nums.length; i > 1; i--){\n        var max = 0;\n        for(var j = 1; j < i; j++){\n            if(nums[j] > nums[max]){\n                max = j;\n            }\n        }\n        flip(nums, max);\n        flip(nums, i - 1);\n    }\n    return nums;\n}\n"
  ]
}
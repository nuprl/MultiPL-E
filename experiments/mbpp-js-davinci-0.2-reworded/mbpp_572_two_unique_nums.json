{
  "name": "mbpp_572_two_unique_nums",
  "language": "js",
  "prompt": "//Write a jsthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums(nums){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_572_two_unique_nums.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = two_unique_nums;\n  assert.deepEqual(candidate([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}\nvar nums = [1,2,3,4,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var count = 0;\n    var unique = [];\n    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) == -1){\n            unique.push(nums[i]);\n            unique_nums.push(nums[i]);\n            count++;\n        }\n        if(count == 2){\n            break;\n        }\n    }\n    return unique_nums;\n}",
    "    let unique_nums = [];\n    for(let i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique.indexOf(nums[i]) === -1){\n            unique.push(nums[i]);\n        }\n    }\n    return unique;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) === -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}",
    "    var unique_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(unique_nums.indexOf(nums[i]) == -1){\n            unique_nums.push(nums[i]);\n        }\n    }\n    return unique_nums;\n}"
  ]
}
{
  "name": "mbpp_394_check_distinct",
  "language": "js",
  "prompt": "//Write a function to check if given array contains no duplicates.\nfunction check_distinct(test_tup){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_394_check_distinct.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_distinct;\n  assert.deepEqual(candidate([1, 4, 5, 6, 1, 4]),false);\n  assert.deepEqual(candidate([1, 4, 5, 6]),true);\n  assert.deepEqual(candidate([2, 3, 4, 5, 6]),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var test_tup = [1,2,3,4,5,6,7,8,9,10];\n    var test_tup_distinct = [...new Set(test_tup)];\n    if (test_tup.length == test_tup_distinct.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n",
    "    var flag = true;\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = i + 1; j < test_tup.length; j++){\n            if(test_tup[i] == test_tup[j]){\n                flag = false;\n            }\n        }\n    }\n    return flag;\n}\n",
    "    var res = test_tup.filter(function(item, pos) {\n        return test_tup.indexOf(item) == pos;\n    })\n    if (res.length == test_tup.length){\n        console.log(\"True\");\n    }\n    else{\n        console.log(\"False\");\n    }\n}\ncheck_distinct([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\ncheck_distinct([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10]);\n",
    "    var test_tup = [1,2,3,4,5,6,7,8,9,10];\n    var test_tup_set = new Set(test_tup);\n    if(test_tup.length == test_tup_set.size){\n        console.log(\"Array contains no duplicates\");\n    }\n    else{\n        console.log(\"Array contains duplicates\");\n    }\n}\ncheck_distinct();\n",
    "    return test_tup.length == new Set(test_tup).size;\n}\n",
    "    var distinct = true;\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = 0; j < test_tup.length; j++){\n            if(i != j){\n                if(test_tup[i] == test_tup[j]){\n                    distinct = false;\n                }\n            }\n        }\n    }\n    return distinct;\n}\n",
    "    var distinct = true;\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = i + 1; j < test_tup.length; j++){\n            if(test_tup[i] == test_tup[j]){\n                distinct = false;\n                break;\n            }\n        }\n    }\n    return distinct;\n}\n",
    "    var test_tup = [1,2,3,4,5,6,7,8,9,10];\n    var test_tup_length = test_tup.length;\n    var test_tup_set = new Set(test_tup);\n    var test_tup_set_length = test_tup_set.size;\n    if (test_tup_length == test_tup_set_length){\n        console.log(\"Array contains no duplicates\");\n    }\n    else{\n        console.log(\"Array contains duplicates\");\n    }\n}\ncheck_distinct();\n",
    "    var test_tup = [1,2,3,4,5,6,7,8,9,10];\n    var test_tup_len = test_tup.length;\n    var test_tup_set = new Set(test_tup);\n    var test_tup_set_len = test_tup_set.size;\n    if (test_tup_len == test_tup_set_len){\n        console.log(\"Array contains no duplicates\");\n    }\n    else{\n        console.log(\"Array contains duplicates\");\n    }\n}\ncheck_distinct();\n",
    "    var distinct = true;\n    for (var i = 0; i < test_tup.length; i++){\n        for (var j = i+1; j < test_tup.length; j++){\n            if (test_tup[i] == test_tup[j]){\n                distinct = false;\n            }\n        }\n    }\n    return distinct;\n}\n",
    "    var test_tup = [1,2,3,4,5,6,7,8,9,10];\n    var test_tup_distinct = [...new Set(test_tup)];\n    if(test_tup.length == test_tup_distinct.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n",
    "    var test_tup = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n    var test_tup = test_tup.sort();\n    for (var i = 0; i < test_tup.length; i++){\n        if (test_tup[i] == test_tup[i+1]){\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    var set = new Set(test_tup);\n    if(set.size == test_tup.length){\n        return true;\n    }\n    return false;\n}\n",
    "    return test_tup.length === new Set(test_tup).size;\n}\n",
    "    var distinct = true;\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = i+1; j < test_tup.length; j++){\n            if(test_tup[i] == test_tup[j]){\n                distinct = false;\n                break;\n            }\n        }\n    }\n    return distinct;\n}\n",
    "    var temp = [];\n    for(var i=0;i<test_tup.length;i++){\n        if(temp.indexOf(test_tup[i]) == -1){\n            temp.push(test_tup[i]);\n        }\n    }\n    if(temp.length == test_tup.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var tup_len = test_tup.length;\n    for (var i = 0; i < tup_len; i++){\n        for (var j = i+1; j < tup_len; j++){\n            if (test_tup[i] == test_tup[j]){\n                return false;\n            }\n        }\n    }\n    return true;\n}\n",
    "    var test_tup = [1,2,3,4,5,6,7,8,9,10];\n    var test_tup_2 = [1,2,3,4,5,6,7,8,9,10,1];\n    var test_tup_3 = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10];\n    var test_tup_4 = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10];\n    var test_tup_5 = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10];\n    var test_tup_6 = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10];\n    var test_tup_7 = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8",
    "    var test_arr = test_tup[0];\n    var test_len = test_tup[1];\n    var distinct = true;\n    for(var i = 0; i < test_len; i++){\n        for(var j = i+1; j < test_len; j++){\n            if(test_arr[i] == test_arr[j]){\n                distinct = false;\n                break;\n            }\n        }\n    }\n    return distinct;\n}\n",
    "    var distinct = true;\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = i + 1; j < test_tup.length; j++){\n            if(test_tup[i] == test_tup[j]){\n                distinct = false;\n            }\n        }\n    }\n    return distinct;\n}\n"
  ]
}
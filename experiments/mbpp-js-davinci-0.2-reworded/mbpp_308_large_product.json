{
  "name": "mbpp_308_large_product",
  "language": "js",
  "prompt": "//Write a function to find the specified number of largest products from two given arrays, selecting one factor from each array.\nfunction large_product(nums1, nums2, N){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_308_large_product.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = large_product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 3),[60, 54, 50]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 4),[60, 54, 50, 48]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 5),[60, 54, 50, 48, 45]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var nums1 = nums1.sort(function(a, b){return b-a});\n    var nums2 = nums2.sort(function(a, b){return b-a});\n    var result = [];\n    for(var i=0; i<N; i++){\n        result.push(nums1[i]*nums2[i]);\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){\n    return b - a;\n  });\n  return products.slice(0, N);\n}\n",
    "  var result = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      result.push(nums1[i] * nums2[j]);\n    }\n  }\n  return result.sort(function(a, b){return b - a}).slice(0, N);\n}\n",
    "  let products = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort((a, b) => b - a);\n  return products.slice(0, N);\n}\n",
    "  let products = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort((a, b) => b - a);\n  return products.slice(0, N);\n}\n",
    "    var result = [];\n    var temp = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            temp.push(nums1[i] * nums2[j]);\n        }\n    }\n    temp.sort(function(a, b){\n        return b - a;\n    });\n    for(var k = 0; k < N; k++){\n        result.push(temp[k]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){return b - a});\n    return result.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){return b - a});\n    return result.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    let max = 0;\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            let product = nums1[i] * nums2[j];\n            if(result.length < N){\n                result.push(product);\n                max = Math.max(...result);\n            }\n            else if(product > max){\n                result.push(product);\n                result.splice(result.indexOf(max), 1);\n                max = Math.max(...result);\n            }\n        }\n    }\n    return result;\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a,b){return b-a});\n  return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    let max = [];\n    for(let i = 0; i < N; i++){\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        max.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return max;\n}"
  ]
}
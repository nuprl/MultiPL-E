{
  "name": "mbpp_308_large_product",
  "language": "js",
  "prompt": "//Write a function to find the specified number of largest products from two given arrays, selecting one factor from each array.\nfunction large_product(nums1, nums2, N){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_308_large_product.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = large_product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 3),[60, 54, 50]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 4),[60, 54, 50, 48]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 5),[60, 54, 50, 48, 45]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var nums1 = nums1.sort(function(a, b){return b-a});\n    var nums2 = nums2.sort(function(a, b){return b-a});\n    var result = [];\n    for(var i=0; i<N; i++){\n        result.push(nums1[i]*nums2[i]);\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){\n    return b - a;\n  });\n  return products.slice(0, N);\n}\n",
    "  var result = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      result.push(nums1[i] * nums2[j]);\n    }\n  }\n  return result.sort(function(a, b){return b - a}).slice(0, N);\n}\n",
    "  let products = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort((a, b) => b - a);\n  return products.slice(0, N);\n}\n",
    "  let products = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort((a, b) => b - a);\n  return products.slice(0, N);\n}\n",
    "    var result = [];\n    var temp = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            temp.push(nums1[i] * nums2[j]);\n        }\n    }\n    temp.sort(function(a, b){\n        return b - a;\n    });\n    for(var k = 0; k < N; k++){\n        result.push(temp[k]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){return b - a});\n    return result.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){return b - a});\n    return result.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    let max = 0;\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            let product = nums1[i] * nums2[j];\n            if(result.length < N){\n                result.push(product);\n                max = Math.max(...result);\n            }\n            else if(product > max){\n                result.push(product);\n                result.splice(result.indexOf(max), 1);\n                max = Math.max(...result);\n            }\n        }\n    }\n    return result;\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a,b){return b-a});\n  return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    let max = [];\n    for(let i = 0; i < N; i++){\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        max.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return max;\n}",
    "    let max_products = [];\n    for(let i = 0; i < N; i++){\n        let max_product = 0;\n        for(let j = 0; j < nums1.length; j++){\n            for(let k = 0; k < nums2.length; k++){\n                if(nums1[j] * nums2[k] > max_product){\n                    max_product = nums1[j] * nums2[k];\n                }\n            }\n        }\n        max_products.push(max_product);\n        for(let j = 0; j < nums1.length; j++){\n            for(let k = 0; k < nums2.length; k++){\n                if(nums1[j] * nums2[k] === max_product){\n                    nums1[j] = -Infinity;\n                    nums2[k] = -Infinity;\n                }\n            }\n        }\n    }\n    return max_products;\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort((a, b) => b - a);\n    return result.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "  var result = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      result.push(nums1[i] * nums2[j]);\n    }\n  }\n  return result.sort(function(a, b){return b - a}).slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < N; i++){\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < N; i++){\n        for(var j = 0; j < nums1.length; j++){\n            if(nums1[j] > max){\n                max = nums1[j];\n                max_index = j;\n            }\n        }\n        nums1[max_index] = 0;\n        max = 0;\n        for(var k = 0; k < nums2.length; k++){\n            if(nums2[k] > max){\n                max = nums2[k];\n                max_index = k;\n            }\n        }\n        nums2[max_index] = 0;\n        result.push(max);\n        max = 0;\n    }\n    return result;\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){\n    return b - a;\n  });\n  return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  var result = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      result.push(nums1[i] * nums2[j]);\n    }\n  }\n  result.sort(function(a, b){\n    return b - a;\n  });\n  return result.slice(0, N);\n}\n",
    "    let max = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            max.push(nums1[i] * nums2[j]);\n        }\n    }\n    max.sort((a,b) => b - a);\n    return max.slice(0, N);\n}",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){\n    return b - a;\n  });\n  return products.slice(0, N);\n}\n",
    "    let max = 0;\n    let max_index = 0;\n    let max_index2 = 0;\n    let max_index3 = 0;\n    let max_index4 = 0;\n    let max_index5 = 0;\n    let max_index6 = 0;\n    let max_index7 = 0;\n    let max_index8 = 0;\n    let max_index9 = 0;\n    let max_index10 = 0;\n    let max_index11 = 0;\n    let max_index12 = 0;\n    let max_index13 = 0;\n    let max_index14 = 0;\n    let max_index15 = 0;\n    let max_index16 = 0;\n    let max_index17 = 0;\n    let max_index18 = 0;\n    let max_index19 = 0;\n    let max_index20 = 0;\n    let max_index21 = 0;\n    let max_index22 = 0;\n    let max_index23 = 0;\n    let max_index24 = 0;\n    let max_index25 = 0;\n    let max_index26 = 0;\n    let max_index27 = 0;\n    let max_index28 = 0;\n    let max_index29 = 0;\n    let max_index30 = 0;\n    let max_index31 = 0;\n    let max_index32 = 0;\n    let max_index33 = 0;\n    let max_index34 = 0;\n    let max_index35 = 0;\n    let max_index36 = 0;\n    let max_index37 = 0;\n    let max_index38 = 0;\n    let max_index39 = 0;\n    let max_index40 = 0;\n    let max_index41 = 0;\n    let max_index42 = 0;\n    let max_index43 = 0;\n    let max_index44 = 0;\n    let max_index45 = 0;\n    let max_index46 = 0;\n    let max_index47 = 0;\n    let max_index48 = 0;\n    let max_index49 = 0;\n    let max_index50 = 0;\n    let max_index",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < N; i++){\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}",
    "    let max_products = [];\n    for(let i = 0; i < N; i++){\n        let max_product = -Infinity;\n        for(let j = 0; j < nums1.length; j++){\n            for(let k = 0; k < nums2.length; k++){\n                max_product = Math.max(max_product, nums1[j] * nums2[k]);\n            }\n        }\n        max_products.push(max_product);\n        for(let j = 0; j < nums1.length; j++){\n            for(let k = 0; k < nums2.length; k++){\n                if(nums1[j] * nums2[k] === max_product){\n                    nums2.splice(k, 1);\n                    break;\n                }\n            }\n        }\n    }\n    return max_products;\n}\n",
    "    var res = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            res.push(nums1[i] * nums2[j]);\n        }\n    }\n    res.sort(function(a, b){return b - a;});\n    return res.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){\n    return b - a;\n  });\n  return products.slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){return b - a});\n  return products.slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a,b){return b-a});\n  return products.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a,b) => b - a).slice(0, N);\n}\n",
    "  var result = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      result.push(nums1[i] * nums2[j]);\n    }\n  }\n  return result.sort(function(a, b){return b - a}).slice(0, N);\n}\n",
    "  var nums1 = nums1.sort(function(a,b){return b-a});\n  var nums2 = nums2.sort(function(a,b){return b-a});\n  var result = [];\n  for(var i = 0; i < N; i++){\n    result.push(nums1[i] * nums2[i]);\n  }\n  return result;\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){return b-a});\n    return result.slice(0, N);\n}\n",
    "  var arr = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      arr.push(nums1[i] * nums2[j]);\n    }\n  }\n  arr.sort(function(a, b){return b - a});\n  return arr.slice(0, N);\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length){\n        if(nums1[i] * nums2[j] > nums1[i+1] * nums2[j+1]){\n            result.push(nums1[i] * nums2[j]);\n            i++;\n            j++;\n        }\n        else{\n            result.push(nums1[i+1] * nums2[j+1]);\n            i++;\n            j++;\n        }\n    }\n    return result;\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){return b - a});\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < N; i++){\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < N; i++){\n        var max1 = Math.max.apply(null, nums1);\n        var max2 = Math.max.apply(null, nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a,b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){\n    return b - a;\n  });\n  return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){\n    return b - a;\n  });\n  return products.slice(0, N);\n}\n",
    "  var result = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      result.push(nums1[i] * nums2[j]);\n    }\n  }\n  return result.sort(function(a, b){return b - a}).slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let max = 0;\n    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            let product = nums1[i] * nums2[j];\n            if(product > max){\n                max = product;\n                result.push(product);\n            }\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  return products.sort(function(a, b){return b - a}).slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){\n    return b - a;\n  });\n  return products.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "  var result = [];\n  var max = 0;\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      var product = nums1[i] * nums2[j];\n      if(product > max){\n        max = product;\n        result.push(product);\n      }\n    }\n  }\n  return result.sort(function(a, b){return b - a}).slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "  var largest = [];\n  for (var i = 0; i < nums1.length; i++){\n    for (var j = 0; j < nums2.length; j++){\n      largest.push(nums1[i] * nums2[j]);\n    }\n  }\n  largest.sort(function(a, b){return b - a});\n  return largest.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let max_products = [];\n    for(let i = 0; i < N; i++){\n        let max_product = 0;\n        for(let j = 0; j < nums1.length; j++){\n            for(let k = 0; k < nums2.length; k++){\n                if(nums1[j] * nums2[k] > max_product){\n                    max_product = nums1[j] * nums2[k];\n                }\n            }\n        }\n        max_products.push(max_product);\n        for(let j = 0; j < nums1.length; j++){\n            for(let k = 0; k < nums2.length; k++){\n                if(nums1[j] * nums2[k] === max_product){\n                    nums1.splice(j, 1);\n                    nums2.splice(k, 1);\n                }\n            }\n        }\n    }\n    return max_products;\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "  var nums1 = nums1.sort(function(a,b){return b-a});\n  var nums2 = nums2.sort(function(a,b){return b-a});\n  var result = [];\n  for(var i = 0; i < N; i++){\n    result.push(nums1[i]*nums2[i]);\n  }\n  return result;\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){return b - a});\n    return products.slice(0, N);\n}\n",
    "  var result = [];\n  var max = 0;\n  var max_index = 0;\n  var max_index2 = 0;\n  var max_index3 = 0;\n  var max_index4 = 0;\n  var max2 = 0;\n  var max3 = 0;\n  var max4 = 0;\n  var max5 = 0;\n  var max6 = 0;\n  var max7 = 0;\n  var max8 = 0;\n  var max9 = 0;\n  var max10 = 0;\n  var max11 = 0;\n  var max12 = 0;\n  var max13 = 0;\n  var max14 = 0;\n  var max15 = 0;\n  var max16 = 0;\n  var max17 = 0;\n  var max18 = 0;\n  var max19 = 0;\n  var max20 = 0;\n  var max21 = 0;\n  var max22 = 0;\n  var max23 = 0;\n  var max24 = 0;\n  var max25 = 0;\n  var max26 = 0;\n  var max27 = 0;\n  var max28 = 0;\n  var max29 = 0;\n  var max30 = 0;\n  var max31 = 0;\n  var max32 = 0;\n  var max33 = 0;\n  var max34 = 0;\n  var max35 = 0;\n  var max36 = 0;\n  var max37 = 0;\n  var max38 = 0;\n  var max39 = 0;\n  var max40 = 0;\n  var max41 = 0;\n  var max42 = 0;\n  var max43 = 0;\n  var max44 = 0;\n  var max45 = 0;\n  var max46 = 0;\n  var max47 = 0;\n  var max48 = 0;\n  var max49 = 0;\n  var max50 = 0;\n  var max51 = 0;\n  var max52 = 0;\n  var max53 = 0;\n  var max54 = 0;\n  var max55 = 0;\n  var max56 = 0;\n  var max57 = 0;\n  var max58 = 0;\n  var max",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){return b - a});\n  return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){\n    return b - a;\n  });\n  return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  var arr = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      arr.push(nums1[i] * nums2[j]);\n    }\n  }\n  arr.sort(function(a, b){\n    return b - a;\n  });\n  return arr.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    let max_products = [];\n    for(let i = 0; i < N; i++){\n        let max_product = -Infinity;\n        for(let j = 0; j < nums1.length; j++){\n            for(let k = 0; k < nums2.length; k++){\n                max_product = Math.max(max_product, nums1[j] * nums2[k]);\n            }\n        }\n        max_products.push(max_product);\n        for(let j = 0; j < nums1.length; j++){\n            for(let k = 0; k < nums2.length; k++){\n                if(nums1[j] * nums2[k] === max_product){\n                    nums2.splice(k, 1);\n                    break;\n                }\n            }\n        }\n    }\n    return max_products;\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){return b - a});\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    var result = [];\n    var max = 0;\n    var max_index = 0;\n    var max_index2 = 0;\n    for(var i = 0; i < N; i++){\n        for(var j = 0; j < nums1.length; j++){\n            for(var k = 0; k < nums2.length; k++){\n                if(nums1[j] * nums2[k] > max){\n                    max = nums1[j] * nums2[k];\n                    max_index = j;\n                    max_index2 = k;\n                }\n            }\n        }\n        result.push(max);\n        nums1.splice(max_index, 1);\n        nums2.splice(max_index2, 1);\n        max = 0;\n    }\n    return result;\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a,b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){\n    return b - a;\n  });\n  return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let max = 0;\n    let product = 0;\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            product = nums1[i] * nums2[j];\n            if(product > max){\n                max = product;\n            }\n        }\n    }\n    return max;\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){return b - a});\n    return products.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){return b - a});\n    return products.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return a - b;\n    });\n    return result[result.length - N];\n}\n",
    "  let products = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort((a,b) => b - a);\n  return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i=0; i<nums1.length; i++){\n        for(var j=0; j<nums2.length; j++){\n            products.push(nums1[i]*nums2[j]);\n        }\n    }\n    products.sort(function(a,b){return a-b});\n    return products[products.length-N];\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  var result = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      result.push(nums1[i] * nums2[j]);\n    }\n  }\n  result.sort(function(a, b){return b - a});\n  return result.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort(function(a, b){return b - a}).slice(0, N);\n}\n",
    "    var result = [];\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            if(nums1[i] * nums2[j] > max){\n                max = nums1[i] * nums2[j];\n                max_index = [i, j];\n            }\n        }\n    }\n    result.push(max_index);\n    nums1.splice(max_index[0], 1);\n    nums2.splice(max_index[1], 1);\n    N--;\n    while(N > 0){\n        max = 0;\n        max_index = 0;\n        for(var i = 0; i < nums1.length; i++){\n            for(var j = 0; j < nums2.length; j++){\n                if(nums1[i] * nums2[j] > max){\n                    max = nums1[i] * nums2[j];\n                    max_index = [i, j];\n                }\n            }\n        }\n        result.push(max_index);\n        nums1.splice(max_index[0], 1);\n        nums2.splice(max_index[1], 1);\n        N--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var max = 0;\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            var product = nums1[i] * nums2[j];\n            if(product > max){\n                result.push(product);\n                max = product;\n            }\n        }\n    }\n    return result.sort(function(a, b){return b - a}).slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let result = [];\n    nums1.sort((a,b)=>b-a);\n    nums2.sort((a,b)=>b-a);\n    for(let i = 0; i < N; i++){\n        result.push(nums1[i] * nums2[i]);\n    }\n    return result;\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){\n    return b - a;\n  });\n  return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    return products.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    var max = -Infinity;\n    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            var product = nums1[i] * nums2[j];\n            if(product > max){\n                max = product;\n                result.push([nums1[i], nums2[j]]);\n            }\n        }\n    }\n    return result.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){return b - a});\n    return result.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){return b - a});\n    return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => a - b);\n    return products[products.length - N];\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return a - b;\n    });\n    return products.slice(products.length - N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){return b - a});\n    return result.slice(0, N);\n}\n",
    "  let products = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort((a, b) => b - a);\n  return products.slice(0, N);\n}\n",
    "  var result = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      result.push(nums1[i] * nums2[j]);\n    }\n  }\n  return result.sort(function(a, b){return b - a}).slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "    var result = [];\n    var max = 0;\n    var max_index = 0;\n    for(var i = 0; i < N; i++){\n        for(var j = 0; j < nums1.length; j++){\n            if(nums1[j] > max){\n                max = nums1[j];\n                max_index = j;\n            }\n        }\n        nums1[max_index] = 0;\n        max = 0;\n        for(var k = 0; k < nums2.length; k++){\n            if(nums2[k] > max){\n                max = nums2[k];\n            }\n        }\n        result.push(max * nums1[max_index]);\n        max = 0;\n    }\n    return result;\n}\n",
    "\tvar res = [];\n\tfor(var i = 0; i < nums1.length; i++){\n\t\tfor(var j = 0; j < nums2.length; j++){\n\t\t\tres.push(nums1[i] * nums2[j]);\n\t\t}\n\t}\n\tres.sort(function(a, b){return b - a});\n\treturn res.slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){return b - a});\n  return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){return b - a});\n    return products.slice(0, N);\n}\n",
    "  let result = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      result.push(nums1[i] * nums2[j]);\n    }\n  }\n  return result.sort((a,b) => b - a).slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a,b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    var max_product = 0;\n    var max_i = 0;\n    var max_j = 0;\n    for (var i = 0; i < nums1.length; i++){\n        for (var j = 0; j < nums2.length; j++){\n            var product = nums1[i] * nums2[j];\n            if (product > max_product){\n                max_product = product;\n                max_i = i;\n                max_j = j;\n            }\n        }\n    }\n    return [max_i, max_j];\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "  var products = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort(function(a, b){\n    return b - a;\n  });\n  return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "  let result = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      result.push(nums1[i] * nums2[j]);\n    }\n  }\n  return result.sort((a,b) => b - a).slice(0, N);\n}\n",
    "  var result = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      result.push(nums1[i] * nums2[j]);\n    }\n  }\n  return result.sort(function(a, b){return b - a}).slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let max_products = [];\n    for(let i = 0; i < N; i++){\n        let max_product = -Infinity;\n        for(let j = 0; j < nums1.length; j++){\n            for(let k = 0; k < nums2.length; k++){\n                if(nums1[j] * nums2[k] > max_product){\n                    max_product = nums1[j] * nums2[k];\n                }\n            }\n        }\n        max_products.push(max_product);\n        for(let j = 0; j < nums1.length; j++){\n            for(let k = 0; k < nums2.length; k++){\n                if(nums1[j] * nums2[k] === max_product){\n                    nums1[j] = -Infinity;\n                    nums2[k] = -Infinity;\n                }\n            }\n        }\n    }\n    return max_products;\n}\n",
    "    var sorted1 = nums1.sort(function(a,b){return b-a});\n    var sorted2 = nums2.sort(function(a,b){return b-a});\n    var result = [];\n    for(var i = 0; i < N; i++){\n        result.push(sorted1[i] * sorted2[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "  var largest = [];\n  for(var i = 0; i < N; i++){\n    var max = 0;\n    for(var j = 0; j < nums1.length; j++){\n      for(var k = 0; k < nums2.length; k++){\n        if(nums1[j] * nums2[k] > max){\n          max = nums1[j] * nums2[k];\n        }\n      }\n    }\n    largest.push(max);\n    nums1.splice(nums1.indexOf(max / Math.max(...nums2)), 1);\n    nums2.splice(nums2.indexOf(max / Math.max(...nums1)), 1);\n  }\n  return largest;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){return b - a});\n    return result.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < N; i++){\n        var max = -Infinity;\n        var max_index = -1;\n        for(var j = 0; j < nums1.length; j++){\n            if(nums1[j] > max){\n                max = nums1[j];\n                max_index = j;\n            }\n        }\n        nums1[max_index] = -Infinity;\n        max = -Infinity;\n        for(var j = 0; j < nums2.length; j++){\n            if(nums2[j] > max){\n                max = nums2[j];\n            }\n        }\n        result.push(max * max_index);\n    }\n    return result;\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){return b - a});\n    return products.slice(0, N);\n}\n",
    "  let products = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort((a, b) => b - a);\n  return products.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < N; i++){\n        var max1 = Math.max.apply(null, nums1);\n        var max2 = Math.max.apply(null, nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){return b - a});\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push(nums1[i] * nums2[j]);\n        }\n    }\n    arr.sort(function(a, b){\n        return b - a;\n    });\n    return arr.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){\n        return b - a;\n    });\n    return result.slice(0, N);\n}",
    "  let products = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort((a, b) => b - a);\n  return products.slice(0, N);\n}\n",
    "    //sort the arrays\n    nums1.sort((a,b) => a-b);\n    nums2.sort((a,b) => a-b);\n    //create a new array to store the products\n    let products = [];\n    //loop through the first array\n    for(let i = 0; i < nums1.length; i++){\n        //loop through the second array\n        for(let j = 0; j < nums2.length; j++){\n            //multiply the numbers and push to the products array\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    //sort the products array\n    products.sort((a,b) => a-b);\n    //return the last N numbers\n    return products.slice(products.length - N);\n}\n",
    "    var products = [];\n    for (var i = 0; i < nums1.length; i++) {\n        for (var j = 0; j < nums2.length; j++) {\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b) {\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let max = 0;\n    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            if(nums1[i] * nums2[j] > max){\n                max = nums1[i] * nums2[j];\n                result.push(max);\n            }\n        }\n    }\n    return result.sort((a,b) => b - a)[N-1];\n}",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    result.sort(function(a, b){return b-a});\n    return result.slice(0, N);\n}\n",
    "    let max = [];\n    for(let i = 0; i < N; i++){\n        let max1 = Math.max(...nums1);\n        let max2 = Math.max(...nums2);\n        max.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return max;\n}",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < N; i++){\n        var max1 = Math.max.apply(null, nums1);\n        var max2 = Math.max.apply(null, nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){\n        return b - a;\n    });\n    return products.slice(0, N);\n}\n",
    "    let products = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort((a, b) => b - a);\n    return products.slice(0, N);\n}\n",
    "  var result = [];\n  for(var i = 0; i < nums1.length; i++){\n    for(var j = 0; j < nums2.length; j++){\n      result.push(nums1[i] * nums2[j]);\n    }\n  }\n  return result.sort((a,b) => b - a).slice(0,N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < N; i++){\n        var max1 = Math.max(...nums1);\n        var max2 = Math.max(...nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push(nums1[i] * nums2[j]);\n        }\n    }\n    return result.sort((a, b) => b - a).slice(0, N);\n}\n",
    "    var largest = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            largest.push(nums1[i] * nums2[j]);\n        }\n    }\n    largest.sort(function(a, b){return b - a});\n    return largest.slice(0, N);\n}\n",
    "    var result = [];\n    for(var i = 0; i < N; i++){\n        var max1 = Math.max.apply(null, nums1);\n        var max2 = Math.max.apply(null, nums2);\n        result.push(max1 * max2);\n        nums1.splice(nums1.indexOf(max1), 1);\n        nums2.splice(nums2.indexOf(max2), 1);\n    }\n    return result;\n}\n",
    "  let products = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      products.push(nums1[i] * nums2[j]);\n    }\n  }\n  products.sort((a, b) => b - a);\n  return products.slice(0, N);\n}\n",
    "    var products = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            products.push(nums1[i] * nums2[j]);\n        }\n    }\n    products.sort(function(a, b){return b-a});\n    return products.slice(0, N);\n}\n"
  ]
}
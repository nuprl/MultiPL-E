{
  "name": "mbpp_102_snake_to_camel",
  "language": "js",
  "prompt": "//Write a function to convert a snake case string to camel case string.\nfunction snake_to_camel(word){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_102_snake_to_camel.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = snake_to_camel;\n  assert.deepEqual(candidate(\"python_program\"),\"PythonProgram\");\n  assert.deepEqual(candidate(\"python_language\"),\"PythonLanguage\");\n  assert.deepEqual(candidate(\"programming_language\"),\"ProgrammingLanguage\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var new_word = '';\n    for(var i = 0; i < word.length; i++){\n        if(word[i] == '_'){\n            new_word += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            new_word += word[i];\n        }\n    }\n    return new_word;\n}\n",
    "    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n",
    "    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}\n",
    "  let newWord = word.split(\"_\");\n  for(let i = 1; i < newWord.length; i++){\n    newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n  }\n  return newWord.join(\"\");\n}\n",
    "    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}",
    "    let newWord = word.split(\"_\");\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].substring(1);\n    }\n    return newWord.join(\"\");\n}\n",
    "    return word.replace(/(_\\w)/g, function(m){return m[1].toUpperCase();});\n}",
    "    var word_arr = word.split(\"_\");\n    var new_word = \"\";\n    for(var i = 0; i < word_arr.length; i++){\n        if(i == 0){\n            new_word += word_arr[i];\n        }\n        else{\n            new_word += word_arr[i].charAt(0).toUpperCase() + word_arr[i].slice(1);\n        }\n    }\n    return new_word;\n}",
    "    let newWord = word.split(\"_\");\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}",
    "    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}",
    "    var words = word.split(\"_\");\n    for(var i = 1; i < words.length; i++){\n        words[i] = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return words.join(\"\");\n}",
    "  var word = word.split(\"_\");\n  var newWord = word[0];\n  for(var i = 1; i < word.length; i++){\n    newWord += word[i].charAt(0).toUpperCase() + word[i].slice(1);\n  }\n  return newWord;\n}\n",
    "    var newWord = word.split(\"_\");\n    for(var i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join(\"\");\n}\n",
    "    var newWord = \"\";\n    for(var i = 0; i < word.length; i++){\n        if(word[i] == \"_\"){\n            newWord += word[i+1].toUpperCase();\n            i++;\n        }\n        else{\n            newWord += word[i];\n        }\n    }\n    return newWord;\n}\n",
    "    return word.replace(/_\\w/g, function(match){\n        return match[1].toUpperCase();\n    });\n}\n",
    "    let newWord = word.split('_');\n    for(let i = 1; i < newWord.length; i++){\n        newWord[i] = newWord[i].charAt(0).toUpperCase() + newWord[i].slice(1);\n    }\n    return newWord.join('');\n}",
    "    var words = word.split(\"_\");\n    var newWord = words[0];\n    for(var i = 1; i < words.length; i++){\n        newWord += words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    }\n    return newWord;\n}",
    "    var result = word.replace(/_[a-z]/g, function(match){\n        return match[1].toUpperCase();\n    });\n    return result;\n}\n",
    "    return word.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\n}\n",
    "    var result = word.split(\"_\");\n    for(var i = 1; i < result.length; i++){\n        result[i] = result[i].charAt(0).toUpperCase() + result[i].slice(1);\n    }\n    return result.join(\"\");\n}\n"
  ]
}
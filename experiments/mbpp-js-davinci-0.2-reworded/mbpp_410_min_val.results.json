{
  "name": "mbpp_410_min_val",
  "language": "js",
  "prompt": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_410_min_val.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp84wmo_dj.js:16:10)\n    at Object.<anonymous> (/tmp/tmp84wmo_dj.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1; i<listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmppeduiug6.js:17:10)\n    at Object.<anonymous> (/tmp/tmppeduiug6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i = 1; i < listval.length; i++){\n\t\tif(listval[i] < min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp13pj1fw3.js:17:10)\n    at Object.<anonymous> (/tmp/tmp13pj1fw3.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpdvd9k9d0.js:16:10)\n    at Object.<anonymous> (/tmp/tmpdvd9k9d0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1; i<listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmppeduiug6.js:17:10)\n    at Object.<anonymous> (/tmp/tmppeduiug6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(min>listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nvar listval = [1,2,3,4,5,6,7,8,9,10];\nvar min = min_val(listval);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpk8_hqmln.js:18:10)\n    at Object.<anonymous> (/tmp/tmpk8_hqmln.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i=0;i<listval.length;i++){\n\t\tif(min>listval[i]){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpiolk4cjr.js:17:10)\n    at Object.<anonymous> (/tmp/tmpiolk4cjr.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpny06cd2a.js:16:10)\n    at Object.<anonymous> (/tmp/tmpny06cd2a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpny06cd2a.js:16:10)\n    at Object.<anonymous> (/tmp/tmpny06cd2a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n  var min = listval[0];\n  for(var i = 0; i < listval.length; i++){\n    if(typeof listval[i] === 'number'){\n      if(listval[i] < min){\n        min = listval[i];\n      }\n    }\n  }\n  return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpiwngxl24.js:19:10)\n    at Object.<anonymous> (/tmp/tmpiwngxl24.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1; i<listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmppeduiug6.js:17:10)\n    at Object.<anonymous> (/tmp/tmppeduiug6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1; i<listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmppeduiug6.js:17:10)\n    at Object.<anonymous> (/tmp/tmppeduiug6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min=listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(min>listval[i]){\n            min=listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpkmu3mjtk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpkmu3mjtk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpny06cd2a.js:16:10)\n    at Object.<anonymous> (/tmp/tmpny06cd2a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpci9r1dkm.js:16:10)\n    at Object.<anonymous> (/tmp/tmpci9r1dkm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i = 1; i < listval.length; i++){\n\t\tif(listval[i] < min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp13pj1fw3.js:17:10)\n    at Object.<anonymous> (/tmp/tmp13pj1fw3.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpv_sckgtz.js:17:10)\n    at Object.<anonymous> (/tmp/tmpv_sckgtz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(typeof listval[i] == \"number\"){\n            if(min > listval[i]){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp4ct7ajem.js:18:10)\n    at Object.<anonymous> (/tmp/tmp4ct7ajem.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i = 1; i < listval.length; i++){\n\t\tif(listval[i] < min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp13pj1fw3.js:17:10)\n    at Object.<anonymous> (/tmp/tmp13pj1fw3.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1; i<listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpef0tgw5u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpef0tgw5u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar minval = listval[0];\n\tfor(var i=1;i<listval.length;i++){\n\t\tif(listval[i]<minval){\n\t\t\tminval = listval[i];\n\t\t}\n\t}\n\treturn minval;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpr2notxik.js:17:10)\n    at Object.<anonymous> (/tmp/tmpr2notxik.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min=listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(min>listval[i]){\n            min=listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpkmu3mjtk.js:16:10)\n    at Object.<anonymous> (/tmp/tmpkmu3mjtk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpci9r1dkm.js:16:10)\n    at Object.<anonymous> (/tmp/tmpci9r1dkm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n  var minval = listval[0];\n  for(var i=0; i<listval.length; i++){\n    if(listval[i] < minval){\n      minval = listval[i];\n    }\n  }\n  return minval;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp3bs6y0qu.js:17:10)\n    at Object.<anonymous> (/tmp/tmp3bs6y0qu.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min=listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(listval[i]<min){\n            min=listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpldcrl8y2.js:16:10)\n    at Object.<anonymous> (/tmp/tmpldcrl8y2.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i = 1; i < listval.length; i++){\n\t\tif(listval[i] < min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp13pj1fw3.js:17:10)\n    at Object.<anonymous> (/tmp/tmp13pj1fw3.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i = 0; i < listval.length; i++){\n\t\tif(listval[i] < min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpikaudrn5.js:17:10)\n    at Object.<anonymous> (/tmp/tmpikaudrn5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for (var i = 0; i < listval.length; i++){\n        if (listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmppyk4al2u.js:17:10)\n    at Object.<anonymous> (/tmp/tmppyk4al2u.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp_us1t9pr.js:18:10)\n    at Object.<anonymous> (/tmp/tmp_us1t9pr.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i=0;i<listval.length;i++){\n\t\tif(listval[i]<min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp1nkp8qxd.js:17:10)\n    at Object.<anonymous> (/tmp/tmp1nkp8qxd.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i = 0; i < listval.length; i++){\n\t\tif(listval[i] < min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmprpwu947c.js:16:10)\n    at Object.<anonymous> (/tmp/tmprpwu947c.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1; i<listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpef0tgw5u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpef0tgw5u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpfkyrj9hp.js:19:10)\n    at Object.<anonymous> (/tmp/tmpfkyrj9hp.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(min>listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp2zrl7e9l.js:16:10)\n    at Object.<anonymous> (/tmp/tmp2zrl7e9l.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpbkd6wzyf.js:16:10)\n    at Object.<anonymous> (/tmp/tmpbkd6wzyf.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i=0; i<listval.length; i++){\n\t\tif(min > listval[i]){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpc1a6uly9.js:17:10)\n    at Object.<anonymous> (/tmp/tmpc1a6uly9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(min>listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp2zrl7e9l.js:16:10)\n    at Object.<anonymous> (/tmp/tmp2zrl7e9l.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp_us1t9pr.js:18:10)\n    at Object.<anonymous> (/tmp/tmp_us1t9pr.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmppmi7wwex.js:16:10)\n    at Object.<anonymous> (/tmp/tmppmi7wwex.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(typeof listval[i] === \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpcq8ynwwx.js:18:10)\n    at Object.<anonymous> (/tmp/tmpcq8ynwwx.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i=0; i<listval.length; i++){\n\t\tif(min > listval[i]){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp4797x72x.js:16:10)\n    at Object.<anonymous> (/tmp/tmp4797x72x.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpny06cd2a.js:16:10)\n    at Object.<anonymous> (/tmp/tmpny06cd2a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var minval = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(typeof listval[i] === \"number\" && listval[i] < minval){\n            minval = listval[i];\n        }\n    }\n    return minval;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp2o5ee_lw.js:16:10)\n    at Object.<anonymous> (/tmp/tmp2o5ee_lw.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(typeof listval[i] == 'number'){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpnkeoh3p7.js:18:10)\n    at Object.<anonymous> (/tmp/tmpnkeoh3p7.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(typeof listval[i] == 'number'){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpy2_xgt6_.js:19:10)\n    at Object.<anonymous> (/tmp/tmpy2_xgt6_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmphb7naiii.js:16:10)\n    at Object.<anonymous> (/tmp/tmphb7naiii.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1; i<listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpef0tgw5u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpef0tgw5u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor (var i = 1; i < listval.length; i++) {\n\t\tif (listval[i] < min) {\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp70gosob5.js:17:10)\n    at Object.<anonymous> (/tmp/tmp70gosob5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpq3qgrlid.js:17:10)\n    at Object.<anonymous> (/tmp/tmpq3qgrlid.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmphb7naiii.js:16:10)\n    at Object.<anonymous> (/tmp/tmphb7naiii.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min=listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(min>listval[i]){\n            min=listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpno95usuc.js:16:10)\n    at Object.<anonymous> (/tmp/tmpno95usuc.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i = 0; i < listval.length; i++){\n\t\tif(min > listval[i]){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp5_6p8etm.js:16:10)\n    at Object.<anonymous> (/tmp/tmp5_6p8etm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i = 0; i < listval.length; i++){\n\t\tif(min > listval[i]){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp5_6p8etm.js:16:10)\n    at Object.<anonymous> (/tmp/tmp5_6p8etm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i = 1; i < listval.length; i++){\n\t\tif(listval[i] < min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp13pj1fw3.js:17:10)\n    at Object.<anonymous> (/tmp/tmp13pj1fw3.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmphb7naiii.js:16:10)\n    at Object.<anonymous> (/tmp/tmphb7naiii.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmphb7naiii.js:16:10)\n    at Object.<anonymous> (/tmp/tmphb7naiii.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpwikmdo7o.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwikmdo7o.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpv_sckgtz.js:17:10)\n    at Object.<anonymous> (/tmp/tmpv_sckgtz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpny06cd2a.js:16:10)\n    at Object.<anonymous> (/tmp/tmpny06cd2a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    console.log(min);\n}\nmin_val([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "1\nPython\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp19h3odhx.js:18:10)\n    at Object.<anonymous> (/tmp/tmp19h3odhx.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpny06cd2a.js:16:10)\n    at Object.<anonymous> (/tmp/tmpny06cd2a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(min>listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp2zrl7e9l.js:16:10)\n    at Object.<anonymous> (/tmp/tmp2zrl7e9l.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpwikmdo7o.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwikmdo7o.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i=0;i<listval.length;i++){\n\t\tif(listval[i]<min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp1nkp8qxd.js:17:10)\n    at Object.<anonymous> (/tmp/tmp1nkp8qxd.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min=listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(typeof listval[i]==\"number\"){\n            if(listval[i]<min){\n                min=listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpjgouj868.js:18:10)\n    at Object.<anonymous> (/tmp/tmpjgouj868.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpdehd5992.js:16:10)\n    at Object.<anonymous> (/tmp/tmpdehd5992.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpq3qgrlid.js:17:10)\n    at Object.<anonymous> (/tmp/tmpq3qgrlid.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpdehd5992.js:16:10)\n    at Object.<anonymous> (/tmp/tmpdehd5992.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min=listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min=listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpoe0me2cs.js:16:10)\n    at Object.<anonymous> (/tmp/tmpoe0me2cs.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(min>listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp2zrl7e9l.js:16:10)\n    at Object.<anonymous> (/tmp/tmp2zrl7e9l.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpfkyrj9hp.js:19:10)\n    at Object.<anonymous> (/tmp/tmpfkyrj9hp.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i = 1; i < listval.length; i++){\n\t\tif(listval[i] < min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp13pj1fw3.js:17:10)\n    at Object.<anonymous> (/tmp/tmp13pj1fw3.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpewqwo7g7.js:17:10)\n    at Object.<anonymous> (/tmp/tmpewqwo7g7.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min=listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(listval[i]<min){\n            min=listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpldcrl8y2.js:16:10)\n    at Object.<anonymous> (/tmp/tmpldcrl8y2.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp_us1t9pr.js:18:10)\n    at Object.<anonymous> (/tmp/tmp_us1t9pr.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpwikmdo7o.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwikmdo7o.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1; i<listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpsiw8iq30.js:16:10)\n    at Object.<anonymous> (/tmp/tmpsiw8iq30.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpv_sckgtz.js:17:10)\n    at Object.<anonymous> (/tmp/tmpv_sckgtz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp84wmo_dj.js:16:10)\n    at Object.<anonymous> (/tmp/tmp84wmo_dj.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpwikmdo7o.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwikmdo7o.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1; i<listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpef0tgw5u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpef0tgw5u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpny06cd2a.js:16:10)\n    at Object.<anonymous> (/tmp/tmpny06cd2a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var minval = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(minval>listval[i]){\n            minval = listval[i];\n        }\n    }\n    return minval;\n}\n\nvar listval = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpfykbb4kg.js:18:10)\n    at Object.<anonymous> (/tmp/tmpfykbb4kg.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(min>listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nvar listval = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp5zj33w36.js:17:10)\n    at Object.<anonymous> (/tmp/tmp5zj33w36.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpv_sckgtz.js:17:10)\n    at Object.<anonymous> (/tmp/tmpv_sckgtz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for (var i = 1; i < listval.length; i++) {\n        if (listval[i] < min) {\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw4lcf518.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw4lcf518.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nvar listval = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpdgrfi0e7.js:18:10)\n    at Object.<anonymous> (/tmp/tmpdgrfi0e7.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpci9r1dkm.js:16:10)\n    at Object.<anonymous> (/tmp/tmpci9r1dkm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmppmi7wwex.js:16:10)\n    at Object.<anonymous> (/tmp/tmppmi7wwex.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i = 0; i < listval.length; i++){\n\t\tif(listval[i] < min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpikaudrn5.js:17:10)\n    at Object.<anonymous> (/tmp/tmpikaudrn5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp456poq4e.js:16:10)\n    at Object.<anonymous> (/tmp/tmp456poq4e.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp202bnle2.js:17:10)\n    at Object.<anonymous> (/tmp/tmp202bnle2.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpc1n8aqh4.js:18:10)\n    at Object.<anonymous> (/tmp/tmpc1n8aqh4.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min=listval[0];\n\tfor(var i=0;i<listval.length;i++){\n\t\tif(listval[i]<min){\n\t\t\tmin=listval[i];\n\t\t}\n\t}\n\treturn min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp3p_qp22i.js:16:10)\n    at Object.<anonymous> (/tmp/tmp3p_qp22i.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(min>listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpwghmhnvt.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwghmhnvt.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpci9r1dkm.js:16:10)\n    at Object.<anonymous> (/tmp/tmpci9r1dkm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1; i<listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nvar list = [1,2,3,4,5,6,7,8,9,10];\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nvar list2 = [1,2,3,4,5,6,7,8,9,10];\nvar list3 = [1,2,3,4,5,6,7,8,9,10];\nvar list4 = [1,2,3,4,5,6,7,8,9,10];\nvar list5 = [1,2,3,4,5,6,7,8,9,10];\nvar list6 = [1,2,3,4,5,6,7,8,9,10];\nvar list7 = [1,2,3,4,5,6,7,8,9,10];\nvar list8 = [1,2,3,4,5,6,7,8,9,10];\nvar list9 = [1,2,3,4,5,6,7,8,9,10];\nvar list10 = [1,2,3,4,5,6,7,8,9,10];\nvar list11 = [1,2,3,4,5,6,7,8,9,10];\nvar list12 = [1,2,3,4,5,6,7,8,9,10];\nvar list13 = [1,2,3,4,5,6,7,8,9,10];\nvar list14 = [1,2,3,4,5,6,7,8,9,10];\nvar list15 = [1,2,3,4,5,6,7,8,9,10];\nvar list16 = [1,2,3,4,5,6,7,8,9,10];\nvar list17 = [1,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "/tmp/tmpn42gwrgp.js:29\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmphb7naiii.js:16:10)\n    at Object.<anonymous> (/tmp/tmphb7naiii.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nvar listval = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpvltlv8p5.js:17:10)\n    at Object.<anonymous> (/tmp/tmpvltlv8p5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpv_sckgtz.js:17:10)\n    at Object.<anonymous> (/tmp/tmpv_sckgtz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for (var i = 0; i < listval.length; i++){\n        if (listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp62ceohsh.js:16:10)\n    at Object.<anonymous> (/tmp/tmp62ceohsh.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1; i<listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpef0tgw5u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpef0tgw5u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var minval = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<minval){\n            minval = listval[i];\n        }\n    }\n    return minval;\n}\nvar listval = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp1jma9ejb.js:17:10)\n    at Object.<anonymous> (/tmp/tmp1jma9ejb.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1; i<listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmppeduiug6.js:17:10)\n    at Object.<anonymous> (/tmp/tmppeduiug6.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmppmi7wwex.js:16:10)\n    at Object.<anonymous> (/tmp/tmppmi7wwex.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpny06cd2a.js:16:10)\n    at Object.<anonymous> (/tmp/tmpny06cd2a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpny06cd2a.js:16:10)\n    at Object.<anonymous> (/tmp/tmpny06cd2a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1; i<listval.length; i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp9e6f9xvb.js:16:10)\n    at Object.<anonymous> (/tmp/tmp9e6f9xvb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmphb7naiii.js:16:10)\n    at Object.<anonymous> (/tmp/tmphb7naiii.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpbkd6wzyf.js:16:10)\n    at Object.<anonymous> (/tmp/tmpbkd6wzyf.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpwikmdo7o.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwikmdo7o.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min=listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min=listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpoe0me2cs.js:16:10)\n    at Object.<anonymous> (/tmp/tmpoe0me2cs.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i=1; i<listval.length; i++){\n\t\tif(min > listval[i]){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpcp1a5c7f.js:17:10)\n    at Object.<anonymous> (/tmp/tmpcp1a5c7f.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min=listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(listval[i]<min){\n            min=listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpldcrl8y2.js:16:10)\n    at Object.<anonymous> (/tmp/tmpldcrl8y2.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min=listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min=listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpoe0me2cs.js:16:10)\n    at Object.<anonymous> (/tmp/tmpoe0me2cs.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i = 1; i < listval.length; i++){\n\t\tif(listval[i] < min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp13pj1fw3.js:17:10)\n    at Object.<anonymous> (/tmp/tmp13pj1fw3.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmppmi7wwex.js:16:10)\n    at Object.<anonymous> (/tmp/tmppmi7wwex.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min=listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(min>listval[i]){\n            min=listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpno95usuc.js:16:10)\n    at Object.<anonymous> (/tmp/tmpno95usuc.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\n\nvar listval = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpvn4dwsa5.js:20:10)\n    at Object.<anonymous> (/tmp/tmpvn4dwsa5.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(typeof listval[i] === \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpdqlcsyr5.js:19:10)\n    at Object.<anonymous> (/tmp/tmpdqlcsyr5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpzif2hloz.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzif2hloz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpnhgn5wvx.js:18:10)\n    at Object.<anonymous> (/tmp/tmpnhgn5wvx.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(min>listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpwghmhnvt.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwghmhnvt.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(typeof listval[i]==\"number\"){\n            if(listval[i]<min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmphctqcm34.js:18:10)\n    at Object.<anonymous> (/tmp/tmphctqcm34.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmphb7naiii.js:16:10)\n    at Object.<anonymous> (/tmp/tmphb7naiii.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpwikmdo7o.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwikmdo7o.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpfkyrj9hp.js:19:10)\n    at Object.<anonymous> (/tmp/tmpfkyrj9hp.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpny06cd2a.js:16:10)\n    at Object.<anonymous> (/tmp/tmpny06cd2a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpv_sckgtz.js:17:10)\n    at Object.<anonymous> (/tmp/tmpv_sckgtz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(min>listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpwghmhnvt.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwghmhnvt.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpdehd5992.js:16:10)\n    at Object.<anonymous> (/tmp/tmpdehd5992.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(min>listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpwghmhnvt.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwghmhnvt.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nvar listval = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpxf21uvva.js:18:10)\n    at Object.<anonymous> (/tmp/tmpxf21uvva.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i]<min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmps9p6lvth.js:18:10)\n    at Object.<anonymous> (/tmp/tmps9p6lvth.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min=listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min=listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpoe0me2cs.js:16:10)\n    at Object.<anonymous> (/tmp/tmpoe0me2cs.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(typeof listval[i] == 'number'){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpnkeoh3p7.js:18:10)\n    at Object.<anonymous> (/tmp/tmpnkeoh3p7.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpdvd9k9d0.js:16:10)\n    at Object.<anonymous> (/tmp/tmpdvd9k9d0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i = 0; i < listval.length; i++){\n\t\tif(listval[i] < min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpikaudrn5.js:17:10)\n    at Object.<anonymous> (/tmp/tmpikaudrn5.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmphb7naiii.js:16:10)\n    at Object.<anonymous> (/tmp/tmphb7naiii.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpny06cd2a.js:16:10)\n    at Object.<anonymous> (/tmp/tmpny06cd2a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 1; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpv_sckgtz.js:17:10)\n    at Object.<anonymous> (/tmp/tmpv_sckgtz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmphb7naiii.js:16:10)\n    at Object.<anonymous> (/tmp/tmphb7naiii.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmphb7naiii.js:16:10)\n    at Object.<anonymous> (/tmp/tmphb7naiii.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n\tvar min = listval[0];\n\tfor(var i=0;i<listval.length;i++){\n\t\tif(listval[i]<min){\n\t\t\tmin = listval[i];\n\t\t}\n\t}\n\treturn min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp1nkp8qxd.js:17:10)\n    at Object.<anonymous> (/tmp/tmp1nkp8qxd.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp_us1t9pr.js:18:10)\n    at Object.<anonymous> (/tmp/tmp_us1t9pr.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp456poq4e.js:16:10)\n    at Object.<anonymous> (/tmp/tmp456poq4e.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpw0m4ag4u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw0m4ag4u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpci9r1dkm.js:16:10)\n    at Object.<anonymous> (/tmp/tmpci9r1dkm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(min > listval[i]){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpwikmdo7o.js:16:10)\n    at Object.<anonymous> (/tmp/tmpwikmdo7o.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var minval = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i] < minval){\n                minval = listval[i];\n            }\n        }\n    }\n    return minval;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpsbodx3l5.js:19:10)\n    at Object.<anonymous> (/tmp/tmpsbodx3l5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=1;i<listval.length;i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpci9r1dkm.js:16:10)\n    at Object.<anonymous> (/tmp/tmpci9r1dkm.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i = 0; i < listval.length; i++){\n        if(listval[i] < min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1665510065,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp6n_9trnk.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6n_9trnk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(typeof listval[i] == \"number\"){\n            if(listval[i] < min){\n                min = listval[i];\n            }\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpnhgn5wvx.js:18:10)\n    at Object.<anonymous> (/tmp/tmpnhgn5wvx.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the minimum value in a given heterogeneous array.\nfunction min_val(listval){\n    var min = listval[0];\n    for(var i=0; i<listval.length; i++){\n        if(listval[i]<min){\n            min = listval[i];\n        }\n    }\n    return min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = min_val;\n  assert.deepEqual(candidate([\"Python\", 3, 2, 4, 5, \"version\"]),2);\n  assert.deepEqual(candidate([\"Python\", 15, 20, 25]),15);\n  assert.deepEqual(candidate([\"Python\", 30, 20, 40, 50, \"version\"]),20);\n}\n\ntest();",
      "timestamp": 1666122395,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Python'\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmp456poq4e.js:16:10)\n    at Object.<anonymous> (/tmp/tmp456poq4e.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Python',\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
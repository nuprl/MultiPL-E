{
  "name": "mbpp_413_extract_nth_element",
  "language": "js",
  "prompt": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_413_extract_nth_element.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\n",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}",
    "    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}",
    "    var result = [];\n    for(var i=0; i<list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}",
    "    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}",
    "    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}",
    "\tvar list2 = [];\n\tfor(var i=0; i<list1.length; i++){\n\t\tlist2.push(list1[i][n]);\n\t}\n\treturn list2;\n}\n",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}",
    "    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}",
    "    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}",
    "    var result = [];\n    for(var i=0; i<list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}"
  ]
}
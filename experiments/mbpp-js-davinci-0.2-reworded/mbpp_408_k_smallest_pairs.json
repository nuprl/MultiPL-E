{
  "name": "mbpp_408_k_smallest_pairs",
  "language": "js",
  "prompt": "//Write a function to find k number of smallest pairs which consist of one element from the first array and one element from the second array.\nfunction k_smallest_pairs(nums1, nums2, k){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_408_k_smallest_pairs.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = k_smallest_pairs;\n  assert.deepEqual(candidate([1, 3, 7], [2, 4, 6], 2),[[1, 2], [1, 4]]);\n  assert.deepEqual(candidate([1, 3, 7], [2, 4, 6], 1),[[1, 2]]);\n  assert.deepEqual(candidate([1, 3, 7], [2, 4, 6], 7),[[1, 2], [1, 4], [3, 2], [1, 6], [3, 4], [3, 6], [7, 2]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    let res = [];\n    let pq = new PriorityQueue();\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            pq.enqueue([nums1[i], nums2[j]], nums1[i] + nums2[j]);\n        }\n    }\n    for(let i = 0; i < k; i++){\n        res.push(pq.dequeue());\n    }\n    return res;\n}\n",
    "    let arr = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return arr.slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    let pairs = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    pairs.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return pairs.slice(0, k);\n}\n",
    "    let arr = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a,b) => a[0] + a[1] - b[0] - b[1]);\n    let result = [];\n    for(let i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    var i = 0;\n    var j = 0;\n    while(i < len1 && j < len2 && k > 0){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n        k--;\n    }\n    while(i < len1 && k > 0){\n        result.push([nums1[i], nums2[j-1]]);\n        i++;\n        k--;\n    }\n    while(j < len2 && k > 0){\n        result.push([nums1[i-1], nums2[j]]);\n        j++;\n        k--;\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar len1 = nums1.length;\n\tvar len2 = nums2.length;\n\tvar i = 0;\n\tvar j = 0;\n\twhile(i < len1 && j < len2){\n\t\tif(nums1[i] + nums2[j] < nums1[i+1] + nums2[j]){\n\t\t\tresult.push([nums1[i], nums2[j]]);\n\t\t\ti++;\n\t\t}else{\n\t\t\tresult.push([nums1[i], nums2[j]]);\n\t\t\tj++;\n\t\t}\n\t}\n\treturn result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_SAFE_INTEGER;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    var len = len1 * len2;\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(count < k && i < len1 && j < len2){\n        var sum = nums1[i] + nums2[j];\n        var index = 0;\n        for(var m = 0; m < result.length; m++){\n            if(sum < result[m][0] + result[m][1]){\n                index = m;\n                break;\n            }\n        }\n        result.splice(index, 0, [nums1[i], nums2[j]]);\n        if(j < len2 - 1){\n            j++;\n        }else{\n            i++;\n            j = 0;\n        }\n        count++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i=0; i<nums1.length; i++){\n        for(var j=0; j<nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    var i = 0;\n    var j = 0;\n    while(i < len1 && j < len2){\n        var sum = nums1[i] + nums2[j];\n        if(result.length < k){\n            result.push([nums1[i], nums2[j]]);\n        }else{\n            var max = result[0][0] + result[0][1];\n            var index = 0;\n            for(var m = 1; m < result.length; m++){\n                if(result[m][0] + result[m][1] > max){\n                    max = result[m][0] + result[m][1];\n                    index = m;\n                }\n            }\n            if(sum < max){\n                result[index] = [nums1[i], nums2[j]];\n            }else{\n                break;\n            }\n        }\n        if(i < len1 - 1 && j < len2 - 1){\n            if(nums1[i + 1] + nums2[j] < nums1[i] + nums2[j + 1]){\n                i++;\n            }else{\n                j++;\n            }\n        }else if(i < len1 - 1){\n            i++;\n        }else{\n            j++;\n        }\n    }\n    return result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    return arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    }).slice(0, k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    let i = 0;\n    let j = 0;\n    while(i < len1 && j < len2 && result.length < k){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n    }\n    while(i < len1 && result.length < k){\n        result.push([nums1[i], nums2[j-1]]);\n        i++;\n    }\n    while(j < len2 && result.length < k){\n        result.push([nums1[i-1], nums2[j]]);\n        j++;\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_SAFE_INTEGER;\n        let index_min = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] < len2 && nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                index_min = i;\n            }\n        }\n        if(index_min === -1){\n            break;\n        }\n        result.push([nums1[index_min], nums2[index[index_min]]]);\n        index[index_min]++;\n        k--;\n    }\n    return result;\n}\n",
    "    let arr = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return arr.slice(0, k);\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length && k > 0){\n        var sum = nums1[i] + nums2[j];\n        if(result.length == 0){\n            result.push([nums1[i], nums2[j]]);\n        }\n        else{\n            var flag = false;\n            for(var m = 0; m < result.length; m++){\n                if(sum < result[m][0] + result[m][1]){\n                    result.splice(m, 0, [nums1[i], nums2[j]]);\n                    flag = true;\n                    break;\n                }\n            }\n            if(!flag){\n                result.push([nums1[i], nums2[j]]);\n            }\n        }\n        if(i == nums1.length - 1){\n            j++;\n        }\n        else if(j == nums2.length - 1){\n            i++;\n        }\n        else{\n            if(nums1[i + 1] + nums2[j] < nums1[i] + nums2[j + 1]){\n                i++;\n            }\n            else{\n                j++;\n            }\n        }\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    nums1.forEach(function(n1){\n        nums2.forEach(function(n2){\n            result.push([n1, n2]);\n        });\n    });\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var res = [];\n    for(var i = 0; i < k; i++){\n        res.push(arr[i]);\n    }\n    return res;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    var i = 0;\n    var j = 0;\n    while(i < len1 && j < len2 && result.length < k){\n        var sum = nums1[i] + nums2[j];\n        if(result.length === 0){\n            result.push([nums1[i], nums2[j]]);\n        }else{\n            for(var m = 0; m < result.length; m++){\n                if(sum < result[m][0] + result[m][1]){\n                    result.splice(m, 0, [nums1[i], nums2[j]]);\n                    break;\n                }\n            }\n            if(m === result.length){\n                result.push([nums1[i], nums2[j]]);\n            }\n        }\n        if(i === len1 - 1){\n            j++;\n        }else if(j === len2 - 1){\n            i++;\n        }else if(nums1[i] < nums2[j]){\n            i++;\n        }else{\n            j++;\n        }\n    }\n    return result;\n}\n",
    "    let pairs = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    pairs.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return pairs.slice(0, k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 == 0 || len2 == 0 || k == 0){\n        return result;\n    }\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_VALUE;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index == -1){\n            break;\n        }\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    var index = new Array(len1);\n    for(var i = 0; i < len1; i++){\n        index[i] = 0;\n    }\n    for(var i = 0; i < k; i++){\n        var min_val = Number.MAX_VALUE;\n        var min_index = -1;\n        for(var j = 0; j < len1; j++){\n            if(index[j] < len2 && nums1[j] + nums2[index[j]] < min_val){\n                min_val = nums1[j] + nums2[index[j]];\n                min_index = j;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        var temp = [];\n        temp.push(nums1[min_index]);\n        temp.push(nums2[index[min_index]]);\n        result.push(temp);\n        index[min_index]++;\n    }\n    return result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < len1 && j < len2 && count < k){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n        count++;\n    }\n    while(i < len1 && count < k){\n        result.push([nums1[i], nums2[j-1]]);\n        i++;\n        count++;\n    }\n    while(j < len2 && count < k){\n        result.push([nums1[i-1], nums2[j]]);\n        j++;\n        count++;\n    }\n    return result;\n}\n",
    "  let result = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      result.push([nums1[i], nums2[j]]);\n    }\n  }\n  result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n  return result.slice(0, k);\n}\n",
    "  var result = [];\n  var len1 = nums1.length;\n  var len2 = nums2.length;\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  while(i < len1 && j < len2 && count < k){\n    if(nums1[i] < nums2[j]){\n      result.push([nums1[i], nums2[j]]);\n      i++;\n    }else{\n      result.push([nums1[i], nums2[j]]);\n      j++;\n    }\n    count++;\n  }\n  return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0) return result;\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Infinity;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    if(len1 == 0 || len2 == 0 || k == 0) return result;\n    var index = new Array(len1).fill(0);\n    while(k > 0){\n        var min_val = Number.MAX_VALUE;\n        var min_index = -1;\n        for(var i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index == -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length && k > 0){\n        var sum = nums1[i] + nums2[j];\n        if(result.length == 0){\n            result.push([nums1[i], nums2[j]]);\n            k--;\n        }\n        else{\n            var flag = false;\n            for(var m = 0; m < result.length; m++){\n                if(sum < result[m][0] + result[m][1]){\n                    result.splice(m, 0, [nums1[i], nums2[j]]);\n                    flag = true;\n                    k--;\n                    break;\n                }\n            }\n            if(!flag){\n                result.push([nums1[i], nums2[j]]);\n                k--;\n            }\n        }\n        if(i < nums1.length - 1 && j < nums2.length - 1){\n            if(nums1[i + 1] + nums2[j] < nums1[i] + nums2[j + 1]){\n                i++;\n            }\n            else{\n                j++;\n            }\n        }\n        else if(i < nums1.length - 1){\n            i++;\n        }\n        else{\n            j++;\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_VALUE;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    let res = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return res;\n    }\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_VALUE;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        res.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return res;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    var index = [];\n    for(var i = 0; i < len1; i++){\n        index[i] = 0;\n    }\n    while(k > 0){\n        var min = Number.MAX_VALUE;\n        var t = -1;\n        for(var i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min){\n                min = nums1[i] + nums2[index[i]];\n                t = i;\n            }\n        }\n        if(t === -1){\n            break;\n        }\n        result.push([nums1[t], nums2[index[t]]]);\n        index[t]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length && k > 0){\n        var sum = nums1[i] + nums2[j];\n        if(result.length === 0){\n            result.push([nums1[i], nums2[j]]);\n        }\n        else{\n            var index = 0;\n            while(index < result.length && sum > result[index][0] + result[index][1]){\n                index++;\n            }\n            result.splice(index, 0, [nums1[i], nums2[j]]);\n        }\n        if(i === nums1.length - 1){\n            j++;\n        }\n        else if(j === nums2.length - 1){\n            i++;\n        }\n        else{\n            if(nums1[i + 1] + nums2[j] < nums1[i] + nums2[j + 1]){\n                i++;\n            }\n            else{\n                j++;\n            }\n        }\n        k--;\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    let i = 0;\n    let j = 0;\n    while(i < len1 && j < len2 && k > 0){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n        k--;\n    }\n    while(i < len1 && k > 0){\n        result.push([nums1[i], nums2[j-1]]);\n        i++;\n        k--;\n    }\n    while(j < len2 && k > 0){\n        result.push([nums1[i-1], nums2[j]]);\n        j++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0) return result;\n    var index = [];\n    for(var i = 0; i < len1; i++){\n        index[i] = 0;\n    }\n    for(var i = 0; i < k; i++){\n        var min = Number.MAX_VALUE;\n        var t = -1;\n        for(var j = 0; j < len1; j++){\n            if(index[j] < len2 && nums1[j] + nums2[index[j]] < min){\n                min = nums1[j] + nums2[index[j]];\n                t = j;\n            }\n        }\n        if(t === -1) break;\n        var temp = [];\n        temp.push(nums1[t]);\n        temp.push(nums2[index[t]]);\n        result.push(temp);\n        index[t]++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    let pairs = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    pairs.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return pairs.slice(0, k);\n}\n",
    "    let res = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 == 0 || len2 == 0 || k == 0){\n        return res;\n    }\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_SAFE_INTEGER;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index == -1){\n            break;\n        }\n        res.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return res;\n}\n",
    "    let res = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return res.slice(0, k);\n}\n",
    "    let arr = [];\n    for(let i=0; i<nums1.length; i++){\n        for(let j=0; j<nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a,b) => a[0]+a[1]-b[0]-b[1]);\n    return arr.slice(0, k);\n}\n",
    "    let res = [];\n    for(let i=0; i<nums1.length; i++){\n        for(let j=0; j<nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort((a,b)=>a[0]+a[1]-b[0]-b[1]);\n    return res.slice(0,k);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    var result = [];\n    if(nums1.length === 0 || nums2.length === 0 || k === 0){\n        return result;\n    }\n    var minHeap = new MinHeap();\n    for(var i = 0; i < nums1.length && i < k; i++){\n        minHeap.add(new Pair(nums1[i], nums2[0], 0));\n    }\n    for(var i = 0; i < k && !minHeap.isEmpty(); i++){\n        var pair = minHeap.pop();\n        result.push([pair.first, pair.second]);\n        var next = pair.secondIndex + 1;\n        if(next < nums2.length){\n            minHeap.add(new Pair(pair.first, nums2[next], next));\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 == 0 || len2 == 0 || k == 0) return result;\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_VALUE;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index == -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar i = 0;\n\tvar j = 0;\n\twhile(i < nums1.length && j < nums2.length){\n\t\tif(nums1[i] < nums2[j]){\n\t\t\tresult.push([nums1[i], nums2[j]]);\n\t\t\ti++;\n\t\t}else{\n\t\t\tresult.push([nums1[i], nums2[j]]);\n\t\t\tj++;\n\t\t}\n\t}\n\treturn result.slice(0, k);\n}\n",
    "  let result = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      result.push([nums1[i], nums2[j]]);\n    }\n  }\n  result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n  return result.slice(0, k);\n}\n",
    "\tvar result = [];\n\tvar len1 = nums1.length;\n\tvar len2 = nums2.length;\n\tvar i = 0;\n\tvar j = 0;\n\tvar count = 0;\n\twhile(i < len1 && j < len2 && count < k){\n\t\tvar sum = nums1[i] + nums2[j];\n\t\tif(result.length === 0){\n\t\t\tresult.push([nums1[i], nums2[j]]);\n\t\t\tcount++;\n\t\t\tj++;\n\t\t}else{\n\t\t\tvar len = result.length;\n\t\t\tvar flag = false;\n\t\t\tfor(var m = 0; m < len; m++){\n\t\t\t\tif(sum < result[m][0] + result[m][1]){\n\t\t\t\t\tresult.splice(m, 0, [nums1[i], nums2[j]]);\n\t\t\t\t\tflag = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!flag){\n\t\t\t\tresult.push([nums1[i], nums2[j]]);\n\t\t\t}\n\t\t\tcount++;\n\t\t\tj++;\n\t\t}\n\t\tif(j === len2){\n\t\t\ti++;\n\t\t\tj = 0;\n\t\t}\n\t}\n\treturn result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_VALUE;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length && k > 0){\n        var sum = nums1[i] + nums2[j];\n        if(result.length == 0){\n            result.push([nums1[i], nums2[j]]);\n        }else{\n            var flag = false;\n            for(var m = 0; m < result.length; m++){\n                if(sum < result[m][0] + result[m][1]){\n                    result.splice(m, 0, [nums1[i], nums2[j]]);\n                    flag = true;\n                    break;\n                }\n            }\n            if(!flag){\n                result.push([nums1[i], nums2[j]]);\n            }\n        }\n        if(i < nums1.length - 1 && nums1[i] + nums2[j] > nums1[i + 1] + nums2[j]){\n            i++;\n        }else{\n            j++;\n        }\n        k--;\n    }\n    return result;\n}\n",
    "    let arr = [];\n    for(let i=0; i<nums1.length; i++){\n        for(let j=0; j<nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a,b) => a[0]+a[1]-b[0]-b[1]);\n    return arr.slice(0,k);\n}\n",
    "    let arr = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return arr.slice(0, k);\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    for(var i=0; i<len1; i++){\n        for(var j=0; j<len2; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0]+a[1]-b[0]-b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    let pairs = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    pairs.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return pairs.slice(0, k);\n}\n",
    "  var result = [];\n  var len1 = nums1.length;\n  var len2 = nums2.length;\n  var i = 0;\n  var j = 0;\n  while(i < len1 && j < len2 && k > 0){\n    if(nums1[i] < nums2[j]){\n      result.push([nums1[i], nums2[j]]);\n      i++;\n    }else{\n      result.push([nums1[i], nums2[j]]);\n      j++;\n    }\n    k--;\n  }\n  while(i < len1 && k > 0){\n    result.push([nums1[i], nums2[j-1]]);\n    i++;\n    k--;\n  }\n  while(j < len2 && k > 0){\n    result.push([nums1[i-1], nums2[j]]);\n    j++;\n    k--;\n  }\n  return result;\n}\n",
    "    let res = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return res.slice(0, k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0) return result;\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_VALUE;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    var i = 0;\n    var j = 0;\n    while(i < len1 && j < len2 && k > 0){\n        var sum = nums1[i] + nums2[j];\n        if(sum < 0){\n            i++;\n        }else if(sum > 0){\n            j++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            i++;\n            j++;\n            k--;\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length && k > 0){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n        k--;\n    }\n    while(i < nums1.length && k > 0){\n        result.push([nums1[i], nums2[nums2.length - 1]]);\n        i++;\n        k--;\n    }\n    while(j < nums2.length && k > 0){\n        result.push([nums1[nums1.length - 1], nums2[j]]);\n        j++;\n        k--;\n    }\n    return result;\n}\n",
    "  var result = [];\n  var i = 0;\n  var j = 0;\n  while(i < nums1.length && j < nums2.length && k > 0){\n    if(nums1[i] < nums2[j]){\n      result.push([nums1[i], nums2[j]]);\n      i++;\n    }else{\n      result.push([nums1[i], nums2[j]]);\n      j++;\n    }\n    k--;\n  }\n  while(i < nums1.length && k > 0){\n    result.push([nums1[i], nums2[j-1]]);\n    i++;\n    k--;\n  }\n  while(j < nums2.length && k > 0){\n    result.push([nums1[i-1], nums2[j]]);\n    j++;\n    k--;\n  }\n  return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0) return result;\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Infinity;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "  let res = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      res.push([nums1[i], nums2[j]]);\n    }\n  }\n  res.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n  return res.slice(0, k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 == 0 || len2 == 0 || k == 0) return result;\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_VALUE;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index == -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    var i = 0;\n    var j = 0;\n    while(i < len1 && j < len2 && k > 0){\n        var sum = nums1[i] + nums2[j];\n        if(sum < 0){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n            k--;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n            k--;\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    let i = 0;\n    let j = 0;\n    while(i < len1 && j < len2 && k > 0){\n        let sum = nums1[i] + nums2[j];\n        if(sum < 0){\n            i++;\n        }else if(sum > 0){\n            j++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            i++;\n            j++;\n            k--;\n        }\n    }\n    return result;\n}\n",
    "    let res = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return res.slice(0, k);\n}\n",
    "    let arr = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return arr.slice(0, k);\n}\n",
    "    var res = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return res.slice(0, k);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    let pairs = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    pairs.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return pairs.slice(0, k);\n}\n",
    "\tvar arr = [];\n\tfor(var i = 0; i < nums1.length; i++){\n\t\tfor(var j = 0; j < nums2.length; j++){\n\t\t\tarr.push([nums1[i], nums2[j]]);\n\t\t}\n\t}\n\tarr.sort(function(a, b){\n\t\treturn a[0] + a[1] - b[0] - b[1];\n\t});\n\treturn arr.slice(0, k);\n}\n",
    "\tvar res = [];\n\tvar len1 = nums1.length, len2 = nums2.length;\n\tif(len1 === 0 || len2 === 0 || k === 0) return res;\n\tfor(var i = 0; i < len1; i++){\n\t\tfor(var j = 0; j < len2; j++){\n\t\t\tres.push([nums1[i], nums2[j]]);\n\t\t}\n\t}\n\tres.sort(function(a, b){\n\t\treturn a[0] + a[1] - b[0] - b[1];\n\t});\n\treturn res.slice(0, k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 == 0 || len2 == 0 || k == 0) return result;\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_VALUE;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index == -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "  let result = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      result.push([nums1[i], nums2[j]]);\n    }\n  }\n  result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n  return result.slice(0, k);\n}\n",
    "    var result = [];\n    if(nums1.length === 0 || nums2.length === 0 || k === 0){\n        return result;\n    }\n    var queue = new PriorityQueue();\n    for(var i = 0; i < nums1.length && i < k; i++){\n        queue.enqueue(new Pair(nums1[i], nums2[0], 0));\n    }\n    while(k > 0 && queue.length() > 0){\n        var pair = queue.dequeue();\n        result.push([pair.first, pair.second]);\n        var next = pair.index + 1;\n        if(next < nums2.length){\n            queue.enqueue(new Pair(pair.first, nums2[next], next));\n        }\n        k--;\n    }\n    return result;\n}\n",
    "    var pairs = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length){\n        pairs.push([nums1[i], nums2[j]]);\n        if(j < nums2.length - 1){\n            j++;\n        }else{\n            i++;\n            j = 0;\n        }\n    }\n    pairs.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return pairs.slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    let arr = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return arr.slice(0, k);\n}\n",
    "    let pairs = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    pairs.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return pairs.slice(0, k);\n}\n",
    "    let res = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return res.slice(0, k);\n}\n",
    "  var pairs = [];\n  for(var i=0; i<nums1.length; i++){\n    for(var j=0; j<nums2.length; j++){\n      pairs.push([nums1[i], nums2[j]]);\n    }\n  }\n  pairs.sort(function(a, b){\n    return a[0]+a[1]-b[0]-b[1];\n  });\n  return pairs.slice(0, k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0) return result;\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_VALUE;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    let res = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0) return res;\n    let index = new Array(len1).fill(0);\n    while(k-- > 0){\n        let sum = Number.MAX_SAFE_INTEGER;\n        let pos = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] < len2 && nums1[i] + nums2[index[i]] < sum){\n                sum = nums1[i] + nums2[index[i]];\n                pos = i;\n            }\n        }\n        if(pos === -1) break;\n        res.push([nums1[pos], nums2[index[pos]]]);\n        index[pos]++;\n    }\n    return res;\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length && k > 0){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n        k--;\n    }\n    while(i < nums1.length && k > 0){\n        result.push([nums1[i], nums2[j-1]]);\n        i++;\n        k--;\n    }\n    while(j < nums2.length && k > 0){\n        result.push([nums1[i-1], nums2[j]]);\n        j++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    var index = new Array(len1);\n    for(var i = 0; i < len1; i++){\n        index[i] = 0;\n    }\n    while(k > 0){\n        var min_val = Number.MAX_VALUE;\n        var min_index = -1;\n        for(var i = 0; i < len1; i++){\n            if(index[i] < len2 && nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        var pair = [];\n        pair.push(nums1[min_index]);\n        pair.push(nums2[index[min_index]]);\n        result.push(pair);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    var pairs = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    pairs.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return pairs.slice(0, k);\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    var i = 0;\n    var j = 0;\n    while(i < len1 && j < len2 && k > 0){\n        var sum = nums1[i] + nums2[j];\n        var min = sum;\n        var min_i = i;\n        var min_j = j;\n        if(i + 1 < len1 && nums1[i + 1] + nums2[j] < min){\n            min = nums1[i + 1] + nums2[j];\n            min_i = i + 1;\n            min_j = j;\n        }\n        if(j + 1 < len2 && nums1[i] + nums2[j + 1] < min){\n            min = nums1[i] + nums2[j + 1];\n            min_i = i;\n            min_j = j + 1;\n        }\n        result.push([nums1[min_i], nums2[min_j]]);\n        i = min_i;\n        j = min_j;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    let i = 0;\n    let j = 0;\n    while(i < nums1.length && j < nums2.length && result.length < k){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n    }\n    while(i < nums1.length && result.length < k){\n        result.push([nums1[i], nums2[j-1]]);\n        i++;\n    }\n    while(j < nums2.length && result.length < k){\n        result.push([nums1[i-1], nums2[j]]);\n        j++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0) return result;\n    var index = [];\n    for(var i = 0; i < len1; i++){\n        index.push(0);\n    }\n    while(k > 0){\n        var min = Number.MAX_VALUE;\n        var t = -1;\n        for(var i = 0; i < len1; i++){\n            if(index[i] < len2 && nums1[i] + nums2[index[i]] < min){\n                t = i;\n                min = nums1[i] + nums2[index[i]];\n            }\n        }\n        if(t === -1) break;\n        var temp = [];\n        temp.push(nums1[t]);\n        temp.push(nums2[index[t]]);\n        result.push(temp);\n        index[t]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length && k > 0){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n            k--;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n            k--;\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0) return result;\n    var index = new Array(len1).fill(0);\n    while(k > 0){\n        var min_val = Number.MAX_VALUE;\n        var min_index = -1;\n        for(var i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "  var result = [];\n  var len1 = nums1.length;\n  var len2 = nums2.length;\n  var len = Math.min(k, len1 * len2);\n  var index = 0;\n  var i = 0;\n  var j = 0;\n  var count = 0;\n  var min = 0;\n  var min_i = 0;\n  var min_j = 0;\n  var temp = [];\n  var temp_i = 0;\n  var temp_j = 0;\n  var temp_index = 0;\n  while(count < len){\n    min = Number.MAX_VALUE;\n    for(i = 0; i < len1; i++){\n      for(j = 0; j < len2; j++){\n        if(nums1[i] + nums2[j] < min && !temp.includes(i * len2 + j)){\n          min = nums1[i] + nums2[j];\n          min_i = i;\n          min_j = j;\n        }\n      }\n    }\n    temp[temp_index] = min_i * len2 + min_j;\n    temp_index++;\n    result[index] = [nums1[min_i], nums2[min_j]];\n    index++;\n    count++;\n  }\n  return result;\n}\n\nvar nums1 = [1, 7, 11];\nvar nums2 = [2, 4, 6];\nvar k = 3;",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    let res = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return res.slice(0, k);\n}\n",
    "    let arr = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return arr.slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_VALUE;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    let pairs = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    pairs.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return pairs.slice(0, k);\n}\n",
    "    let res = [];\n    if(nums1.length === 0 || nums2.length === 0 || k === 0){\n        return res;\n    }\n    let pq = new PriorityQueue();\n    for(let i = 0; i < nums1.length && i < k; i++){\n        pq.enqueue(new Pair(nums1[i], nums2[0], 0));\n    }\n    while(k-- > 0 && !pq.isEmpty()){\n        let top = pq.dequeue();\n        res.push([top.first, top.second]);\n        if(top.index === nums2.length - 1){\n            continue;\n        }\n        pq.enqueue(new Pair(top.first, nums2[top.index + 1], top.index + 1));\n    }\n    return res;\n}\n\nclass Pair{\n    constructor(first, second, index){\n        this.first = first;\n        this.second = second;\n        this.index = index;\n    }\n}\n\nclass PriorityQueue{\n    constructor(){\n        this.data = [];\n    }\n\n    enqueue(item){\n        this.data.push(item);\n        this.upHeapify();\n    }\n\n    dequeue(){\n        if(this.isEmpty()){\n            return null;\n        }\n        let ans = this.data[0];\n        this.swap(0, this.data.length - 1);\n        this.data.pop();\n        this.downHeapify();\n        return ans;\n    }\n\n    isEmpty(){\n        return this.data.length === 0;\n    }\n\n    upHeapify(){\n        let childIndex = this.data.length - 1;\n        while(childIndex > 0){\n            let parentIndex = Math.floor((childIndex - 1) / 2);\n            if(this.data[childIndex].first + this.data[childIndex].second >= this.data[parentIndex].first + this.data[parentIndex].second){\n                break;\n            }\n            this.swap(childIndex, parentIndex);\n            childIndex = parentIndex;\n       ",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    let res = [];\n    for(let i=0; i<nums1.length; i++){\n        for(let j=0; j<nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort((a,b) => a[0]+a[1]-b[0]-b[1]);\n    return res.slice(0,k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0) return result;\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Infinity;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - (b[0] + b[1]);\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    let i = 0;\n    let j = 0;\n    while(i < len1 && j < len2 && result.length < k){\n        let sum = nums1[i] + nums2[j];\n        if(result.length === 0){\n            result.push([nums1[i], nums2[j]]);\n        }else{\n            let len = result.length;\n            let index = len;\n            for(let m = 0; m < len; m++){\n                if(sum < result[m][0] + result[m][1]){\n                    index = m;\n                    break;\n                }\n            }\n            if(index < len){\n                result.splice(index, 0, [nums1[i], nums2[j]]);\n            }else{\n                result.push([nums1[i], nums2[j]]);\n            }\n        }\n        if(j < len2 - 1){\n            j++;\n        }else{\n            i++;\n            j = 0;\n        }\n    }\n    return result;\n}\n",
    "    var pairs = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    pairs.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return pairs.slice(0, k);\n}\n",
    "    let res = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort((a,b) => a[0] + a[1] - b[0] - b[1]);\n    return res.slice(0, k);\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    var len = len1 * len2;\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    var temp = [];\n    for(i = 0; i < len1; i++){\n        for(j = 0; j < len2; j++){\n            temp.push([nums1[i], nums2[j]]);\n        }\n    }\n    temp.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    while(count < k && count < len){\n        result.push(temp[count]);\n        count++;\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    let res = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return res.slice(0, k);\n}\n",
    "    let pairs = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    pairs.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return pairs.slice(0, k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if (len1 === 0 || len2 === 0 || k === 0) return result;\n    let index = new Array(len1).fill(0);\n    while (k-- > 0) {\n        let min_val = Infinity;\n        let min_index = -1;\n        for (let i = 0; i < len1; i++) {\n            if (index[i] >= len2) continue;\n            if (nums1[i] + nums2[index[i]] < min_val) {\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if (min_index === -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    if(len1 == 0 || len2 == 0 || k == 0){\n        return result;\n    }\n    var index = new Array(len1).fill(0);\n    while(k > 0){\n        var min_val = Number.MAX_VALUE;\n        var min_index = -1;\n        for(var i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index == -1){\n            break;\n        }\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    if(nums1.length === 0 || nums2.length === 0 || k === 0){\n        return result;\n    }\n    var minHeap = new MinHeap();\n    for(var i = 0; i < nums1.length && i < k; i++){\n        minHeap.add(new Pair(nums1[i], nums2[0], 0));\n    }\n    for(var i = 0; i < k && !minHeap.isEmpty(); i++){\n        var pair = minHeap.pop();\n        result.push(pair.toArray());\n        if(pair.yIndex < nums2.length - 1){\n            minHeap.add(new Pair(pair.x, nums2[pair.yIndex + 1], pair.yIndex + 1));\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_SAFE_INTEGER;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    let heap = new Heap();\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            heap.insert([nums1[i], nums2[j]]);\n        }\n    }\n    while(k > 0){\n        result.push(heap.extract());\n        k--;\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0) return result;\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Infinity;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    let i = 0;\n    let j = 0;\n    while(i < len1 && j < len2 && result.length < k){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    var heap = new Heap(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    for(var i = 0; i < len1; i++){\n        heap.push([nums1[i], nums2[0], 0]);\n    }\n    for(var i = 0; i < k && !heap.empty(); i++){\n        var cur = heap.pop();\n        result.push([cur[0], cur[1]]);\n        if(cur[2] === len2 - 1){\n            continue;\n        }\n        heap.push([cur[0], nums2[cur[2] + 1], cur[2] + 1]);\n    }\n    return result;\n}\n",
    "    let res = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return res.slice(0, k);\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k && i < arr.length; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(count < k && i < nums1.length && j < nums2.length){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n        count++;\n    }\n    return result;\n}\n",
    "    let result = [];\n    let i = 0;\n    let j = 0;\n    while(i < nums1.length && j < nums2.length && k > 0){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n        k--;\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length && k > 0){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n        k--;\n    }\n    while(i < nums1.length && k > 0){\n        result.push([nums1[i], nums2[j-1]]);\n        i++;\n        k--;\n    }\n    while(j < nums2.length && k > 0){\n        result.push([nums1[i-1], nums2[j]]);\n        j++;\n        k--;\n    }\n    return result;\n}\n",
    "    let pairs = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    pairs.sort((a,b) => a[0] + a[1] - b[0] - b[1]);\n    return pairs.slice(0, k);\n}\n",
    "    let result = [];\n    let i = 0;\n    let j = 0;\n    while(i < nums1.length && j < nums2.length && result.length < k){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a,b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "  let result = [];\n  for(let i = 0; i < nums1.length; i++){\n    for(let j = 0; j < nums2.length; j++){\n      result.push([nums1[i], nums2[j]]);\n    }\n  }\n  result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n  return result.slice(0, k);\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    var len = len1 * len2;\n    var index = 0;\n    var i = 0;\n    var j = 0;\n    var temp = 0;\n    var temp1 = 0;\n    var temp2 = 0;\n    var temp3 = 0;\n    var temp4 = 0;\n    var temp5 = 0;\n    var temp6 = 0;\n    var temp7 = 0;\n    var temp8 = 0;\n    var temp9 = 0;\n    var temp10 = 0;\n    var temp11 = 0;\n    var temp12 = 0;\n    var temp13 = 0;\n    var temp14 = 0;\n    var temp15 = 0;\n    var temp16 = 0;\n    var temp17 = 0;\n    var temp18 = 0;\n    var temp19 = 0;\n    var temp20 = 0;\n    var temp21 = 0;\n    var temp22 = 0;\n    var temp23 = 0;\n    var temp24 = 0;\n    var temp25 = 0;\n    var temp26 = 0;\n    var temp27 = 0;\n    var temp28 = 0;\n    var temp29 = 0;\n    var temp30 = 0;\n    var temp31 = 0;\n    var temp32 = 0;\n    var temp33 = 0;\n    var temp34 = 0;\n    var temp35 = 0;\n    var temp36 = 0;\n    var temp37 = 0;\n    var temp38 = 0;\n    var temp39 = 0;\n    var temp40 = 0;\n    var temp41 = 0;\n    var temp42 = 0;\n    var temp43 = 0;\n    var temp44 = 0;\n    var temp45 = 0;\n    var temp46 = 0;\n    var temp47 = 0;\n    var temp48 = 0;\n    var temp49 = 0;\n    var temp50 = 0;\n    var temp51 = 0;\n    var temp52 = 0;\n    var temp53 = 0;\n    var temp54 = 0;\n    var temp55 = 0;\n    var",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    var index = new Array(len1).fill(0);\n    while(k > 0){\n        var min_val = Number.MAX_VALUE;\n        var min_index = -1;\n        for(var i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    let res = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return res.slice(0, k);\n}\n",
    "    var result = [];\n    var n = nums1.length;\n    var m = nums2.length;\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < n && j < m && count < k){\n        if(nums1[i] + nums2[j] < nums1[i+1] + nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n        else{\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }\n        count++;\n    }\n    return result;\n}\n\nvar nums1 = [1, 7, 11];\nvar nums2 = [2, 4, 6];\nvar k = 3;",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 == 0 || len2 == 0 || k == 0){\n        return result;\n    }\n    let heap = new Heap();\n    for(let i = 0; i < len1; i++){\n        heap.push([nums1[i], nums2[0], 0]);\n    }\n    for(let i = 0; i < k && !heap.isEmpty(); i++){\n        let [num1, num2, index] = heap.pop();\n        result.push([num1, num2]);\n        if(index == len2 - 1){\n            continue;\n        }\n        heap.push([num1, nums2[index + 1], index + 1]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    var len = len1 * len2;\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(count < k && i < len1 && j < len2){\n        var temp = [];\n        temp.push(nums1[i]);\n        temp.push(nums2[j]);\n        result.push(temp);\n        count++;\n        if(i == len1 - 1){\n            j++;\n        }else if(j == len2 - 1){\n            i++;\n        }else{\n            if(nums1[i] < nums2[j]){\n                i++;\n            }else{\n                j++;\n            }\n        }\n    }\n    return result;\n}\n\nvar nums1 = [1,7,11];\nvar nums2 = [2,4,6];\nvar k = 3;",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length && result.length < k){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n    }\n    return result;\n}\n",
    "    let arr = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return arr.slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_SAFE_INTEGER;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    var result = [];\n    if(nums1.length === 0 || nums2.length === 0 || k === 0){\n        return result;\n    }\n    var minHeap = new MinHeap();\n    for(var i = 0; i < nums1.length && i < k; i++){\n        minHeap.add(new Pair(nums1[i], nums2[0], 0));\n    }\n    for(var i = 0; i < k && !minHeap.isEmpty(); i++){\n        var pair = minHeap.pop();\n        result.push(pair.toArray());\n        if(pair.yIndex < nums2.length - 1){\n            minHeap.add(new Pair(pair.x, nums2[pair.yIndex + 1], pair.yIndex + 1));\n        }\n    }\n    return result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    let i = 0;\n    let j = 0;\n    while(i < len1 && j < len2 && result.length < k){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        } else {\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0){\n        return result;\n    }\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_SAFE_INTEGER;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    var index = [];\n    for(var i = 0; i < len1; i++){\n        index[i] = 0;\n    }\n    for(var i = 0; i < k; i++){\n        var min = Number.MAX_VALUE;\n        var t = -1;\n        for(var j = 0; j < len1; j++){\n            if(index[j] < len2 && nums1[j] + nums2[index[j]] < min){\n                min = nums1[j] + nums2[index[j]];\n                t = j;\n            }\n        }\n        if(t == -1){\n            break;\n        }\n        var temp = [];\n        temp.push(nums1[t]);\n        temp.push(nums2[index[t]]);\n        result.push(temp);\n        index[t]++;\n    }\n    return result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    if(nums1.length == 0 || nums2.length == 0 || k == 0){\n        return result;\n    }\n    var minHeap = new MinHeap();\n    for(var i = 0; i < nums1.length && i < k; i++){\n        minHeap.add(new Pair(nums1[i], nums2[0], 0));\n    }\n    for(var i = 0; i < k && !minHeap.isEmpty(); i++){\n        var pair = minHeap.poll();\n        result[i] = [pair.first, pair.second];\n        var nextIndex = pair.secondIndex + 1;\n        if(nextIndex < nums2.length){\n            minHeap.add(new Pair(pair.first, nums2[nextIndex], nextIndex));\n        }\n    }\n    return result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_VALUE;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2){\n                continue;\n            }\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var result = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    var res = [];\n    var len1 = nums1.length, len2 = nums2.length;\n    if(len1 == 0 || len2 == 0 || k == 0) return res;\n    for(var i = 0; i < len1; i++){\n        for(var j = 0; j < len2; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return res.slice(0, k);\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length && k > 0){\n        var sum = nums1[i] + nums2[j];\n        if(result.length < k){\n            result.push([nums1[i], nums2[j]]);\n        }else{\n            var max = result[0][0] + result[0][1];\n            var index = 0;\n            for(var m = 1; m < result.length; m++){\n                if(result[m][0] + result[m][1] > max){\n                    max = result[m][0] + result[m][1];\n                    index = m;\n                }\n            }\n            if(sum < max){\n                result[index] = [nums1[i], nums2[j]];\n            }\n        }\n        if(j + 1 < nums2.length && nums1[i] + nums2[j + 1] < nums1[i + 1] + nums2[j]){\n            j++;\n        }else{\n            i++;\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    var index = [];\n    for(var i = 0; i < len1; i++){\n        index[i] = 0;\n    }\n    for(var i = 0; i < k; i++){\n        var min_val = Number.MAX_VALUE;\n        var min_index = -1;\n        for(var j = 0; j < len1; j++){\n            if(index[j] < len2 && nums1[j] + nums2[index[j]] < min_val){\n                min_val = nums1[j] + nums2[index[j]];\n                min_index = j;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        var pair = [];\n        pair.push(nums1[min_index]);\n        pair.push(nums2[index[min_index]]);\n        result.push(pair);\n        index[min_index]++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length && k > 0){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n            k--;\n        }\n        else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n            k--;\n        }\n    }\n    return result;\n}\n",
    "    let pairs = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    pairs.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return pairs.slice(0, k);\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    var count = 0;\n    while(i < nums1.length && j < nums2.length && count < k){\n        if(nums1[i] < nums2[j]){\n            result.push([nums1[i], nums2[j]]);\n            i++;\n        }else{\n            result.push([nums1[i], nums2[j]]);\n            j++;\n        }\n        count++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var len1 = nums1.length;\n    var len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0) return result;\n    for(var i = 0; i < len1; i++){\n        for(var j = 0; j < len2; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    let arr = [];\n    for(let i = 0; i < len1; i++){\n        for(let j = 0; j < len2; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    for(let i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    let arr = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a,b) => a[0] + a[1] - b[0] - b[1]);\n    return arr.slice(0, k);\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0){\n        return result;\n    }\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_SAFE_INTEGER;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] < len2 && nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1){\n            break;\n        }\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var pairs = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    pairs.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return pairs.slice(0, k);\n}\n",
    "    let arr = [];\n    for(let i=0; i<nums1.length; i++){\n        for(let j=0; j<nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a,b) => a[0]+a[1] - b[0]-b[1]);\n    let result = [];\n    for(let i=0; i<k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    var j = 0;\n    while(i < nums1.length && j < nums2.length && result.length < k){\n        var sum = nums1[i] + nums2[j];\n        if(result.length === 0){\n            result.push([nums1[i], nums2[j]]);\n        }else{\n            var flag = false;\n            for(var m = 0; m < result.length; m++){\n                if(sum < result[m][0] + result[m][1]){\n                    result.splice(m, 0, [nums1[i], nums2[j]]);\n                    flag = true;\n                    break;\n                }\n            }\n            if(!flag){\n                result.push([nums1[i], nums2[j]]);\n            }\n        }\n        if(j < nums2.length - 1){\n            j++;\n        }else{\n            i++;\n            j = 0;\n        }\n    }\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0) return result;\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_VALUE;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    let arr = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return arr.slice(0, k);\n}\n",
    "  let result = [];\n  let len1 = nums1.length;\n  let len2 = nums2.length;\n  let i = 0;\n  let j = 0;\n  while(i < len1 && j < len2 && k > 0){\n    if(nums1[i] < nums2[j]){\n      result.push([nums1[i], nums2[j]]);\n      i++;\n    }else{\n      result.push([nums1[i], nums2[j]]);\n      j++;\n    }\n    k--;\n  }\n  while(i < len1 && k > 0){\n    result.push([nums1[i], nums2[j-1]]);\n    i++;\n    k--;\n  }\n  while(j < len2 && k > 0){\n    result.push([nums1[i-1], nums2[j]]);\n    j++;\n    k--;\n  }\n  return result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 === 0 || len2 === 0 || k === 0) return result;\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Infinity;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index === -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    let res = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    return res.sort((a, b) => a[0] + a[1] - b[0] - b[1]).slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => {\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return result.slice(0, k);\n}\n",
    "    var pairs = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            pairs.push([nums1[i], nums2[j]]);\n        }\n    }\n    return pairs.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    }).slice(0, k);\n}\n",
    "    var res = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            res.push([nums1[i], nums2[j]]);\n        }\n    }\n    res.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    return res.slice(0, k);\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n",
    "    let result = [];\n    let len1 = nums1.length;\n    let len2 = nums2.length;\n    if(len1 == 0 || len2 == 0 || k == 0) return result;\n    let index = new Array(len1).fill(0);\n    while(k > 0){\n        let min_val = Number.MAX_SAFE_INTEGER;\n        let min_index = -1;\n        for(let i = 0; i < len1; i++){\n            if(index[i] >= len2) continue;\n            if(nums1[i] + nums2[index[i]] < min_val){\n                min_val = nums1[i] + nums2[index[i]];\n                min_index = i;\n            }\n        }\n        if(min_index == -1) break;\n        result.push([nums1[min_index], nums2[index[min_index]]]);\n        index[min_index]++;\n        k--;\n    }\n    return result;\n}\n",
    "    var arr = [];\n    for(var i = 0; i < nums1.length; i++){\n        for(var j = 0; j < nums2.length; j++){\n            arr.push([nums1[i], nums2[j]]);\n        }\n    }\n    arr.sort(function(a, b){\n        return a[0] + a[1] - b[0] - b[1];\n    });\n    var result = [];\n    for(var i = 0; i < k; i++){\n        result.push(arr[i]);\n    }\n    return result;\n}\n",
    "    let result = [];\n    for(let i = 0; i < nums1.length; i++){\n        for(let j = 0; j < nums2.length; j++){\n            result.push([nums1[i], nums2[j]]);\n        }\n    }\n    result.sort((a, b) => a[0] + a[1] - b[0] - b[1]);\n    return result.slice(0, k);\n}\n"
  ]
}
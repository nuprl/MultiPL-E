{
  "name": "mbpp_630_get_coordinates",
  "language": "js",
  "prompt": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_630_get_coordinates.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2xlf4fds.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2xlf4fds.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        coordinates.push(test_tup[i][0]);\n        coordinates.push(test_tup[i][1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmppfi1cgq8.js:16:10)\n    at Object.<anonymous> (/tmp/tmppfi1cgq8.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coord_list = [];\n    for(var i = -1; i < 2; i++){\n        for(var j = -1; j < 2; j++){\n            if(i == 0 && j == 0){\n                continue;\n            }\n            else{\n                coord_list.push([x+i, y+j]);\n            }\n        }\n    }\n    return coord_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmphpjyp757.js:24:10)\n    at Object.<anonymous> (/tmp/tmphpjyp757.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var test_tup = [1,2];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var adjacent_coordinates = [[x+1,y],[x-1,y],[x,y+1],[x,y-1]];\n    return adjacent_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    2\n  ],\n  [\n    0,\n    2\n  ],\n  [\n    1,\n    3\n  ],\n  [\n    1,\n    1\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmptfi5tflh.js:15:10)\n    at Object.<anonymous> (/tmp/tmptfi5tflh.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 2, 2 ], [ 0, 2 ], [ 1, 3 ], [ 1, 1 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [];\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x+1,y+1]);\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x-1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    4,\n    5\n  ],\n  [\n    2,\n    3\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    2,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpzhzv63io.js:22:10)\n    at Object.<anonymous> (/tmp/tmpzhzv63io.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 3, 5 ], [ 3, 3 ],\n    [ 4, 4 ], [ 2, 4 ],\n    [ 4, 5 ], [ 2, 3 ],\n    [ 4, 3 ], [ 2, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var test_list = [[x-1,y-1],[x-1,y],[x-1,y+1],[x,y-1],[x,y+1],[x+1,y-1],[x+1,y],[x+1,y+1]];\n    return test_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpzodjo8cg.js:14:10)\n    at Object.<anonymous> (/tmp/tmpzodjo8cg.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x-1,y]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpindabpet.js:18:10)\n    at Object.<anonymous> (/tmp/tmpindabpet.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 3, 5 ], [ 3, 3 ], [ 4, 4 ], [ 2, 4 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var coord = test_tup[i];\n        var x = coord[0];\n        var y = coord[1];\n        coordinates.push([x,y]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x-1,y]);\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n        coordinates.push([x+1,y+1]);\n        coordinates.push([x-1,y-1]);\n        coordinates.push([x+1,y-1]);\n        coordinates.push([x-1,y+1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    Na...\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpjk3hx7uh.js:26:10)\n    at Object.<anonymous> (/tmp/tmpjk3hx7uh.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar test_arr = test_tup.split(\",\");\n\tvar test_x = parseInt(test_arr[0]);\n\tvar test_y = parseInt(test_arr[1]);\n\tvar test_z = parseInt(test_arr[2]);\n\tvar test_w = parseInt(test_arr[3]);\n\tvar test_v = parseInt(test_arr[4]);\n\tvar test_u = parseInt(test_arr[5]);\n\tvar test_arr_adj = [];\n\tfor(var i = 0; i < 6; i++){\n\t\tvar test_arr_adj_temp = [];\n\t\tif(i == 0){\n\t\t\ttest_arr_adj_temp.push(test_x-1);\n\t\t\ttest_arr_adj_temp.push(test_y);\n\t\t\ttest_arr_adj_temp.push(test_z);\n\t\t\ttest_arr_adj_temp.push(test_w);\n\t\t\ttest_arr_adj_temp.push(test_v);\n\t\t\ttest_arr_adj_temp.push(test_u);\n\t\t}\n\t\tif(i == 1){\n\t\t\ttest_arr_adj_temp.push(test_x+1);\n\t\t\ttest_arr_adj_temp.push(test_y);\n\t\t\ttest_arr_adj_temp.push(test_z);\n\t\t\ttest_arr_adj_temp.push(test_w);\n\t\t\ttest_arr_adj_temp.push(test_v);\n\t\t\ttest_arr_adj_temp.push(test_u);\n\t\t}\n\t\tif(i == 2){\n\t\t\ttest_arr_adj_temp.push(test_x);\n\t\t\ttest_arr_adj_temp.push(test_y-1);\n\t\t\ttest_arr_adj_temp.push(test_z);\n\t\t\ttest_arr_adj_temp.push(test_w);\n\t\t\ttest_arr_adj_temp.push(test_v);\n\t\t\ttest_arr_adj_temp.push(\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "/tmp/tmpwhfpcicw.js:36\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var coordinate = test_tup[i];\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var coordinate_1 = [x+1,y];\n        var coordinate_2 = [x-1,y];\n        var coordinate_3 = [x,y+1];\n        var coordinate_4 = [x,y-1];\n        coordinates.push(coordinate_1);\n        coordinates.push(coordinate_2);\n        coordinates.push(coordinate_3);\n        coordinates.push(coordinate_4);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp63biuobp.js:25:10)\n    at Object.<anonymous> (/tmp/tmp63biuobp.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var test_tup = [1,2];\n    var test_tup_x = test_tup[0];\n    var test_tup_y = test_tup[1];\n    var test_tup_x_plus = test_tup_x + 1;\n    var test_tup_x_minus = test_tup_x - 1;\n    var test_tup_y_plus = test_tup_y + 1;\n    var test_tup_y_minus = test_tup_y - 1;\n    var test_tup_x_plus_y_plus = [test_tup_x_plus, test_tup_y_plus];\n    var test_tup_x_plus_y_minus = [test_tup_x_plus, test_tup_y_minus];\n    var test_tup_x_minus_y_plus = [test_tup_x_minus, test_tup_y_plus];\n    var test_tup_x_minus_y_minus = [test_tup_x_minus, test_tup_y_minus];\n    var test_tup_x_plus_y = [test_tup_x_plus, test_tup_y];\n    var test_tup_x_minus_y = [test_tup_x_minus, test_tup_y];\n    var test_tup_x_y_plus = [test_tup_x, test_tup_y_plus];\n    var test_tup_x_y_minus = [test_tup_x, test_tup_y_minus];\n    var test_tup_adjacent = [test_tup_x_plus_y_plus, test_tup_x_plus_y_minus, test_tup_x_minus_y_plus, test_tup_x_minus_y_minus, test_tup_x_plus_y, test_tup_x_minus_y, test_tup_x_y_plus, test_tup_x_y_minus];\n    return test_tup_adj\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "/tmp/tmp00izlky5.js:30\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var x_coordinates = [x-1, x, x+1];\n    var y_coordinates = [y-1, y, y+1];\n    var coordinates = [];\n    for(var i = 0; i < x_coordinates.length; i++){\n        for(var j = 0; j < y_coordinates.length; j++){\n            coordinates.push([x_coordinates[i], y_coordinates[j]]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar adjacent_coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tfor(var i = x-1; i <= x+1; i++){\n\t\tfor(var j = y-1; j <= y+1; j++){\n\t\t\tif(i >= 0 && i < 10 && j >= 0 && j < 10){\n\t\t\t\tif(!(i == x && j == y)){\n\t\t\t\t\tadjacent_coordinates.push([i,j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn adjacent_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmplh3j3yhu.js:23:10)\n    at Object.<anonymous> (/tmp/tmplh3j3yhu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x-1,y]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpgpqh8b0k.js:20:10)\n    at Object.<anonymous> (/tmp/tmpgpqh8b0k.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var adj_coordinates = [];\n    for(var i = x-1; i <= x+1; i++){\n        for(var j = y-1; j <= y+1; j++){\n            if(i != x || j != y){\n                adj_coordinates.push([i,j]);\n            }\n        }\n    }\n    return adj_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpqnh_7mpm.js:21:10)\n    at Object.<anonymous> (/tmp/tmpqnh_7mpm.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x,y]);\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x+1,y+1]);\n        coordinates.push([x+1,y-1]);\n        coordinates.push([x-1,y]);\n        coordinates.push([x-1,y+1]);\n        coordinates.push([x-1,y-1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    Na...\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpddhxbcmb.js:25:10)\n    at Object.<anonymous> (/tmp/tmpddhxbcmb.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, undefined ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ undefined, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, undefined ],\n    [ NaN, NaN ],\n    [ NaN, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tfor (var i = 0; i < test_tup.length; i++) {\n\t\tvar x = test_tup[i][0];\n\t\tvar y = test_tup[i][1];\n\t\tcoordinates.push([x,y]);\n\t\tcoordinates.push([x-1,y]);\n\t\tcoordinates.push([x+1,y]);\n\t\tcoordinates.push([x,y-1]);\n\t\tcoordinates.push([x,y+1]);\n\t}\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpz7xw39w4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpz7xw39w4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tfor(var i = 0; i < test_tup.length; i++){\n\t\tvar x = test_tup[i][0];\n\t\tvar y = test_tup[i][1];\n\t\tcoordinates.push([x, y]);\n\t\tcoordinates.push([x+1, y]);\n\t\tcoordinates.push([x-1, y]);\n\t\tcoordinates.push([x, y+1]);\n\t\tcoordinates.push([x, y-1]);\n\t\tcoordinates.push([x+1, y+1]);\n\t\tcoordinates.push([x+1, y-1]);\n\t\tcoordinates.push([x-1, y+1]);\n\t\tcoordinates.push([x-1, y-1]);\n\t}\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    Na...\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp646_oekw.js:25:10)\n    at Object.<anonymous> (/tmp/tmp646_oekw.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var temp = [];\n        for(var j = 0; j < test_tup[i].length; j++){\n            temp.push(test_tup[i][j]);\n        }\n        coordinates.push(temp);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2yy7_olo.js:19:10)\n    at Object.<anonymous> (/tmp/tmp2yy7_olo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n  var coordinates = [];\n  for(var i = 0; i < test_tup.length; i++){\n    for(var j = 0; j < test_tup[i].length; j++){\n      coordinates.push(test_tup[i][j]);\n    }\n  }\n  return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpt9sy4xbh.js:17:10)\n    at Object.<anonymous> (/tmp/tmpt9sy4xbh.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for (var i = 0; i < test_tup.length; i++){\n        coordinates.push(test_tup[i][0]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpkjk6m9k3.js:15:10)\n    at Object.<anonymous> (/tmp/tmpkjk6m9k3.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        coordinates.push(test_tup[i][0]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpmaq0zrt2.js:15:10)\n    at Object.<anonymous> (/tmp/tmpmaq0zrt2.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2xlf4fds.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2xlf4fds.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        coordinates.push(test_tup[i][0]);\n        coordinates.push(test_tup[i][1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpuo64kqiv.js:16:10)\n    at Object.<anonymous> (/tmp/tmpuo64kqiv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        coordinates.push(test_tup[i][0]);\n        coordinates.push(test_tup[i][1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmppfi1cgq8.js:16:10)\n    at Object.<anonymous> (/tmp/tmppfi1cgq8.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        var temp = [];\n        for(var j=0; j<test_tup[i].length; j++){\n            temp.push(test_tup[i][j]);\n        }\n        coordinates.push(temp);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp_abzzjob.js:19:10)\n    at Object.<anonymous> (/tmp/tmp_abzzjob.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x-1, y-1]);\n        coordinates.push([x-1, y]);\n        coordinates.push([x-1, y+1]);\n        coordinates.push([x, y-1]);\n        coordinates.push([x, y+1]);\n        coordinates.push([x+1, y-1]);\n        coordinates.push([x+1, y]);\n        coordinates.push([x+1, y+1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp97lbodi2.js:24:10)\n    at Object.<anonymous> (/tmp/tmp97lbodi2.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ NaN, NaN ],       [ NaN, undefined ],\n    [ NaN, NaN ],       [ undefined, NaN ],\n    [ undefined, NaN ], [ NaN, NaN ],\n    [ NaN, undefined ], [ NaN, NaN ],\n    [ NaN, NaN ],       [ NaN, undefined ],\n    [ NaN, NaN ],       [ undefined, NaN ],\n    [ undefined, NaN ], [ NaN, NaN ],\n    [ NaN, undefined ], [ NaN, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar adjacent_coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tadjacent_coordinates.push([x-1,y-1]);\n\tadjacent_coordinates.push([x-1,y]);\n\tadjacent_coordinates.push([x-1,y+1]);\n\tadjacent_coordinates.push([x,y-1]);\n\tadjacent_coordinates.push([x,y+1]);\n\tadjacent_coordinates.push([x+1,y-1]);\n\tadjacent_coordinates.push([x+1,y]);\n\tadjacent_coordinates.push([x+1,y+1]);\n\treturn adjacent_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp4v210wgd.js:22:10)\n    at Object.<anonymous> (/tmp/tmp4v210wgd.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var tup = test_tup[i];\n        var x = tup[0];\n        var y = tup[1];\n        var tup_list = [[x+1, y], [x-1, y], [x, y+1], [x, y-1]];\n        for(var j = 0; j < tup_list.length; j++){\n            coordinates.push(tup_list[j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpc631_ixn.js:21:10)\n    at Object.<anonymous> (/tmp/tmpc631_ixn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coord_list = [];\n    for (var i = -1; i < 2; i++){\n        for (var j = -1; j < 2; j++){\n            if (i != 0 || j != 0){\n                coord_list.push([x+i, y+j]);\n            }\n        }\n    }\n    return coord_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpzhi24ucd.js:21:10)\n    at Object.<anonymous> (/tmp/tmpzhi24ucd.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [];\n    for(var i = -1; i < 2; i++){\n        for(var j = -1; j < 2; j++){\n            if(i == 0 && j == 0){\n                continue;\n            }\n            coordinates.push([x+i, y+j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2g8wp8y_.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2g8wp8y_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var test_tup_x = test_tup[0];\n    var test_tup_y = test_tup[1];\n    var test_tup_z = test_tup[2];\n    var test_tup_w = test_tup[3];\n    var test_tup_v = test_tup[4];\n    var test_tup_u = test_tup[5];\n    var test_tup_t = test_tup[6];\n    var test_tup_s = test_tup[7];\n    var test_tup_r = test_tup[8];\n    var test_tup_q = test_tup[9];\n    var test_tup_p = test_tup[10];\n    var test_tup_o = test_tup[11];\n    var test_tup_n = test_tup[12];\n    var test_tup_m = test_tup[13];\n    var test_tup_l = test_tup[14];\n    var test_tup_k = test_tup[15];\n    var test_tup_j = test_tup[16];\n    var test_tup_i = test_tup[17];\n    var test_tup_h = test_tup[18];\n    var test_tup_g = test_tup[19];\n    var test_tup_f = test_tup[20];\n    var test_tup_e = test_tup[21];\n    var test_tup_d = test_tup[22];\n    var test_tup_c = test_tup[23];\n    var test_tup_b = test_tup[24];\n    var test_tup_a = test_tup[25];\n    var test_tup_0 = test_tup[26];\n    var test_tup_1 = test_tup[27];\n    var test_tup_2 = test_tup[28];\n    var test_tup_3 = test_tup[29];\n   \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "/tmp/tmpbdm11ln1.js:44\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var adjacent_coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    adjacent_coordinates.push([x-1,y-1]);\n    adjacent_coordinates.push([x-1,y]);\n    adjacent_coordinates.push([x-1,y+1]);\n    adjacent_coordinates.push([x,y-1]);\n    adjacent_coordinates.push([x,y+1]);\n    adjacent_coordinates.push([x+1,y-1]);\n    adjacent_coordinates.push([x+1,y]);\n    adjacent_coordinates.push([x+1,y+1]);\n    return adjacent_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2zl1_u65.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2zl1_u65.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = 0; j < test_tup[i].length; j++){\n            coordinates.push([i, j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpejfldzn3.js:17:10)\n    at Object.<anonymous> (/tmp/tmpejfldzn3.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tfor(var i = 0; i < test_tup.length; i++){\n\t\tvar temp = [];\n\t\tfor(var j = 0; j < test_tup[i].length; j++){\n\t\t\ttemp.push(test_tup[i][j]);\n\t\t}\n\t\tcoordinates.push(temp);\n\t}\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpt7nk9oqs.js:19:10)\n    at Object.<anonymous> (/tmp/tmpt7nk9oqs.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var adj_coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var x_coordinates = [x-1, x, x+1];\n    var y_coordinates = [y-1, y, y+1];\n    for (var i=0; i<x_coordinates.length; i++){\n        for (var j=0; j<y_coordinates.length; j++){\n            if (x_coordinates[i] != x || y_coordinates[j] != y){\n                adj_coordinates.push([x_coordinates[i], y_coordinates[j]]);\n            }\n        }\n    }\n    return adj_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpo4xeauyh.js:23:10)\n    at Object.<anonymous> (/tmp/tmpo4xeauyh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coord_list = [];\n    for (var i = -1; i < 2; i++){\n        for (var j = -1; j < 2; j++){\n            if (i == 0 && j == 0){\n                continue;\n            }\n            else{\n                coord_list.push([x + i, y + j]);\n            }\n        }\n    }\n    return coord_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpbr197hgz.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbr197hgz.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var adjacent_coordinates = [];\n    adjacent_coordinates.push([test_tup[0]+1, test_tup[1]]);\n    adjacent_coordinates.push([test_tup[0]-1, test_tup[1]]);\n    adjacent_coordinates.push([test_tup[0], test_tup[1]+1]);\n    adjacent_coordinates.push([test_tup[0], test_tup[1]-1]);\n    return adjacent_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp9dus02o2.js:16:10)\n    at Object.<anonymous> (/tmp/tmp9dus02o2.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1, y]);\n    coordinates.push([x-1, y]);\n    coordinates.push([x, y+1]);\n    coordinates.push([x, y-1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpq8vpytzw.js:18:10)\n    at Object.<anonymous> (/tmp/tmpq8vpytzw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for (var i = 0; i < test_tup.length; i++){\n        coordinates.push(test_tup[i][0]);\n        coordinates.push(test_tup[i][1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpt4x81baz.js:16:10)\n    at Object.<anonymous> (/tmp/tmpt4x81baz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        var temp = test_tup[i];\n        var x = temp[0];\n        var y = temp[1];\n        coordinates.push([x,y]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x-1,y]);\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n        coordinates.push([x+1,y+1]);\n        coordinates.push([x-1,y-1]);\n        coordinates.push([x+1,y-1]);\n        coordinates.push([x-1,y+1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    Na...\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp0tn1er74.js:26:10)\n    at Object.<anonymous> (/tmp/tmp0tn1er74.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ],\n    [ NaN, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var test_arr = test_tup.split(\",\");\n    var x = parseInt(test_arr[0]);\n    var y = parseInt(test_arr[1]);\n    var coordinates = [];\n    for(var i = -1; i <= 1; i++){\n        for(var j = -1; j <= 1; j++){\n            if(i != 0 || j != 0){\n                coordinates.push([x+i, y+j]);\n            }\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "/tmp/tmpwapasue0.js:3\n    var test_arr = test_tup.split(\",\");\n                            ^\n\nTypeError: test_tup.split is not a function\n    at get_coordinates (/tmp/tmpwapasue0.js:3:29)\n    at test (/tmp/tmpwapasue0.js:22:20)\n    at Object.<anonymous> (/tmp/tmpwapasue0.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var adjacent_coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    adjacent_coordinates.push([x-1,y-1]);\n    adjacent_coordinates.push([x-1,y]);\n    adjacent_coordinates.push([x-1,y+1]);\n    adjacent_coordinates.push([x,y-1]);\n    adjacent_coordinates.push([x,y+1]);\n    adjacent_coordinates.push([x+1,y-1]);\n    adjacent_coordinates.push([x+1,y]);\n    adjacent_coordinates.push([x+1,y+1]);\n    return adjacent_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2zl1_u65.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2zl1_u65.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x,y-1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmphuh7o4u8.js:18:10)\n    at Object.<anonymous> (/tmp/tmphuh7o4u8.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = 0; j < test_tup[i].length; j++){\n            coordinates.push(test_tup[i][j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpb49ngsmo.js:17:10)\n    at Object.<anonymous> (/tmp/tmpb49ngsmo.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x, y]);\n        coordinates.push([x, y+1]);\n        coordinates.push([x, y-1]);\n        coordinates.push([x+1, y]);\n        coordinates.push([x-1, y]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp7sywkdix.js:21:10)\n    at Object.<anonymous> (/tmp/tmp7sywkdix.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for (var i = 0; i < test_tup.length; i++){\n        for (var j = 0; j < test_tup[i].length; j++){\n            coordinates.push(test_tup[i][j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp7motvrhl.js:17:10)\n    at Object.<anonymous> (/tmp/tmp7motvrhl.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [[x-1,y-1],[x-1,y],[x-1,y+1],[x,y-1],[x,y+1],[x+1,y-1],[x+1,y],[x+1,y+1]];\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpuxbge6db.js:14:10)\n    at Object.<anonymous> (/tmp/tmpuxbge6db.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        if(test_tup[i][0] == test_tup[i][1]){\n            coordinates.push(test_tup[i]);\n        }\n    }\n    return coordinates;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpp8nwwmx1.js:16:10)\n    at Object.<anonymous> (/tmp/tmpp8nwwmx1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 4 ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2xlf4fds.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2xlf4fds.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var result = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    result.push([x+1,y]);\n    result.push([x-1,y]);\n    result.push([x,y+1]);\n    result.push([x,y-1]);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpljcjwotx.js:18:10)\n    at Object.<anonymous> (/tmp/tmpljcjwotx.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tfor(var i = 0; i < test_tup.length; i++){\n\t\tvar x = test_tup[i][0];\n\t\tvar y = test_tup[i][1];\n\t\tcoordinates.push([x, y]);\n\t\tcoordinates.push([x-1, y]);\n\t\tcoordinates.push([x+1, y]);\n\t\tcoordinates.push([x, y-1]);\n\t\tcoordinates.push([x, y+1]);\n\t}\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpqs1zww2d.js:21:10)\n    at Object.<anonymous> (/tmp/tmpqs1zww2d.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        for(var j=0; j<test_tup[i].length; j++){\n            coordinates.push(test_tup[i][j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmptqj0hgcx.js:17:10)\n    at Object.<anonymous> (/tmp/tmptqj0hgcx.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tvar coordinates = [];\n\tfor (var i = -1; i < 2; i++){\n\t\tfor (var j = -1; j < 2; j++){\n\t\t\tif (i != 0 || j != 0){\n\t\t\t\tcoordinates.push([x+i, y+j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpwwlaj37q.js:21:10)\n    at Object.<anonymous> (/tmp/tmpwwlaj37q.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tvar x_coordinates = [x-1, x, x+1];\n\tvar y_coordinates = [y-1, y, y+1];\n\tfor(var i = 0; i < x_coordinates.length; i++){\n\t\tfor(var j = 0; j < y_coordinates.length; j++){\n\t\t\tvar tup = [x_coordinates[i], y_coordinates[j]];\n\t\t\tif(tup[0] != x || tup[1] != y){\n\t\t\t\tcoordinates.push(tup);\n\t\t\t}\n\t\t}\n\t}\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp5a9ns0ue.js:24:10)\n    at Object.<anonymous> (/tmp/tmp5a9ns0ue.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x-1,y-1]);\n        coordinates.push([x-1,y]);\n        coordinates.push([x-1,y+1]);\n        coordinates.push([x,y-1]);\n        coordinates.push([x,y+1]);\n        coordinates.push([x+1,y-1]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x+1,y+1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp4n2bw6w_.js:24:10)\n    at Object.<anonymous> (/tmp/tmp4n2bw6w_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ NaN, NaN ],       [ NaN, undefined ],\n    [ NaN, NaN ],       [ undefined, NaN ],\n    [ undefined, NaN ], [ NaN, NaN ],\n    [ NaN, undefined ], [ NaN, NaN ],\n    [ NaN, NaN ],       [ NaN, undefined ],\n    [ NaN, NaN ],       [ undefined, NaN ],\n    [ undefined, NaN ], [ NaN, NaN ],\n    [ NaN, undefined ], [ NaN, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coord_list = [];\n    for(var i = -1; i < 2; i++){\n        for(var j = -1; j < 2; j++){\n            if(i == 0 && j == 0){\n                continue;\n            }\n            coord_list.push([x+i, y+j]);\n        }\n    }\n    return coord_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpsekkjzt6.js:22:10)\n    at Object.<anonymous> (/tmp/tmpsekkjzt6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var temp = [];\n        for(var j = 0; j < test_tup[i].length; j++){\n            temp.push(test_tup[i][j]);\n        }\n        coordinates.push(temp);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2yy7_olo.js:19:10)\n    at Object.<anonymous> (/tmp/tmp2yy7_olo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    coordinates.push([test_tup[0]-1,test_tup[1]-1]);\n    coordinates.push([test_tup[0]-1,test_tup[1]]);\n    coordinates.push([test_tup[0]-1,test_tup[1]+1]);\n    coordinates.push([test_tup[0],test_tup[1]-1]);\n    coordinates.push([test_tup[0],test_tup[1]+1]);\n    coordinates.push([test_tup[0]+1,test_tup[1]-1]);\n    coordinates.push([test_tup[0]+1,test_tup[1]]);\n    coordinates.push([test_tup[0]+1,test_tup[1]+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpb3iw_lyv.js:20:10)\n    at Object.<anonymous> (/tmp/tmpb3iw_lyv.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x,y]);\n        coordinates.push([x-1,y]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x,y-1]);\n        coordinates.push([x,y+1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpktq0l0hv.js:21:10)\n    at Object.<anonymous> (/tmp/tmpktq0l0hv.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        coordinates.push(test_tup[i][0]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpeblqjwhr.js:15:10)\n    at Object.<anonymous> (/tmp/tmpeblqjwhr.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var adjacent_coordinates = [];\n    adjacent_coordinates.push([x-1,y]);\n    adjacent_coordinates.push([x+1,y]);\n    adjacent_coordinates.push([x,y-1]);\n    adjacent_coordinates.push([x,y+1]);\n    return adjacent_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    4\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp6l9wyz5l.js:18:10)\n    at Object.<anonymous> (/tmp/tmp6l9wyz5l.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 2, 4 ], [ 4, 4 ], [ 3, 3 ], [ 3, 5 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var x_coordinates = [x-1, x, x+1];\n    var y_coordinates = [y-1, y, y+1];\n    for (var i = 0; i < x_coordinates.length; i++){\n        for (var j = 0; j < y_coordinates.length; j++){\n            if (x_coordinates[i] != x || y_coordinates[j] != y){\n                coordinates.push([x_coordinates[i], y_coordinates[j]]);\n            }\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpduweefh2.js:23:10)\n    at Object.<anonymous> (/tmp/tmpduweefh2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for (var i = 0; i < test_tup.length; i++) {\n        coordinates.push(test_tup[i][0]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpwq21j7o0.js:15:10)\n    at Object.<anonymous> (/tmp/tmpwq21j7o0.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpaxvs63sn.js:18:10)\n    at Object.<anonymous> (/tmp/tmpaxvs63sn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 3, 5 ], [ 3, 3 ], [ 4, 4 ], [ 2, 4 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = 0; j < test_tup[i].length; j++){\n            coordinates.push(test_tup[i][j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpb49ngsmo.js:17:10)\n    at Object.<anonymous> (/tmp/tmpb49ngsmo.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x+1, y]);\n        coordinates.push([x-1, y]);\n        coordinates.push([x, y+1]);\n        coordinates.push([x, y-1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpq62e86jv.js:20:10)\n    at Object.<anonymous> (/tmp/tmpq62e86jv.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2xlf4fds.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2xlf4fds.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coord_list = [];\n    for (var i = -1; i < 2; i++){\n        for (var j = -1; j < 2; j++){\n            if (i != 0 || j != 0){\n                coord_list.push([x+i,y+j]);\n            }\n        }\n    }\n    return coord_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp1ase83ew.js:21:10)\n    at Object.<anonymous> (/tmp/tmp1ase83ew.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var adjacent_coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    adjacent_coordinates.push([x-1,y-1]);\n    adjacent_coordinates.push([x-1,y]);\n    adjacent_coordinates.push([x-1,y+1]);\n    adjacent_coordinates.push([x,y-1]);\n    adjacent_coordinates.push([x,y+1]);\n    adjacent_coordinates.push([x+1,y-1]);\n    adjacent_coordinates.push([x+1,y]);\n    adjacent_coordinates.push([x+1,y+1]);\n    return adjacent_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2zl1_u65.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2zl1_u65.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x, y]);\n        coordinates.push([x, y+1]);\n        coordinates.push([x, y-1]);\n        coordinates.push([x+1, y]);\n        coordinates.push([x-1, y]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp7sywkdix.js:21:10)\n    at Object.<anonymous> (/tmp/tmp7sywkdix.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var x_coordinates = [x-1, x, x+1];\n    var y_coordinates = [y-1, y, y+1];\n    var coordinates = [];\n    for (var i = 0; i < x_coordinates.length; i++){\n        for (var j = 0; j < y_coordinates.length; j++){\n            var coordinate = [x_coordinates[i], y_coordinates[j]];\n            coordinates.push(coordinate);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var adj_coordinates = [];\n    for (var i = -1; i < 2; i++){\n        for (var j = -1; j < 2; j++){\n            if (i == 0 && j == 0){\n                continue;\n            }\n            adj_coordinates.push([x+i, y+j]);\n        }\n    }\n    return adj_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpaem8gom9.js:22:10)\n    at Object.<anonymous> (/tmp/tmpaem8gom9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var temp = test_tup[i];\n        if(temp[0] == 0){\n            coordinates.push([temp[0]+1, temp[1]]);\n            coordinates.push([temp[0], temp[1]+1]);\n            coordinates.push([temp[0], temp[1]-1]);\n        }\n        else if(temp[0] == 9){\n            coordinates.push([temp[0]-1, temp[1]]);\n            coordinates.push([temp[0], temp[1]+1]);\n            coordinates.push([temp[0], temp[1]-1]);\n        }\n        else if(temp[1] == 0){\n            coordinates.push([temp[0]+1, temp[1]]);\n            coordinates.push([temp[0]-1, temp[1]]);\n            coordinates.push([temp[0], temp[1]+1]);\n        }\n        else if(temp[1] == 9){\n            coordinates.push([temp[0]+1, temp[1]]);\n            coordinates.push([temp[0]-1, temp[1]]);\n            coordinates.push([temp[0], temp[1]-1]);\n        }\n        else{\n            coordinates.push([temp[0]+1, temp[1]]);\n            coordinates.push([temp[0]-1, temp[1]]);\n            coordinates.push([temp[0], temp[1]+1]);\n            coordinates.push([temp[0], temp[1]-1]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp_evdrvxj.js:41:10)\n    at Object.<anonymous> (/tmp/tmp_evdrvxj.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp_pdgaj_w.js:22:10)\n    at Object.<anonymous> (/tmp/tmp_pdgaj_w.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 3, 3 ],\n    [ 4, 3 ], [ 2, 4 ],\n    [ 4, 4 ], [ 2, 5 ],\n    [ 3, 5 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var temp = [];\n        for(var j = 0; j < test_tup[i].length; j++){\n            temp.push(test_tup[i][j]);\n        }\n        coordinates.push(temp);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2yy7_olo.js:19:10)\n    at Object.<anonymous> (/tmp/tmp2yy7_olo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2xlf4fds.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2xlf4fds.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x,y-1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmphuh7o4u8.js:18:10)\n    at Object.<anonymous> (/tmp/tmphuh7o4u8.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var x_coordinates = [x-1, x, x+1];\n    var y_coordinates = [y-1, y, y+1];\n    var coordinates = [];\n    for (var i = 0; i < x_coordinates.length; i++){\n        for (var j = 0; j < y_coordinates.length; j++){\n            coordinates.push([x_coordinates[i], y_coordinates[j]]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var test_array = test_tup.split(',');\n    var test_array_int = test_array.map(Number);\n    var x = test_array_int[0];\n    var y = test_array_int[1];\n    var adjacent_coordinates = [];\n    adjacent_coordinates.push([x-1,y-1]);\n    adjacent_coordinates.push([x-1,y]);\n    adjacent_coordinates.push([x-1,y+1]);\n    adjacent_coordinates.push([x,y-1]);\n    adjacent_coordinates.push([x,y+1]);\n    adjacent_coordinates.push([x+1,y-1]);\n    adjacent_coordinates.push([x+1,y]);\n    adjacent_coordinates.push([x+1,y+1]);\n    return adjacent_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "/tmp/tmpfz1lgfee.js:3\n    var test_array = test_tup.split(',');\n                              ^\n\nTypeError: test_tup.split is not a function\n    at get_coordinates (/tmp/tmpfz1lgfee.js:3:31)\n    at test (/tmp/tmpfz1lgfee.js:24:20)\n    at Object.<anonymous> (/tmp/tmpfz1lgfee.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var test_tup = [1,2];\n    var test_tup_2 = [2,1];\n    var test_tup_3 = [2,3];\n    var test_tup_4 = [3,2];\n    var test_tup_5 = [3,1];\n    var test_tup_6 = [1,3];\n    var test_tup_7 = [1,1];\n    var test_tup_8 = [2,2];\n    var test_tup_9 = [3,3];\n    var test_tup_10 = [4,4];\n    var test_tup_11 = [1,4];\n    var test_tup_12 = [4,1];\n    var test_tup_13 = [4,3];\n    var test_tup_14 = [3,4];\n    var test_tup_15 = [4,2];\n    var test_tup_16 = [2,4];\n    var test_tup_17 = [4,4];\n    var test_tup_18 = [1,5];\n    var test_tup_19 = [5,1];\n    var test_tup_20 = [5,3];\n    var test_tup_21 = [3,5];\n    var test_tup_22 = [5,2];\n    var test_tup_23 = [2,5];\n    var test_tup_24 = [5,5];\n    var test_tup_25 = [1,6];\n    var test_tup_26 = [6,1];\n    var test_tup_27 = [6,3];\n    var test_tup_28 = [3,6];\n    var test_tup_29 = [6,2];\n    var test_tup_30 = [2,6];\n    var test_tup_31 = [6,6];\n    var test_tup_32 = [1,7];\n    var test_tup_33 = [7,1];\n    var test_tup_34 = [7,3];\n    var test\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "/tmp/tmpz5utw70n.js:48\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var test_tup = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10]];\n    var test_tup2 = [];\n    for(var i = 0; i < test_tup.length; i++){\n        test_tup2.push(test_tup[i][0]);\n    }\n    return test_tup2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp6t3ga_ad.js:16:10)\n    at Object.<anonymous> (/tmp/tmp6t3ga_ad.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1, 2, 3, 4, 5,\n    6, 7, 8, 9\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpaxvs63sn.js:18:10)\n    at Object.<anonymous> (/tmp/tmpaxvs63sn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 3, 5 ], [ 3, 3 ], [ 4, 4 ], [ 2, 4 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [[x-1,y-1],[x-1,y],[x-1,y+1],[x,y-1],[x,y+1],[x+1,y-1],[x+1,y],[x+1,y+1]];\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpuxbge6db.js:14:10)\n    at Object.<anonymous> (/tmp/tmpuxbge6db.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var result = [];\n    for(var i = -1; i < 2; i++){\n        for(var j = -1; j < 2; j++){\n            if(i == 0 && j == 0){\n                continue;\n            }\n            result.push([x+i, y+j]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp5gpujl8x.js:22:10)\n    at Object.<anonymous> (/tmp/tmp5gpujl8x.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tfor(var i = 0; i < test_tup.length; i++){\n\t\tvar x = test_tup[i][0];\n\t\tvar y = test_tup[i][1];\n\t\tcoordinates.push([x-1, y-1]);\n\t\tcoordinates.push([x-1, y]);\n\t\tcoordinates.push([x-1, y+1]);\n\t\tcoordinates.push([x, y-1]);\n\t\tcoordinates.push([x, y+1]);\n\t\tcoordinates.push([x+1, y-1]);\n\t\tcoordinates.push([x+1, y]);\n\t\tcoordinates.push([x+1, y+1]);\n\t}\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpsdxp_mb0.js:24:10)\n    at Object.<anonymous> (/tmp/tmpsdxp_mb0.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ NaN, NaN ],       [ NaN, undefined ],\n    [ NaN, NaN ],       [ undefined, NaN ],\n    [ undefined, NaN ], [ NaN, NaN ],\n    [ NaN, undefined ], [ NaN, NaN ],\n    [ NaN, NaN ],       [ NaN, undefined ],\n    [ NaN, NaN ],       [ undefined, NaN ],\n    [ undefined, NaN ], [ NaN, NaN ],\n    [ NaN, undefined ], [ NaN, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = 0; j < test_tup[i].length; j++){\n            coordinates.push([i,j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp6ya_6a0k.js:17:10)\n    at Object.<anonymous> (/tmp/tmp6ya_6a0k.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for (var i = 0; i < test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x, y]);\n        coordinates.push([x+1, y]);\n        coordinates.push([x-1, y]);\n        coordinates.push([x, y+1]);\n        coordinates.push([x, y-1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp1s2vmt_f.js:21:10)\n    at Object.<anonymous> (/tmp/tmp1s2vmt_f.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n  var coordinates = [];\n  var x = test_tup[0];\n  var y = test_tup[1];\n  coordinates.push([x-1, y-1]);\n  coordinates.push([x-1, y]);\n  coordinates.push([x-1, y+1]);\n  coordinates.push([x, y-1]);\n  coordinates.push([x, y+1]);\n  coordinates.push([x+1, y-1]);\n  coordinates.push([x+1, y]);\n  coordinates.push([x+1, y+1]);\n  return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpnuid3tpx.js:22:10)\n    at Object.<anonymous> (/tmp/tmpnuid3tpx.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar test_tup = [1,2];\n\tvar test_tup_2 = [1,2,3];\n\tvar test_tup_3 = [1,2,3,4];\n\tvar test_tup_4 = [1,2,3,4,5];\n\tvar test_tup_5 = [1,2,3,4,5,6];\n\tvar test_tup_6 = [1,2,3,4,5,6,7];\n\tvar test_tup_7 = [1,2,3,4,5,6,7,8];\n\tvar test_tup_8 = [1,2,3,4,5,6,7,8,9];\n\tvar test_tup_9 = [1,2,3,4,5,6,7,8,9,10];\n\tvar test_tup_10 = [1,2,3,4,5,6,7,8,9,10,11];\n\tvar test_tup_11 = [1,2,3,4,5,6,7,8,9,10,11,12];\n\tvar test_tup_12 = [1,2,3,4,5,6,7,8,9,10,11,12,13];\n\tvar test_tup_13 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14];\n\tvar test_tup_14 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];\n\tvar test_tup_15 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16];\n\tvar test_tup_16 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17];\n\tvar test_tup_17 = [1,2,3,4,5,6,7,8,9,10,11,12\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "/tmp/tmp9211fea4.js:20\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for (var i = 0; i < test_tup.length; i++){\n        for (var j = 0; j < test_tup[i].length; j++){\n            coordinates.push(test_tup[i][j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp7motvrhl.js:17:10)\n    at Object.<anonymous> (/tmp/tmp7motvrhl.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        var temp = [];\n        temp.push(x-1,y-1);\n        coordinates.push(temp);\n        temp = [];\n        temp.push(x-1,y);\n        coordinates.push(temp);\n        temp = [];\n        temp.push(x-1,y+1);\n        coordinates.push(temp);\n        temp = [];\n        temp.push(x,y-1);\n        coordinates.push(temp);\n        temp = [];\n        temp.push(x,y+1);\n        coordinates.push(temp);\n        temp = [];\n        temp.push(x+1,y-1);\n        coordinates.push(temp);\n        temp = [];\n        temp.push(x+1,y);\n        coordinates.push(temp);\n        temp = [];\n        temp.push(x+1,y+1);\n        coordinates.push(temp);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp3n19htpi.js:40:10)\n    at Object.<anonymous> (/tmp/tmp3n19htpi.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ NaN, NaN ],       [ NaN, undefined ],\n    [ NaN, NaN ],       [ undefined, NaN ],\n    [ undefined, NaN ], [ NaN, NaN ],\n    [ NaN, undefined ], [ NaN, NaN ],\n    [ NaN, NaN ],       [ NaN, undefined ],\n    [ NaN, NaN ],       [ undefined, NaN ],\n    [ undefined, NaN ], [ NaN, NaN ],\n    [ NaN, undefined ], [ NaN, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tvar coordinates = [];\n\tvar x_coordinates = [x-1, x, x+1];\n\tvar y_coordinates = [y-1, y, y+1];\n\tfor(var i = 0; i < x_coordinates.length; i++){\n\t\tfor(var j = 0; j < y_coordinates.length; j++){\n\t\t\tvar new_coordinate = [x_coordinates[i], y_coordinates[j]];\n\t\t\tif(!(new_coordinate[0] == x && new_coordinate[1] == y)){\n\t\t\t\tcoordinates.push(new_coordinate);\n\t\t\t}\n\t\t}\n\t}\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpclumx7nu.js:24:10)\n    at Object.<anonymous> (/tmp/tmpclumx7nu.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tvar coord_array = [];\n\tcoord_array.push([x-1,y-1]);\n\tcoord_array.push([x-1,y]);\n\tcoord_array.push([x-1,y+1]);\n\tcoord_array.push([x,y-1]);\n\tcoord_array.push([x,y+1]);\n\tcoord_array.push([x+1,y-1]);\n\tcoord_array.push([x+1,y]);\n\tcoord_array.push([x+1,y+1]);\n\treturn coord_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpf_u641fe.js:22:10)\n    at Object.<anonymous> (/tmp/tmpf_u641fe.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x,y]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x-1,y]);\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpulj8dt_m.js:21:10)\n    at Object.<anonymous> (/tmp/tmpulj8dt_m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [];\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfjrqvm9l.js:18:10)\n    at Object.<anonymous> (/tmp/tmpfjrqvm9l.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 3, 5 ], [ 3, 3 ], [ 4, 4 ], [ 2, 4 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpo3fm5xky.js:22:10)\n    at Object.<anonymous> (/tmp/tmpo3fm5xky.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 3, 3 ],\n    [ 4, 3 ], [ 2, 4 ],\n    [ 4, 4 ], [ 2, 5 ],\n    [ 3, 5 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x, y+1]);\n        coordinates.push([x, y-1]);\n        coordinates.push([x+1, y]);\n        coordinates.push([x-1, y]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpp1j9qs17.js:20:10)\n    at Object.<anonymous> (/tmp/tmpp1j9qs17.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2xlf4fds.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2xlf4fds.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tvar coordinates = [];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpd2qei23_.js:22:10)\n    at Object.<anonymous> (/tmp/tmpd2qei23_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x,y]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x-1,y]);\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp99tx_w3o.js:21:10)\n    at Object.<anonymous> (/tmp/tmp99tx_w3o.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coord_list = [];\n    for (var i = -1; i < 2; i++){\n        for (var j = -1; j < 2; j++){\n            if (i != 0 || j != 0){\n                coord_list.push([x + i, y + j]);\n            }\n        }\n    }\n    return coord_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp4294607p.js:21:10)\n    at Object.<anonymous> (/tmp/tmp4294607p.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var adjacent_coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    adjacent_coordinates.push([x-1,y]);\n    adjacent_coordinates.push([x+1,y]);\n    adjacent_coordinates.push([x,y-1]);\n    adjacent_coordinates.push([x,y+1]);\n    return adjacent_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    4\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpuntwvmjw.js:18:10)\n    at Object.<anonymous> (/tmp/tmpuntwvmjw.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 2, 4 ], [ 4, 4 ], [ 3, 3 ], [ 3, 5 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        coordinates.push(test_tup[i][0]);\n        coordinates.push(test_tup[i][1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmppfi1cgq8.js:16:10)\n    at Object.<anonymous> (/tmp/tmppfi1cgq8.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmphi0x_fjh.js:22:10)\n    at Object.<anonymous> (/tmp/tmphi0x_fjh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = 0; j < test_tup[i].length; j++){\n            if(test_tup[i][j] == 1){\n                coordinates.push([i, j]);\n            }\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp8kyvyzlu.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8kyvyzlu.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpo3fm5xky.js:22:10)\n    at Object.<anonymous> (/tmp/tmpo3fm5xky.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 3, 3 ],\n    [ 4, 3 ], [ 2, 4 ],\n    [ 4, 4 ], [ 2, 5 ],\n    [ 3, 5 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coord_list = [];\n    for(var i = -1; i < 2; i++){\n        for(var j = -1; j < 2; j++){\n            if(i != 0 || j != 0){\n                coord_list.push([x + i, y + j]);\n            }\n        }\n    }\n    return coord_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpz09rs93t.js:21:10)\n    at Object.<anonymous> (/tmp/tmpz09rs93t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmphi0x_fjh.js:22:10)\n    at Object.<anonymous> (/tmp/tmphi0x_fjh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x, y+1]);\n\tcoordinates.push([x, y-1]);\n\tcoordinates.push([x+1, y]);\n\tcoordinates.push([x-1, y]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpbr9kvoph.js:18:10)\n    at Object.<anonymous> (/tmp/tmpbr9kvoph.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 3, 5 ], [ 3, 3 ], [ 4, 4 ], [ 2, 4 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar result = [];\n\tfor(var i = 0; i < test_tup.length; i++){\n\t\tvar x = test_tup[i][0];\n\t\tvar y = test_tup[i][1];\n\t\tvar temp = [];\n\t\ttemp.push([x-1,y]);\n\t\ttemp.push([x+1,y]);\n\t\ttemp.push([x,y-1]);\n\t\ttemp.push([x,y+1]);\n\t\tresult.push(temp);\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    [\n      NaN,\n      undefined\n    ],\n    [\n      NaN,\n      undefined\n    ],\n    [\n      undefined,\n      NaN\n    ],\n    [\n      undefined,\n      NaN\n    ]\n  ],\n  [\n    [\n      NaN,\n      undefined\n    ],\n    [\n      NaN,\n      undefined\n    ],\n    [\n      undefined,\n      NaN\n    ],\n    [\n      undefined,\n      NaN\n    ]\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpqnpxzeth.js:22:10)\n    at Object.<anonymous> (/tmp/tmpqnpxzeth.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [\n      [ NaN, undefined ],\n      [ NaN, undefined ],\n      [ undefined, NaN ],\n      [ undefined, NaN ]\n    ],\n    [\n      [ NaN, undefined ],\n      [ NaN, undefined ],\n      [ undefined, NaN ],\n      [ undefined, NaN ]\n    ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coord_arr = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoord_arr.push([x-1,y]);\n\tcoord_arr.push([x+1,y]);\n\tcoord_arr.push([x,y-1]);\n\tcoord_arr.push([x,y+1]);\n\treturn coord_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    4\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpnmkuz0_3.js:18:10)\n    at Object.<anonymous> (/tmp/tmpnmkuz0_3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 2, 4 ], [ 4, 4 ], [ 3, 3 ], [ 3, 5 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = 0; j < test_tup[i].length; j++){\n            coordinates.push(test_tup[i][j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpb49ngsmo.js:17:10)\n    at Object.<anonymous> (/tmp/tmpb49ngsmo.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmphi0x_fjh.js:22:10)\n    at Object.<anonymous> (/tmp/tmphi0x_fjh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var x_coords = [x-1, x, x+1];\n    var y_coords = [y-1, y, y+1];\n    var coords = [];\n    for(var i = 0; i < x_coords.length; i++){\n        for(var j = 0; j < y_coords.length; j++){\n            coords.push([x_coords[i], y_coords[j]]);\n        }\n    }\n    return coords;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var adj_coordinates = [];\n    for (var i = -1; i < 2; i++){\n        for (var j = -1; j < 2; j++){\n            if (i == 0 && j == 0){\n                continue;\n            }\n            adj_coordinates.push([x + i, y + j]);\n        }\n    }\n    return adj_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmps9fyl7n6.js:22:10)\n    at Object.<anonymous> (/tmp/tmps9fyl7n6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [[x-1,y-1],[x-1,y],[x-1,y+1],[x,y-1],[x,y+1],[x+1,y-1],[x+1,y],[x+1,y+1]];\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpuxbge6db.js:14:10)\n    at Object.<anonymous> (/tmp/tmpuxbge6db.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0;i<test_tup.length;i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x-1,y]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfmnjnmy2.js:20:10)\n    at Object.<anonymous> (/tmp/tmpfmnjnmy2.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2xlf4fds.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2xlf4fds.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        var temp = [];\n        for(var j=0; j<test_tup[i].length; j++){\n            temp.push(test_tup[i][j]);\n        }\n        coordinates.push(temp);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp_abzzjob.js:19:10)\n    at Object.<anonymous> (/tmp/tmp_abzzjob.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2xlf4fds.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2xlf4fds.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var result = [];\n    for(var i = 0; i < test_tup.length; i++){\n        result.push(test_tup[i][0]);\n        result.push(test_tup[i][1]);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpmbdzhcre.js:16:10)\n    at Object.<anonymous> (/tmp/tmpmbdzhcre.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0;i<test_tup.length;i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x,y+1]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x,y-1]);\n        coordinates.push([x-1,y]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpr7noju3e.js:20:10)\n    at Object.<anonymous> (/tmp/tmpr7noju3e.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ NaN, undefined ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        var temp = [];\n        for(var j = 0; j < test_tup[i].length; j++){\n            temp.push(test_tup[i][j]);\n        }\n        coordinates.push(temp);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2yy7_olo.js:19:10)\n    at Object.<anonymous> (/tmp/tmp2yy7_olo.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        coordinates.push(test_tup[i][0]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpeblqjwhr.js:15:10)\n    at Object.<anonymous> (/tmp/tmpeblqjwhr.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpaxvs63sn.js:18:10)\n    at Object.<anonymous> (/tmp/tmpaxvs63sn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 3, 5 ], [ 3, 3 ], [ 4, 4 ], [ 2, 4 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var adjacent_coordinates = [];\n    for (var i = -1; i < 2; i++){\n        for (var j = -1; j < 2; j++){\n            if (i == 0 && j == 0){\n                continue;\n            }\n            adjacent_coordinates.push([x + i, y + j]);\n        }\n    }\n    return adjacent_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpw65h0mac.js:22:10)\n    at Object.<anonymous> (/tmp/tmpw65h0mac.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coord_array = [];\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = 0; j < test_tup[i].length; j++){\n            coord_array.push(test_tup[i][j]);\n        }\n    }\n    return coord_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpodybwdmc.js:17:10)\n    at Object.<anonymous> (/tmp/tmpodybwdmc.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var x_coordinates = [x-1, x, x+1];\n    var y_coordinates = [y-1, y, y+1];\n    var coordinates = [];\n    for (var i=0; i<x_coordinates.length; i++){\n        for (var j=0; j<y_coordinates.length; j++){\n            coordinates.push([x_coordinates[i], y_coordinates[j]]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        coordinates.push(test_tup[i][0]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpeblqjwhr.js:15:10)\n    at Object.<anonymous> (/tmp/tmpeblqjwhr.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = 0; j < test_tup[i].length; j++){\n            coordinates.push(test_tup[i][j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpb49ngsmo.js:17:10)\n    at Object.<anonymous> (/tmp/tmpb49ngsmo.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0;i<test_tup.length;i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x-1,y]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfmnjnmy2.js:20:10)\n    at Object.<anonymous> (/tmp/tmpfmnjnmy2.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var adj_coordinates = [[x-1,y-1],[x-1,y],[x-1,y+1],[x,y-1],[x,y+1],[x+1,y-1],[x+1,y],[x+1,y+1]];\n    return adj_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpbnvhxwcr.js:14:10)\n    at Object.<anonymous> (/tmp/tmpbnvhxwcr.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [];\n    for (var i = -1; i < 2; i++){\n        for (var j = -1; j < 2; j++){\n            if (i == 0 && j == 0){\n                continue;\n            }\n            coordinates.push([x+i, y+j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp7s9fy4t8.js:22:10)\n    at Object.<anonymous> (/tmp/tmp7s9fy4t8.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var test_tup_x = test_tup[0];\n    var test_tup_y = test_tup[1];\n    var test_tup_z = test_tup[2];\n    var test_tup_adj = [];\n    for (var i = 0; i < test_tup_x.length; i++){\n        for (var j = 0; j < test_tup_y.length; j++){\n            for (var k = 0; k < test_tup_z.length; k++){\n                test_tup_adj.push([test_tup_x[i], test_tup_y[j], test_tup_z[k]]);\n            }\n        }\n    }\n    return test_tup_adj;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpxujl8jdh.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxujl8jdh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2xlf4fds.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2xlf4fds.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var test_tup = [1,2];\n    var test_tup_adj = [];\n    var test_tup_adj_x = [];\n    var test_tup_adj_y = [];\n    var test_tup_adj_x_y = [];\n    var test_tup_adj_x_y_tup = [];\n    var test_tup_adj_x_y_tup_final = [];\n    for (var i = 0; i < test_tup.length; i++){\n        test_tup_adj.push(test_tup[i] - 1);\n        test_tup_adj.push(test_tup[i]);\n        test_tup_adj.push(test_tup[i] + 1);\n    }\n    for (var i = 0; i < test_tup_adj.length; i++){\n        if (i % 3 == 0){\n            test_tup_adj_x.push(test_tup_adj[i]);\n        }\n        else if (i % 3 == 1){\n            test_tup_adj_y.push(test_tup_adj[i]);\n        }\n    }\n    for (var i = 0; i < test_tup_adj_x.length; i++){\n        for (var j = 0; j < test_tup_adj_y.length; j++){\n            test_tup_adj_x_y.push(test_tup_adj_x[i]);\n            test_tup_adj_x_y.push(test_tup_adj_y[j]);\n        }\n    }\n    for (var i = 0; i < test_tup_adj_x_y.length; i++){\n        if (i % 2 == 0){\n            test_tup_adj_x_y_tup.push(test_tup_adj_x_y[i]);\n        }\n        else if (i % 2 == 1){\n            test_tup_adj_x_y_tup.push(test_tup_adj_x_y[i]);\n            test_tup_\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "/tmp/tmpgpwamdoi.js:46\ntest();\n       \n\nSyntaxError: Unexpected end of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for (var i = 0; i < test_tup.length; i++){\n        for (var j = 0; j < test_tup[i].length; j++){\n            coordinates.push(test_tup[i][j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp7motvrhl.js:17:10)\n    at Object.<anonymous> (/tmp/tmp7motvrhl.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coord_array = [];\n    for (var i = -1; i < 2; i++){\n        for (var j = -1; j < 2; j++){\n            if (i == 0 && j == 0){\n                continue;\n            }\n            coord_array.push([x+i, y+j]);\n        }\n    }\n    return coord_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpykxnky36.js:22:10)\n    at Object.<anonymous> (/tmp/tmpykxnky36.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x-1,y]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpnxiw5b10.js:20:10)\n    at Object.<anonymous> (/tmp/tmpnxiw5b10.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ NaN, undefined ],\n    [ NaN, undefined ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x+1,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x-1,y-1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    4,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    2,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpjerj7sg0.js:22:10)\n    at Object.<anonymous> (/tmp/tmpjerj7sg0.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 4, 4 ], [ 2, 4 ],\n    [ 3, 5 ], [ 3, 3 ],\n    [ 4, 5 ], [ 4, 3 ],\n    [ 2, 5 ], [ 2, 3 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0;i<test_tup.length;i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push(x);\n        coordinates.push(y);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpna26wgxz.js:18:10)\n    at Object.<anonymous> (/tmp/tmpna26wgxz.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = 0; j < test_tup[i].length; j++){\n            coordinates.push(test_tup[i][j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpb49ngsmo.js:17:10)\n    at Object.<anonymous> (/tmp/tmpb49ngsmo.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var test_tup = test_tup.split(',');\n    var x = parseInt(test_tup[0]);\n    var y = parseInt(test_tup[1]);\n    var coordinates = [];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "/tmp/tmpvh91keyr.js:3\n    var test_tup = test_tup.split(',');\n                            ^\n\nTypeError: test_tup.split is not a function\n    at get_coordinates (/tmp/tmpvh91keyr.js:3:29)\n    at test (/tmp/tmpvh91keyr.js:23:20)\n    at Object.<anonymous> (/tmp/tmpvh91keyr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2xlf4fds.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2xlf4fds.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        coordinates.push(test_tup[i][0]);\n        coordinates.push(test_tup[i][1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpuo64kqiv.js:16:10)\n    at Object.<anonymous> (/tmp/tmpuo64kqiv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, undefined ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var adjacent_coordinates = [];\n    for(var i = -1; i <= 1; i++){\n        for(var j = -1; j <= 1; j++){\n            if(i != 0 || j != 0){\n                adjacent_coordinates.push([x+i, y+j]);\n            }\n        }\n    }\n    return adjacent_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp_m3oxvrs.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_m3oxvrs.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tfor (var i = 0; i < test_tup.length; i++) {\n\t\tvar x = test_tup[i][0];\n\t\tvar y = test_tup[i][1];\n\t\tvar x_coordinates = [x-1, x, x+1];\n\t\tvar y_coordinates = [y-1, y, y+1];\n\t\tfor (var j = 0; j < x_coordinates.length; j++) {\n\t\t\tfor (var k = 0; k < y_coordinates.length; k++) {\n\t\t\t\tvar coordinate = [x_coordinates[j], y_coordinates[k]];\n\t\t\t\tif (!(coordinate[0] == x && coordinate[1] == y)) {\n\t\t\t\t\tcoordinates.push(coordinate);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    NaN,\n    NaN\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpz_5dtr7x.js:26:10)\n    at Object.<anonymous> (/tmp/tmpz_5dtr7x.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ NaN, NaN ],       [ NaN, undefined ],\n    [ NaN, NaN ],       [ undefined, NaN ],\n    [ undefined, NaN ], [ NaN, NaN ],\n    [ NaN, undefined ], [ NaN, NaN ],\n    [ NaN, NaN ],       [ NaN, undefined ],\n    [ NaN, NaN ],       [ undefined, NaN ],\n    [ undefined, NaN ], [ NaN, NaN ],\n    [ NaN, undefined ], [ NaN, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var coordinates = [];\n    for(var i = -1; i < 2; i++){\n        for(var j = -1; j < 2; j++){\n            if(i == 0 && j == 0){\n                continue;\n            }\n            coordinates.push([x+i, y+j]);\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2g8wp8y_.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2g8wp8y_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i=0; i<test_tup.length; i++){\n        var x = test_tup[i][0];\n        var y = test_tup[i][1];\n        coordinates.push([x,y]);\n        coordinates.push([x+1,y]);\n        coordinates.push([x-1,y]);\n        coordinates.push([x,y+1]);\n        coordinates.push([x,y-1]);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    NaN,\n    undefined\n  ],\n  [\n    undefined,\n    NaN\n  ],\n  [\n    undefined,\n    NaN\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpulj8dt_m.js:21:10)\n    at Object.<anonymous> (/tmp/tmpulj8dt_m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ],\n    [ undefined, undefined ],\n    [ NaN, undefined ],\n    [ NaN, undefined ],\n    [ undefined, NaN ],\n    [ undefined, NaN ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var test_arr = [];\n    for(var i=0; i<test_tup.length; i++){\n        var test_arr_temp = [];\n        for(var j=0; j<test_tup[i].length; j++){\n            test_arr_temp.push(test_tup[i][j]);\n        }\n        test_arr.push(test_arr_temp);\n    }\n    var coordinates = [];\n    for(var i=0; i<test_arr.length; i++){\n        var temp = [];\n        for(var j=0; j<test_arr[i].length; j++){\n            temp.push(test_arr[i][j]);\n        }\n        coordinates.push(temp);\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [],\n  []\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpx5cnma4b.js:27:10)\n    at Object.<anonymous> (/tmp/tmpx5cnma4b.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [], [] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    for(var i = 0; i < test_tup.length; i++){\n        for(var j = 0; j < test_tup[i].length; j++){\n            if(test_tup[i][j] == 1){\n                coordinates.push([i, j]);\n            }\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp8kyvyzlu.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8kyvyzlu.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n\tvar coordinates = [];\n\tvar x = test_tup[0];\n\tvar y = test_tup[1];\n\tcoordinates.push([x-1,y-1]);\n\tcoordinates.push([x-1,y]);\n\tcoordinates.push([x-1,y+1]);\n\tcoordinates.push([x,y-1]);\n\tcoordinates.push([x,y+1]);\n\tcoordinates.push([x+1,y-1]);\n\tcoordinates.push([x+1,y]);\n\tcoordinates.push([x+1,y+1]);\n\treturn coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpfklq14ow.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfklq14ow.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x+1,y]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x,y-1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    4,\n    4\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    3,\n    3\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2xlf4fds.js:18:10)\n    at Object.<anonymous> (/tmp/tmp2xlf4fds.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 4, 4 ], [ 2, 4 ], [ 3, 5 ], [ 3, 3 ] ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var coordinates = [];\n    var x = test_tup[0];\n    var y = test_tup[1];\n    coordinates.push([x-1,y-1]);\n    coordinates.push([x-1,y]);\n    coordinates.push([x-1,y+1]);\n    coordinates.push([x,y-1]);\n    coordinates.push([x,y+1]);\n    coordinates.push([x+1,y-1]);\n    coordinates.push([x+1,y]);\n    coordinates.push([x+1,y+1]);\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1665510654,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmp2co3yzon.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2co3yzon.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var test_tup = test_tup;\n    var test_tup_x = test_tup[0];\n    var test_tup_y = test_tup[1];\n    var test_tup_z = test_tup[2];\n    var coordinates = [];\n    for (var i = 0; i < test_tup_x.length; i++) {\n        for (var j = 0; j < test_tup_y.length; j++) {\n            for (var k = 0; k < test_tup_z.length; k++) {\n                coordinates.push([test_tup_x[i], test_tup_y[j], test_tup_z[k]]);\n            }\n        }\n    }\n    return coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpdfgdmt21.js:23:10)\n    at Object.<anonymous> (/tmp/tmpdfgdmt21.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates(test_tup){\n    var x = test_tup[0];\n    var y = test_tup[1];\n    var adj_coordinates = [];\n    for(var i = -1; i < 2; i++){\n        for(var j = -1; j < 2; j++){\n            if(i == 0 && j == 0){\n                continue;\n            }\n            adj_coordinates.push([x+i, y+j]);\n        }\n    }\n    return adj_coordinates;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_coordinates;\n  assert.deepEqual(candidate([3, 4]),[[2, 3], [2, 4], [2, 5], [3, 3], [3, 4], [3, 5], [4, 3], [4, 4], [4, 5]]);\n  assert.deepEqual(candidate([4, 5]),[[3, 4], [3, 5], [3, 6], [4, 4], [4, 5], [4, 6], [5, 4], [5, 5], [5, 6]]);\n  assert.deepEqual(candidate([5, 6]),[[4, 5], [4, 6], [4, 7], [5, 5], [5, 6], [5, 7], [6, 5], [6, 6], [6, 7]]);\n}\n\ntest();",
      "timestamp": 1666123924,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  [\n    2,\n    3\n  ],\n  [\n    2,\n    4\n  ],\n  [\n    2,\n    5\n  ],\n  [\n    3,\n    3\n  ],\n  [\n    3,\n    4\n  ],\n  [\n    3,\n    5\n  ],\n  [\n    4,\n    3\n  ],\n  [\n    4,\n    4\n  ],\n  [\n    4,\n    5\n  ]\n]\n    at test (/tmp/tmpmx4ubiw1.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmx4ubiw1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 5 ], [ 4, 3 ],\n    [ 4, 4 ], [ 4, 5 ]\n  ],\n  expected: [\n    [ 2, 3 ], [ 2, 4 ],\n    [ 2, 5 ], [ 3, 3 ],\n    [ 3, 4 ], [ 3, 5 ],\n    [ 4, 3 ], [ 4, 4 ],\n    [ 4, 5 ]\n  ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
{
  "name": "mbpp_59_is_octagonal",
  "language": "js",
  "prompt": "//Write a function to find the nth octagonal number.\nfunction is_octagonal(n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_59_is_octagonal.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_octagonal;\n  assert.deepEqual(candidate(5),65);\n  assert.deepEqual(candidate(10),280);\n  assert.deepEqual(candidate(15),645);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "\tvar x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n\treturn x == Math.floor(x);\n}\n",
    "\treturn ((Math.sqrt(1 + 24 * n) + 1) / 6) % 1 == 0;\n}\n",
    "    return (Math.sqrt(1+24*n)%6==5);\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\treturn ((Math.sqrt(1+24*n)+1)/6)%1==0;\n}",
    "  return (Math.sqrt(1+24*n)%6==5);\n}\n",
    "\treturn ((Math.sqrt(1+24*n)+1)/6)%1===0;\n}\n",
    "  return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "    var result = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return result === Math.floor(result);\n}\n",
    "\treturn ((1 + Math.sqrt(1 + 24 * n)) / 6) % 1 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    var m = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return m == Math.floor(m);\n}\n",
    "\treturn (Math.sqrt(1+24*n)%6==5);\n}",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x % 1 === 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "\treturn ((Math.sqrt(1 + 24 * n) + 1) / 6) % 1 === 0;\n}\n",
    "    return ((Math.sqrt(1 + 24 * n) + 1) / 6) % 1 === 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24*n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return ((Math.sqrt(1 + 24*n) + 1)/6) % 1 == 0;\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x % 1 == 0;\n}\n",
    "\tvar x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n\treturn x === Math.floor(x);\n}\n",
    "\tvar x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n\treturn x === Math.floor(x);\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1+24*n)%6==5);\n}\n",
    "  var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n  return x === Math.floor(x);\n}\n",
    "    var a = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return a === Math.floor(a);\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "\tvar x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n\treturn x === Math.floor(x);\n}\n",
    "\treturn (Math.sqrt(1+24*n)%6==5);\n}\n",
    "    var a = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return a === Math.floor(a);\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "\treturn ((Math.sqrt(1+24*n)+1)/6)%1 == 0;\n}",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    var num = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return num % 1 === 0;\n}\n",
    "\treturn ((Math.sqrt(1 + 24 * n) + 1) / 6) % 1 === 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "\tvar x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n\treturn x === Math.floor(x);\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return ((Math.sqrt(1+24*n)+1)/6)%1==0;\n}\n",
    "    return (Math.sqrt(1+24*n)%6==5);\n}",
    "    return ((Math.sqrt(1 + 24 * n) + 1) / 6) % 1 === 0;\n}\n",
    "\treturn ((Math.sqrt(1 + 24 * n) + 1) / 6) % 1 === 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "  return (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "  var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n  return x === Math.floor(x);\n}\n",
    "\tvar x = (Math.sqrt(1 + 24*n) + 1) / 6;\n\treturn x === Math.floor(x);\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}",
    "\treturn (Math.sqrt(1+24*n)%6==5);\n}\n",
    "\tvar m = (Math.sqrt(1 + 24*n) + 1)/6;\n\treturn m == Math.floor(m);\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "  return (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "  return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === (x | 0);\n}\n",
    "\treturn (Math.sqrt(1+24*n)%6==5);\n}",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "\treturn ((Math.sqrt(1 + 24 * n) + 1) / 6) % 1 === 0;\n}\n",
    "  var a = (Math.sqrt(1 + 24 * n) + 1) / 6;\n  return a === Math.floor(a);\n}\n",
    "    var a = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return a === Math.floor(a);\n}\n",
    "\tvar a = (Math.sqrt(1 + 24 * n) + 1) / 6;\n\treturn a === Math.floor(a);\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "\treturn ((Math.sqrt(24*n+1)+1)/6)%1==0;\n}",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "    return (Math.sqrt(1 + 24*n) + 1) % 6 == 0;\n}\n",
    "    return ((Math.sqrt(1 + 24 * n) + 1) / 6) % 1 === 0;\n}\n",
    "    var nth = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    if(nth == Math.floor(nth)){\n        return true;\n    }\n    return false;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1+24*n)%6==5);\n}",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\tvar a = (Math.sqrt(1 + 24 * n) + 1) / 6;\n\treturn a === Math.floor(a);\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "  var a = (Math.sqrt(1 + 24*n) + 1)/6;\n  return a == Math.floor(a);\n}\n",
    "    var m = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return m === Math.floor(m);\n}\n",
    "  var x = (Math.sqrt(1+24*n)+1)/6;\n  return x == Math.floor(x);\n}\n",
    "  return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\tvar x = (1 + Math.sqrt(1 + 24*n))/6;\n\treturn x == Math.floor(x);\n}\n",
    "  var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n  return x === (x | 0);\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "  var r = (Math.sqrt(1 + 24 * n) + 1) / 6;\n  return r === Math.floor(r);\n}\n",
    "\tvar x = (Math.sqrt(1 + 24*n) + 1)/6;\n\tif(x == Math.floor(x)){\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "  var n = (Math.sqrt(1 + 24 * n) + 1) / 6;\n  return n % 1 === 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "\treturn ((Math.sqrt(1+24*n)+1)/6)%1==0;\n}",
    "\treturn ((Math.sqrt(1+24*n)+1)/6)%1==0;\n}",
    "    let x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "    return (Math.sqrt(1+24*n)%6==5);\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\tvar x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n\treturn x === Math.floor(x);\n}\n",
    "  var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n  return x === Math.floor(x);\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) / 6 % 1 === 0;\n}\n",
    "\treturn ((Math.sqrt(1+24*n)+1)/6)%1==0;\n}\n",
    "\tvar a = (Math.sqrt(1 + 24 * n) + 1) / 6;\n\treturn a === Math.floor(a);\n}\n",
    "    return (Math.sqrt(1+24*n)%6)==5;\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === (x | 0);\n}\n",
    "    var n = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return n % 1 === 0;\n}\n",
    "    return ((Math.sqrt(1+24*n)+1)/6)%1==0;\n}\n",
    "\treturn (Math.sqrt(24*n+1)+1)/6 % 1 === 0;\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "    var m = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return m === Math.floor(m);\n}\n",
    "\treturn (Math.sqrt(1+24*n)%6==5);\n}",
    "    let num = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return Number.isInteger(num);\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "  return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "  var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n  return x === Math.floor(x);\n}\n",
    "  return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "  return ((Math.sqrt(1 + 24*n) + 1)/6) % 1 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24*n) + 1) % 6 === 0;\n}\n",
    "\treturn (Math.sqrt(1+24*n)%6==5);\n}",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "\treturn (Math.sqrt(1+24*n)%6==5);\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "\tvar x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n\treturn x === Math.floor(x);\n}\n",
    "\treturn (Math.sqrt(1+24*n)%6==5);\n}\n",
    "    var m = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return m === Math.floor(m);\n}",
    "  var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n  return x === Math.floor(x);\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}",
    "\tvar x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n\treturn x === Math.floor(x);\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "  var oct = (Math.sqrt(1 + 24 * n) + 1) / 6;\n  return oct == Math.floor(oct);\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    var n = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return n === Math.floor(n);\n}",
    "    return ((Math.sqrt(1 + 24 * n) + 1) / 6) % 1 === 0;\n}\n",
    "\treturn ((Math.sqrt(1+24*n)+1)/6)%1==0;\n}",
    "    var i = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return i === Math.floor(i);\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return ((Math.sqrt(1 + 24 * n) + 1) / 6) % 1 === 0;\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "  return ((Math.sqrt(1 + 24 * n) + 1) / 6) % 1 === 0;\n}\n",
    "  var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n  return x === Math.floor(x);\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "\treturn (Math.sqrt(1+24*n)%6==5);\n}\n",
    "    var n = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return Number.isInteger(n);\n}\n",
    "  var a = (Math.sqrt(1 + 24 * n) + 1) / 6;\n  return a == Math.floor(a);\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "\tvar x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n\treturn x === Math.floor(x);\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    var n = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return n % 1 === 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    var x = (Math.sqrt(n*2+1/3)+1/3)/2;\n    return x === Math.floor(x);\n}\n",
    "    var x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return x === Math.floor(x);\n}\n",
    "\treturn (Math.sqrt(1+24*n)%6==5);\n}",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1+24*n)%6==5);\n}",
    "\treturn (Math.sqrt(1 + 24*n) + 1) % 6 == 0;\n}\n",
    "\treturn (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "\tvar x = (Math.sqrt(1 + 24 * n) + 1) / 6;\n\treturn x === Math.floor(x);\n}\n",
    "    var n = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return n % 1 == 0;\n}\n",
    "\treturn ((Math.sqrt(1 + 24 * n) + 1) / 6) % 1 === 0;\n}\n",
    "\treturn ((Math.sqrt(1 + 24 * n) + 1) / 6) % 1 === 0;\n}\n",
    "  return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "  return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "  return (Math.sqrt(1 + 24*n) + 1) % 6 == 0;\n}\n",
    "  return (Math.sqrt(1 + 24 * n) + 1) % 6 === 0;\n}\n",
    "    return (Math.sqrt(1 + 24 * n) + 1) % 6 == 0;\n}\n",
    "    var a = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return a === Math.floor(a);\n}\n",
    "    var m = (Math.sqrt(1 + 24 * n) + 1) / 6;\n    return m === Math.floor(m);\n}\n"
  ]
}
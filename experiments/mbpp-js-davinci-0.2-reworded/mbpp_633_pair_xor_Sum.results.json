{
  "name": "mbpp_633_pair_xor_Sum",
  "language": "js",
  "prompt": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_633_pair_xor_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i+1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i+1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i=0; i<n; i++){\n        for(let j=i+1; j<n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i+1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i=0; i<n; i++){\n        for(let j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nlet arr = [1, 2, 3, 4];\nlet n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i+1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i+1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nvar arr = [1, 2, 3, 4, 5];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum = sum + (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nvar arr = [1, 2, 3, 4, 5];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nvar arr = [1, 2, 3, 4, 5];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var result = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            result += (arr[i] ^ arr[j]);\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nvar arr = [1, 2, 3, 4, 5];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nvar arr = [1, 2, 3, 4];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nvar arr = [1, 2, 3, 4];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nvar arr = [1, 2, 3, 4, 5];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i=0; i<n; i++){\n        for(let j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i+1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nvar arr = [1, 2, 3, 4];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i+1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i+1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var res = 0;\n    for (var i = 0; i < n; i++) {\n        for (var j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nvar arr = [1, 2, 3, 4];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i=0; i<n; i++){\n        for(let j=i+1; j<n; j++){\n            sum += arr[i]^arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i+1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nvar arr = [1, 2, 3, 4];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var res = 0;\n    for (var i = 0; i < n; i++)\n        for (var j = i + 1; j < n; j++)\n            res += (arr[i] ^ arr[j]);\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i+1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let res = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i+1; j < n; j++){\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nvar arr = [1, 2, 3, 4, 5];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nvar arr = [1, 2, 3, 4, 5];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for (var i = 0; i < n; i++){\n        for (var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nvar arr = [1, 2, 3];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0;i<n;i++){\n        for(var j=i+1;j<n;j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nvar arr = [1,2,3,4,5];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0;i<n;i++){\n        for(var j=i+1;j<n;j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nvar arr = [1,2,3,4,5,6,7,8,9,10];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nvar arr = [1, 2, 3, 4];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++)\n        for(var j = i + 1; j < n; j++)\n            sum += arr[i] ^ arr[j];\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i+1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i+1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = 0; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n94\n\nshould loosely deep-equal\n\n47\n    at test (/tmp/tmpyuha_st4.js:17:10)\n    at Object.<anonymous> (/tmp/tmpyuha_st4.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 94,\n  expected: 47,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for (var i = 0; i < n; i++)\n        for (var j = i + 1; j < n; j++)\n            sum += (arr[i] ^ arr[j]);\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for (let i = 0; i < n; i++)\n        for (let j = i + 1; j < n; j++)\n            sum += (arr[i] ^ arr[j]);\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nvar arr = [1, 2, 3, 4, 5];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nvar arr = [1, 2, 3, 4];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i+1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nvar arr = [1, 2, 3, 4];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nvar arr = [1, 2, 3, 4];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += arr[i]^arr[j];\n        }\n    }\n    return sum;\n}\n\nvar arr = [1,2,3,4,5];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nvar arr = [1, 2, 3, 4, 5];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i=0; i<n; i++){\n        for(let j=i+1; j<n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i+1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nvar arr = [1, 2, 3, 4, 5];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nvar arr = [1, 2, 3, 4];\nvar n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nlet arr = [1, 2, 3, 4];\nlet n = arr.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    let sum = 0;\n    for(let i = 0; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i+1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++)\n        for(var j = i + 1; j < n; j++)\n            sum += arr[i] ^ arr[j];\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1666123100,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        for(var j = i + 1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find the sum of xor of all pairs of numbers in the given array.\nfunction pair_xor_Sum(arr, n){\n    var sum = 0;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pair_xor_Sum;\n  assert.deepEqual(candidate([5, 9, 7, 6], 4),47);\n  assert.deepEqual(candidate([7, 3, 5], 3),12);\n  assert.deepEqual(candidate([7, 3], 2),4);\n}\n\ntest();",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
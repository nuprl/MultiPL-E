{
  "name": "mbpp_442_positive_count",
  "language": "js",
  "prompt": "//Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count(nums){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_442_positive_count.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = positive_count;\n  assert.deepEqual(candidate([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]),0.54);\n  assert.deepEqual(candidate([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]),0.69);\n  assert.deepEqual(candidate([2, 4, -6, -9, 11, -12, 14, -5, 17]),0.56);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count/nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n",
    "    var count = 0;\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] > 0){\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count/nums.length;\n}\n",
    "  var count = 0;\n  for(var i = 0; i < nums.length; i++){\n    if(nums[i] > 0){\n      count++;\n    }\n  }\n  return count/nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count/nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count/nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count/nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i] > 0){\n            count++;\n        }\n    }\n    return count / nums.length;\n}\n",
    "  var count = 0;\n  for(var i = 0; i < nums.length; i++){\n    if(nums[i] > 0){\n      count++;\n    }\n  }\n  return count/nums.length;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 0){\n            count++;\n        }\n    }\n    return count;\n}\n"
  ]
}
{
  "name": "mbpp_784_mul_even_odd",
  "language": "js",
  "prompt": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var count = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            count++;\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            count++;\n            break;\n        }\n    }\n    if(count == 2){\n        return even * odd;\n    }\n    else{\n        return \"Either even or odd number is not present in the list\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpb56meo2i.js:20:10)\n    at Object.<anonymous> (/tmp/tmpb56meo2i.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_odd *= list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            even_odd *= list1[i];\n            break;\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_num = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd_num = list1[i];\n            break;\n        }\n    }\n    return even_num*odd_num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_odd *= list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            even_odd *= list1[i];\n            break;\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nvar list1=[1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = list1[0];\n    var odd_num = list1[1];\n    var product = even_num * odd_num;\n    return product;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpblsdmsvn.js:14:10)\n    at Object.<anonymous> (/tmp/tmpblsdmsvn.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            odd_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    if(count == 2){\n        return even_num*odd_num;\n    }\n    else{\n        return \"No even or odd number found\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0; i<list1.length; i++){\n        if(i%2 == 0){\n            even_odd *= list1[i];\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp95wshw8e.js:16:10)\n    at Object.<anonymous> (/tmp/tmp95wshw8e.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even*odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd_mul = 1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_odd_mul = even_odd_mul * list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            even_odd_mul = even_odd_mul * list1[i];\n            break;\n        }\n    }\n    return even_odd_mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0; i<list1.length; i++){\n        if(i%2==0){\n            even_odd *= list1[i];\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp0g4i72gr.js:16:10)\n    at Object.<anonymous> (/tmp/tmp0g4i72gr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd = list1[j];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for (var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp5so_9_r7.js:20:10)\n    at Object.<anonymous> (/tmp/tmp5so_9_r7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0,odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var j=0;j<list1.length;j++){\n        if(list1[j]%2!=0){\n            odd=list1[j];\n            break;\n        }\n    }\n    return even*odd;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd = list1[j];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9];\nvar result = mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpb56meo2i.js:20:10)\n    at Object.<anonymous> (/tmp/tmpb56meo2i.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpb56meo2i.js:20:10)\n    at Object.<anonymous> (/tmp/tmpb56meo2i.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2==0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2!=0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var count = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            count++;\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            count++;\n            break;\n        }\n    }\n    if(count == 2){\n        return even * odd;\n    }\n    else{\n        return \"Not found\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_list = [];\n    var odd_list = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_list.push(list1[i]);\n        }else{\n            odd_list.push(list1[i]);\n        }\n    }\n    var mul = even_list[0]*odd_list[0];\n    return mul;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even*odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nvar list1 = [2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var product = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    product = even * odd;\n    return product;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var j=0;j<list1.length;j++){\n        if(list1[j]%2!=0){\n            odd=list1[j];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nvar list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var j=0;j<list1.length;j++){\n        if(list1[j]%2!=0){\n            odd = list1[j];\n            break;\n        }\n    }\n    mul = even*odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9];\nvar result = mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = list1[0];\n    var odd = list1[1];\n    var mul = even * odd;\n    return mul;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp6up_fzn9.js:13:10)\n    at Object.<anonymous> (/tmp/tmp6up_fzn9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = list1.filter(function(num){\n        return num%2 == 0;\n    });\n    var odd = list1.filter(function(num){\n        return num%2 != 0;\n    });\n    return even[0]*odd[0];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nvar list1 = [2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num=0;\n    var odd_num=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_num=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd_num=list1[i];\n            break;\n        }\n    }\n    return even_num*odd_num;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd = list1[j];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpb56meo2i.js:20:10)\n    at Object.<anonymous> (/tmp/tmpb56meo2i.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even*odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9];\nvar result = mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nvar list1=[2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpi6jn6p_w.js:21:10)\n    at Object.<anonymous> (/tmp/tmpi6jn6p_w.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var i=0;\n    var j=0;\n    var mul=0;\n    while(i<list1.length){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n        i++;\n    }\n    while(j<list1.length){\n        if(list1[j]%2!=0){\n            odd=list1[j];\n            break;\n        }\n        j++;\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nvar result = mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nvar list1=[1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpy53o7to8.js:21:10)\n    at Object.<anonymous> (/tmp/tmpy53o7to8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even*odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    if(count==2){\n        return even_num*odd_num;\n    }\n    else{\n        return \"Either even or odd number is not present in the list\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_product=1;\n    var odd_product=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_product=even_product*list1[i];\n            break;\n        }\n    }\n    for(var j=0;j<list1.length;j++){\n        if(list1[j]%2!=0){\n            odd_product=odd_product*list1[j];\n            break;\n        }\n    }\n    return even_product*odd_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count = 0;\n    var count1 = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count = 1;\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            count1 = 1;\n            break;\n        }\n    }\n    if(count == 1 && count1 == 1){\n        return even_num * odd_num;\n    }\n    else{\n        return \"Either even or odd number is not present\";\n    }\n}\nvar list1 = [2, 3, 4, 5, 6, 7, 8, 9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 1;\n    var odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = even * list1[i];\n        }\n        else{\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpk66omg1_.js:21:10)\n    at Object.<anonymous> (/tmp/tmpk66omg1_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var product = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    product = even * odd;\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 1;\n    var odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = even * list1[i];\n        }\n        else{\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpzr7_kbqf.js:20:10)\n    at Object.<anonymous> (/tmp/tmpzr7_kbqf.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 1;\n    var odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = even * list1[i];\n        }\n        else{\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpzr7_kbqf.js:20:10)\n    at Object.<anonymous> (/tmp/tmpzr7_kbqf.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_num = list1[i];\n            count += 1;\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            odd_num = list1[i];\n            count += 1;\n            break;\n        }\n    }\n    if(count == 2){\n        return even_num*odd_num;\n    }\n    else{\n        return \"No even or odd number in the list\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd = list1[j];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nvar result = mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    console.log(\"product of even numbers is \"+even);\n    console.log(\"product of odd numbers is \"+odd);\n}\nmul_even_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "product of even numbers is 3840\nproduct of odd numbers is 945\nproduct of even numbers is 192\nproduct of odd numbers is 105\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp9n2s4nfu.js:23:10)\n    at Object.<anonymous> (/tmp/tmp9n2s4nfu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0;i<list1.length;i++){\n        if(i%2==0){\n            even_odd *= list1[i];\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp3ezf6s5y.js:16:10)\n    at Object.<anonymous> (/tmp/tmp3ezf6s5y.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(i % 2 == 0){\n            even_odd = even_odd * list1[i];\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpvllupwoh.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvllupwoh.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2==0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2!=0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    return even_odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_num = list1[i];\n            count_even += 1;\n            if(count_even==2){\n                break;\n            }\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd_num = list1[i];\n            count_odd += 1;\n            if(count_odd==2){\n                break;\n            }\n        }\n    }\n    return even_num*odd_num;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n18\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpyr_xitp2.js:33:10)\n    at Object.<anonymous> (/tmp/tmpyr_xitp2.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 18,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpb56meo2i.js:20:10)\n    at Object.<anonymous> (/tmp/tmpb56meo2i.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_odd *= list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            even_odd *= list1[i];\n            break;\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_odd = list1[i] * list1[i+1];\n            break;\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpu9o7_ilg.js:18:10)\n    at Object.<anonymous> (/tmp/tmpu9o7_ilg.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_num = list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            odd_num = list1[i];\n            break;\n        }\n    }\n    return even_num*odd_num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nvar list1=[2,4,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var product = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_num = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd_num = list1[i];\n            break;\n        }\n    }\n    product = even_num*odd_num;\n    return product;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nvar result = mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            count_even++;\n            if(count_even == 2){\n                break;\n            }\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            count_odd++;\n            if(count_odd == 2){\n                break;\n            }\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n18\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmph755wgff.js:32:10)\n    at Object.<anonymous> (/tmp/tmph755wgff.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 18,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_odd = even_odd*list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            even_odd = even_odd*list1[i];\n            break;\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpb56meo2i.js:20:10)\n    at Object.<anonymous> (/tmp/tmpb56meo2i.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i] % 2 != 0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    if(count == 2){\n        return even_num * odd_num;\n    }\n    else{\n        return \"No even or odd number found\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_num = list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            odd_num = list1[i];\n            break;\n        }\n    }\n    return even_num*odd_num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even*odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2==0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2!=0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 1;\n    var odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = even * list1[i];\n        }\n        else{\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpzr7_kbqf.js:20:10)\n    at Object.<anonymous> (/tmp/tmpzr7_kbqf.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 1;\n    var odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = even * list1[i];\n        }\n        else{\n            odd = odd * list1[i];\n        }\n    }\n    console.log(\"Product of first even and odd number of a given array is:\", even * odd);\n}\nmul_even_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Product of first even and odd number of a given array is: 3628800\nProduct of first even and odd number of a given array is: 20160\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp9x8tezbo.js:22:10)\n    at Object.<anonymous> (/tmp/tmp9x8tezbo.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count_even = 0;\n    var count_odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            if(count_even == 0){\n                even_num = list1[i];\n            }\n            count_even++;\n        }\n        else{\n            if(count_odd == 0){\n                odd_num = list1[i];\n            }\n            count_odd++;\n        }\n    }\n    return even_num * odd_num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 1;\n    var odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = even * list1[i];\n        }\n        else{\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpzr7_kbqf.js:20:10)\n    at Object.<anonymous> (/tmp/tmpzr7_kbqf.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(i % 2 == 0){\n            even_odd *= list1[i];\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp20pzl4be.js:16:10)\n    at Object.<anonymous> (/tmp/tmp20pzl4be.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0; i<list1.length; i++){\n        if(i%2==0){\n            even_odd = even_odd * list1[i];\n        }\n        else{\n            even_odd = even_odd * list1[i];\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp_di56_uv.js:19:10)\n    at Object.<anonymous> (/tmp/tmp_di56_uv.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpb56meo2i.js:20:10)\n    at Object.<anonymous> (/tmp/tmpb56meo2i.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    return even_odd;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nvar result = mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = list1[0]*list1[1];\n    var odd = list1[2]*list1[3];\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n105\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpaokfl113.js:12:10)\n    at Object.<anonymous> (/tmp/tmpaokfl113.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 105,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_num = list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            odd_num = list1[i];\n            break;\n        }\n    }\n    return even_num*odd_num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0;i<list1.length;i++){\n        if(i%2==0){\n            even_odd = even_odd*list1[i];\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpl4p8ihac.js:16:10)\n    at Object.<anonymous> (/tmp/tmpl4p8ihac.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    var count = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd_num = list1[i];\n            count++;\n            break;\n        }\n    }\n    if(count==2){\n        return even_num*odd_num;\n    }\n    else{\n        return \"Either even or odd number is not present in the list\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=odd*list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    console.log(even);\n    console.log(odd);\n    console.log(even*odd);\n}\nmul_even_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "3840\n945\n3628800\n192\n105\n20160\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp7oi6srwd.js:24:10)\n    at Object.<anonymous> (/tmp/tmp7oi6srwd.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0;i<list1.length;i++){\n        if(i%2==0){\n            even_odd = even_odd * list1[i];\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpacy2zxa_.js:16:10)\n    at Object.<anonymous> (/tmp/tmpacy2zxa_.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var j=0;j<list1.length;j++){\n        if(list1[j]%2!=0){\n            odd = list1[j];\n            break;\n        }\n    }\n    mul = even*odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nvar result = mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num = 0;\n    var odd_num = 0;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_num = list1[i];\n            break;\n        }\n    }\n    for(var j=0; j<list1.length; j++){\n        if(list1[j]%2 != 0){\n            odd_num = list1[j];\n            break;\n        }\n    }\n    return even_num*odd_num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[2,3,4,5,6,7,8,9,10];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0; i<list1.length; i++){\n        if(i%2==0){\n            even_odd *= list1[i];\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmp0g4i72gr.js:16:10)\n    at Object.<anonymous> (/tmp/tmp0g4i72gr.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 1;\n    var odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = even * list1[i];\n        }\n        else{\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpk66omg1_.js:21:10)\n    at Object.<anonymous> (/tmp/tmpk66omg1_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpb56meo2i.js:20:10)\n    at Object.<anonymous> (/tmp/tmpb56meo2i.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_product = 1;\n    var odd_product = 1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_product = even_product * list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd_product = odd_product * list1[i];\n            break;\n        }\n    }\n    return even_product*odd_product;\n}\nvar list1 = [1,2,3,4,5,6];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_product = 1;\n    var odd_product = 1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_product = even_product*list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd_product = odd_product*list1[i];\n            break;\n        }\n    }\n    return even_product*odd_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 1;\n    var odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even *= list1[i];\n        }\n        else{\n            odd *= list1[i];\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpl56w6p6s.js:20:10)\n    at Object.<anonymous> (/tmp/tmpl56w6p6s.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even*odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nvar result = mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpb56meo2i.js:20:10)\n    at Object.<anonymous> (/tmp/tmpb56meo2i.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 1;\n    var odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = even * list1[i];\n        }\n        else{\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpzr7_kbqf.js:20:10)\n    at Object.<anonymous> (/tmp/tmpzr7_kbqf.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_prod = 1;\n    var odd_prod = 1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_prod = even_prod*list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd_prod = odd_prod*list1[i];\n            break;\n        }\n    }\n    return even_prod*odd_prod;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_num=0;\n    var odd_num=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_num=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd_num=list1[i];\n            break;\n        }\n    }\n    mul=even_num*odd_num;\n    return mul;\n}\nvar list1=[2,4,6,8,10,12,14,16,18,20];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpb56meo2i.js:20:10)\n    at Object.<anonymous> (/tmp/tmpb56meo2i.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var count = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            if(count==0){\n                even = list1[i];\n                count++;\n            }\n        }\n        else{\n            if(count==1){\n                odd = list1[i];\n                break;\n            }\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely deep-equal\n\n2\n    at test (/tmp/tmpo356ktvz.js:28:10)\n    at Object.<anonymous> (/tmp/tmpo356ktvz.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected: 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 1;\n    var odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = even * list1[i];\n        }\n        else{\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpzr7_kbqf.js:20:10)\n    at Object.<anonymous> (/tmp/tmpzr7_kbqf.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 1;\n    var odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = even * list1[i];\n        }\n        else{\n            odd = odd * list1[i];\n        }\n    }\n    return even * odd;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpmpkx8nw4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpmpkx8nw4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var product = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var j = 0; j < list1.length; j++){\n        if(list1[j] % 2 != 0){\n            odd = list1[j];\n            break;\n        }\n    }\n    product = even * odd;\n    return product;\n}\nvar list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_odd = even_odd*list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            even_odd = even_odd*list1[i];\n            break;\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    var mul=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    mul=even*odd;\n    return mul;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nvar result=mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd_mul = 1;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_odd_mul = even_odd_mul * list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            even_odd_mul = even_odd_mul * list1[i];\n            break;\n        }\n    }\n    return even_odd_mul;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(i % 2 == 0){\n            even_odd = even_odd * list1[i];\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpvllupwoh.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvllupwoh.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = [];\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            even_odd.push(even);\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            even_odd.push(odd);\n            break;\n        }\n    }\n    return even_odd[0] * even_odd[1];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 1;\n    var odd = 1;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even *= list1[i];\n        }\n        else{\n            odd *= list1[i];\n        }\n    }\n    return even * odd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpgyzi7q97.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgyzi7q97.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_odd = 1;\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 == 0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]%2 != 0){\n            even_odd = even_odd * list1[i];\n            break;\n        }\n    }\n    return even_odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for (var i = 0; i < list1.length; i++){\n        if (list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even * odd;\n    return mul;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    var mul = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd = list1[i];\n            break;\n        }\n    }\n    mul = even*odd;\n    return mul;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nvar result = mul_even_odd(list1);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1;\n    var odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    console.log(\"Product of even numbers is \"+even);\n    console.log(\"Product of odd numbers is \"+odd);\n}\nmul_even_odd([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "Product of even numbers is 3840\nProduct of odd numbers is 945\nProduct of even numbers is 192\nProduct of odd numbers is 105\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpnat3tmg4.js:23:10)\n    at Object.<anonymous> (/tmp/tmpnat3tmg4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_no = 0;\n    var odd_no = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_no = list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd_no = list1[i];\n            break;\n        }\n    }\n    return even_no*odd_no;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=0;\n    var odd=0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd=list1[i];\n            break;\n        }\n    }\n    return even*odd;\n}\nvar list1=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 == 0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var i = 0; i < list1.length; i++){\n        if(list1[i] % 2 != 0){\n            odd = list1[i];\n            break;\n        }\n    }\n    return even * odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1665510074,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = 0;\n    var odd = 0;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even = list1[i];\n            break;\n        }\n    }\n    for(var j=0;j<list1.length;j++){\n        if(list1[j]%2!=0){\n            odd = list1[j];\n            break;\n        }\n    }\n    return even*odd;\n}\nvar list1 = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even = list1[0];\n    var odd = list1[1];\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpn94ptc1i.js:12:10)\n    at Object.<anonymous> (/tmp/tmpn94ptc1i.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even_product=1;\n    var odd_product=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even_product=even_product*list1[i];\n            break;\n        }\n    }\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2!=0){\n            odd_product=odd_product*list1[i];\n            break;\n        }\n    }\n    return even_product*odd_product;\n}\nvar list1=[2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the product of first even and odd number of a given array.\nfunction mul_even_odd(list1){\n    var even=1,odd=1;\n    for(var i=0;i<list1.length;i++){\n        if(list1[i]%2==0){\n            even=even*list1[i];\n        }\n        else{\n            odd=odd*list1[i];\n        }\n    }\n    return even*odd;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = mul_even_odd;\n  assert.deepEqual(candidate([1, 3, 5, 7, 4, 1, 6, 8]),4);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([1, 5, 7, 9, 10]),10);\n}\n\ntest();",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20160\n\nshould loosely deep-equal\n\n4\n    at test (/tmp/tmpcgjjxhe7.js:19:10)\n    at Object.<anonymous> (/tmp/tmpcgjjxhe7.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20160,\n  expected: 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
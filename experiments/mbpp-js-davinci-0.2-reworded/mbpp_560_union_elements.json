{
  "name": "mbpp_560_union_elements",
  "language": "js",
  "prompt": "//Write a function to find the union of the elements of two given arrays and output them in sorted order.\nfunction union_elements(test_tup1, test_tup2){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_560_union_elements.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = union_elements;\n  assert.deepEqual(candidate([3, 4, 5, 6], [5, 7, 4, 10]),[3, 4, 5, 6, 7, 10]);\n  assert.deepEqual(candidate([1, 2, 3, 4], [3, 4, 5, 6]),[1, 2, 3, 4, 5, 6]);\n  assert.deepEqual(candidate([11, 12, 13, 14], [13, 15, 16, 17]),[11, 12, 13, 14, 15, 16, 17]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n     {\n       obj[test_tup1[i]] = test_tup1[i];\n     }\n    for (var j = 0; j < test_tup2.length; j++)\n     {\n       obj[test_tup2[j]] = test_tup2[j];\n     }\n    for (var k in obj)\n     {\n       if (obj.hasOwnProperty(k))\n        {\n          res.push(obj[k]);\n        }\n     }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.filter(function(elem, pos) {\n        return test_tup3.indexOf(elem) == pos;\n    });\n    return test_tup4.sort();\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.filter(function(elem, pos) {\n        return test_tup3.indexOf(elem) == pos;\n    });\n    return test_tup4.sort();\n}",
    "    var union_arr = test_tup1.concat(test_tup2);\n    return union_arr.sort();\n}\n",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.filter(function(item, pos) {\n        return test_tup3.indexOf(item) == pos;\n    })\n    return test_tup4.sort(function(a, b){return a-b});\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = [];\n    var test_tup5 = [];\n    for (var i = 0; i < test_tup3.length; i++){\n        if (test_tup4.indexOf(test_tup3[i]) === -1){\n            test_tup4.push(test_tup3[i]);\n        }\n    }\n    test_tup4.sort();\n    return test_tup4;\n}\n",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res.sort();\n}",
    "    var union = test_tup1.concat(test_tup2);\n    var unique = union.filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n    return unique.sort();\n}",
    "    var result = [];\n    for(var i = 0; i < test_tup1.length; i++){\n        if(result.indexOf(test_tup1[i]) == -1){\n            result.push(test_tup1[i]);\n        }\n    }\n    for(var j = 0; j < test_tup2.length; j++){\n        if(result.indexOf(test_tup2[j]) == -1){\n            result.push(test_tup2[j]);\n        }\n    }\n    return result.sort();\n}",
    "    var union = test_tup1.concat(test_tup2);\n    var union_sorted = union.sort();\n    return union_sorted;\n}\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var set1 = new Set(test_tup1);\n    var set2 = new Set(test_tup2);\n    var union = new Set([...set1, ...set2]);\n    return Array.from(union).sort();\n}",
    "    var test_tup1 = [1,2,3,4,5];\n    var test_tup2 = [3,4,5,6,7];\n    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for(var i = 0; i < test_tup4.length; i++){\n        if(test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    console.log(test_tup5);\n}\nunion_elements();\n",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.filter(function(item, pos) {\n        return test_tup3.indexOf(item) == pos;\n    })\n    return test_tup4.sort();\n}\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res.sort();\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res.sort();\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for(var i = 0; i < test_tup4.length; i++){\n        if(test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = 0; i < test_tup2.length; i++)\n    {\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res;\n}",
    "    var union = test_tup1.concat(test_tup2);\n    var union_sorted = union.sort();\n    return union_sorted;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for (var k in obj)\n    {\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k)){  // <-- optional\n        res.push(obj[k]);\n      }\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for(var i = 0; i < test_tup4.length; i++){\n        if(test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var union_tup = test_tup1.concat(test_tup2);\n    return union_tup.sort();\n}",
    "    var result = [];\n    for(var i=0; i<test_tup1.length; i++){\n        if(result.indexOf(test_tup1[i]) == -1){\n            result.push(test_tup1[i]);\n        }\n    }\n    for(var i=0; i<test_tup2.length; i++){\n        if(result.indexOf(test_tup2[i]) == -1){\n            result.push(test_tup2[i]);\n        }\n    }\n    return result.sort();\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for (var i = 0; i < test_tup4.length; i++){\n        if (test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n     {\n       obj[test_tup1[i]] = test_tup1[i];\n     }\n    for (var j = 0; j < test_tup2.length; j++)\n     {\n       obj[test_tup2[j]] = test_tup2[j];\n     }\n    for (var key in obj)\n     {\n       res.push(obj[key]);\n     }\n    return res.sort(function(a, b){return a-b});\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for(var i=0;i<test_tup1.length;i++){\n        obj[test_tup1[i]] = 0;\n    }\n    for(i=0;i<test_tup2.length;i++){\n        obj[test_tup2[i]] = 0;\n    }\n    for(i in obj){\n        res.push(parseInt(i));\n    }\n    return res.sort(function(a, b){return a-b});\n}\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (i = 0; i < test_tup2.length; i++)\n    {\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}\n",
    "    var test_tup1 = [1,2,3,4,5];\n    var test_tup2 = [6,7,8,9,10];\n    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    console.log(test_tup4);\n}\nunion_elements();\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for (var k in obj)\n    {\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var union_tup = test_tup1.concat(test_tup2);\n    var union_tup = union_tup.sort();\n    var union_tup = union_tup.filter(function(item, pos) {\n        return union_tup.indexOf(item) == pos;\n    })\n    return union_tup;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    var test_tup6 = [];\n    for(var i = 0; i < test_tup4.length; i++){\n        if(test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k)){  // <-- optional\n        res.push(obj[k]);\n      }\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res.sort();\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    for (var k in obj){\n      if (obj.hasOwnProperty(k)){  // <-- optional\n        res.push(obj[k]);\n      }\n    }\n    return res;\n}\n",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = 0; i < test_tup2.length; i++)\n    {\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res.sort();\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = [];\n    var test_tup5 = [];\n    for(var i=0; i<test_tup3.length; i++){\n        if(test_tup4.indexOf(test_tup3[i]) == -1){\n            test_tup4.push(test_tup3[i]);\n        }\n    }\n    test_tup4.sort();\n    return test_tup4;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10])",
    "    var union_tup = test_tup1.concat(test_tup2);\n    return union_tup.sort();\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = 0;\n    }\n    for (var i = 0; i < test_tup2.length; i++)\n    {\n        obj[test_tup2[i]] = 0;\n    }\n    for ( i in obj)\n    {\n        res.push(parseInt(i));\n    }\n    return res.sort(function(a, b){return a-b});\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n",
    "    var obj = {};\n    var res = [];\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    for (var k in obj){\n      if (obj.hasOwnProperty(k)){  // <-- optional\n        res.push(obj[k]);\n      }\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj) {\n      if (obj.hasOwnProperty(n)) \n        res.push(obj[n]);\n    }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.filter(function(item, pos) {\n        return test_tup3.indexOf(item) == pos;\n    })\n    return test_tup4.sort();\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n",
    "    var test_tup1 = [1,2,3,4,5,6,7,8,9,10];\n    var test_tup2 = [1,2,3,4,5,6,7,8,9,10];\n    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    console.log(test_tup4);\n}\nunion_elements();\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n       obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n       obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n       if (obj.hasOwnProperty(k))  // <-- optional\n          res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n\n",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res.sort();\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.filter(function(item, pos) {\n        return test_tup3.indexOf(item) == pos;\n    })\n    return test_tup4.sort();\n}\n",
    "    var test_tup1 = [1,2,3,4,5,6,7,8,9,10];\n    var test_tup2 = [1,2,3,4,5,6,7,8,9,10];\n    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = test_tup4.filter(function(item, pos) {\n        return test_tup4.indexOf(item) == pos;\n    })\n    console.log(test_tup5);\n}\nunion_elements();\n",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.filter(function(item, pos) {\n        return test_tup3.indexOf(item) == pos;\n    })\n    return test_tup4.sort();\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = [];\n    var test_tup5 = [];\n    for(var i = 0; i < test_tup3.length; i++){\n        if(test_tup4.indexOf(test_tup3[i]) === -1){\n            test_tup4.push(test_tup3[i]);\n        }\n    }\n    return test_tup4.sort();\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for (var i = 0; i < test_tup4.length; i++) {\n        if (test_tup4[i] !== test_tup4[i+1]) {\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n       obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n       obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n       if (obj.hasOwnProperty(k))  // <-- optional\n          res.push(obj[k]);\n    }\n    return res;\n}\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for(var i = 0; i < test_tup4.length; i++){\n        if(test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for(var i = 0; i < test_tup4.length; i++){\n        if(test_tup4[i] != test_tup4[i+1]){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var test_tup1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    var test_tup2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    var test_tup3 = [];\n    for(var i = 0; i < test_tup1.length; i++){\n        for(var j = 0; j < test_tup2.length; j++){\n            if(test_tup1[i] == test_tup2[j]){\n                test_tup3.push(test_tup1[i]);\n            }\n        }\n    }\n    return test_tup3.sort(function(a, b){return a-b});\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for (var k in obj)\n    {\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var result = [];\n    for(var i = 0; i < test_tup1.length; i++){\n        result.push(test_tup1[i]);\n    }\n    for(var i = 0; i < test_tup2.length; i++){\n        if(result.indexOf(test_tup2[i]) == -1){\n            result.push(test_tup2[i]);\n        }\n    }\n    return result.sort();\n}\n\nvar test_tup1 = [1, 2, 3, 4, 5];\nvar test_tup2 = [4, 5, 6, 7, 8];",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    var test_tup6 = [];\n    for(var i = 0; i < test_tup4.length; i++){\n        if(test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    for(var i = 0; i < test_tup5.length; i++){\n        if(test_tup6.indexOf(test_tup5[i]) == -1){\n            test_tup6.push(test_tup5[i]);\n        }\n    }\n    return test_tup6;\n}",
    "    var test_tup1 = [1,2,3,4,5,6,7,8,9,10];\n    var test_tup2 = [1,2,3,4,5,6,7,8,9,10];\n    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for(var i=0; i<test_tup4.length; i++){\n        if(test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var obj = {};\n    var res = [];\n    for(var i=0; i<test_tup1.length; i++){\n        obj[test_tup1[i]] = 0;\n    }\n    for(var i=0; i<test_tup2.length; i++){\n        obj[test_tup2[i]] = 0;\n    }\n    for(i in obj){\n        res.push(parseInt(i));\n    }\n    return res.sort(function(a, b){return a-b});\n}",
    "    var test_tup1 = [1,2,3,4,5,6,7,8,9,10];\n    var test_tup2 = [5,6,7,8,9,10,11,12,13,14];\n    var test_tup3 = [];\n    for(var i = 0; i < test_tup1.length; i++){\n        test_tup3.push(test_tup1[i]);\n    }\n    for(var i = 0; i < test_tup2.length; i++){\n        if(!test_tup3.includes(test_tup2[i])){\n            test_tup3.push(test_tup2[i]);\n        }\n    }\n    test_tup3.sort();\n    console.log(test_tup3);\n}\nunion_elements();\n",
    "    var union_tup = test_tup1.concat(test_tup2);\n    var union_tup_sorted = union_tup.sort();\n    return union_tup_sorted;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = test_tup4.filter(function(item, pos) {\n        return test_tup4.indexOf(item) == pos;\n    })\n    return test_tup5;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (i = 0; i < test_tup2.length; i++)\n    {\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}\n",
    "    var result = [];\n    for(var i = 0; i < test_tup1.length; i++){\n        if(result.indexOf(test_tup1[i]) == -1){\n            result.push(test_tup1[i]);\n        }\n    }\n    for(var i = 0; i < test_tup2.length; i++){\n        if(result.indexOf(test_tup2[i]) == -1){\n            result.push(test_tup2[i]);\n        }\n    }\n    return result.sort();\n}\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    for (var k in obj){\n      if (obj.hasOwnProperty(k)){  // <-- optional\n        res.push(obj[k]);\n      }\n    }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for(var i = 0; i < test_tup4.length; i++){\n        if(test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = test_tup4.filter(function(elem, pos) {\n        return test_tup4.indexOf(elem) == pos;\n    });\n    return test_tup5;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for (var i = 0; i < test_tup4.length; i++){\n        if (test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.filter(function(item, pos) {\n        return test_tup3.indexOf(item) == pos;\n    })\n    return test_tup4.sort();\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res.sort();\n}",
    "    var obj = {};\n    var res = [];\n    for(var i=0; i<test_tup1.length; i++){\n        obj[test_tup1[i]] = 0;\n    }\n    for(var i=0; i<test_tup2.length; i++){\n        obj[test_tup2[i]] = 0;\n    }\n    for(var key in obj){\n        res.push(parseInt(key));\n    }\n    return res.sort(function(a,b){return a-b});\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var result = [];\n    for(var i = 0; i < test_tup1.length; i++){\n        if(result.indexOf(test_tup1[i]) == -1){\n            result.push(test_tup1[i]);\n        }\n    }\n    for(var i = 0; i < test_tup2.length; i++){\n        if(result.indexOf(test_tup2[i]) == -1){\n            result.push(test_tup2[i]);\n        }\n    }\n    return result.sort();\n}\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res.sort();\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var test_tup1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    var test_tup2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for(var i=0; i<test_tup4.length; i++){\n        if(test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    console.log(test_tup5);\n}\nunion_elements();\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}\n\nvar test_tup1 = [1, 2, 3, 4, 5];\nvar test_tup2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n",
    "    var result = [];\n    for(var i = 0; i < test_tup1.length; i++){\n        if(result.indexOf(test_tup1[i]) == -1){\n            result.push(test_tup1[i]);\n        }\n    }\n    for(var j = 0; j < test_tup2.length; j++){\n        if(result.indexOf(test_tup2[j]) == -1){\n            result.push(test_tup2[j]);\n        }\n    }\n    return result.sort();\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    for (var k in obj){\n      if (obj.hasOwnProperty(k)){  // <-- optional\n        res.push(obj[k]);\n      }\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj) {\n      if (obj.hasOwnProperty(n)) \n        res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}\n",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for (var i = 0; i < test_tup4.length; i++){\n        if (test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = 0;\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = 0;\n    }\n    for (var k in obj)\n    {\n        res.push(parseInt(k));\n    }\n    return res.sort(function(a, b){return a-b});\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    for (var k in obj){\n      if (obj.hasOwnProperty(k)){  // <-- optional\n        res.push(obj[k]);\n      }\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var test_tup1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    var test_tup2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    var test_tup3 = [];\n    var test_tup4 = [];\n    var test_tup5 = [];\n    var test_tup6 = [];\n    var test_tup7 = [];\n    var test_tup8 = [];\n    var test_tup9 = [];\n    var test_tup10 = [];\n    var test_tup11 = [];\n    var test_tup12 = [];\n    var test_tup13 = [];\n    var test_tup14 = [];\n    var test_tup15 = [];\n    var test_tup16 = [];\n    var test_tup17 = [];\n    var test_tup18 = [];\n    var test_tup19 = [];\n    var test_tup20 = [];\n    var test_tup21 = [];\n    var test_tup22 = [];\n    var test_tup23 = [];\n    var test_tup24 = [];\n    var test_tup25 = [];\n    var test_tup26 = [];\n    var test_tup27 = [];\n    var test_tup28 = [];\n    var test_tup29 = [];\n    var test_tup30 = [];\n    var test_tup31 = [];\n    var test_tup32 = [];\n    var test_tup33 = [];\n    var test_tup34 = [];\n    var test_tup35 = [];\n    var test_tup36 = [];\n    var test_tup37 = [];\n    var test_tup38 = [];\n    var test_tup39 = [];\n    var test_tup40 = [];\n    var test_tup41 = [];\n    var test_tup42 = [];\n    var test_tup43 = [];\n    var test_tup44 = [];\n    var test_tup45 = [];\n    var test_tup46 = [];\n    var test_tup47 = [];\n   ",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj) {\n      if (obj.hasOwnProperty(n)) \n        res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n       obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n       obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n       if (obj.hasOwnProperty(k))  // <-- optional\n          res.push(obj[k]);\n    }\n    return res;\n}",
    "    var result_tup = [];\n    for(var i = 0; i < test_tup1.length; i++){\n        if(result_tup.indexOf(test_tup1[i]) == -1){\n            result_tup.push(test_tup1[i]);\n        }\n    }\n    for(var j = 0; j < test_tup2.length; j++){\n        if(result_tup.indexOf(test_tup2[j]) == -1){\n            result_tup.push(test_tup2[j]);\n        }\n    }\n    return result_tup.sort();\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for(var i = 0; i < test_tup4.length; i++){\n        if(test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for (var i = 0; i < test_tup4.length; i++) {\n        if (test_tup5.indexOf(test_tup4[i]) == -1) {\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = 0; i < test_tup2.length; i++)\n    {\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    for (var key in obj)\n    {\n        res.push(obj[key]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    for (var k in obj){\n      if (obj.hasOwnProperty(k)){  // <-- optional\n        res.push(obj[k]);\n      }\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.filter(function(item, pos) {\n        return test_tup3.indexOf(item) == pos;\n    })\n    return test_tup4.sort();\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for(var i = 0; i < test_tup4.length; i++){\n        if(test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var j = 0; j < test_tup2.length; j++)\n    {\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for (var k in obj)\n    {\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n       obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n       obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n       if (obj.hasOwnProperty(k))  // <-- optional\n          res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var test_tup1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    var test_tup2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = test_tup4.filter(function(item, pos, self) {\n        return self.indexOf(item) == pos;\n    })\n    console.log(test_tup5);\n}\nunion_elements();\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}",
    "    var test_tup1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    var test_tup2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = test_tup4.filter(function(item, pos) {\n        return test_tup4.indexOf(item) == pos;\n    })\n    console.log(test_tup5);\n}\nunion_elements();\n",
    "    var obj = {};\n    var res = [];\n    for (var i = 0; i < test_tup1.length; i++)\n    {\n        obj[test_tup1[i]] = 0;\n    }\n    for (var i = 0; i < test_tup2.length; i++)\n    {\n        obj[test_tup2[i]] = 0;\n    }\n    for ( i in obj)\n    {\n        res.push(parseInt(i));\n    }\n    return res.sort(function(a, b){return a-b});\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}\n",
    "    var obj = {};\n    var res = [];\n    for(var i=0; i<test_tup1.length; i++){\n        obj[test_tup1[i]] = 0;\n    }\n    for(var i=0; i<test_tup2.length; i++){\n        obj[test_tup2[i]] = 0;\n    }\n    for(i in obj){\n        res.push(parseInt(i));\n    }\n    return res.sort(function(a, b){return a-b});\n}\n",
    "    var obj = {};\n    var res = [];\n    for(var i=0; i<test_tup1.length; i++){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for(var j=0; j<test_tup2.length; j++){\n        obj[test_tup2[j]] = test_tup2[j];\n    }\n    for(var k in obj){\n        res.push(obj[k]);\n    }\n    return res.sort();\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = test_tup3.sort();\n    var test_tup5 = [];\n    for(var i = 0; i < test_tup4.length; i++){\n        if(test_tup5.indexOf(test_tup4[i]) == -1){\n            test_tup5.push(test_tup4[i]);\n        }\n    }\n    return test_tup5;\n}",
    "    var union_tup = test_tup1.concat(test_tup2);\n    return union_tup.sort();\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var test_tup3 = test_tup1.concat(test_tup2);\n    var test_tup4 = [];\n    for(var i = 0; i < test_tup3.length; i++){\n        if(test_tup4.indexOf(test_tup3[i]) == -1){\n            test_tup4.push(test_tup3[i]);\n        }\n    }\n    return test_tup4.sort();\n}\n",
    "    var obj = {};\n    var res = [];\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    for (var k in obj){\n      if (obj.hasOwnProperty(k)){  // <-- optional\n        res.push(obj[k]);\n      }\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    var res = [];\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    for (var k in obj){\n      if (obj.hasOwnProperty(k)){  // <-- optional\n        res.push(obj[k]);\n      }\n    }\n    return res;\n}\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var k in obj) {\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n      obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n      obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n      if (obj.hasOwnProperty(k))  // <-- optional\n        res.push(obj[k]);\n    }\n    return res;\n  }\n  console.log(union_elements([1, 2, 3], [100, 2, 1, 10]));\n  console.log(union_elements([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));\n\n",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i){\n        obj[test_tup1[i]] = test_tup1[i];\n    }\n    for (var i = test_tup2.length-1; i >= 0; -- i){\n        obj[test_tup2[i]] = test_tup2[i];\n    }\n    var res = [];\n    for (var k in obj){\n        if (obj.hasOwnProperty(k)){  // <-- optional\n            res.push(obj[k]);\n        }\n    }\n    return res;\n}",
    "    var obj = {};\n    for (var i = test_tup1.length-1; i >= 0; -- i)\n       obj[test_tup1[i]] = test_tup1[i];\n    for (var i = test_tup2.length-1; i >= 0; -- i)\n       obj[test_tup2[i]] = test_tup2[i];\n    var res = []\n    for (var n in obj)\n    {\n        if (obj.hasOwnProperty(n)) \n          res.push(obj[n]);\n    }\n    return res;\n}"
  ]
}
{
  "name": "mbpp_309_maximum",
  "language": "js",
  "prompt": "//Write a jsthon function to find the maximum of two numbers.\nfunction maximum(a, b){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_309_maximum.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = maximum;\n  assert.deepEqual(candidate(5, 10),10);\n  assert.deepEqual(candidate(-1, -2),-1);\n  assert.deepEqual(candidate(9, 7),9);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    if(a>b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}\n",
    "    if (a > b){\n        return a;\n    }else{\n        return b;\n    }\n}\n",
    "    if(a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}\n",
    "    if(a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}",
    "    return Math.max(a, b);\n}",
    "    if(a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}",
    "    if (a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}",
    "    if (a > b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n",
    "    if(a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}\n",
    "    if(a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}\n",
    "    if(a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}",
    "    if(a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}",
    "    if(a>b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}\n",
    "    if(a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}\n",
    "    if(a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}\n",
    "    if(a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}\n",
    "    if (a > b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n",
    "    if(a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}\n",
    "    if(a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}",
    "    if(a > b){\n        return a;\n    }\n    else{\n        return b;\n    }\n}\n"
  ]
}
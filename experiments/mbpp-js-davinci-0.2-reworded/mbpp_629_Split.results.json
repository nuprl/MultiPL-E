{
  "name": "mbpp_629_Split",
  "language": "js",
  "prompt": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_629_Split.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers are: \"+even);\n    console.log(\"Odd Numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers are: 2,4,6,8,10\nOdd Numbers are: 1,3,5,7,9\nEven Numbers are: 2,4\nOdd Numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmph394szg5.js:23:10)\n    at Object.<anonymous> (/tmp/tmph394szg5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpf5_rdptg.js:23:10)\n    at Object.<anonymous> (/tmp/tmpf5_rdptg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpfrzr9m84.js:23:10)\n    at Object.<anonymous> (/tmp/tmpfrzr9m84.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpx4nyeo4j.js:23:10)\n    at Object.<anonymous> (/tmp/tmpx4nyeo4j.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpx4nyeo4j.js:23:10)\n    at Object.<anonymous> (/tmp/tmpx4nyeo4j.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    console.log('Even numbers are: '+even);\n    console.log('Odd numbers are: '+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpeut9o5jd.js:22:10)\n    at Object.<anonymous> (/tmp/tmpeut9o5jd.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"even numbers are: \" + even);\n    console.log(\"odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "even numbers are: 2,4,6,8\nodd numbers are: 1,3,5,7,9\neven numbers are: 2,4\nodd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpcbds6all.js:22:10)\n    at Object.<anonymous> (/tmp/tmpcbds6all.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpxzj_e3c4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxzj_e3c4.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    var odd=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are : \"+even);\n    console.log(\"Odd numbers are : \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are : 2,4,6,8,10\nOdd numbers are : 1,3,5,7,9\nEven numbers are : 2,4\nOdd numbers are : 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp1mu5m8_d.js:22:10)\n    at Object.<anonymous> (/tmp/tmp1mu5m8_d.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(even);\n    console.log(odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n[ 1, 3, 5, 7, 9 ]\n[ 2, 4 ]\n[ 1, 3, 5 ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp5p61t2dl.js:23:10)\n    at Object.<anonymous> (/tmp/tmp5p61t2dl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(even);\n    console.log(odd);\n}\nSplit([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "[ 2, 4, 6, 8 ]\n[ 1, 3, 5, 7, 9 ]\n[ 2, 4 ]\n[ 1, 3, 5 ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpmeho6_su.js:23:10)\n    at Object.<anonymous> (/tmp/tmpmeho6_su.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \"+even);\n    console.log(\"Odd Numbers: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmptp3oori6.js:23:10)\n    at Object.<anonymous> (/tmp/tmptp3oori6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(even);\n    console.log(odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n[ 1, 3, 5, 7, 9 ]\n[ 2, 4 ]\n[ 1, 3, 5 ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp5p61t2dl.js:23:10)\n    at Object.<anonymous> (/tmp/tmp5p61t2dl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpxzj_e3c4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxzj_e3c4.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpx4nyeo4j.js:23:10)\n    at Object.<anonymous> (/tmp/tmpx4nyeo4j.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp1g5yeyp3.js:22:10)\n    at Object.<anonymous> (/tmp/tmp1g5yeyp3.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \"+even);\n    console.log(\"Odd Numbers: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps1r07c2s.js:23:10)\n    at Object.<anonymous> (/tmp/tmps1r07c2s.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpf5_rdptg.js:23:10)\n    at Object.<anonymous> (/tmp/tmpf5_rdptg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp44auyet9.js:23:10)\n    at Object.<anonymous> (/tmp/tmp44auyet9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers: \" + even);\n    console.log(\"Odd numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers: 2,4,6,8,10\nOdd numbers: 1,3,5,7,9\nEven numbers: 2,4\nOdd numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmptmvq3k7q.js:23:10)\n    at Object.<anonymous> (/tmp/tmptmvq3k7q.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    var odd=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp74bxrjvl.js:23:10)\n    at Object.<anonymous> (/tmp/tmp74bxrjvl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp1g5yeyp3.js:22:10)\n    at Object.<anonymous> (/tmp/tmp1g5yeyp3.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp1g5yeyp3.js:22:10)\n    at Object.<anonymous> (/tmp/tmp1g5yeyp3.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers: 2,4,6,8\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp99fua_jg.js:23:10)\n    at Object.<anonymous> (/tmp/tmp99fua_jg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[]\n    var odd=[]\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i])\n        }\n        else{\n            odd.push(list[i])\n        }\n    }\n    console.log(even)\n    console.log(odd)\n}\nSplit([1,2,3,4,5,6,7,8,9,10])\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n[ 1, 3, 5, 7, 9 ]\n[ 2, 4 ]\n[ 1, 3, 5 ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpjq76qjn8.js:23:10)\n    at Object.<anonymous> (/tmp/tmpjq76qjn8.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpu4ubwxr3.js:23:10)\n    at Object.<anonymous> (/tmp/tmpu4ubwxr3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers are: \" + even);\n    console.log(\"Odd Numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers are: 2,4,6,8,10\nOdd Numbers are: 1,3,5,7,9\nEven Numbers are: 2,4\nOdd Numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp_qx77ixq.js:23:10)\n    at Object.<anonymous> (/tmp/tmp_qx77ixq.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpf5_rdptg.js:23:10)\n    at Object.<anonymous> (/tmp/tmpf5_rdptg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(even);\n    console.log(odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n[ 1, 3, 5, 7, 9 ]\n[ 2, 4 ]\n[ 1, 3, 5 ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp5p61t2dl.js:23:10)\n    at Object.<anonymous> (/tmp/tmp5p61t2dl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpf5_rdptg.js:23:10)\n    at Object.<anonymous> (/tmp/tmpf5_rdptg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpf5_rdptg.js:23:10)\n    at Object.<anonymous> (/tmp/tmpf5_rdptg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for (var i = 0; i < list.length; i++){\n        if (list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers : \"+even);\n    console.log(\"Odd Numbers : \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers : 2,4,6,8,10\nOdd Numbers : 1,3,5,7,9\nEven Numbers : 2,4\nOdd Numbers : 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpufpywav1.js:23:10)\n    at Object.<anonymous> (/tmp/tmpufpywav1.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers are: \"+even);\n    console.log(\"Odd Numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers are: 2,4,6,8,10\nOdd Numbers are: 1,3,5,7,9\nEven Numbers are: 2,4\nOdd Numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmph394szg5.js:23:10)\n    at Object.<anonymous> (/tmp/tmph394szg5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpfrzr9m84.js:23:10)\n    at Object.<anonymous> (/tmp/tmpfrzr9m84.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpf5_rdptg.js:23:10)\n    at Object.<anonymous> (/tmp/tmpf5_rdptg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    var odd=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \"+even);\n    console.log(\"Odd Numbers: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpqefzmnu3.js:23:10)\n    at Object.<anonymous> (/tmp/tmpqefzmnu3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpxzj_e3c4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxzj_e3c4.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are : \"+even);\n    console.log(\"Odd numbers are : \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are : 2,4,6,8,10\nOdd numbers are : 1,3,5,7,9\nEven numbers are : 2,4\nOdd numbers are : 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp9hhw0rhl.js:23:10)\n    at Object.<anonymous> (/tmp/tmp9hhw0rhl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    var odd=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers are: \"+even);\n    console.log(\"Odd Numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers are: 2,4,6,8,10\nOdd Numbers are: 1,3,5,7,9\nEven Numbers are: 2,4\nOdd Numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpjio3odfx.js:23:10)\n    at Object.<anonymous> (/tmp/tmpjio3odfx.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even =[];\n    var odd =[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers are: \"+even);\n    console.log(\"Odd Numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers are: 2,4,6,8,10\nOdd Numbers are: 1,3,5,7,9\nEven Numbers are: 2,4\nOdd Numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp3dib3t25.js:23:10)\n    at Object.<anonymous> (/tmp/tmp3dib3t25.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers are: \"+even);\n    console.log(\"Odd Numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers are: 2,4,6,8,10\nOdd Numbers are: 1,3,5,7,9\nEven Numbers are: 2,4\nOdd Numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmph394szg5.js:23:10)\n    at Object.<anonymous> (/tmp/tmph394szg5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even: \" + even);\n    console.log(\"Odd: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even: 2,4,6,8,10\nOdd: 1,3,5,7,9\nEven: 2,4\nOdd: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpobge7bb6.js:23:10)\n    at Object.<anonymous> (/tmp/tmpobge7bb6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpxzj_e3c4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxzj_e3c4.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    var odd=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are :\"+even);\n    console.log(\"Odd numbers are :\"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are :2,4,6,8,10\nOdd numbers are :1,3,5,7,9\nEven numbers are :2,4\nOdd numbers are :1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpjhl2o9lw.js:23:10)\n    at Object.<anonymous> (/tmp/tmpjhl2o9lw.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return [even, odd];\n}\n\nvar list = [1,2,3,4,5,6,7,8,9,10];\nvar result = Split(list);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    4\n  ],\n  [\n    1,\n    3,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpff0cibdw.js:23:10)\n    at Object.<anonymous> (/tmp/tmpff0cibdw.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 2, 4 ], [ 1, 3, 5 ] ],\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp44auyet9.js:23:10)\n    at Object.<anonymous> (/tmp/tmp44auyet9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpxzj_e3c4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxzj_e3c4.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers: \" + even);\n    console.log(\"Odd numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers: 2,4,6,8,10\nOdd numbers: 1,3,5,7,9\nEven numbers: 2,4\nOdd numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmptmvq3k7q.js:23:10)\n    at Object.<anonymous> (/tmp/tmptmvq3k7q.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    var odd=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are : \"+even);\n    console.log(\"Odd numbers are : \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are : 2,4,6,8,10\nOdd numbers are : 1,3,5,7,9\nEven numbers are : 2,4\nOdd numbers are : 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpqyyh3hwc.js:23:10)\n    at Object.<anonymous> (/tmp/tmpqyyh3hwc.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpf5_rdptg.js:23:10)\n    at Object.<anonymous> (/tmp/tmpf5_rdptg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    var odd=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp74bxrjvl.js:23:10)\n    at Object.<anonymous> (/tmp/tmp74bxrjvl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpvjstsg61.js:23:10)\n    at Object.<anonymous> (/tmp/tmpvjstsg61.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list=[1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 === 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpgsu1c0gl.js:22:10)\n    at Object.<anonymous> (/tmp/tmpgsu1c0gl.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    var odd=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp0kyl1zsp.js:23:10)\n    at Object.<anonymous> (/tmp/tmp0kyl1zsp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers: \" + even);\n    console.log(\"Odd numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers: 2,4,6,8,10\nOdd numbers: 1,3,5,7,9\nEven numbers: 2,4\nOdd numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpjfbndx9k.js:23:10)\n    at Object.<anonymous> (/tmp/tmpjfbndx9k.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    4\n  ],\n  [\n    1,\n    3,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpzun2eimg.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzun2eimg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 2, 4 ], [ 1, 3, 5 ] ],\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpf5_rdptg.js:23:10)\n    at Object.<anonymous> (/tmp/tmpf5_rdptg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpx4nyeo4j.js:23:10)\n    at Object.<anonymous> (/tmp/tmpx4nyeo4j.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp44auyet9.js:23:10)\n    at Object.<anonymous> (/tmp/tmp44auyet9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpf5_rdptg.js:23:10)\n    at Object.<anonymous> (/tmp/tmpf5_rdptg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    var odd=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp74bxrjvl.js:23:10)\n    at Object.<anonymous> (/tmp/tmp74bxrjvl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    var odd=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(even);\n    console.log(odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n[ 1, 3, 5, 7, 9 ]\n[ 2, 4 ]\n[ 1, 3, 5 ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpteq5cis9.js:23:10)\n    at Object.<anonymous> (/tmp/tmpteq5cis9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(even);\n    console.log(odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n[ 1, 3, 5, 7, 9 ]\n[ 2, 4 ]\n[ 1, 3, 5 ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp5p61t2dl.js:23:10)\n    at Object.<anonymous> (/tmp/tmp5p61t2dl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers are :\"+even);\n    console.log(\"Odd Numbers are :\"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers are :2,4,6,8,10\nOdd Numbers are :1,3,5,7,9\nEven Numbers are :2,4\nOdd Numbers are :1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmplg5izavm.js:23:10)\n    at Object.<anonymous> (/tmp/tmplg5izavm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpf5_rdptg.js:23:10)\n    at Object.<anonymous> (/tmp/tmpf5_rdptg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for (var i = 0; i < list.length; i++){\n        if (list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return [even, odd];\n}\n\nvar list = [1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    4\n  ],\n  [\n    1,\n    3,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp8ww9wrxt.js:22:10)\n    at Object.<anonymous> (/tmp/tmp8ww9wrxt.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 2, 4 ], [ 1, 3, 5 ] ],\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    var odd=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are:\"+even);\n    console.log(\"Odd numbers are:\"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are:2,4,6,8,10\nOdd numbers are:1,3,5,7,9\nEven numbers are:2,4\nOdd numbers are:1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpt3tr5vdp.js:23:10)\n    at Object.<anonymous> (/tmp/tmpt3tr5vdp.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are : \"+even);\n    console.log(\"Odd numbers are : \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are : 2,4,6,8,10\nOdd numbers are : 1,3,5,7,9\nEven numbers are : 2,4\nOdd numbers are : 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp9hhw0rhl.js:23:10)\n    at Object.<anonymous> (/tmp/tmp9hhw0rhl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers: \" + even);\n    console.log(\"Odd numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers: 2,4,6,8,10\nOdd numbers: 1,3,5,7,9\nEven numbers: 2,4\nOdd numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmptmvq3k7q.js:23:10)\n    at Object.<anonymous> (/tmp/tmptmvq3k7q.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\n\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp44auyet9.js:23:10)\n    at Object.<anonymous> (/tmp/tmp44auyet9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers are :\"+even);\n    console.log(\"Odd Numbers are :\"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers are :2,4,6,8,10\nOdd Numbers are :1,3,5,7,9\nEven Numbers are :2,4\nOdd Numbers are :1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmplg5izavm.js:23:10)\n    at Object.<anonymous> (/tmp/tmplg5izavm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp44auyet9.js:23:10)\n    at Object.<anonymous> (/tmp/tmp44auyet9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpr3pjew17.js:23:10)\n    at Object.<anonymous> (/tmp/tmpr3pjew17.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(even);\n    console.log(odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n[ 1, 3, 5, 7, 9 ]\n[ 2, 4 ]\n[ 1, 3, 5 ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp72taal8p.js:23:10)\n    at Object.<anonymous> (/tmp/tmp72taal8p.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10,12,14,16,18,20\nOdd numbers are: 1,3,5,7,9,11,13,15,17,19\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmptxnu2ase.js:23:10)\n    at Object.<anonymous> (/tmp/tmptxnu2ase.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are : \"+even);\n    console.log(\"Odd numbers are : \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are : 2,4,6,8\nOdd numbers are : 1,3,5,7,9\nEven numbers are : 2,4\nOdd numbers are : 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps8t0cqfc.js:23:10)\n    at Object.<anonymous> (/tmp/tmps8t0cqfc.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers are: \"+even);\n    console.log(\"Odd Numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers are: 2,4,6,8,10\nOdd Numbers are: 1,3,5,7,9\nEven Numbers are: 2,4\nOdd Numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp4ufaqfdk.js:22:10)\n    at Object.<anonymous> (/tmp/tmp4ufaqfdk.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    return [even, odd];\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  [\n    2,\n    4\n  ],\n  [\n    1,\n    3,\n    5\n  ]\n]\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpzun2eimg.js:19:10)\n    at Object.<anonymous> (/tmp/tmpzun2eimg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ [ 2, 4 ], [ 1, 3, 5 ] ],\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(even);\n    console.log(odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "[ 2, 4, 6, 8, 10 ]\n[ 1, 3, 5, 7, 9 ]\n[ 2, 4 ]\n[ 1, 3, 5 ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp5p61t2dl.js:23:10)\n    at Object.<anonymous> (/tmp/tmp5p61t2dl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123633,
      "stdout": "Even numbers are: 2,4,6,8\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpeiw2rca3.js:23:10)\n    at Object.<anonymous> (/tmp/tmpeiw2rca3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are : \"+even);\n    console.log(\"Odd numbers are : \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are : 2,4,6,8,10\nOdd numbers are : 1,3,5,7,9\nEven numbers are : 2,4\nOdd numbers are : 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp9hhw0rhl.js:23:10)\n    at Object.<anonymous> (/tmp/tmp9hhw0rhl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123633,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmp50akc4nm.js:23:10)\n    at Object.<anonymous> (/tmp/tmp50akc4nm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0; i<list.length; i++){\n        if(list[i]%2 == 0){\n            even.push(list[i]);\n        }else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123633,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmphxuf96uu.js:22:10)\n    at Object.<anonymous> (/tmp/tmphxuf96uu.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even=[];\n    var odd=[];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers are: \"+even);\n    console.log(\"Odd Numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even Numbers are: 2,4,6,8,10\nOdd Numbers are: 1,3,5,7,9\nEven Numbers are: 2,4\nOdd Numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpjio3odfx.js:23:10)\n    at Object.<anonymous> (/tmp/tmpjio3odfx.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    return even;\n}\nvar list = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for (var i = 0; i < list.length; i++) {\n        if (list[i] % 2 == 0) {\n            even.push(list[i]);\n        } else {\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even Numbers: \" + even);\n    console.log(\"Odd Numbers: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123633,
      "stdout": "Even Numbers: 2,4,6,8,10\nOdd Numbers: 1,3,5,7,9\nEven Numbers: 2,4\nOdd Numbers: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpzs34msde.js:22:10)\n    at Object.<anonymous> (/tmp/tmpzs34msde.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n    }\n    return even;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \"+even);\n    console.log(\"Odd numbers are: \"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1665510376,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmps37r7c2t.js:23:10)\n    at Object.<anonymous> (/tmp/tmps37r7c2t.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123633,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpzbw26ga5.js:23:10)\n    at Object.<anonymous> (/tmp/tmpzbw26ga5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i = 0; i < list.length; i++){\n        if(list[i] % 2 == 0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are: \" + even);\n    console.log(\"Odd numbers are: \" + odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123632,
      "stdout": "Even numbers are: 2,4,6,8,10\nOdd numbers are: 1,3,5,7,9\nEven numbers are: 2,4\nOdd numbers are: 1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpinxvl07c.js:23:10)\n    at Object.<anonymous> (/tmp/tmpinxvl07c.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find even numbers from an array of numbers.\nfunction Split(list){\n    var even = [];\n    var odd = [];\n    for(var i=0;i<list.length;i++){\n        if(list[i]%2==0){\n            even.push(list[i]);\n        }\n        else{\n            odd.push(list[i]);\n        }\n    }\n    console.log(\"Even numbers are :\"+even);\n    console.log(\"Odd numbers are :\"+odd);\n}\nSplit([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = Split;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),[2, 4]);\n  assert.deepEqual(candidate([4, 5, 6, 7, 8, 0, 1]),[4, 6, 8, 0]);\n  assert.deepEqual(candidate([8, 12, 15, 19]),[8, 12]);\n}\n\ntest();",
      "timestamp": 1666123633,
      "stdout": "Even numbers are :2,4,6,8,10\nOdd numbers are :1,3,5,7,9\nEven numbers are :2,4\nOdd numbers are :1,3,5\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  2,\n  4\n]\n    at test (/tmp/tmpmakp3q4e.js:23:10)\n    at Object.<anonymous> (/tmp/tmpmakp3q4e.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 2, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
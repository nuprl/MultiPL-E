{
  "name": "mbpp_16_text_lowercase_underscore",
  "language": "js",
  "prompt": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_16_text_lowercase_underscore.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var pattern = /^[a-z_]+$/;\n    return pattern.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var text_lowercase_underscore = /^[a-z_]+$/;\n    return text_lowercase_underscore.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    if(text.match(/^[a-z_]+$/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+(?:_[a-z]+)*$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var result = text.match(/^[a-z]+_[a-z]+$/);\n    if(result){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n\tvar regex = /^[a-z_]+$/;\n\treturn regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /[a-z]+_[a-z]+/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpyqoofztb.js:14:10)\n    at Object.<anonymous> (/tmp/tmpyqoofztb.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /[a-z]+_[a-z]+/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp95ibosp3.js:13:10)\n    at Object.<anonymous> (/tmp/tmp95ibosp3.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    if(text.match(/^[a-z_]+$/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /[a-z]+_[a-z]+/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp95ibosp3.js:13:10)\n    at Object.<anonymous> (/tmp/tmp95ibosp3.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    if(text.match(/^[a-z_]+$/)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return text.match(/^[a-z]+(_[a-z]+)*$/);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'aab_cbbbc',\n  '_cbbbc',\n  groups: undefined,\n  index: 0,\n  input: 'aab_cbbbc'\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpoiownpp6.js:10:10)\n    at Object.<anonymous> (/tmp/tmpoiownpp6.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    'aab_cbbbc',\n    '_cbbbc',\n    index: 0,\n    input: 'aab_cbbbc',\n    groups: undefined\n  ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n\tif(text.match(/^[a-z_]+$/)){\n\t\treturn true;\n\t}\n\telse{\n\t\treturn false;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    if(text.match(/[a-z]+_[a-z]+/)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpiz967d77.js:16:10)\n    at Object.<anonymous> (/tmp/tmpiz967d77.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return text.match(/^[a-z]+(_[a-z]+)*$/);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'aab_cbbbc',\n  '_cbbbc',\n  groups: undefined,\n  index: 0,\n  input: 'aab_cbbbc'\n]\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpm27v4ls7.js:11:10)\n    at Object.<anonymous> (/tmp/tmpm27v4ls7.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    'aab_cbbbc',\n    '_cbbbc',\n    index: 0,\n    input: 'aab_cbbbc',\n    groups: undefined\n  ],\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+_[a-z]+$/;\n    if (regex.test(text)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var text_lowercase_underscore = text.match(/[a-z]+_[a-z]+/g);\n    if(text_lowercase_underscore == null){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuiwznxe8.js:19:10)\n    at Object.<anonymous> (/tmp/tmpuiwznxe8.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    if(text.match(/[a-z]_[a-z]/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp47zri7em.js:17:10)\n    at Object.<anonymous> (/tmp/tmp47zri7em.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    if(text.match(/^[a-z_]+$/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n  return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n  return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n  return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var text_lowercase = text.toLowerCase();\n    var text_lowercase_underscore = text_lowercase.split(\"_\");\n    var text_lowercase_underscore_join = text_lowercase_underscore.join(\"\");\n    if(text_lowercase_underscore_join == text_lowercase){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsh7_dkro.js:17:10)\n    at Object.<anonymous> (/tmp/tmpsh7_dkro.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    if(text.match(/^[a-z]+_[a-z]+$/)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n\tvar pattern = /^[a-z_]+$/;\n\treturn pattern.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n  return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z_]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    return /^[a-z]+_[a-z]+$/.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1666123367,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
      "timestamp": 1665510562,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_16_text_lowercase_underscore",
  "language": "js",
  "prompt": "//Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nfunction text_lowercase_underscore(text){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_16_text_lowercase_underscore.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_lowercase_underscore;\n  assert.deepEqual(candidate(\"aab_cbbbc\"),true);\n  assert.deepEqual(candidate(\"aab_Abbbc\"),false);\n  assert.deepEqual(candidate(\"Aaab_abbbc\"),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var pattern = /^[a-z_]+$/;\n    return pattern.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var text_lowercase_underscore = /^[a-z_]+$/;\n    return text_lowercase_underscore.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\n",
    "    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    if(text.match(/^[a-z_]+$/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z]+(?:_[a-z]+)*$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    var regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n",
    "    var result = text.match(/^[a-z]+_[a-z]+$/);\n    if(result){\n        return true;\n    }\n    return false;\n}",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "\tvar regex = /^[a-z_]+$/;\n\treturn regex.test(text);\n}\n",
    "    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\n",
    "    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /[a-z]+_[a-z]+/;\n    return regex.test(text);\n}\n",
    "    return /[a-z]+_[a-z]+/.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    if(text.match(/^[a-z_]+$/)){\n        return true;\n    }\n    return false;\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    return /[a-z]+_[a-z]+/.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    if(text.match(/^[a-z_]+$/)){\n        return true;\n    }\n    return false;\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    return text.match(/^[a-z]+(_[a-z]+)*$/);\n}",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\n",
    "    var regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "\tif(text.match(/^[a-z_]+$/)){\n\t\treturn true;\n\t}\n\telse{\n\t\treturn false;\n\t}\n}\n",
    "    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    if(text.match(/[a-z]+_[a-z]+/)){\n        return true;\n    }\n    return false;\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    return text.match(/^[a-z]+(_[a-z]+)*$/);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z]+_[a-z]+$/;\n    if (regex.test(text)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    var text_lowercase_underscore = text.match(/[a-z]+_[a-z]+/g);\n    if(text_lowercase_underscore == null){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    if(text.match(/[a-z]_[a-z]/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}\n",
    "    if(text.match(/^[a-z_]+$/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "  return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "  return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "  return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    return /^[a-z]+(_[a-z]+)*$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var text_lowercase = text.toLowerCase();\n    var text_lowercase_underscore = text_lowercase.split(\"_\");\n    var text_lowercase_underscore_join = text_lowercase_underscore.join(\"\");\n    if(text_lowercase_underscore_join == text_lowercase){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    var regex = /^[a-z]+(_[a-z]+)*$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    if(text.match(/^[a-z]+_[a-z]+$/)){\n        return true;\n    }\n    return false;\n}\n",
    "    var regex = /^[a-z]+_[a-z]+$/;\n    return regex.test(text);\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "\tvar pattern = /^[a-z_]+$/;\n\treturn pattern.test(text);\n}\n",
    "    var regex = /^[a-z]+_[a-z]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    let regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    if(regex.test(text)){\n        return true;\n    }else{\n        return false;\n    }\n}",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "  return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}",
    "    return /^[a-z_]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    return /^[a-z]+_[a-z]+$/.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n",
    "    var regex = /^[a-z_]+$/;\n    return regex.test(text);\n}\n"
  ]
}
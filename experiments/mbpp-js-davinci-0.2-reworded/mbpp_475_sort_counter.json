{
  "name": "mbpp_475_sort_counter",
  "language": "js",
  "prompt": "//Write a function to sort an object by value.\nfunction sort_counter(dict1){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_475_sort_counter.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_counter;\n  assert.deepEqual(candidate({\"Math\": 81, \"Physics\": 83, \"Chemistry\": 87}),[[\"Chemistry\", 87], [\"Physics\", 83], [\"Math\", 81]]);\n  assert.deepEqual(candidate({\"Math\": 400, \"Physics\": 300, \"Chemistry\": 250}),[[\"Math\", 400], [\"Physics\", 300], [\"Chemistry\", 250]]);\n  assert.deepEqual(candidate({\"Math\": 900, \"Physics\": 1000, \"Chemistry\": 1250}),[[\"Chemistry\", 1250], [\"Physics\", 1000], [\"Math\", 900]]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]]);\n    sortable.sort(function(a, b) {return a[1] - b[1]});\n    return sortable;\n}\n",
    "    var items = Object.keys(dict1).map(function(key) {\n        return [key, dict1[key]];\n    });\n    items.sort(function(first, second) {\n        return second[1] - first[1];\n    });\n    return items;\n}\n",
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]])\n    sortable.sort(function(a, b) {return a[1] - b[1]})\n    return sortable\n}\n",
    "    var dict2 = {};\n    var keys = [];\n    for (var key in dict1){\n        keys.push(key);\n    }\n    keys.sort(function(a,b){return dict1[a]-dict1[b]});\n    for (var i = 0; i < keys.length; i++){\n        dict2[keys[i]] = dict1[keys[i]];\n    }\n    return dict2;\n}\n",
    "    var tuples = [];\n    for (var key in dict1) tuples.push([key, dict1[key]]);\n    tuples.sort(function(a, b) {\n        a = a[1];\n        b = b[1];\n        return a < b ? -1 : (a > b ? 1 : 0);\n    });\n    return tuples;\n}\n",
    "    var sorted_dict = {};\n    var keys = Object.keys(dict1);\n    keys.sort(function(a,b){return dict1[a]-dict1[b]});\n    for (var i=0; i<keys.length; i++){\n        sorted_dict[keys[i]] = dict1[keys[i]];\n    }\n    return sorted_dict;\n}\n",
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]])\n    sortable.sort(function(a, b) {return b[1] - a[1]})\n    return sortable\n}\n",
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]]);\n    sortable.sort(function(a, b) {return a[1] - b[1]});\n    return sortable;\n}\n",
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]]);\n    sortable.sort(function(a, b) {return a[1] - b[1]});\n    return sortable;\n}\n",
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]])\n    sortable.sort(function(a, b) {return a[1] - b[1]})\n    return sortable\n}\n",
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]])\n    sortable.sort(function(a, b) {return a[1] - b[1]})\n    return sortable\n}\n",
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]]);\n    sortable.sort(function(a, b) {return a[1] - b[1]});\n    return sortable;\n}\n",
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]]);\n    sortable.sort(function(a, b) {return a[1] - b[1]});\n    return sortable;\n}\n",
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]]);\n\n    sortable.sort(function(a, b) {return a[1] - b[1]});\n    return sortable;\n}\n",
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]]);\n    sortable.sort(function(a, b) {return a[1] - b[1]});\n    return sortable;\n}\n",
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]]);\n    sortable.sort(function(a, b) {return a[1] - b[1]});\n    return sortable;\n}\n",
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]]);\n    sortable.sort(function(a, b) {return a[1] - b[1]});\n    return sortable;\n}\n",
    "    var sortable = [];\n    for (var key in dict1)\n        sortable.push([key, dict1[key]]);\n    sortable.sort(function(a, b) {return a[1] - b[1]});\n    return sortable;\n}\n",
    "    var sortable = [];\n    for (var key in dict1) {\n        sortable.push([key, dict1[key]]);\n    }\n    sortable.sort(function(a, b) {\n        return a[1] - b[1];\n    });\n    return sortable;\n}\n",
    "    var sortable = [];\n    for (var key in dict1) {\n        sortable.push([key, dict1[key]]);\n    }\n    sortable.sort(function(a, b) {\n        return a[1] - b[1];\n    });\n    return sortable;\n}\n"
  ]
}
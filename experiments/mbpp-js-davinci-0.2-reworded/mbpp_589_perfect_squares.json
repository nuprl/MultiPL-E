{
  "name": "mbpp_589_perfect_squares",
  "language": "js",
  "prompt": "//Write a function to find perfect squares between two given numbers.\nfunction perfect_squares(a, b){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_589_perfect_squares.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = perfect_squares;\n  assert.deepEqual(candidate(1, 30),[1, 4, 9, 16, 25]);\n  assert.deepEqual(candidate(50, 100),[64, 81, 100]);\n  assert.deepEqual(candidate(100, 200),[100, 121, 144, 169, 196]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "  var arr = [];\n  for(var i = a; i <= b; i++){\n    if(Math.sqrt(i) % 1 === 0){\n      arr.push(i);\n    }\n  }\n  return arr;\n}",
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "  var squares = [];\n  for(var i = a; i <= b; i++){\n    if(Math.sqrt(i) % 1 === 0){\n      squares.push(i);\n    }\n  }\n  return squares;\n}\n",
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var list = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            list.push(i);\n        }\n    }\n    return list;\n}\n",
    "    var arr = [];\n    for(var i=a; i<=b; i++){\n        var sqrt = Math.sqrt(i);\n        if(sqrt === Math.floor(sqrt)){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n",
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}\n",
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var squares = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            squares.push(i);\n        }\n    }\n    return squares;\n}",
    "    var arr = [];\n    for(var i = a; i <= b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}",
    "    var arr = [];\n    for(var i=a; i<=b; i++){\n        if(Math.sqrt(i) % 1 === 0){\n            arr.push(i);\n        }\n    }\n    return arr;\n}"
  ]
}
{
  "name": "mbpp_619_move_num",
  "language": "js",
  "prompt": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for (var i = 0; i < test_str.length; i++){\n        if (test_str[i] >= 0){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var temp = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < temp.length; i++){\n        if(!isNaN(temp[i])){\n            num.push(temp[i]);\n        }\n        else{\n            char.push(temp[i]);\n        }\n    }\n    var result = char.concat(num);\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\" \");\n    var num = [];\n    var str_arr = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            str_arr.push(str[i]);\n        }\n    }\n    return str_arr.concat(num).join(\" \");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'I1love143you55three3000thousand'\n\nshould loosely deep-equal\n\n'Iloveyouthreethousand1143553000'\n    at test (/tmp/tmp7v3fuble.js:20:10)\n    at Object.<anonymous> (/tmp/tmp7v3fuble.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'I1love143you55three3000thousand',\n  expected: 'Iloveyouthreethousand1143553000',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            letter.push(str[i]);\n        }else{\n            num.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = test_str.match(/\\d+/g);\n    var str_arr = test_str.match(/[a-zA-Z]+/g);\n    var result = str_arr.join('') + num_arr.join('');\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var char_arr = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            char_arr.push(test_str[i]);\n        }\n        else{\n            num_arr.push(test_str[i]);\n        }\n    }\n    return char_arr.join(\"\") + num_arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var res_arr = [];\n    var res_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str_arr.push(test_str[i]);\n        }else{\n            num_arr.push(test_str[i]);\n        }\n    }\n    res_arr = str_arr.concat(num_arr);\n    res_str = res_arr.join(\"\");\n    return res_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            letter.push(str[i]);\n        }else{\n            num.push(str[i]);\n        }\n    }\n    var new_str = letter.join(\"\") + num.join(\"\");\n    return new_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            char.push(str[i]);\n        }\n    }\n    return char.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var result = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str_arr.push(test_str[i]);\n        }else{\n            num_arr.push(test_str[i]);\n        }\n    }\n    result = str_arr.concat(num_arr);\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var result = [];\n    var str_arr = test_str.split(\"\");\n    for(var i = 0; i < str_arr.length; i++){\n        if(!isNaN(str_arr[i])){\n            num_arr.push(str_arr[i]);\n        }\n        else{\n            result.push(str_arr[i]);\n        }\n    }\n    return result.join(\"\") + num_arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var res = test_str.match(/\\d+/g);\n    var res1 = test_str.match(/[a-zA-Z]+/g);\n    return res1.join('')+res.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            char.push(str[i]);\n        }\n    }\n    return char.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var alp = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            alp.push(str[i]);\n        }\n    }\n    return alp.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var alpha = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            alpha.push(str[i]);\n        }\n        else{\n            num.push(str[i]);\n        }\n    }\n    return alpha.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = test_str.match(/\\d+/g);\n    var str_str = test_str.match(/[a-zA-Z]+/g);\n    return str_str.join(\"\") + num_str.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= \"0\" && test_str[i] <= \"9\"){\n            num += test_str[i];\n        }\n        else{\n            result += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    let num = \"\";\n    let str = \"\";\n    for(let i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }else{\n            str += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == parseInt(str[i])){\n            num.push(str[i]);\n        }\n        else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        } else {\n            char.push(str[i]);\n        }\n    }\n    return char.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == \"0\" || str[i] == \"1\" || str[i] == \"2\" || str[i] == \"3\" || str[i] == \"4\" || str[i] == \"5\" || str[i] == \"6\" || str[i] == \"7\" || str[i] == \"8\" || str[i] == \"9\"){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    var result = letter.join(\"\") + num.join(\"\");\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str += test_str[i];\n        }\n        else{\n            num += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = test_str.match(/[0-9]/g);\n    var str = test_str.match(/[a-z]/gi);\n    return str.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for(var i=0; i<test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            letter.push(str[i]);\n        }else{\n            num.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = test_str.match(/\\d+/g).join(\"\");\n    var non_num_str = test_str.match(/\\D+/g).join(\"\");\n    return non_num_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] >= 0){\n            num.push(str[i]);\n        }\n        else{\n            char.push(str[i]);\n        }\n    }\n    return char.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var test_str = test_str.split('');\n    var num_arr = [];\n    var char_arr = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            char_arr.push(test_str[i]);\n        }else{\n            num_arr.push(test_str[i]);\n        }\n    }\n    return char_arr.join('') + num_arr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = \"\";\n    var num_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= '0' && test_str[i] <= '9'){\n            num_str += test_str[i];\n        }else{\n            new_str += test_str[i];\n        }\n    }\n    return new_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= '0' && test_str[i] <= '9'){\n            num += test_str[i];\n        }else{\n            result += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = test_str.match(/\\d+/g);\n    var str = test_str.match(/[a-zA-Z]+/g);\n    return str.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var test_arr = test_str.split('');\n    var num_arr = [];\n    var str_arr = [];\n    for (var i = 0; i < test_arr.length; i++){\n        if (isNaN(test_arr[i])){\n            str_arr.push(test_arr[i]);\n        } else {\n            num_arr.push(test_arr[i]);\n        }\n    }\n    return str_arr.concat(num_arr).join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = \"\";\n    var num_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            new_str += test_str[i];\n        }\n        else{\n            num_str += test_str[i];\n        }\n    }\n    return new_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str += test_str[i];\n        }else{\n            num += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = \"\";\n    var num_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i]) == false){\n            num_str += test_str[i];\n        }\n        else{\n            new_str += test_str[i];\n        }\n    }\n    return new_str + num_str;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var char = [];\n    for(var i=0;i<str.length;i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            char.push(str[i]);\n        }\n    }\n    return char.join('')+num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }\n        else{\n            result += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }\n        else{\n            char.push(str[i]);\n        }\n    }\n    return char.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == parseInt(str[i])){\n            num.push(str[i]);\n        }else{\n            char.push(str[i]);\n        }\n    }\n    return char.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }else{\n            result += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = \"\";\n    var str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }\n        else{\n            str += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }\n        else{\n            char.push(str[i]);\n        }\n    }\n    return char.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = [];\n    var str = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str.push(test_str[i]);\n        }else{\n            num.push(test_str[i]);\n        }\n    }\n    return str.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            result += test_str[i];\n        }else{\n            num += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = test_str.replace(/[^a-zA-Z]/g, \"\");\n    var num_str = test_str.replace(/[^0-9]/g, \"\");\n    return new_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = test_str.match(/\\d+/g);\n    var str = test_str.match(/[a-zA-Z]+/g);\n    return str.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_arr.push(test_str[i]);\n        }else{\n            str_arr.push(test_str[i]);\n        }\n    }\n    return str_arr.join(\"\") + num_arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var alpha = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            alpha.push(str[i]);\n        }else{\n            num.push(str[i]);\n        }\n    }\n    return alpha.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == parseInt(str[i])){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] >= 0){\n            num.push(str[i]);\n        }\n        else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] >= 0){\n            num.push(str[i]);\n        }\n        else{\n            char.push(str[i]);\n        }\n    }\n    return char.concat(num).join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }\n        else{\n            char.push(str[i]);\n        }\n    }\n    return char.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var test_str = test_str.split(\"\");\n    var num_arr = [];\n    var str_arr = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str_arr.push(test_str[i]);\n        }\n        else{\n            num_arr.push(test_str[i]);\n        }\n    }\n    return str_arr.join(\"\") + num_arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = \"\";\n    var num_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            new_str += test_str[i];\n        }\n        else{\n            num_str += test_str[i];\n        }\n    }\n    return new_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            char.push(str[i]);\n        }\n        else{\n            num.push(str[i]);\n        }\n    }\n    return char.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            letter.push(str[i]);\n        }else{\n            num.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = [];\n    var result_str = \"\";\n    var result_num = \"\";\n    for(var i=0; i<test_str.length; i++){\n        if(isNaN(test_str[i])){\n            result.push(test_str[i]);\n        }else{\n            result_num += test_str[i];\n        }\n    }\n    result_str = result.join(\"\");\n    result_str += result_num;\n    return result_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            char.push(str[i]);\n        }\n    }\n    return char.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = \"\";\n    var num_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            new_str += test_str[i];\n        }\n        else{\n            num_str += test_str[i];\n        }\n    }\n    return new_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            char.push(str[i]);\n        }\n    }\n    return char.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= 0 && test_str[i] <= 9){\n            num_arr.push(test_str[i]);\n        }\n        else{\n            str_arr.push(test_str[i]);\n        }\n    }\n    str = str_arr.join(\"\") + num_arr.join(\"\");\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = test_str.match(/\\d+/g);\n    var str = test_str.match(/[a-zA-Z]+/g);\n    return str.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str += test_str[i];\n        }else{\n            num += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= '0' && test_str[i] <= '9'){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = '';\n    var str = '';\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }\n        else{\n            str += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var char_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            char_str += test_str[i];\n        }\n    }\n    return char_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var result = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_arr.push(test_str[i]);\n        }\n        else{\n            str_arr.push(test_str[i]);\n        }\n    }\n    result = str_arr.join(\"\") + num_arr.join(\"\");\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = \"\";\n    var str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str += test_str[i];\n        }else{\n            num += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            char.push(str[i]);\n        }\n    }\n    return char.concat(num).join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var char_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            char_str += test_str[i];\n        }\n    }\n    return char_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] >= '0' && str[i] <= '9'){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            letter.push(str[i]);\n        }\n        else{\n            num.push(str[i]);\n        }\n    }\n    var result = letter.concat(num);\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = \"\";\n    var num = \"\";\n    for(var i=0;i<test_str.length;i++){\n        if(test_str[i]>='0' && test_str[i]<='9'){\n            num += test_str[i];\n        }\n        else{\n            str += test_str[i];\n        }\n    }\n    return str+num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = '';\n    var num = '';\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }else{\n            str += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var nums = test_str.match(/\\d+/g);\n    var chars = test_str.match(/\\D+/g);\n    return chars.join('') + nums.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var char_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= 0){\n            num_str += test_str[i];\n        }\n        else{\n            char_str += test_str[i];\n        }\n    }\n    return char_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = test_str.match(/\\d+/g);\n    var str = test_str.match(/[a-zA-Z]+/g);\n    return str.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }\n        else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = test_str.match(/\\d/g);\n    var str = test_str.match(/[a-zA-Z]/g);\n    return str.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }\n        else{\n            result += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = test_str.match(/\\d+/g);\n    var str = test_str.match(/[a-zA-Z]+/g);\n    var result = str.join(\"\") + num.join(\"\");\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = \"\";\n    var str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }\n        else{\n            str += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            letter.push(str[i]);\n        }else{\n            num.push(str[i]);\n        }\n    }\n    return letter.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = test_str.replace(/[^a-zA-Z]/g, '');\n    var result2 = test_str.replace(/[^0-9]/g, '');\n    return result + result2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= '0' && test_str[i] <= '9'){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var temp = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= 0 && test_str[i] <= 9){\n            temp += test_str[i];\n        }\n    }\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= 0 && test_str[i] <= 9){\n            test_str = test_str.replace(test_str[i], \"\");\n        }\n    }\n    return test_str + temp;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Ilove4you5three00thousand1143553000'\n\nshould loosely deep-equal\n\n'Iloveyouthreethousand1143553000'\n    at test (/tmp/tmpr3d00v24.js:21:10)\n    at Object.<anonymous> (/tmp/tmpr3d00v24.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Ilove4you5three00thousand1143553000',\n  expected: 'Iloveyouthreethousand1143553000',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = \"\";\n    var num_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            new_str += test_str[i];\n        }\n    }\n    return new_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            letter.push(str[i]);\n        }else{\n            num.push(str[i]);\n        }\n    }\n    return letter.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] >= 0){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.concat(num).join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var nums = test_str.match(/\\d+/g);\n    var chars = test_str.match(/[a-zA-Z]+/g);\n    var result = chars.join('') + nums.join('');\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str_arr.push(test_str[i]);\n        }else{\n            num_arr.push(test_str[i]);\n        }\n    }\n    return str_arr.join('') + num_arr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = \"\";\n    var num_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            new_str += test_str[i];\n        }\n    }\n    return new_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            result += test_str[i];\n        }\n        else{\n            num += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var result = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i]) == false){\n            num_arr.push(test_str[i]);\n        }\n        else{\n            str_arr.push(test_str[i]);\n        }\n    }\n    result = str_arr.join(\"\") + num_arr.join(\"\");\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }\n        else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }\n        else{\n            result += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    var result = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == parseInt(str[i])){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    result = letter.concat(num);\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for(var i=0;i<test_str.length;i++){\n        if(test_str[i]>='0' && test_str[i]<='9'){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str+num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var res = test_str.replace(/[^0-9]/g, \"\");\n    var res1 = test_str.replace(/[0-9]/g, \"\");\n    return res1 + res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var result = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_arr.push(test_str[i]);\n        }\n        else{\n            str_arr.push(test_str[i]);\n        }\n    }\n    result = str_arr.concat(num_arr);\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = '',\n        str = '';\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }else{\n            str += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var result = [];\n    var i;\n    for(i=0;i<test_str.length;i++){\n        if(!isNaN(test_str[i])){\n            num_arr.push(test_str[i]);\n        }\n        else{\n            str_arr.push(test_str[i]);\n        }\n    }\n    result = str_arr.concat(num_arr);\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = \"\";\n    var str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }\n        else{\n            str += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = \"\";\n    var num_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            new_str += test_str[i];\n        }\n        else{\n            num_str += test_str[i];\n        }\n    }\n    return new_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i]) == false){\n            num += test_str[i];\n        }\n        else{\n            result += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = test_str.match(/\\d+/g).join(\"\");\n    var str = test_str.match(/[a-zA-Z]+/g).join(\"\");\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = test_str.match(/\\d+/g);\n    var str = test_str.match(/[a-zA-Z]+/g);\n    return str.join('')+num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }\n        else{\n            char.push(str[i]);\n        }\n    }\n    return char.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            result += test_str[i];\n        }\n    }\n    return result + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = \"\";\n    var num_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            new_str += test_str[i];\n        }\n        else{\n            num_str += test_str[i];\n        }\n    }\n    return new_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == parseInt(str[i])){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var res = test_str.replace(/[^0-9]/g, '');\n    var res1 = test_str.replace(/[0-9]/g, '');\n    return res1 + res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = \"\";\n    var alpha = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }\n        else{\n            alpha += test_str[i];\n        }\n    }\n    return alpha + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }\n        else{\n            char.push(str[i]);\n        }\n    }\n    return char.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for(var i=0; i<test_str.length; i++){\n        if(test_str[i] >= '0' && test_str[i] <= '9'){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = '';\n    var alpha_str = '';\n    for (var i = 0; i < test_str.length; i++){\n        if (test_str[i] >= '0' && test_str[i] <= '9'){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = test_str.match(/\\d+/g).join(\"\");\n    var alpha = test_str.match(/[a-zA-Z]+/g).join(\"\");\n    return alpha + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n\tvar str = test_str.split(\"\");\n\tvar num = [];\n\tvar letter = [];\n\tfor(var i = 0; i < str.length; i++){\n\t\tif(str[i] >= 0){\n\t\t\tnum.push(str[i]);\n\t\t}else{\n\t\t\tletter.push(str[i]);\n\t\t}\n\t}\n\treturn letter.concat(num).join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            result += test_str[i];\n        }\n        else{\n            num += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var nums = test_str.match(/\\d+/g).map(Number);\n    var str = test_str.match(/[a-zA-Z]+/g).join(\"\");\n    return str + nums.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = test_str.match(/\\d+/g);\n    var str = test_str.match(/[a-zA-Z]+/g);\n    return str.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == \"0\" || str[i] == \"1\" || str[i] == \"2\" || str[i] == \"3\" || str[i] == \"4\" || str[i] == \"5\" || str[i] == \"6\" || str[i] == \"7\" || str[i] == \"8\" || str[i] == \"9\"){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    var result = letter.concat(num);\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = \"\";\n    var num_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            new_str += test_str[i];\n        }\n    }\n    return new_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var nums = test_str.match(/\\d+/g);\n    var str = test_str.match(/[a-zA-Z]+/g);\n    return str.join(\"\") + nums.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var str_len = test_str.length;\n    var new_str = \"\";\n    for(var i = 0; i < str_len; i++){\n        if(!isNaN(test_str[i])){\n            num_arr.push(test_str[i]);\n        }else{\n            str_arr.push(test_str[i]);\n        }\n    }\n    new_str = str_arr.join(\"\") + num_arr.join(\"\");\n    return new_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var nums = [];\n    var letters = [];\n    for (var i = 0; i < str.length; i++){\n        if (isNaN(str[i]) == false){\n            nums.push(str[i]);\n        }\n        else{\n            letters.push(str[i]);\n        }\n    }\n    return letters.join(\"\") + nums.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var test_str = test_str.split(\"\");\n    var num_arr = [];\n    var char_arr = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_arr.push(test_str[i]);\n        }\n        else{\n            char_arr.push(test_str[i]);\n        }\n    }\n    return char_arr.join(\"\") + num_arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == parseInt(str[i])){\n            num.push(str[i]);\n        }\n        else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var test_arr = test_str.split('');\n    var num_arr = [];\n    var char_arr = [];\n    for(var i = 0; i < test_arr.length; i++){\n        if(!isNaN(test_arr[i])){\n            num_arr.push(test_arr[i]);\n        }else{\n            char_arr.push(test_arr[i]);\n        }\n    }\n    return char_arr.join('') + num_arr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }\n        else{\n            str += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            char.push(str[i]);\n        }else{\n            num.push(str[i]);\n        }\n    }\n    return char.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var nums = test_str.match(/\\d+/g);\n    var str = test_str.match(/\\D+/g);\n    return str + nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'I,love,you,three,thousand1,143,55,3000'\n\nshould loosely deep-equal\n\n'Iloveyouthreethousand1143553000'\n    at test (/tmp/tmpk45ofyjn.js:12:10)\n    at Object.<anonymous> (/tmp/tmpk45ofyjn.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'I,love,you,three,thousand1,143,55,3000',\n  expected: 'Iloveyouthreethousand1143553000',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = [];\n    var str = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str.push(test_str[i]);\n        }else{\n            num.push(test_str[i]);\n        }\n    }\n    return str.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] >= \"0\" && str[i] <= \"9\"){\n            num.push(str[i]);\n        }\n        else{\n            char.push(str[i]);\n        }\n    }\n    return char.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = '', alpha = '';\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }\n        else{\n            alpha += test_str[i];\n        }\n    }\n    return alpha + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= '0' && test_str[i] <= '9'){\n            num += test_str[i];\n        }\n        else{\n            result += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= '0' && test_str[i] <= '9'){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] >= 0){\n            num.push(str[i]);\n        }\n        else{\n            char.push(str[i]);\n        }\n    }\n    return char.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var char_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            char_str += test_str[i];\n        }\n    }\n    return char_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = \"\";\n    var str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }\n        else{\n            str += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str_arr.push(test_str[i]);\n        }else{\n            num_arr.push(test_str[i]);\n        }\n    }\n    return str_arr.join('') + num_arr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str;\n    var num = \"\";\n    var new_str = \"\";\n    for (var i = 0; i < str.length; i++){\n        if (isNaN(str[i]) == false){\n            num += str[i];\n        }\n        else {\n            new_str += str[i];\n        }\n    }\n    return new_str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] >= 0){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = test_str.replace(/[^a-zA-Z]/g, '');\n    var num_str = test_str.replace(/[^0-9]/g, '');\n    return new_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str_arr.push(test_str[i]);\n        }else{\n            num_arr.push(test_str[i]);\n        }\n    }\n    return str_arr.join(\"\") + num_arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = test_str.replace(/[^a-zA-Z]/g, '');\n    var result1 = test_str.replace(/[^0-9]/g, '');\n    return result + result1;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= 0 && test_str[i] <= 9){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            letter.push(str[i]);\n        }else{\n            num.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            new_str += test_str[i];\n        }\n    }\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            new_str += test_str[i];\n        }\n    }\n    return new_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var result = '';\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_arr.push(test_str[i]);\n        }else{\n            str_arr.push(test_str[i]);\n        }\n    }\n    result = str_arr.join('') + num_arr.join('');\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = \"\";\n    var str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= 0 && test_str[i] <= 9){\n            num += test_str[i];\n        }\n        else{\n            str += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }else{\n            result += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var char_arr = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_arr.push(test_str[i]);\n        }\n        else{\n            char_arr.push(test_str[i]);\n        }\n    }\n    return char_arr.join(\"\") + num_arr.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = \"\";\n    var num_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= '0' && test_str[i] <= '9'){\n            num_str += test_str[i];\n        }\n        else{\n            new_str += test_str[i];\n        }\n    }\n    return new_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var res = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            res.push(str[i]);\n        }\n    }\n    return res.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }\n        else{\n            char.push(str[i]);\n        }\n    }\n    return char.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            char.push(str[i]);\n        }\n    }\n    return char.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1665517325,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == \"1\" || str[i] == \"2\" || str[i] == \"3\" || str[i] == \"4\" || str[i] == \"5\" || str[i] == \"6\" || str[i] == \"7\" || str[i] == \"8\" || str[i] == \"9\" || str[i] == \"0\"){\n            num.push(str[i]);\n        }\n        else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= 0 && test_str[i] <= 9){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var str_new = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            str_new.push(str[i]);\n        }else{\n            num.push(str[i]);\n        }\n    }\n    return str_new.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = '';\n    var num = '';\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str += test_str[i];\n        }else{\n            num += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var res = test_str.replace(/[^0-9]/g, '');\n    var res2 = test_str.replace(/[0-9]/g, '');\n    return res2 + res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }\n        else{\n            str += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var other_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            other_str += test_str[i];\n        }\n    }\n    return other_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    for(var i=0; i<test_str.length; i++){\n        if(test_str[i] >= '0' && test_str[i] <= '9'){\n            num_arr.push(test_str[i]);\n        }\n        else{\n            str_arr.push(test_str[i]);\n        }\n    }\n    return str_arr.join('') + num_arr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var test_arr = test_str.split('');\n    var num_arr = [];\n    var char_arr = [];\n    for(var i = 0; i < test_arr.length; i++){\n        if(!isNaN(test_arr[i])){\n            num_arr.push(test_arr[i]);\n        }else{\n            char_arr.push(test_arr[i]);\n        }\n    }\n    return char_arr.join('') + num_arr.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            str += test_str[i];\n        }else{\n            num += test_str[i];\n        }\n    }\n    return str + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alpha_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            alpha_str += test_str[i];\n        }\n    }\n    return alpha_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var result = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_arr.push(test_str[i]);\n        }\n        else{\n            str_arr.push(test_str[i]);\n        }\n    }\n    result = str_arr.concat(num_arr);\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = '';\n    var num = '';\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num += test_str[i];\n        }\n        else{\n            result += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var temp = test_str.split(\"\");\n    var num = [];\n    var str = [];\n    for(var i = 0; i < temp.length; i++){\n        if(isNaN(temp[i])){\n            str.push(temp[i]);\n        }\n        else{\n            num.push(temp[i]);\n        }\n    }\n    var result = str.join(\"\") + num.join(\"\");\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(test_str[i] >= '0' && test_str[i] <= '9'){\n            num += test_str[i];\n        }\n        else{\n            result += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var result = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_arr.push(test_str[i]);\n        }\n        else{\n            str_arr.push(test_str[i]);\n        }\n    }\n    result = str_arr.concat(num_arr);\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var nums = test_str.match(/\\d+/g).map(Number);\n    var chars = test_str.match(/\\D+/g);\n    return chars.join(\"\") + nums.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(isNaN(str[i])){\n            char.push(str[i]);\n        }\n        else{\n            num.push(str[i]);\n        }\n    }\n    return char.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var alpha = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == parseInt(str[i])){\n            num.push(str[i]);\n        }else{\n            alpha.push(str[i]);\n        }\n    }\n    return alpha.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num = test_str.match(/\\d+/g);\n    var str = test_str.match(/[a-zA-Z]+/g);\n    return str.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var char_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            char_str += test_str[i];\n        }\n    }\n    return char_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i=0;i<str.length;i++){\n        if(parseInt(str[i])){\n            num.push(str[i]);\n        }else{\n            char.push(str[i]);\n        }\n    }\n    return char.join(\"\")+num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122856,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Iloveyouthree000thousand1143553'\n\nshould loosely deep-equal\n\n'Iloveyouthreethousand1143553000'\n    at test (/tmp/tmpjzfa4fwl.js:20:10)\n    at Object.<anonymous> (/tmp/tmpjzfa4fwl.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Iloveyouthree000thousand1143553',\n  expected: 'Iloveyouthreethousand1143553000',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var new_str = \"\";\n    var num_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(isNaN(test_str[i])){\n            new_str += test_str[i];\n        }\n        else{\n            num_str += test_str[i];\n        }\n    }\n    return new_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var result = [];\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_arr.push(test_str[i]);\n        }else{\n            str_arr.push(test_str[i]);\n        }\n    }\n    result = str_arr.concat(num_arr);\n    return result.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var alpha = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }else{\n            alpha.push(str[i]);\n        }\n    }\n    return alpha.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var nums = test_str.match(/[0-9]+/g);\n    var strs = test_str.match(/[a-zA-Z]+/g);\n    var result = strs.join('') + nums.join('');\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var res = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == parseInt(str[i])){\n            num.push(str[i]);\n        }else{\n            res.push(str[i]);\n        }\n    }\n    return res.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == parseInt(str[i])){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] >= 0){\n            num.push(str[i]);\n        }\n        else{\n            char.push(str[i]);\n        }\n    }\n    return char.concat(num);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122856,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'I',\n  'l',\n  'o',\n  'v',\n  'e',\n  'y',\n  'o',\n  'u',\n  't',\n  'h',\n  'r',\n  'e',\n  'e',\n  't',\n  'h',\n  'o',\n  'u',\n  's',\n  'a',\n  'n',\n  'd',\n  '1',\n  '1',\n  '4',\n  '3',\n  '5',\n  '5',\n  '3',\n  '0',\n  '0',\n  '0'\n]\n\nshould loosely deep-equal\n\n'Iloveyouthreethousand1143553000'\n    at test (/tmp/tmpnxw3bzj8.js:21:10)\n    at Object.<anonymous> (/tmp/tmpnxw3bzj8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    'I', 'l', 'o', 'v', 'e', 'y',\n    'o', 'u', 't', 'h', 'r', 'e',\n    'e', 't', 'h', 'o', 'u', 's',\n    'a', 'n', 'd', '1', '1', '4',\n    '3', '5', '5', '3', '0', '0',\n    '0'\n  ],\n  expected: 'Iloveyouthreethousand1143553000',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split('');\n    var num = [];\n    var char = [];\n    for(var i = 0; i < str.length; i++){\n        if(!isNaN(str[i])){\n            num.push(str[i]);\n        }\n        else{\n            char.push(str[i]);\n        }\n    }\n    return char.join('') + num.join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_str = \"\";\n    var alp_str = \"\";\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_str += test_str[i];\n        }\n        else{\n            alp_str += test_str[i];\n        }\n    }\n    return alp_str + num_str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = [];\n    var str_arr = [];\n    var result = '';\n    for(var i = 0; i < test_str.length; i++){\n        if(!isNaN(test_str[i])){\n            num_arr.push(test_str[i]);\n        }else{\n            str_arr.push(test_str[i]);\n        }\n    }\n    result = str_arr.join('') + num_arr.join('');\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var str = test_str.split(\"\");\n    var num = [];\n    var letter = [];\n    for(var i = 0; i < str.length; i++){\n        if(str[i] >= 0){\n            num.push(str[i]);\n        }else{\n            letter.push(str[i]);\n        }\n    }\n    return letter.join(\"\") + num.join(\"\");\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var result = \"\";\n    var num = \"\";\n    for(var i=0; i<test_str.length; i++){\n        if(test_str[i]>='0' && test_str[i]<='9'){\n            num += test_str[i];\n        }\n        else{\n            result += test_str[i];\n        }\n    }\n    return result + num;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to move all the numbers to the end of the given string.\nfunction move_num(test_str){\n    var num_arr = test_str.match(/\\d+/g);\n    var str_arr = test_str.match(/[a-zA-Z]+/g);\n    var result = \"\";\n    for(var i = 0; i < str_arr.length; i++){\n        result += str_arr[i];\n    }\n    for(var i = 0; i < num_arr.length; i++){\n        result += num_arr[i];\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_num;\n  assert.deepEqual(candidate(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\");\n  assert.deepEqual(candidate(\"Avengers124Assemble\"),\"AvengersAssemble124\");\n  assert.deepEqual(candidate(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\");\n}\n\ntest();",
      "timestamp": 1666122856,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
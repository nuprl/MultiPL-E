{
  "name": "mbpp_632_move_zero",
  "language": "js",
  "prompt": "//Write a jsthon function to move all zeroes to the end of the given array.\nfunction move_zero(num_list){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_632_move_zero.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = move_zero;\n  assert.deepEqual(candidate([1, 0, 2, 0, 3, 4]),[1, 2, 3, 4, 0, 0]);\n  assert.deepEqual(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]),[2, 3, 2, 4, 5, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([0, 1, 0, 1, 1]),[1, 1, 1, 0, 0]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var count = 0;\n    var len = num_list.length;\n    for(var i = 0; i < len; i++){\n        if(num_list[i] != 0){\n            num_list[count++] = num_list[i];\n        }\n    }\n    while(count < len){\n        num_list[count++] = 0;\n    }\n    return num_list;\n}",
    "    var count = 0;\n    var temp = [];\n    for(var i = 0; i < num_list.length; i++){\n        if(num_list[i] != 0){\n            temp[count] = num_list[i];\n            count++;\n        }\n    }\n    while(count < num_list.length){\n        temp[count] = 0;\n        count++;\n    }\n    return temp;\n}",
    "    var count = 0;\n    for(var i = 0; i < num_list.length; i++){\n        if(num_list[i] != 0){\n            num_list[count] = num_list[i];\n            count++;\n        }\n    }\n    while(count < num_list.length){\n        num_list[count] = 0;\n        count++;\n    }\n    return num_list;\n}",
    "    var temp = [];\n    var count = 0;\n    for(var i = 0; i < num_list.length; i++){\n        if(num_list[i] != 0){\n            temp[count] = num_list[i];\n            count++;\n        }\n    }\n    while(count < num_list.length){\n        temp[count] = 0;\n        count++;\n    }\n    return temp;\n}\n",
    "    var count = 0;\n    for(var i=0;i<num_list.length;i++){\n        if(num_list[i]!=0){\n            num_list[count++] = num_list[i];\n        }\n    }\n    while(count<num_list.length){\n        num_list[count++] = 0;\n    }\n    return num_list;\n}",
    "    var count = 0;\n    for (var i = 0; i < num_list.length; i++){\n        if (num_list[i] != 0){\n            num_list[count] = num_list[i];\n            count++;\n        }\n    }\n    while (count < num_list.length){\n        num_list[count] = 0;\n        count++;\n    }\n    return num_list;\n}",
    "    var count = 0;\n    for(var i = 0; i < num_list.length; i++){\n        if(num_list[i] != 0){\n            num_list[count] = num_list[i];\n            count++;\n        }\n    }\n    while(count < num_list.length){\n        num_list[count] = 0;\n        count++;\n    }\n    return num_list;\n}",
    "    var count = 0;\n    var l = num_list.length;\n    for(var i = 0; i < l; i++){\n        if(num_list[i] != 0){\n            num_list[count] = num_list[i];\n            count++;\n        }\n    }\n    while(count < l){\n        num_list[count] = 0;\n        count++;\n    }\n    return num_list;\n}",
    "    var zeros = 0;\n    var new_list = [];\n    for(var i = 0; i < num_list.length; i++){\n        if(num_list[i] != 0){\n            new_list.push(num_list[i]);\n        }\n        else{\n            zeros++;\n        }\n    }\n    for(var i = 0; i < zeros; i++){\n        new_list.push(0);\n    }\n    return new_list;\n}",
    "    var count = 0;\n    for(var i = 0; i < num_list.length; i++){\n        if(num_list[i] != 0){\n            num_list[count] = num_list[i];\n            count++;\n        }\n    }\n    while(count < num_list.length){\n        num_list[count] = 0;\n        count++;\n    }\n    return num_list;\n}",
    "    var zeros = 0;\n    var new_list = [];\n    for(var i = 0; i < num_list.length; i++){\n        if(num_list[i] != 0){\n            new_list.push(num_list[i]);\n        }\n        else{\n            zeros++;\n        }\n    }\n    while(zeros--){\n        new_list.push(0);\n    }\n    return new_list;\n}",
    "    var a=[];\n    var b=[];\n    for(var i=0;i<num_list.length;i++){\n        if(num_list[i]==0){\n            a.push(num_list[i]);\n        }\n        else{\n            b.push(num_list[i]);\n        }\n    }\n    return b.concat(a);\n}",
    "    var temp = [];\n    var count = 0;\n    for(var i = 0; i < num_list.length; i++){\n        if(num_list[i] != 0){\n            temp[count++] = num_list[i];\n        }\n    }\n    while(count < num_list.length){\n        temp[count++] = 0;\n    }\n    return temp;\n}",
    "    var count = 0;\n    var temp = [];\n    for(var i = 0; i < num_list.length; i++){\n        if(num_list[i] != 0){\n            temp[count++] = num_list[i];\n        }\n    }\n    while(count < num_list.length){\n        temp[count++] = 0;\n    }\n    return temp;\n}",
    "    var count = 0;\n    var new_list = [];\n    for(var i=0; i<num_list.length; i++){\n        if(num_list[i] != 0){\n            new_list.push(num_list[i]);\n        }\n        else{\n            count += 1;\n        }\n    }\n    for(var j=0; j<count; j++){\n        new_list.push(0);\n    }\n    return new_list;\n}",
    "    var count = 0;\n    for(var i = 0; i < num_list.length; i++){\n        if(num_list[i] != 0){\n            num_list[count] = num_list[i];\n            count++;\n        }\n    }\n    while(count < num_list.length){\n        num_list[count] = 0;\n        count++;\n    }\n    return num_list;\n}",
    "    var count = 0;\n    for(var i=0; i<num_list.length; i++){\n        if(num_list[i] != 0){\n            num_list[count] = num_list[i];\n            count++;\n        }\n    }\n    while(count < num_list.length){\n        num_list[count] = 0;\n        count++;\n    }\n    return num_list;\n}",
    "    var a = [], b = [], prev;\n    \n    num_list.sort();\n    for ( var i = 0; i < num_list.length; i++ ) {\n        if ( num_list[i] !== prev ) {\n            a.push(num_list[i]);\n            b.push(1);\n        } else {\n            b[b.length-1]++;\n        }\n        prev = num_list[i];\n    }\n    \n    return [a, b];\n}",
    "    var a = [], b = [], prev;\n    num_list.sort();\n    for ( var i = 0; i < num_list.length; i++ ) {\n        if ( num_list[i] !== prev ) {\n            a.push(num_list[i]);\n            b.push(1);\n        } else {\n            b[b.length-1]++;\n        }\n        prev = num_list[i];\n    }\n    return [a, b];\n}",
    "    var count = 0;\n    var len = num_list.length;\n    for(var i = 0; i < len; i++){\n        if(num_list[i] != 0){\n            num_list[count++] = num_list[i];\n        }\n    }\n    while(count < len){\n        num_list[count++] = 0;\n    }\n    return num_list;\n}"
  ]
}
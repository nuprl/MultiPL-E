{
  "name": "mbpp_250_count_X",
  "language": "js",
  "prompt": "//Write a jsthon function that takes in an array and an element and counts the occcurences of the element in the array.\nfunction count_X(tup, x){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_250_count_X.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_X;\n  assert.deepEqual(candidate([10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2], 4),0);\n  assert.deepEqual(candidate([10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2], 10),3);\n  assert.deepEqual(candidate([10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2], 8),4);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for (var i = 0; i < tup.length; i++){\n        if (tup[i] == x){\n            count += 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i=0; i<tup.length; i++){\n        if(tup[i] == x){\n            count += 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count += 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count += 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for (var i = 0; i < tup.length; i++) {\n        if (tup[i] == x) {\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count += 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count += 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for (var i = 0; i < tup.length; i++) {\n        if (tup[i] == x) {\n            count++;\n        }\n    }\n    return count;\n}",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count += 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count += 1;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count++;\n        }\n    }\n    return count;\n}\n",
    "    var count = 0;\n    for(var i = 0; i < tup.length; i++){\n        if(tup[i] == x){\n            count++;\n        }\n    }\n    return count;\n}\n"
  ]
}
{
  "name": "mbpp_622_get_median",
  "language": "js",
  "prompt": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_622_get_median.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nlet arr1 = [1, 12, 15, 26, 38];\nlet arr2 = [2, 13, 17, 30, 45];\nlet n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var m1 = -1;\n    var m2 = -1;\n    for(var count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n) {\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n) {\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else {\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n1 = arr1.length;\nvar n2 = arr2.length;\nif(n1 == n2){\n    console.log(\"Median is \" + get_median(arr1, arr2, n1));\n}\nelse{\n    console.log(\"Doesn't work for arrays of unequal size\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "Median is 16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var m1 = -1;\n    var m2 = -1;\n    for(var count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++)\n    {\n        if (i == n)\n        {\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n)\n        {\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j])\n        {\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else\n        {\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    if(n <= 0)\n        return -1;\n    if(n == 1)\n        return (arr1[0] + arr2[0])/2;\n    if(n == 2)\n        return (Math.max(arr1[0], arr2[0]) + Math.min(arr1[1], arr2[1])) / 2;\n    var m1 = median(arr1, n);\n    var m2 = median(arr2, n);\n    if(m1 == m2)\n        return m1;\n    if(m1 < m2){\n        if(n % 2 == 0)\n            return get_median(arr1.slice(n/2 - 1), arr2.slice(0, n/2 + 1), n - n/2 + 1);\n        return get_median(arr1.slice(n/2), arr2.slice(0, n/2 + 1), n - n/2);\n    }\n    if(n % 2 == 0)\n        return get_median(arr2.slice(n/2 - 1), arr1.slice(0, n/2 + 1), n - n/2 + 1);\n    return get_median(arr2.slice(n/2), arr1.slice(0, n/2 + 1), n - n/2);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "/tmp/tmpezdbb7tc.js:9\n    var m1 = median(arr1, n);\n             ^\n\nReferenceError: median is not defined\n    at get_median (/tmp/tmpezdbb7tc.js:9:14)\n    at test (/tmp/tmpezdbb7tc.js:27:20)\n    at Object.<anonymous> (/tmp/tmpezdbb7tc.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var m1 = -1;\n    var m2 = -1;\n    for(var count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i=0;\n    var j=0;\n    var count;\n    var m1=-1, m2=-1;\n    for(count=0; count<=n; count++){\n        if(i==n){\n            m1=m2;\n            m2=arr2[0];\n            break;\n        }\n        else if(j==n){\n            m1=m2;\n            m2=arr1[0];\n            break;\n        }\n        if(arr1[i]<arr2[j]){\n            m1=m2;\n            m2=arr1[i];\n            i++;\n        }\n        else{\n            m1=m2;\n            m2=arr2[j];\n            j++;\n        }\n    }\n    return (m1+m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i=0;\n    var j=0;\n    var count;\n    var m1=-1, m2=-1;\n    for(count=0; count<=n; count++){\n        if(i==n){\n            m1=m2;\n            m2=arr2[0];\n            break;\n        }\n        else if(j==n){\n            m1=m2;\n            m2=arr1[0];\n            break;\n        }\n        if(arr1[i]<arr2[j]){\n            m1=m2;\n            m2=arr1[i];\n            i++;\n        }\n        else{\n            m1=m2;\n            m2=arr2[j];\n            j++;\n        }\n    }\n    return (m1+m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n) {\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n) {\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else {\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++) {\n        if (i == n) {\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        } else if (j == n) {\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]) {\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        } else {\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n\n    return (m1 + m2)/2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++) {\n        if (i == n) {\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n) {\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]) {\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else {\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n  let i = 0;\n  let j = 0;\n  let count;\n  let m1 = -1;\n  let m2 = -1;\n  for(count = 0; count <= n; count++){\n    if(i == n){\n      m1 = m2;\n      m2 = arr2[0];\n      break;\n    }else if(j == n){\n      m1 = m2;\n      m2 = arr1[0];\n      break;\n    }\n    if(arr1[i] < arr2[j]){\n      m1 = m2;\n      m2 = arr1[i];\n      i++;\n    }else{\n      m1 = m2;\n      m2 = arr2[j];\n      j++;\n    }\n  }\n  return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n) {\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n) {\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else {\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let m1 = -1;\n    let m2 = -1;\n    for(let count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nlet arr1 = [1, 12, 15, 26, 38];\nlet arr2 = [2, 13, 17, 30, 45];\nlet n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++) {\n        if (i == n) {\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        } else if (j == n) {\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]) {\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        } else {\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n1 = arr1.length;\nvar n2 = arr2.length;\nif (n1 == n2)\n    console.log(\"Median is \" + get_median(arr1, arr2, n1));\nelse\n    console.log(\"Doesn't work for arrays of unequal size\");\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "Median is 16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var m1 = -1;\n    var m2 = -1;\n    for(var count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0, j = 0;\n    let m1 = -1, m2 = -1;\n    for(let count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nvar result = get_median(arr1, arr2, n);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var m1 = -1;\n    var m2 = -1;\n    for(var count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    if(n <= 0)\n        return -1;\n    if(n == 1)\n        return (arr1[0] + arr2[0])/2;\n    if(n == 2)\n        return (Math.max(arr1[0], arr2[0]) + Math.min(arr1[1], arr2[1])) / 2;\n    \n    var m1 = median(arr1, n);\n    var m2 = median(arr2, n);\n    \n    if(m1 == m2)\n        return m1;\n    \n    if(m1 < m2){\n        if(n % 2 == 0)\n            return get_median(arr1.slice(n/2 - 1), arr2.slice(0, n/2 + 1), n - n/2 + 1);\n        return get_median(arr1.slice(n/2), arr2.slice(0, n/2 + 1), n - n/2);\n    }\n    \n    if(n % 2 == 0)\n        return get_median(arr2.slice(n/2 - 1), arr1.slice(0, n/2 + 1), n - n/2 + 1);\n    return get_median(arr2.slice(n/2), arr1.slice(0, n/2 + 1), n - n/2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "/tmp/tmpli25aup3.js:10\n    var m1 = median(arr1, n);\n             ^\n\nReferenceError: median is not defined\n    at get_median (/tmp/tmpli25aup3.js:10:14)\n    at test (/tmp/tmpli25aup3.js:32:20)\n    at Object.<anonymous> (/tmp/tmpli25aup3.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++) {\n        if (i == n) {\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        } else if (j == n) {\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]) {\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        } else {\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n\tvar i = 0;\n\tvar j = 0;\n\tvar count;\n\tvar m1 = -1;\n\tvar m2 = -1;\n\tfor(count = 0; count <= n; count++){\n\t\tif(i == n){\n\t\t\tm1 = m2;\n\t\t\tm2 = arr2[0];\n\t\t\tbreak;\n\t\t}\n\t\telse if(j == n){\n\t\t\tm1 = m2;\n\t\t\tm2 = arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif(arr1[i] < arr2[j]){\n\t\t\tm1 = m2;\n\t\t\tm2 = arr1[i];\n\t\t\ti++;\n\t\t}\n\t\telse{\n\t\t\tm1 = m2;\n\t\t\tm2 = arr2[j];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var m1 = -1;\n    var m2 = -1;\n    for(var count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++)\n    {\n        if (i == n)\n        {\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n)\n        {\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j])\n        {\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else\n        {\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var m1 = -1;\n    var m2 = -1;\n    for(var count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i=0, j=0, count;\n    let m1=-1, m2=-1;\n    for(count=0; count<=n; count++){\n        if(i==n){\n            m1=m2;\n            m2=arr2[0];\n            break;\n        }\n        else if(j==n){\n            m1=m2;\n            m2=arr1[0];\n            break;\n        }\n        if(arr1[i]<arr2[j]){\n            m1=m2;\n            m2=arr1[i];\n            i++;\n        }\n        else{\n            m1=m2;\n            m2=arr2[j];\n            j++;\n        }\n    }\n    return (m1+m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n) {\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n) {\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else {\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n1 = arr1.length;\nvar n2 = arr2.length;\nif(n1 == n2){\n    console.log(\"Median is \" + get_median(arr1, arr2, n1));\n}\nelse{\n    console.log(\"Doesn't work for arrays of unequal size\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "Median is 16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    if(n <= 0) return -1;\n    if(n == 1) return (arr1[0] + arr2[0])/2;\n    if(n == 2) return (Math.max(arr1[0], arr2[0]) + Math.min(arr1[1], arr2[1]))/2;\n\n    var m1 = median(arr1, n);\n    var m2 = median(arr2, n);\n\n    if(m1 == m2) return m1;\n\n    if(m1 < m2){\n        if(n % 2 == 0){\n            return get_median(arr1.slice(n/2 - 1), arr2.slice(0, n/2 + 1), n - n/2 + 1);\n        }\n        return get_median(arr1.slice(n/2), arr2.slice(0, n/2 + 1), n - n/2);\n    }\n\n    if(n % 2 == 0){\n        return get_median(arr2.slice(n/2 - 1), arr1.slice(0, n/2 + 1), n - n/2 + 1);\n    }\n    return get_median(arr2.slice(n/2), arr1.slice(0, n/2 + 1), n - n/2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "/tmp/tmpuhwqs93m.js:7\n    var m1 = median(arr1, n);\n             ^\n\nReferenceError: median is not defined\n    at get_median (/tmp/tmpuhwqs93m.js:7:14)\n    at test (/tmp/tmpuhwqs93m.js:30:20)\n    at Object.<anonymous> (/tmp/tmpuhwqs93m.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 2, 3, 6];\nvar arr2 = [4, 6, 8, 10];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\n\nvar n = arr1.length;\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n) {\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n) {\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]) {\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else {\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    if(n <= 0)\n        return -1;\n    if(n == 1)\n        return (arr1[0] + arr2[0])/2;\n    if(n == 2)\n        return (Math.max(arr1[0], arr2[0]) + Math.min(arr1[1], arr2[1]))/2;\n    \n    var m1 = median(arr1, n);\n    var m2 = median(arr2, n);\n    \n    if(m1 == m2)\n        return m1;\n    \n    if(m1 < m2){\n        if(n % 2 == 0)\n            return get_median(arr1.slice(n/2 - 1), arr2.slice(0, n/2 + 1), n - n/2 + 1);\n        else\n            return get_median(arr1.slice(n/2), arr2.slice(0, n/2 + 1), n - n/2);\n    }\n    else{\n        if(n % 2 == 0)\n            return get_median(arr1.slice(0, n/2 + 1), arr2.slice(n/2 - 1), n - n/2 + 1);\n        else\n            return get_median(arr1.slice(0, n/2 + 1), arr2.slice(n/2), n - n/2);\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "/tmp/tmpcrgg3gt6.js:10\n    var m1 = median(arr1, n);\n             ^\n\nReferenceError: median is not defined\n    at get_median (/tmp/tmpcrgg3gt6.js:10:14)\n    at test (/tmp/tmpcrgg3gt6.js:35:20)\n    at Object.<anonymous> (/tmp/tmpcrgg3gt6.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nlet arr1 = [1, 12, 15, 26, 38];\nlet arr2 = [2, 13, 17, 30, 45];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nlet arr1 = [1, 12, 15, 26, 38];\nlet arr2 = [2, 13, 17, 30, 45];\nlet n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for (count = 0; count <= n; count++){\n        if (i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if (j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if (arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n1 = arr1.length;\nvar n2 = arr2.length;\nif (n1 == n2)\n    console.log(\"Median is \" + get_median(arr1, arr2, n1));\nelse\n    console.log(\"Doesn't work for arrays of unequal size\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "Median is 16\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var m1 = -1;\n    var m2 = -1;\n    for(var count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var m1 = -1;\n    var m2 = -1;\n    for(var count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let m1 = -1;\n    let m2 = -1;\n    for(let count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var m1 = -1;\n    var m2 = -1;\n    for(var count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nvar arr1 = [1, 12, 15, 26, 38];\nvar arr2 = [2, 13, 17, 30, 45];\nvar n = arr1.length;\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    let i = 0;\n    let j = 0;\n    let count;\n    let m1 = -1;\n    let m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1, m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }\n        else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }\n        else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1665510628,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of two sorted arrays of same size.\nfunction get_median(arr1, arr2, n){\n    var i = 0;\n    var j = 0;\n    var count;\n    var m1 = -1;\n    var m2 = -1;\n    for(count = 0; count <= n; count++){\n        if(i == n){\n            m1 = m2;\n            m2 = arr2[0];\n            break;\n        }else if(j == n){\n            m1 = m2;\n            m2 = arr1[0];\n            break;\n        }\n        if(arr1[i] < arr2[j]){\n            m1 = m2;\n            m2 = arr1[i];\n            i++;\n        }else{\n            m1 = m2;\n            m2 = arr2[j];\n            j++;\n        }\n    }\n    return (m1 + m2) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_median;\n  assert.deepEqual(candidate([1, 12, 15, 26, 38], [2, 13, 17, 30, 45], 5),16.0);\n  assert.deepEqual(candidate([2, 4, 8, 9], [7, 13, 19, 28], 4),8.5);\n  assert.deepEqual(candidate([3, 6, 14, 23, 36, 42], [2, 18, 27, 39, 49, 55], 6),25.0);\n}\n\ntest();",
      "timestamp": 1666123818,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
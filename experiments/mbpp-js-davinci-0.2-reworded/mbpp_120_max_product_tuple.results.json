{
  "name": "mbpp_120_max_product_tuple",
  "language": "js",
  "prompt": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_120_max_product_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i][j].length; k++){\n                for(var l = 0; l < list1[i][j][k].length; l++){\n                    var product = list1[i][j][k][l] * list1[i][j][k][l+1];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpz9p2vdci.js:24:10)\n    at Object.<anonymous> (/tmp/tmpz9p2vdci.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i][j].length; k++){\n                for(var l = 0; l < list1[i][j][k].length; l++){\n                    if(list1[i][j][k][l] * list1[i][j][k][l+1] > max_product){\n                        max_product = list1[i][j][k][l] * list1[i][j][k][l+1];\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpbw_y0cd7.js:23:10)\n    at Object.<anonymous> (/tmp/tmpbw_y0cd7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i][j].length; k++){\n                for(var l = 0; l < list1[i][j][k].length; l++){\n                    var product = list1[i][j][k][l] * list1[i][j][k][l+1];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpz9p2vdci.js:24:10)\n    at Object.<anonymous> (/tmp/tmpz9p2vdci.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          if(list1[i][j] * list1[i][k] > max){\n            max = list1[i][j] * list1[i][k];\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpvy50n_l4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvy50n_l4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp5goqwqyo.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5goqwqyo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for(var i=0; i<list1.length; i++){\n    for(var j=0; j<list1[i].length; j++){\n      for(var k=0; k<list1[i].length; k++){\n        if(j!=k){\n          var product = list1[i][j]*list1[i][k];\n          if(product>max_product){\n            max_product = product;\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = Math.abs(list1[i][j] * list1[i][k]);\n          if(product > max_product){\n            max_product = product;\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    var product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                product = list1[i][j] * list1[i][k];\n                if(product > max){\n                    max = product;\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpcxr5g2zf.js:23:10)\n    at Object.<anonymous> (/tmp/tmpcxr5g2zf.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(i != k){\n                    if(list1[i][j] * list1[k][j] > max){\n                        max = list1[i][j] * list1[k][j];\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n63\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpvjyuoe3a.js:23:10)\n    at Object.<anonymous> (/tmp/tmpvjyuoe3a.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 63,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpvy50n_l4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvy50n_l4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  var max_tuple = [];\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(Math.abs(list1[i][j] * list1[i][k]) > max && j != k){\n          max = Math.abs(list1[i][j] * list1[i][k]);\n          max_tuple = [list1[i][j], list1[i][k]];\n        }\n      }\n    }\n  }\n  return max_tuple;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  9\n]\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpr35wk6ry.js:23:10)\n    at Object.<anonymous> (/tmp/tmpr35wk6ry.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 9 ],\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            var product = list1[i][j] * list1[i][j+1];\n            if(product > max){\n                max = product;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for (var i = 0; i < list1.length; i++){\n    for (var j = 0; j < list1[i].length; j++){\n      for (var k = 0; k < list1[i].length; k++){\n        if (list1[i][j] * list1[i][k] > max){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmphfq9hk7_.js:21:10)\n    at Object.<anonymous> (/tmp/tmphfq9hk7_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    if(max_product < list1[i][j] * list1[i][k]){\n                        max_product = list1[i][j] * list1[i][k];\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          if(Math.abs(list1[i][j] * list1[i][k]) > max){\n            max = Math.abs(list1[i][j] * list1[i][k]);\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp5goqwqyo.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5goqwqyo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i=0; i<list1.length; i++){\n        for(var j=0; j<list1[i].length; j++){\n            for(var k=0; k<list1[i][j].length; k++){\n                var product = list1[i][j][k] * list1[i][j][k+1];\n                if(product > max_product){\n                    max_product = product;\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpx3wr4cvx.js:22:10)\n    at Object.<anonymous> (/tmp/tmpx3wr4cvx.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for (var i = 0; i < list1.length; i++){\n        for (var j = 0; j < list1[i].length; j++){\n            for (var k = 0; k < list1[i].length; k++){\n                if (j != k){\n                    var product = Math.abs(list1[i][j] * list1[i][k]);\n                    if (product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp5goqwqyo.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5goqwqyo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = Math.abs(list1[i][j] * list1[i][k]);\n          if(product > max_product){\n            max_product = product;\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i=0; i<list1.length; i++){\n        for(var j=0; j<list1[i].length; j++){\n            for(var k=0; k<list1[i].length; k++){\n                if(list1[i][j]*list1[i][k] > max_product && j!=k){\n                    max_product = list1[i][j]*list1[i][k];\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1.length; k++){\n                for(var l = 0; l < list1[k].length; l++){\n                    if(list1[i][j] * list1[k][l] > max){\n                        max = list1[i][j] * list1[k][l];\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpbjr2l5eb.js:23:10)\n    at Object.<anonymous> (/tmp/tmpbjr2l5eb.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for (var i = 0; i < list1.length; i++){\n    for (var j = 0; j < list1[i].length; j++){\n      for (var k = 0; k < list1[i].length; k++){\n        if (list1[i][j] * list1[i][k] > max_product){\n          max_product = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp6eqrvn0k.js:20:10)\n    at Object.<anonymous> (/tmp/tmp6eqrvn0k.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i=0; i<list1.length; i++){\n        for(var j=0; j<list1[i].length; j++){\n            for(var k=0; k<list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp40baxfsk.js:21:10)\n    at Object.<anonymous> (/tmp/tmp40baxfsk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for (var i = 0; i < list1.length; i++){\n        for (var j = 0; j < list1[i].length; j++){\n            for (var k = 0; k < list1[i].length; k++){\n                if (j != k){\n                    if (list1[i][j] * list1[i][k] > max){\n                        max = list1[i][j] * list1[i][k];\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = -Infinity;\n    for (var i = 0; i < list1.length; i++){\n        for (var j = 0; j < list1[i].length; j++){\n            for (var k = 0; k < list1[i].length; k++){\n                if (j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if (product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = Math.abs(list1[i][j] * list1[i][k]);\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpvy50n_l4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvy50n_l4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    var tuple = [];\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                        tuple = [list1[i][j], list1[i][k]];\n                    }\n                }\n            }\n        }\n    }\n    return tuple;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  9\n]\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp9ue_e6_1.js:26:10)\n    at Object.<anonymous> (/tmp/tmp9ue_e6_1.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 9 ],\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = Math.abs(list1[i][j] * list1[i][k]);\n          if(product > max_product){\n            max_product = product;\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp5goqwqyo.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5goqwqyo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n\tvar max_product = 0;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tfor(var j = 0; j < list1[i].length; j++){\n\t\t\tfor(var k = 0; k < list1[i].length; k++){\n\t\t\t\tif(j != k){\n\t\t\t\t\tvar product = list1[i][j] * list1[i][k];\n\t\t\t\t\tif(product > max_product){\n\t\t\t\t\t\tmax_product = product;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max_product){\n                    max_product = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpse8_bzw8.js:21:10)\n    at Object.<anonymous> (/tmp/tmpse8_bzw8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1.length; j++){\n            if(i != j){\n                var product = Math.abs(list1[i] * list1[j]);\n                if(product > max_product){\n                    max_product = product;\n                }\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpl_7uevvn.js:21:10)\n    at Object.<anonymous> (/tmp/tmpl_7uevvn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n\tvar max = 0;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tfor(var j = 0; j < list1[i].length; j++){\n\t\t\tfor(var k = 0; k < list1[i].length; k++){\n\t\t\t\tif(j != k){\n\t\t\t\t\tvar product = list1[i][j] * list1[i][k];\n\t\t\t\t\tif(product > max){\n\t\t\t\t\t\tmax = product;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    var max_product_tuple = [];\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max_product){\n                    max_product = list1[i][j] * list1[i][k];\n                    max_product_tuple = [list1[i][j], list1[i][k]];\n                }\n            }\n        }\n    }\n    return max_product_tuple;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  9,\n  9\n]\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpgolpxkt1.js:22:10)\n    at Object.<anonymous> (/tmp/tmpgolpxkt1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 9, 9 ],\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for (var i = 0; i < list1.length; i++){\n    for (var j = 0; j < list1[i].length; j++){\n      for (var k = 0; k < list1[i].length; k++){\n        if (j != k){\n          var product = list1[i][j] * list1[i][k];\n          if (product > max_product){\n            max_product = product;\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = Math.abs(list1[i][j] * list1[i][k]);\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for (var i = 0; i < list1.length; i++){\n        for (var j = 0; j < list1[i].length; j++){\n            for (var k = 0; k < list1[i].length; k++){\n                if (j != k){\n                    var product = Math.abs(list1[i][j] * list1[i][k]);\n                    if (product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = -Infinity;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1.length; k++){\n                for(var l = 0; l < list1[k].length; l++){\n                    if(list1[i][j] * list1[k][l] > max_product){\n                        max_product = list1[i][j] * list1[k][l];\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpfvmbrkku.js:23:10)\n    at Object.<anonymous> (/tmp/tmpfvmbrkku.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i=0;i<list1.length;i++){\n        for(var j=0;j<list1[i].length;j++){\n            for(var k=0;k<list1[i].length;k++){\n                if(j!=k){\n                    var product = list1[i][j]*list1[i][k];\n                    if(product>max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    if(list1[i][j] * list1[i][k] > max){\n                        max = list1[i][j] * list1[i][k];\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i=0; i<list1.length; i++){\n        for(var j=0; j<list1[i].length; j++){\n            for(var k=0; k<list1[i].length; k++){\n                if(j!=k){\n                    var product = list1[i][j]*list1[i][k];\n                    if(product>max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          if(list1[i][j] * list1[i][k] > max){\n            max = list1[i][j] * list1[i][k];\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(k != j){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpvy50n_l4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvy50n_l4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp5goqwqyo.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5goqwqyo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for (var i = 0; i < list1.length; i++){\n        for (var j = 0; j < list1[i].length; j++){\n            for (var k = 0; k < list1[i].length; k++){\n                if (j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if (product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n\tvar max_product = 0;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tfor(var j = 0; j < list1[i].length; j++){\n\t\t\tfor(var k = 0; k < list1[i].length; k++){\n\t\t\t\tif(j != k){\n\t\t\t\t\tvar product = list1[i][j] * list1[i][k];\n\t\t\t\t\tif(product > max_product){\n\t\t\t\t\t\tmax_product = product;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpvy50n_l4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvy50n_l4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    var product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    product = Math.abs(list1[i][j] * list1[i][k]);\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i][j].length; k++){\n                var product = list1[i][j][k] * list1[i][j][k+1];\n                if(product > max_product){\n                    max_product = product;\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp3ktgzfma.js:22:10)\n    at Object.<anonymous> (/tmp/tmp3ktgzfma.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          if(max_product < Math.abs(list1[i][j] * list1[i][k])){\n            max_product = Math.abs(list1[i][j] * list1[i][k]);\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            var product = list1[i][j] * list1[i][j+1];\n            if(product > max){\n                max = product;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max_product){\n            max_product = product;\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n\tvar max = 0;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tfor(var j = 0; j < list1[i].length; j++){\n\t\t\tfor(var k = 0; k < list1[i].length; k++){\n\t\t\t\tif(list1[i][j] * list1[i][k] > max){\n\t\t\t\t\tmax = list1[i][j] * list1[i][k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp61o1nv_v.js:21:10)\n    at Object.<anonymous> (/tmp/tmp61o1nv_v.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for (var i = 0; i < list1.length; i++){\n        for (var j = 0; j < list1[i].length; j++){\n            for (var k = 0; k < list1[i].length; k++){\n                if (list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpqscf8tz2.js:21:10)\n    at Object.<anonymous> (/tmp/tmpqscf8tz2.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n\tvar max = 0;\n\tfor(var i=0;i<list1.length;i++){\n\t\tfor(var j=0;j<list1[i].length;j++){\n\t\t\tfor(var k=0;k<list1[i].length;k++){\n\t\t\t\tif(j!=k){\n\t\t\t\t\tvar product = list1[i][j]*list1[i][k];\n\t\t\t\t\tif(product>max){\n\t\t\t\t\t\tmax = product;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i=0; i<list1.length; i++){\n        for(var j=0; j<list1[i].length; j++){\n            for(var k=0; k<list1[i].length; k++){\n                if(list1[i][j]*list1[i][k] > max){\n                    max = list1[i][j]*list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp_tfhi4ii.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_tfhi4ii.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp5goqwqyo.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5goqwqyo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpmgiqxtam.js:20:10)\n    at Object.<anonymous> (/tmp/tmpmgiqxtam.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpvy50n_l4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvy50n_l4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n\tvar max_product = 0;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tfor(var j = 0; j < list1[i].length; j++){\n\t\t\tfor(var k = 0; k < list1[i].length; k++){\n\t\t\t\tif(j != k){\n\t\t\t\t\tvar product = list1[i][j] * list1[i][k];\n\t\t\t\t\tif(product > max_product){\n\t\t\t\t\t\tmax_product = product;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp5goqwqyo.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5goqwqyo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for (var i = 0; i < list1.length; i++){\n        for (var j = 0; j < list1[i].length; j++){\n            for (var k = 0; k < list1[i].length; k++){\n                if (j != k){\n                    var product = Math.abs(list1[i][j] * list1[i][k]);\n                    if (product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1.length; k++){\n                for(var l = 0; l < list1[k].length; l++){\n                    if(i != k && j != l){\n                        var product = Math.abs(list1[i][j] * list1[k][l]);\n                        if(product > max){\n                            max = product;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n32\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpd37t9wiw.js:26:10)\n    at Object.<anonymous> (/tmp/tmpd37t9wiw.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 32,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp5goqwqyo.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5goqwqyo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = Math.abs(list1[i][j] * list1[i][k]);\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j]*list1[i][k] > max){\n          max = list1[i][j]*list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpw1tjkveo.js:21:10)\n    at Object.<anonymous> (/tmp/tmpw1tjkveo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    if(Math.abs(list1[i][j] * list1[i][k]) > max_product){\n                        max_product = Math.abs(list1[i][j] * list1[i][k]);\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n\tvar max_product = 0;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tfor(var j = 0; j < list1[i].length; j++){\n\t\t\tfor(var k = 0; k < list1[i].length; k++){\n\t\t\t\tif(j != k){\n\t\t\t\t\tvar product = list1[i][j] * list1[i][k];\n\t\t\t\t\tif(product > max_product){\n\t\t\t\t\t\tmax_product = product;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp5goqwqyo.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5goqwqyo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max && j != k){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = -Infinity;\n    for(var i=0; i<list1.length; i++){\n        for(var j=0; j<list1[i].length; j++){\n            for(var k=0; k<list1[i].length; k++){\n                if(j!=k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpvy50n_l4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvy50n_l4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for (var i = 0; i < list1.length; i++){\n        for (var j = 0; j < list1[i].length; j++){\n            for (var k = 0; k < list1[i].length; k++){\n                if (list1[i][j] * list1[i][k] > max_product){\n                    max_product = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp8sqh_5tl.js:21:10)\n    at Object.<anonymous> (/tmp/tmp8sqh_5tl.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpmgiqxtam.js:20:10)\n    at Object.<anonymous> (/tmp/tmpmgiqxtam.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = -Infinity;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max && j != k){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max_product){\n                    max_product = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpse8_bzw8.js:21:10)\n    at Object.<anonymous> (/tmp/tmpse8_bzw8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = Math.abs(list1[i][j] * list1[i][k]);\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max && j != k){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for (var i = 0; i < list1.length; i++){\n        for (var j = 0; j < list1[i].length; j++){\n            for (var k = 0; k < list1[i][j].length; k++){\n                for (var l = 0; l < list1[i][j][k].length; l++){\n                    var product = list1[i][j][k][l] * list1[i][j][k][l+1];\n                    if (product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpk6mo_qkt.js:24:10)\n    at Object.<anonymous> (/tmp/tmpk6mo_qkt.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          if(Math.abs(list1[i][j] * list1[i][k]) > max_product){\n            max_product = Math.abs(list1[i][j] * list1[i][k]);\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpvy50n_l4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvy50n_l4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpvy50n_l4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvy50n_l4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(i != k){\n                    if(list1[i][j] * list1[k][j] > max){\n                        max = list1[i][j] * list1[k][j];\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n63\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpvjyuoe3a.js:23:10)\n    at Object.<anonymous> (/tmp/tmpvjyuoe3a.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 63,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    var max_product_tuple = [];\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max_product){\n                    max_product = list1[i][j] * list1[i][k];\n                    max_product_tuple = [list1[i][j], list1[i][k]];\n                }\n            }\n        }\n    }\n    return max_product_tuple;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  9,\n  9\n]\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpetzpuw1e.js:23:10)\n    at Object.<anonymous> (/tmp/tmpetzpuw1e.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 9, 9 ],\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = Math.abs(list1[i][j] * list1[i][k]);\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp5goqwqyo.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5goqwqyo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n\tvar max_product = 0;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tfor(var j = 0; j < list1[i].length; j++){\n\t\t\tfor(var k = 0; k < list1[i].length; k++){\n\t\t\t\tif(j != k){\n\t\t\t\t\tvar product = list1[i][j] * list1[i][k];\n\t\t\t\t\tif(product > max_product){\n\t\t\t\t\t\tmax_product = product;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for (var i = 0; i < list1.length; i++){\n    for (var j = 0; j < list1[i].length; j++){\n      for (var k = 0; k < list1[i].length; k++){\n        if (j != k){\n          var product = list1[i][j] * list1[i][k];\n          if (product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1.length; j++){\n            if(i != j){\n                var product = list1[i] * list1[j];\n                if(product > max){\n                    max = product;\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpp_781sbz.js:22:10)\n    at Object.<anonymous> (/tmp/tmpp_781sbz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max && j != k){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          if(list1[i][j] * list1[i][k] > max){\n            max = list1[i][j] * list1[i][k];\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max && j != k){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    if(max < list1[i][j] * list1[i][k]){\n                        max = list1[i][j] * list1[i][k];\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i][j].length; k++){\n                if(list1[i][j][k] * list1[i][j][k+1] > max){\n                    max = list1[i][j][k] * list1[i][j][k+1];\n                }\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpgxaznbhm.js:20:10)\n    at Object.<anonymous> (/tmp/tmpgxaznbhm.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max_product){\n            max_product = product;\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for (var i = 0; i < list1.length; i++){\n    for (var j = 0; j < list1[i].length; j++){\n      for (var k = 0; k < list1[i].length; k++){\n        if (j != k){\n          var product = list1[i][j] * list1[i][k];\n          if (product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for (var i = 0; i < list1.length; i++){\n        for (var j = 0; j < list1[i].length; j++){\n            for (var k = 0; k < list1[i].length; k++){\n                if (j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if (product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  var max_tuple = [];\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max && j != k){\n          max = list1[i][j] * list1[i][k];\n          max_tuple = [list1[i][j], list1[i][k]];\n        }\n      }\n    }\n  }\n  return max_tuple;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  9\n]\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp69_2c8lg.js:23:10)\n    at Object.<anonymous> (/tmp/tmp69_2c8lg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 9 ],\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    if(list1[i][j] * list1[i][k] > max){\n                        max = list1[i][j] * list1[i][k];\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          if(list1[i][j] * list1[i][k] > max){\n            max = list1[i][j] * list1[i][k];\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpvy50n_l4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvy50n_l4.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i=0; i<list1.length; i++){\n        for(var j=0; j<list1[i].length; j++){\n            for(var k=0; k<list1[i].length; k++){\n                if(list1[i][j]*list1[i][k]>max_product){\n                    max_product = list1[i][j]*list1[i][k];\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpvxn6w10y.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvxn6w10y.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max_product){\n            max_product = product;\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1.length; k++){\n                for(var l = 0; l < list1[k].length; l++){\n                    if(list1[i][j] * list1[k][l] > max_product){\n                        max_product = list1[i][j] * list1[k][l];\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpfvmbrkku.js:23:10)\n    at Object.<anonymous> (/tmp/tmpfvmbrkku.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max_product){\n            max_product = product;\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(i != k){\n                    var product = list1[i][j] * list1[k][j];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n63\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp3mbz7i9f.js:24:10)\n    at Object.<anonymous> (/tmp/tmp3mbz7i9f.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 63,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max_product){\n          max_product = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp6zvyuwxy.js:21:10)\n    at Object.<anonymous> (/tmp/tmp6zvyuwxy.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpmgiqxtam.js:20:10)\n    at Object.<anonymous> (/tmp/tmpmgiqxtam.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max){\n            max = product;\n          }\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(i !== k){\n                    var product = list1[i][j] * list1[k][j];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n63\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpkqp2wce6.js:24:10)\n    at Object.<anonymous> (/tmp/tmpkqp2wce6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 63,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    if(max_product < list1[i][j] * list1[i][k]){\n                        max_product = list1[i][j] * list1[i][k];\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(j != k){\n          var product = list1[i][j] * list1[i][k];\n          if(product > max_product){\n            max_product = product;\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    var max_product_tuple = [];\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                        max_product_tuple = [list1[i][j], list1[i][k]];\n                    }\n                }\n            }\n        }\n    }\n    return max_product_tuple;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  9\n]\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpczy5i1dk.js:26:10)\n    at Object.<anonymous> (/tmp/tmpczy5i1dk.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 9 ],\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for (var i = 0; i < list1.length; i++){\n    for (var j = 0; j < list1[i].length; j++){\n      for (var k = 0; k < list1[i].length; k++){\n        if (j != k){\n          var product = list1[i][j] * list1[i][k];\n          if (product > max_product){\n            max_product = product;\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i=0; i<list1.length; i++){\n        for(var j=0; j<list1[i].length; j++){\n            for(var k=0; k<list1[i].length; k++){\n                if(j!=k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nvar list1 = [[1,2,3],[4,5,6],[7,8,9]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n\tvar max = 0;\n\tfor(var i = 0; i < list1.length; i++){\n\t\tfor(var j = 0; j < list1[i].length; j++){\n\t\t\tfor(var k = 0; k < list1[i].length; k++){\n\t\t\t\tif(list1[i][j] * list1[i][k] > max && j != k){\n\t\t\t\t\tmax = list1[i][j] * list1[i][k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max_product = 0;\n  for (var i = 0; i < list1.length; i++){\n    for (var j = 0; j < list1[i].length; j++){\n      for (var k = 0; k < list1[i].length; k++){\n        if (j != k){\n          var product = list1[i][j] * list1[i][k];\n          if (product > max_product){\n            max_product = product;\n          }\n        }\n      }\n    }\n  }\n  return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(i != k){\n                    var product = list1[i][j] * list1[k][j];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n63\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp3mbz7i9f.js:24:10)\n    at Object.<anonymous> (/tmp/tmp3mbz7i9f.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 63,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nvar list1 = [[-1, -2, -3], [4, 5, 6], [7, 8, 9]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max && j != k){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i][j].length; k++){\n                if(max < list1[i][j][k]){\n                    max = list1[i][j][k];\n                }\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp9km5lym0.js:20:10)\n    at Object.<anonymous> (/tmp/tmp9km5lym0.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j != k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max){\n                        max = product;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpmgiqxtam.js:20:10)\n    at Object.<anonymous> (/tmp/tmpmgiqxtam.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max_product = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(j !== k){\n                    var product = list1[i][j] * list1[i][k];\n                    if(product > max_product){\n                        max_product = product;\n                    }\n                }\n            }\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124050,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n    var max = 0;\n    for(var i = 0; i < list1.length; i++){\n        for(var j = 0; j < list1[i].length; j++){\n            for(var k = 0; k < list1[i].length; k++){\n                if(list1[i][j] * list1[i][k] > max){\n                    max = list1[i][j] * list1[i][k];\n                }\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1666124049,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmpmgiqxtam.js:20:10)\n    at Object.<anonymous> (/tmp/tmpmgiqxtam.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nfunction max_product_tuple(list1){\n  var max = 0;\n  for(var i = 0; i < list1.length; i++){\n    for(var j = 0; j < list1[i].length; j++){\n      for(var k = 0; k < list1[i].length; k++){\n        if(list1[i][j] * list1[i][k] > max){\n          max = list1[i][j] * list1[i][k];\n        }\n      }\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_product_tuple;\n  assert.deepEqual(candidate([[2, 7], [2, 6], [1, 8], [4, 9]]),36);\n  assert.deepEqual(candidate([[10, 20], [15, 2], [5, 10]]),200);\n  assert.deepEqual(candidate([[11, 44], [10, 15], [20, 5], [12, 9]]),484);\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n81\n\nshould loosely deep-equal\n\n36\n    at test (/tmp/tmp5goqwqyo.js:21:10)\n    at Object.<anonymous> (/tmp/tmp5goqwqyo.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 81,\n  expected: 36,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
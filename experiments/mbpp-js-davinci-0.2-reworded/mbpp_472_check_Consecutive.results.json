{
  "name": "mbpp_472_check_Consecutive",
  "language": "js",
  "prompt": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_472_check_Consecutive.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var len = l.length;\n    if(max-min+1 === len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var n = l.length;\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var expectedSum = n*(n+1)/2;\n    var actualSum = 0;\n    for(var i=0; i<n; i++){\n        actualSum += l[i];\n    }\n    if(actualSum == expectedSum){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort(function(a, b){return a-b});\n    for(var i=1; i<arr.length; i++){\n        if(arr[i] - arr[i-1] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4uv6fv84.js:29:10)\n    at Object.<anonymous> (/tmp/tmp4uv6fv84.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    var sum = 0;\n    for (var i = 0; i < n; i++) {\n        sum += l[i];\n    }\n    var expectedSum = (n * (2 * min + (n - 1) * 1)) / 2;\n    if (sum == expectedSum) {\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max-min+1 == l.length){\n        for(var i=0;i<l.length;i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 1){\n        console.log(\"Non consecutive numbers\");\n    }\n    else{\n        console.log(\"Consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "Consecutive numbers\nNon consecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuifjqwht.js:32:10)\n    at Object.<anonymous> (/tmp/tmpuifjqwht.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(Math, l);\n    var max = Math.max.apply(Math, l);\n    var count = 0;\n    var arr = [];\n    for(var i = min; i <= max; i++){\n        arr.push(i);\n    }\n    for(var j = 0; j < arr.length; j++){\n        if(l.indexOf(arr[j]) != -1){\n            count++;\n        }\n    }\n    if(count == arr.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp39hig7o6.js:29:10)\n    at Object.<anonymous> (/tmp/tmp39hig7o6.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkoxy0ejl.js:28:10)\n    at Object.<anonymous> (/tmp/tmpkoxy0ejl.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=true;\n    var min=Math.min.apply(null,l);\n    var max=Math.max.apply(null,l);\n    if(l.length!=max-min+1){\n        flag=false;\n    }\n    else{\n        l.sort();\n        for(var i=min;i<l.length;i++){\n            if(l[i]!=i){\n                flag=false;\n                break;\n            }\n        }\n    }\n    if(flag==true){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,4,5]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxcvkoewu.js:33:10)\n    at Object.<anonymous> (/tmp/tmpxcvkoewu.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if(max-min+1==n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var len = l.length;\n    if((max-min+1)==len){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpj92qa004.js:29:10)\n    at Object.<anonymous> (/tmp/tmpj92qa004.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpr6mi1ten.js:29:10)\n    at Object.<anonymous> (/tmp/tmpr6mi1ten.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max-min+1 == l.length){\n        for(var i=0; i<l.length; i++){\n            if(l.indexOf(min+i)>-1){\n                flag++;\n            }\n        }\n    }\n    if(flag == l.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var len = l.length;\n    if(max-min+1 == len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "/tmp/tmpjsm38v74.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]);\ncheck_Consecut\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "Consecutive\nConsecutive\nConsecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "/tmp/tmpr5s88_bc.js:33\ncheck_Consecut\n^\n\nReferenceError: check_Consecut is not defined\n    at Object.<anonymous> (/tmp/tmpr5s88_bc.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=l.length-1;i>0;i--){\n        if(l[i]-l[i-1]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "Consecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkpp5zp6k.js:29:10)\n    at Object.<anonymous> (/tmp/tmpkpp5zp6k.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Array contains consecutive numbers\");\n    }\n    else{\n        console.log(\"Array does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "/tmp/tmpq9_78no6.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] + 1 != l[i + 1]){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp04ninvgs.js:25:10)\n    at Object.<anonymous> (/tmp/tmp04ninvgs.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var arr = [];\n    for(var i = min; i <= max; i++){\n        arr.push(i);\n    }\n    if(arr.length == l.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpqozw3lv4.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var len = l.length;\n    if(len == max-min+1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max-min+1 == l.length){\n        for(var i=0; i<l.length; i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp07wl_7l_.js:32:10)\n    at Object.<anonymous> (/tmp/tmp07wl_7l_.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min=Math.min.apply(null,l);\n    var max=Math.max.apply(null,l);\n    var flag=0;\n    if(l.length==max-min+1){\n        for(var i=min;i<=max;i++){\n            if(l.indexOf(i)==-1){\n                flag=1;\n                break;\n            }\n        }\n    }\n    else{\n        flag=1;\n    }\n    if(flag==0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpi7ilv537.js:32\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=l.length-1;i>0;i--){\n        if(l[i]-l[i-1]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==0){\n        console.log(\"The given array is not consecutive\");\n    }\n    else{\n        console.log(\"The given array is consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,4,5,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "The given array is consecutive\nThe given array is not consecutive\nThe given array is consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmphdl_i4qd.js:29:10)\n    at Object.<anonymous> (/tmp/tmphdl_i4qd.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var arr1 = l.sort();\n    var flag = 1;\n    for(var i=0;i<arr1.length-1;i++){\n        if(arr1[i+1]-arr1[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"The array is consecutive\");\n    }\n    else{\n        console.log(\"The array is not consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "The array is consecutive\nThe array is not consecutive\nThe array is consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgeme6lwh.js:29:10)\n    at Object.<anonymous> (/tmp/tmpgeme6lwh.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmptnu_4r2h.js:29:10)\n    at Object.<anonymous> (/tmp/tmptnu_4r2h.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var len = l.length;\n    if(max-min+1 == len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i = 0; i < l.length; i++){\n        if(l[i] - l[i+1] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa05zfl9n.js:28:10)\n    at Object.<anonymous> (/tmp/tmpa05zfl9n.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i]+1 != arr[i+1]){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"The given array is not consecutive\");\n    }\n    else{\n        console.log(\"The given array is consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,5,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "The given array is consecutive\nThe given array is not consecutive\nThe given array is consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpy9vprpya.js:26:10)\n    at Object.<anonymous> (/tmp/tmpy9vprpya.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdaquefat.js:28:10)\n    at Object.<anonymous> (/tmp/tmpdaquefat.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive numbers\nConsecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpunpuus1r.js:29:10)\n    at Object.<anonymous> (/tmp/tmpunpuus1r.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var arr = l.sort();\n    var flag = 1;\n    for(var i=0; i<arr.length-1; i++){\n        if(arr[i+1]-arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp30xhpocs.js:29:10)\n    at Object.<anonymous> (/tmp/tmp30xhpocs.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max-min+1 == l.length){\n        for(var i=0; i<l.length; i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 1){\n        console.log(\"The given array does not contain consecutive numbers\");\n    }\n    else{\n        console.log(\"The given array contains consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpsp5n2ehg.js:31\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0; i<l.length; i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,5,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpebj9ic1f.js:28:10)\n    at Object.<anonymous> (/tmp/tmpebj9ic1f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        sum += l[i];\n    }\n    var expectedSum = n * (min + max) / 2;\n    if(sum == expectedSum){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpuclqzzt0.js:29:10)\n    at Object.<anonymous> (/tmp/tmpuclqzzt0.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var n = l.length;\n    if(max-min+1===n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"The given array contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The given array does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpm2zl0oft.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var len = l.length;\n    var sum = 0;\n    for(var i = 0; i < len; i++){\n        sum += l[i];\n    }\n    var expectedSum = (min + max) * (len / 2);\n    if(sum == expectedSum){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(l.length == max - min + 1){\n        for(var i = 0; i < l.length; i++){\n            if(l.indexOf(min + i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]);\ncheck_Consecutive([1,2,3,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpckk_9w8l.js:35\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nvar l = [1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0; i<arr.length-1; i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcn8h_fqn.js:29:10)\n    at Object.<anonymous> (/tmp/tmpcn8h_fqn.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]);\ncheck_Con\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "/tmp/tmprsqskyyt.js:32\ncheck_Con\n^\n\nReferenceError: check_Con is not defined\n    at Object.<anonymous> (/tmp/tmprsqskyyt.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort(function(a, b){return a-b});\n    for(var i=0; i<arr.length-1; i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp4_qidarw.js:33\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var len = l.length;\n    if(max-min+1 == len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var len = l.length;\n    if(max-min+1 == len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7c_p8mc4.js:28:10)\n    at Object.<anonymous> (/tmp/tmp7c_p8mc4.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7c_p8mc4.js:28:10)\n    at Object.<anonymous> (/tmp/tmp7c_p8mc4.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwbseyabf.js:29:10)\n    at Object.<anonymous> (/tmp/tmpwbseyabf.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort(function(a, b){return a-b});\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1z0yga67.js:29:10)\n    at Object.<anonymous> (/tmp/tmp1z0yga67.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"The given array contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The given array does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmphiucde_1.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort(function(a, b){return a-b});\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]!=1){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag==0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpq7l9t09q.js:21\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max-min+1 == l.length){\n        for(var i=0; i<l.length; i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp651l7ye0.js:31\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvbk6cmfa.js:29:10)\n    at Object.<anonymous> (/tmp/tmpvbk6cmfa.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max-min+1 == l.length){\n        for(var i=0; i<l.length; i++){\n            if(l.indexOf(min+i) > -1){\n                flag++;\n            }\n        }\n    }\n    if(flag == l.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n  var flag = 0;\n  l.sort();\n  for(var i=0;i<l.length-1;i++){\n    if(l[i+1]-l[i] == 1){\n      flag = 1;\n    }\n    else{\n      flag = 0;\n      break;\n    }\n  }\n  if(flag == 1){\n    console.log(\"Consecutive\");\n  }\n  else{\n    console.log(\"Not Consecutive\");\n  }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpnz1azsdq.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        sum += l[i];\n    }\n    var expectedSum = (n * (2 * min + (n - 1) * 1)) / 2;\n    if(sum == expectedSum){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var flag = true;\n    for (var i = min; i < max; i++){\n        if(l.indexOf(i) == -1){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp_d4wji2c.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_d4wji2c.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpl_0yzp_b.js:29:10)\n    at Object.<anonymous> (/tmp/tmpl_0yzp_b.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=l.length-1;i>0;i--){\n        if(l[i]-l[i-1]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==0){\n        console.log(\"The given array is not consecutive\");\n    }\n    else{\n        console.log(\"The given array is consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpb556bs60.js:26\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7c_p8mc4.js:28:10)\n    at Object.<anonymous> (/tmp/tmp7c_p8mc4.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpp65l4ztv.js:23\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var arr = l.sort(function(a,b){return a-b});\n    var flag = 1;\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]!=1){\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9atqlmrk.js:26:10)\n    at Object.<anonymous> (/tmp/tmp9atqlmrk.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i = 0; i < arr.length-1; i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjpizl1ry.js:29:10)\n    at Object.<anonymous> (/tmp/tmpjpizl1ry.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=true;\n    var min=Math.min.apply(null,l);\n    var max=Math.max.apply(null,l);\n    for(var i=min;i<=max;i++){\n        if(l.indexOf(i)==-1){\n            flag=false;\n            break;\n        }\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqxh9z2h4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpqxh9z2h4.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var n=l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpqq2gch2b.js:31\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var arr1 = l.sort();\n    var flag = 0;\n    for(var i=0;i<arr1.length-1;i++){\n        if(arr1[i+1]-arr1[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmmkvm632.js:29:10)\n    at Object.<anonymous> (/tmp/tmpmmkvm632.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var len = l.length;\n    var sum = 0;\n    for(var i=0; i<len; i++){\n        sum += l[i];\n    }\n    var expectedSum = (min + max) * (len / 2);\n    if(sum == expectedSum){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var arr = [];\n    for (var i = min; i <= max; i++) {\n        arr.push(i);\n    }\n    if (arr.length == l.length && (arr.join('') == l.join(''))) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpr6mi1ten.js:29:10)\n    at Object.<anonymous> (/tmp/tmpr6mi1ten.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min=Math.min.apply(null,l);\n    var max=Math.max.apply(null,l);\n    var flag=0;\n    if(l.length==max-min+1){\n        for(var i=min;i<=max;i++){\n            if(l.indexOf(i)==-1){\n                flag=1;\n                break;\n            }\n        }\n    }\n    else{\n        flag=1;\n    }\n    if(flag==0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpz11e2acd.js:36\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]);\ncheck_Consecutive([1,2,3,4,5,6,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpjcsw6l1q.js:28\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive numbers\nNot consecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpp89bypea.js:28:10)\n    at Object.<anonymous> (/tmp/tmpp89bypea.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=l.length-1;i>0;i--){\n        if(l[i]-l[i-1]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp3aqcayp8.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var flag = true;\n    for(var i = min; i < max; i++){\n        if(l.indexOf(i) == -1){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmplk8k8khc.js:21:10)\n    at Object.<anonymous> (/tmp/tmplk8k8khc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var arr1 = l.sort();\n    var flag = 0;\n    for(var i=0;i<arr1.length-1;i++){\n        if(arr1[i+1]-arr1[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nConsecutive\nConsecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0wodv_6n.js:39:10)\n    at Object.<anonymous> (/tmp/tmp0wodv_6n.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=true;\n    l.sort();\n    for(var i=l.length-1;i>0;i--){\n        if(l[i]-l[i-1]!=1){\n            flag=false;\n        }\n    }\n    if(flag==true){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3dexw78l.js:25:10)\n    at Object.<anonymous> (/tmp/tmp3dexw78l.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var len = l.length;\n    if(max-min+1 == len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var arr1 = l.sort();\n    var flag = 0;\n    for(var i=0; i<arr1.length-1; i++){\n        if(arr1[i+1] - arr1[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmppdp9sxp5.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i = 0; i < arr.length - 1; i++){\n        if(arr[i] + 1 != arr[i + 1]){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1fhjex_x.js:26:10)\n    at Object.<anonymous> (/tmp/tmp1fhjex_x.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=true;\n    var min=Math.min(...l);\n    var max=Math.max(...l);\n    for(var i=min;i<max;i++){\n        if(l.indexOf(i)==-1){\n            flag=false;\n            break;\n        }\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpp3hwywme.js:21:10)\n    at Object.<anonymous> (/tmp/tmpp3hwywme.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var l1=l.sort();\n    for(var i=0;i<l1.length-1;i++){\n        if(l1[i+1]-l1[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nConsecutive\nConsecutive\nNot Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwhk65bia.js:32:10)\n    at Object.<anonymous> (/tmp/tmpwhk65bia.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmpkf0s8bvh.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=l.length-1;i>0;i--){\n        if(l[i]-l[i-1]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Array contains consecutive numbers\");\n    }\n    else{\n        console.log(\"Array does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,4,5,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Array contains consecutive numbers\nArray does not contain consecutive numbers\nArray contains consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp06ut7vpy.js:29:10)\n    at Object.<anonymous> (/tmp/tmp06ut7vpy.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0; i<arr.length-1; i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxdlt9kfa.js:29:10)\n    at Object.<anonymous> (/tmp/tmpxdlt9kfa.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpr6mi1ten.js:29:10)\n    at Object.<anonymous> (/tmp/tmpr6mi1ten.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbt1cf5vx.js:28:10)\n    at Object.<anonymous> (/tmp/tmpbt1cf5vx.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0; i<l.length; i++){\n        if(l[i] == l[i+1]-1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp__25xg5o.js:28:10)\n    at Object.<anonymous> (/tmp/tmp__25xg5o.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        return \"Consecutive\";\n    }\n    else{\n        return \"Not Consecutive\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Consecutive'\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp80c_1abj.js:25:10)\n    at Object.<anonymous> (/tmp/tmp80c_1abj.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Consecutive',\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var count = 0;\n    for(var i = min; i <= max; i++){\n        if(l.includes(i)){\n            count++;\n        }\n    }\n    if(count == l.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpzkaq4zwt.js:24:10)\n    at Object.<anonymous> (/tmp/tmpzkaq4zwt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var len = l.length;\n    if(max-min+1 == len){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var n = l.length;\n    var sum = 0;\n    for(var i=0;i<n;i++){\n        sum += l[i];\n    }\n    var expectedSum = (n*(2*min+(n-1)*1))/2;\n    if(sum == expectedSum){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort(function(a, b){return a-b});\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]);\ncheck_Consecutive\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nConsecutive\nConsecutive\nConsecutive\nConsecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmphgy7f0ao.js:33:10)\n    at Object.<anonymous> (/tmp/tmphgy7f0ao.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort(function(a,b){return a-b});\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]);\ncheck_Consecutive([\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "/tmp/tmp0scnlcjq.js:28\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var len = l.length;\n    if(max-min+1 == len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if(max-min+1 === n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0; i<l.length-1; i++){\n        if(l[i+1] - l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]);\ncheck_Consecutive([1,2,3,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpl6pmn5rj.js:33\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var s = l.sort();\n    for(var i=1; i<s.length; i++){\n        if(s[i] - s[i-1] != 1){\n            return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var arr1 = l.sort();\n    var flag = 0;\n    for(var i=0;i<arr1.length-1;i++){\n        if(arr1[i+1]-arr1[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0; i<arr.length-1; i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcn8h_fqn.js:29:10)\n    at Object.<anonymous> (/tmp/tmpcn8h_fqn.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if(max - min + 1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var flag = true;\n    for(var i = min; i < max; i++){\n        if(l.indexOf(i) == -1){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmplk8k8khc.js:21:10)\n    at Object.<anonymous> (/tmp/tmplk8k8khc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var isConsecutive = true;\n    l.sort();\n    for(var i=1; i<l.length; i++){\n        if(l[i] - l[i-1] == 1){\n            isConsecutive = true;\n        }\n        else{\n            isConsecutive = false;\n            break;\n        }\n    }\n    if (isConsecutive == true)\n        return true;\n    else\n        return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "/tmp/tmpjsm38v74.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpk3aggdu7.js:29:10)\n    at Object.<anonymous> (/tmp/tmpk3aggdu7.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0; i<arr.length-1; i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxdlt9kfa.js:29:10)\n    at Object.<anonymous> (/tmp/tmpxdlt9kfa.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0; i<arr.length-1; i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpe_za75aq.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort(function(a, b){return a-b});\n    for(var i=0; i<arr.length-1; i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nConsecutive\nNot Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpafogt8lw.js:31:10)\n    at Object.<anonymous> (/tmp/tmpafogt8lw.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpzb51blq7.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var arr=l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmptx7fv2v2.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var n=l.length;\n    for(var i=0;i<n-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6nlrqm0m.js:29:10)\n    at Object.<anonymous> (/tmp/tmp6nlrqm0m.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var n=l.length;\n    for(var i=0;i<n;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkuouht74.js:29:10)\n    at Object.<anonymous> (/tmp/tmpkuouht74.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=true;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]+1!=l[i+1]){\n            flag=false;\n        }\n    }\n    if(flag==true){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0bj_mx7o.js:25:10)\n    at Object.<anonymous> (/tmp/tmp0bj_mx7o.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgj3jtf46.js:29:10)\n    at Object.<anonymous> (/tmp/tmpgj3jtf46.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=l.length-1;i>0;i--){\n        if(l[i]-l[i-1]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Array contains consecutive numbers\");\n    }\n    else{\n        console.log(\"Array does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpmsiu078g.js:29\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwbseyabf.js:29:10)\n    at Object.<anonymous> (/tmp/tmpwbseyabf.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var n = l.length;\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var expectedSum = n * (n + 1) / 2;\n    var actualSum = 0;\n    for (var i = 0; i < n; i++) {\n        actualSum += l[i];\n    }\n    if (actualSum == expectedSum) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmexnsu70.js:29:10)\n    at Object.<anonymous> (/tmp/tmpmexnsu70.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7c_p8mc4.js:28:10)\n    at Object.<anonymous> (/tmp/tmp7c_p8mc4.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,8,9,10,11,12,13,14,15]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nConsecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx9erwgqd.js:29:10)\n    at Object.<anonymous> (/tmp/tmpx9erwgqd.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"consecutive\");\n    }\n    else{\n        console.log(\"not consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpr3itkarp.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var arr = l.sort();\n    var flag = 1;\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i] != 1){\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nConsecutive\nConsecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdmvtkhca.js:28:10)\n    at Object.<anonymous> (/tmp/tmpdmvtkhca.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var len = l.length;\n    var sum = 0;\n    var expectedSum = (len * (2 * min + (len - 1) * 1)) / 2;\n    for (var i = 0; i < len; i++) {\n        sum += l[i];\n    }\n    if (sum == expectedSum) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpua2b6c0v.js:28:10)\n    at Object.<anonymous> (/tmp/tmpua2b6c0v.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx9tli5yp.js:29:10)\n    at Object.<anonymous> (/tmp/tmpx9tli5yp.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var s = l.sort();\n    var f = true;\n    for(var i=1;i<s.length;i++){\n        if(s[i]-s[i-1]!=1){\n            f = false;\n            break;\n        }\n    }\n    return f;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpj18dke5d.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var flag = true;\n    for(var i=min; i<max; i++){\n        if(l.indexOf(i) == -1){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpt3z5ae9o.js:21:10)\n    at Object.<anonymous> (/tmp/tmpt3z5ae9o.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]+1!=l[i+1]){\n            flag=1;\n        }\n    }\n    if(flag==0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8f2sbntc.js:25:10)\n    at Object.<anonymous> (/tmp/tmp8f2sbntc.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpuodypcsu.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max - min + 1 == l.length){\n        for(var i = min; i <= max; i++){\n            if(l.indexOf(i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,8,9,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nConsecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpzk9xb6n3.js:33:10)\n    at Object.<anonymous> (/tmp/tmpzk9xb6n3.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var count = 0;\n    for(var i = min; i <= max; i++){\n        if(l.includes(i)){\n            count++;\n        }\n    }\n    if(count == l.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpzkaq4zwt.js:24:10)\n    at Object.<anonymous> (/tmp/tmpzkaq4zwt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var n = l.length;\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        sum += l[i];\n    }\n    var expectedSum = (n * (2 * min + (n - 1) * 1)) / 2;\n    if(sum == expectedSum){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    var n = l.length;\n    if(n == max - min + 1){\n        flag = 1;\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nConsecutive\nConsecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpqi37oiln.js:26:10)\n    at Object.<anonymous> (/tmp/tmpqi37oiln.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgstoomon.js:29:10)\n    at Object.<anonymous> (/tmp/tmpgstoomon.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var arr1 = l.sort();\n    var flag = 0;\n    for(var i=0; i<arr1.length-1; i++){\n        if(arr1[i+1]-arr1[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"The given array contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The given array does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp5sdflmud.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var len = l.length;\n    if(max-min+1 == len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var arr1 = l.sort();\n    var arr2 = [];\n    for(var i=0; i<arr1.length-1; i++){\n        arr2.push(arr1[i+1]-arr1[i]);\n    }\n    var count = 0;\n    for(var j=0; j<arr2.length; j++){\n        if(arr2[j] == 1){\n            count++;\n        }\n    }\n    if(count == arr2.length){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if(max - min + 1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not Consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp0zy694uv.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var isConsecutive = true;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]+1 != l[i+1]){\n            isConsecutive = false;\n            break;\n        }\n    }\n    if(isConsecutive == true)\n        return \"Consecutive\";\n    else\n        return \"Not Consecutive\";\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Consecutive'\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpaal05dql.js:21:10)\n    at Object.<anonymous> (/tmp/tmpaal05dql.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Consecutive',\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=l.length-1;i>0;i--){\n        if(l[i]-l[i-1]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwq41u2l2.js:29:10)\n    at Object.<anonymous> (/tmp/tmpwq41u2l2.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort(function(a, b){return a-b});\n    for(var i=0; i<arr.length-1; i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,4,5]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnnpqs5sb.js:29:10)\n    at Object.<anonymous> (/tmp/tmpnnpqs5sb.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag=0;\n    var n=l.length;\n    for(var i=0;i<n;i++){\n        if(l[i+1]-l[i]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,6,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Not Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp28ij0q9b.js:29:10)\n    at Object.<anonymous> (/tmp/tmp28ij0q9b.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6]);\ncheck_Consecutive([1,2,4,5,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpd9_hmxit.js:29:10)\n    at Object.<anonymous> (/tmp/tmpd9_hmxit.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]);\ncheck_Consecutive([1\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpy6f2ijqj.js:34\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpc5lkyw79.js:29:10)\n    at Object.<anonymous> (/tmp/tmpc5lkyw79.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,7,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive numbers\nNot consecutive numbers\nConsecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7o66cckx.js:29:10)\n    at Object.<anonymous> (/tmp/tmp7o66cckx.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    var n = l.length;\n    var sum = 0;\n    for(var i = 0; i < n; i++){\n        sum += l[i];\n    }\n    var expectedSum = (n * (2 * min + (n - 1) * 1)) / 2;\n    if(sum == expectedSum){\n        flag = 1;\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,4,5,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpy2n2eish.js:30:10)\n    at Object.<anonymous> (/tmp/tmpy2n2eish.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0; i<l.length-1; i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx2ru4zvi.js:28:10)\n    at Object.<anonymous> (/tmp/tmpx2ru4zvi.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var arr = [];\n    for (var i = min; i <= max; i++) {\n        arr.push(i);\n    }\n    if (arr.length == l.length && arr.every(function(v,i) { return v === l[i]})) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]);\ncheck_Consecut\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nConsecutive\nConsecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\nNot Consecutive\n",
      "stderr": "/tmp/tmpo75jsimy.js:33\ncheck_Consecut\n^\n\nReferenceError: check_Consecut is not defined\n    at Object.<anonymous> (/tmp/tmpo75jsimy.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    if(max-min+1 == l.length){\n        for(var i=min; i<=max; i++){\n            if(l.indexOf(i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        return \"Consecutive\";\n    }\n    else{\n        return \"Not Consecutive\";\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Consecutive'\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0wtl2dfu.js:29:10)\n    at Object.<anonymous> (/tmp/tmp0wtl2dfu.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Consecutive',\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpr6mi1ten.js:29:10)\n    at Object.<anonymous> (/tmp/tmpr6mi1ten.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length;i++){\n        if(l[i] == l[i+1]-1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpmbb450dv.js:27\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var n = l.length;\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    if(n == max - min + 1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nConsecutive\nNot Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpeo6igrv0.js:31:10)\n    at Object.<anonymous> (/tmp/tmpeo6igrv0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=l.length-1;i>0;i--){\n        if(l[i]-l[i-1]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==0){\n        console.log(\"no\");\n    }\n    else{\n        console.log(\"yes\");\n    }\n}\ncheck_Consecutive([5,2,3,1,4]);\ncheck_Consecutive([83,78,80,81,79,82]);\ncheck_Consecutive([34,23,52,12,3]);\ncheck_Consecutive([7,6,5,5,3,4]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "yes\nyes\nno\nno\nyes\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4izpwt6v.js:31:10)\n    at Object.<anonymous> (/tmp/tmp4izpwt6v.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var len = l.length;\n    if(max-min+1 == len){\n        return true;\n    }else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwbseyabf.js:29:10)\n    at Object.<anonymous> (/tmp/tmpwbseyabf.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    if(max-min+1 == l.length){\n        for(var i=0; i<l.length; i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        console.log(\"The given array contains consecutive numbers\");\n    }\n    else{\n        console.log(\"The given array does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpbr7by771.js:28\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp_pvuposs.js:25\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort(function(a, b){return a-b});\n    for(var i=0; i<arr.length-1; i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmppd13jh0s.js:26\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not Consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]);\ncheck_Consecut\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive numbers\nNot Consecutive numbers\nNot Consecutive numbers\nNot Consecutive numbers\nNot Consecutive numbers\nNot Consecutive numbers\nNot Consecutive numbers\nNot Consecutive numbers\nNot Consecutive numbers\nNot Consecutive numbers\nNot Consecutive numbers\n",
      "stderr": "/tmp/tmpn7f8_o6f.js:32\ncheck_Consecut\n^\n\nReferenceError: check_Consecut is not defined\n    at Object.<anonymous> (/tmp/tmpn7f8_o6f.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "ReferenceError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if (max - min + 1 === n) {\n        return true;\n    } else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    var n = l.length;\n    if (max - min + 1 === n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if(max-min+1 == n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max(...l);\n    var min = Math.min(...l);\n    var n = l.length;\n    if(max-min+1 == n){\n        for(var i=0;i<n;i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]);\ncheck_Consecutive([1,2,3,4\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpo2n0h1eh.js:36\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=l.length-1;i>0;i--){\n        if(l[i]-l[i-1]==1){\n            flag=1;\n        }\n        else{\n            flag=0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp0spwwmi3.js:26\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0; i<arr.length-1; i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122788,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxdlt9kfa.js:29:10)\n    at Object.<anonymous> (/tmp/tmpxdlt9kfa.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1]-arr[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,4,5,6,7,8,9]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx3fmnjvi.js:30:10)\n    at Object.<anonymous> (/tmp/tmpx3fmnjvi.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=l.length-1;i>0;i--){\n        if(l[i]-l[i-1]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,6]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3zxgtavg.js:29:10)\n    at Object.<anonymous> (/tmp/tmp3zxgtavg.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length;i++){\n        if(l[i] != l[i+1]-1){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 0){\n        console.log(\"Consecutive numbers\");\n    }\n    else{\n        console.log(\"Not consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Not consecutive numbers\nNot consecutive numbers\nNot consecutive numbers\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp04x1ysb7.js:25:10)\n    at Object.<anonymous> (/tmp/tmp04x1ysb7.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null, l);\n    var max = Math.max.apply(null, l);\n    var n = l.length;\n    if(max-min+1==n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1665509991,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0; i<arr.length-1; i++){\n        if(arr[i] == arr[i+1]){\n            flag = 1;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Array contains duplicate elements\");\n    }\n    else{\n        console.log(\"Array does not contain duplicate elements\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,10]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Array does not contain duplicate elements\nArray contains duplicate elements\nArray does not contain duplicate elements\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsdttnoov.js:26:10)\n    at Object.<anonymous> (/tmp/tmpsdttnoov.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]+1!=l[i+1]){\n            flag=1;\n        }\n    }\n    if(flag==0){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,6,7]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8f2sbntc.js:25:10)\n    at Object.<anonymous> (/tmp/tmp8f2sbntc.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min.apply(null,l);\n    var max = Math.max.apply(null,l);\n    var flag = true;\n    for(var i = min; i < max; i++){\n        if(l.indexOf(i) == -1){\n            flag = false;\n            break;\n        }\n    }\n    return flag;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpbjynlib8.js:21:10)\n    at Object.<anonymous> (/tmp/tmpbjynlib8.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var arr = l.sort();\n    for(var i=0;i<arr.length-1;i++){\n        if(arr[i+1] - arr[i] == 1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpqdpmdh_1.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,8]);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "Consecutive\nNot Consecutive\nConsecutive\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx4bbw251.js:28:10)\n    at Object.<anonymous> (/tmp/tmpx4bbw251.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min = Math.min(...l);\n    var max = Math.max(...l);\n    var len = l.length;\n    if(max-min+1==len){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag==1){\n        console.log(\"Consecutive\");\n    }\n    else{\n        console.log(\"Not Consecutive\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5,6,7]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmpuodypcsu.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var max = Math.max.apply(null, l);\n    var min = Math.min.apply(null, l);\n    var n = l.length;\n    if(max-min+1 == n){\n        for(var i=0; i<n; i++){\n            if(l.indexOf(min+i) == -1){\n                flag = 1;\n                break;\n            }\n        }\n    }\n    else{\n        flag = 1;\n    }\n    if(flag == 0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min=Math.min(...l);\n    var max=Math.max(...l);\n    var n=l.length;\n    if(max-min+1==n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var min=Math.min.apply(null,l);\n    var max=Math.max.apply(null,l);\n    var n=l.length;\n    if(max-min+1==n){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = 0;\n    var n = l.length;\n    for(var i=0;i<n;i++){\n        if(l[i+1]-l[i]==1){\n            flag = 1;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag == 1){\n        console.log(\"Array contains consecutive numbers\");\n    }\n    else{\n        console.log(\"Array does not contain consecutive numbers\");\n    }\n}\ncheck_Consecutive([1,2,3,4,5]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp1asd4tzd.js:24\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a jsthon function to check whether the given array contains consecutive numbers or not.\nfunction check_Consecutive(l){\n    var flag = true;\n    l.sort();\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]+1 != l[i+1]){\n            flag = false;\n            break;\n        }\n    }\n    if(flag == true)\n        console.log(\"Consecutive\");\n    else\n        console.log(\"Not Consecutive\");\n}\ncheck_Consecutive([1,2,3,4,5,6,7,8,9]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]);\ncheck_Consecutive([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = check_Consecutive;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),true);\n  assert.deepEqual(candidate([1, 2, 3, 5, 6]),false);\n  assert.deepEqual(candidate([1, 2, 1]),false);\n}\n\ntest();",
      "timestamp": 1666122789,
      "stdout": "",
      "stderr": "/tmp/tmp0sn50mxg.js:20\nconst assert = require('node:assert');\n^^^^^\n\nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_415_max_Product",
  "language": "js",
  "prompt": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    let max = 0;\n    for(let i = 0; i < arr.length; i++){\n        for(let j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpqa46ni7b.js:18:10)\n    at Object.<anonymous> (/tmp/tmpqa46ni7b.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    if(arr[0] < arr[1]){\n        max = arr[1];\n        secondMax = arr[0];\n    }\n    for(var i = 2; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n    }\n    return max * secondMax;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpbk15o9ck.js:25:10)\n    at Object.<anonymous> (/tmp/tmpbk15o9ck.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i=0;i<arr.length;i++){\n        if(arr[i]>max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i]>secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i]<min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i]<secondMin){\n            secondMin = arr[i];\n        }\n    }\n    return Math.max(max*secondMax,min*secondMin);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp2g98yog6.js:30:10)\n    at Object.<anonymous> (/tmp/tmp2g98yog6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(arr[i]*arr[j] > max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpziqwbw3o.js:19:10)\n    at Object.<anonymous> (/tmp/tmpziqwbw3o.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max_product){\n                max_product = arr[i]*arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp_lht36cd.js:18:10)\n    at Object.<anonymous> (/tmp/tmp_lht36cd.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i] > second_max){\n            second_max = arr[i];\n        }\n        if(arr[i] < min){\n            second_min = min;\n            min = arr[i];\n        }\n        else if(arr[i] < second_min){\n            second_min = arr[i];\n        }\n    }\n    var product_1 = max * second_max;\n    var product_2 = min * second_min;\n    if(product_1 > product_2){\n        return product_1;\n    }\n    else{\n        return product_2;\n    }\n}\nvar arr = [1,4,3,6,7,0];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp8yruu8fc.js:38:10)\n    at Object.<anonymous> (/tmp/tmp8yruu8fc.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    var max_product = 0;\n    var min = 0;\n    var min_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            max = arr[i];\n        }\n        if(arr[i] < min){\n            min = arr[i];\n        }\n    }\n    max_product = max * min;\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpxm1ph092.js:23:10)\n    at Object.<anonymous> (/tmp/tmpxm1ph092.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max1=0;\n    var max2=0;\n    for(var i=0;i<arr.length;i++){\n        if(arr[i]>max1){\n            max2=max1;\n            max1=arr[i];\n        }\n        else if(arr[i]>max2){\n            max2=arr[i];\n        }\n    }\n    return max1*max2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmprazthtrf.js:21:10)\n    at Object.<anonymous> (/tmp/tmprazthtrf.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpoubzswh5.js:18:10)\n    at Object.<anonymous> (/tmp/tmpoubzswh5.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            max_product = Math.max(max_product, arr[i] * arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpy4uo4jb8.js:16:10)\n    at Object.<anonymous> (/tmp/tmpy4uo4jb8.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            max_product = Math.max(max_product, arr[i]*arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp__gqtp6s.js:16:10)\n    at Object.<anonymous> (/tmp/tmp__gqtp6s.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max1 = 0;\n    var max2 = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max1){\n            max2 = max1;\n            max1 = arr[i];\n        }\n        else if(arr[i] > max2){\n            max2 = arr[i];\n        }\n    }\n    return max1 * max2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpx3rxtm__.js:21:10)\n    at Object.<anonymous> (/tmp/tmpx3rxtm__.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n    for(var i=0; i<arr.length; i++){\n        if(arr[i]>max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i]>second_max){\n            second_max = arr[i];\n        }\n        if(arr[i]<min){\n            second_min = min;\n            min = arr[i];\n        }\n        else if(arr[i]<second_min){\n            second_min = arr[i];\n        }\n    }\n    return Math.max(max*second_max, min*second_min);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp22siqqn9.js:31:10)\n    at Object.<anonymous> (/tmp/tmp22siqqn9.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            second_max = max;\n            max = arr[i];\n        }\n        if(arr[i] < min){\n            second_min = min;\n            min = arr[i];\n        }\n    }\n    return max * second_max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp6h_m879k.js:24:10)\n    at Object.<anonymous> (/tmp/tmp6h_m879k.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(arr[i]*arr[j] > max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp1iw77d_n.js:18:10)\n    at Object.<anonymous> (/tmp/tmp1iw77d_n.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            max_product = Math.max(max_product,arr[i]*arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvqovw1cz.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvqovw1cz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(arr[i]*arr[j] > max_product){\n                max_product = arr[i]*arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp3h4j3j9z.js:18:10)\n    at Object.<anonymous> (/tmp/tmp3h4j3j9z.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n    var max_product = 0;\n    for(var i=0;i<arr.length;i++){\n        if(arr[i]>max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i]>second_max){\n            second_max = arr[i];\n        }\n        if(arr[i]<min){\n            second_min = min;\n            min = arr[i];\n        }\n        else if(arr[i]<second_min){\n            second_min = arr[i];\n        }\n    }\n    max_product = max*second_max;\n    if(min*second_min>max_product){\n        max_product = min*second_min;\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpxombvuie.js:36:10)\n    at Object.<anonymous> (/tmp/tmpxombvuie.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max_product){\n                max_product = arr[i] * arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp5egm79ty.js:18:10)\n    at Object.<anonymous> (/tmp/tmp5egm79ty.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            max = arr[i];\n        }\n    }\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] != max){\n            max_product = max * arr[i];\n        }\n    }\n    return max_product;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n32\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpc7oar8_v.js:23:10)\n    at Object.<anonymous> (/tmp/tmpc7oar8_v.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 32,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(arr[i] * arr[j] > max_product){\n                max_product = arr[i] * arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp3rox8rgi.js:18:10)\n    at Object.<anonymous> (/tmp/tmp3rox8rgi.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i] < min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i] < secondMin){\n            secondMin = arr[i];\n        }\n    }\n    return (max * secondMax > min * secondMin) ? max * secondMax : min * secondMin;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpol088gqo.js:30:10)\n    at Object.<anonymous> (/tmp/tmpol088gqo.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp1vhbfoog.js:18:10)\n    at Object.<anonymous> (/tmp/tmp1vhbfoog.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            max_product = Math.max(max_product,arr[i]*arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvqovw1cz.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvqovw1cz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max_product){\n                max_product = arr[i] * arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp5egm79ty.js:18:10)\n    at Object.<anonymous> (/tmp/tmp5egm79ty.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    let max1 = 0;\n    let max2 = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] > max1){\n            max2 = max1;\n            max1 = arr[i];\n        }\n        else if(arr[i] > max2){\n            max2 = arr[i];\n        }\n    }\n    return max1 * max2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpy631p26g.js:21:10)\n    at Object.<anonymous> (/tmp/tmpy631p26g.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i] < min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i] < secondMin){\n            secondMin = arr[i];\n        }\n    }\n    return max * secondMax > min * secondMin ? max * secondMax : min * secondMin;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpngil4s5k.js:30:10)\n    at Object.<anonymous> (/tmp/tmpngil4s5k.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max=0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max=arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpwueijdxd.js:18:10)\n    at Object.<anonymous> (/tmp/tmpwueijdxd.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i] < min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i] < secondMin){\n            secondMin = arr[i];\n        }\n    }\n    return Math.max(max * secondMax, min * secondMin);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpv79r3kc_.js:30:10)\n    at Object.<anonymous> (/tmp/tmpv79r3kc_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0]*arr[1];\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpckypdmpa.js:18:10)\n    at Object.<anonymous> (/tmp/tmpckypdmpa.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var max2 = arr[1];\n    for(var i=0; i<arr.length; i++){\n        if(arr[i]>max){\n            max2 = max;\n            max = arr[i];\n        }\n        else if(arr[i]>max2){\n            max2 = arr[i];\n        }\n    }\n    return max*max2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpj84qluo8.js:21:10)\n    at Object.<anonymous> (/tmp/tmpj84qluo8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max1 = -Infinity;\n    var max2 = -Infinity;\n    var max3 = -Infinity;\n    var min1 = Infinity;\n    var min2 = Infinity;\n    for(var i=0; i<arr.length; i++){\n        if(arr[i] > max1){\n            max3 = max2;\n            max2 = max1;\n            max1 = arr[i];\n        }\n        else if(arr[i] > max2){\n            max3 = max2;\n            max2 = arr[i];\n        }\n        else if(arr[i] > max3){\n            max3 = arr[i];\n        }\n        if(arr[i] < min1){\n            min2 = min1;\n            min1 = arr[i];\n        }\n        else if(arr[i] < min2){\n            min2 = arr[i];\n        }\n    }\n    return Math.max(max1*max2*max3, max1*min1*min2);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n224\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp_iqfnyio.js:36:10)\n    at Object.<anonymous> (/tmp/tmp_iqfnyio.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 224,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpei214i5m.js:18:10)\n    at Object.<anonymous> (/tmp/tmpei214i5m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var sec_max = arr[1];\n    var min = arr[0];\n    var sec_min = arr[1];\n    var product = 0;\n    for(var i=0; i<arr.length; i++){\n        if(arr[i]>max){\n            sec_max = max;\n            max = arr[i];\n        }\n        if(arr[i]<min){\n            sec_min = min;\n            min = arr[i];\n        }\n    }\n    product = max*sec_max;\n    if(min*sec_min > product){\n        product = min*sec_min;\n    }\n    return product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmprx1ug7_p.js:29:10)\n    at Object.<anonymous> (/tmp/tmprx1ug7_p.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nvar arr = [1,2,3,4,5,6];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp23eojppy.js:19:10)\n    at Object.<anonymous> (/tmp/tmp23eojppy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0]*arr[1];\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpckypdmpa.js:18:10)\n    at Object.<anonymous> (/tmp/tmpckypdmpa.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i]*arr[j] > max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpcgv4pvrk.js:19:10)\n    at Object.<anonymous> (/tmp/tmpcgv4pvrk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvi7qsb2m.js:18:10)\n    at Object.<anonymous> (/tmp/tmpvi7qsb2m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i] < min){\n            secondMin = min;\n            min = arr[i];\n        }else if(arr[i] < secondMin){\n            secondMin = arr[i];\n        }\n    }\n    return Math.max(max * secondMax, min * secondMin);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmppukmlnr9.js:28:10)\n    at Object.<anonymous> (/tmp/tmppukmlnr9.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp7v2tv1mq.js:19:10)\n    at Object.<anonymous> (/tmp/tmp7v2tv1mq.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i] < min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i] < secondMin){\n            secondMin = arr[i];\n        }\n    }\n    return Math.max(max * secondMax, min * secondMin);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvute2w2x.js:31:10)\n    at Object.<anonymous> (/tmp/tmpvute2w2x.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n    for(var i=0;i<arr.length;i++){\n        if(arr[i]>max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i]>second_max){\n            second_max = arr[i];\n        }\n        if(arr[i]<min){\n            second_min = min;\n            min = arr[i];\n        }\n        else if(arr[i]<second_min){\n            second_min = arr[i];\n        }\n    }\n    return Math.max(max*second_max,min*second_min);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp6v5i4i0e.js:30:10)\n    at Object.<anonymous> (/tmp/tmp6v5i4i0e.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    for(var i = 1; i < arr.length; i++){\n        if(arr[i] > max){\n            max = arr[i];\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp9j3f3g38.js:16:10)\n    at Object.<anonymous> (/tmp/tmp9j3f3g38.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max_product){\n                max_product = arr[i] * arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp5egm79ty.js:18:10)\n    at Object.<anonymous> (/tmp/tmp5egm79ty.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            max_product = Math.max(max_product,arr[i]*arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvqovw1cz.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvqovw1cz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpkknqx0ex.js:18:10)\n    at Object.<anonymous> (/tmp/tmpkknqx0ex.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i=0;i<arr.length;i++){\n        if(arr[i]>max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i]>secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i]<min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i]<secondMin){\n            secondMin = arr[i];\n        }\n    }\n    return Math.max(max*secondMax,min*secondMin);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp2g98yog6.js:30:10)\n    at Object.<anonymous> (/tmp/tmp2g98yog6.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n    var max_product = arr[0] * arr[1];\n    for(var i = 2; i < arr.length; i++){\n        if(arr[i] > max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i] > second_max){\n            second_max = arr[i];\n        }\n        if(arr[i] < min){\n            second_min = min;\n            min = arr[i];\n        }\n        else if(arr[i] < second_min){\n            second_min = arr[i];\n        }\n        var product = max * second_max;\n        if(product > max_product){\n            max_product = product;\n        }\n        product = min * second_min;\n        if(product > max_product){\n            max_product = product;\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpd0v1dwv0.js:39:10)\n    at Object.<anonymous> (/tmp/tmpd0v1dwv0.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    if(arr[0]<arr[1]){\n        max = arr[1];\n        secondMax = arr[0];\n    }\n    for(var i=2;i<arr.length;i++){\n        if(arr[i]>max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i]>secondMax){\n            secondMax = arr[i];\n        }\n    }\n    return max*secondMax;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpzimxtu5z.js:25:10)\n    at Object.<anonymous> (/tmp/tmpzimxtu5z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n    var max_product = arr[0] * arr[1];\n    for(var i=2; i<arr.length; i++){\n        if(arr[i] > max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i] > second_max){\n            second_max = arr[i];\n        }\n        if(arr[i] < min){\n            second_min = min;\n            min = arr[i];\n        }\n        else if(arr[i] < second_min){\n            second_min = arr[i];\n        }\n        var product = max * second_max;\n        if(product > max_product){\n            max_product = product;\n        }\n        product = min * second_min;\n        if(product > max_product){\n            max_product = product;\n        }\n    }\n    return max_product;\n}\nvar arr = [1, 4, 3, 6, 7, 0];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpq88psv00.js:40:10)\n    at Object.<anonymous> (/tmp/tmpq88psv00.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i] < min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i] < secondMin){\n            secondMin = arr[i];\n        }\n    }\n    return Math.max(max * secondMax, min * secondMin);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpv79r3kc_.js:30:10)\n    at Object.<anonymous> (/tmp/tmpv79r3kc_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(max_product < arr[i] * arr[j]){\n                max_product = arr[i] * arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpokfcn306.js:18:10)\n    at Object.<anonymous> (/tmp/tmpokfcn306.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n    var product = 0;\n    for(var i=0;i<arr.length;i++){\n        if(arr[i]>max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i]>second_max){\n            second_max = arr[i];\n        }\n        if(arr[i]<min){\n            second_min = min;\n            min = arr[i];\n        }\n        else if(arr[i]<second_min){\n            second_min = arr[i];\n        }\n    }\n    product = max*second_max;\n    if(product<min*second_min){\n        product = min*second_min;\n    }\n    return product;\n}\nvar arr = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpn5m_gq99.js:36:10)\n    at Object.<anonymous> (/tmp/tmpn5m_gq99.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(arr[i]*arr[j] > max_product){\n                max_product = arr[i]*arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp3h4j3j9z.js:18:10)\n    at Object.<anonymous> (/tmp/tmp3h4j3j9z.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0] * arr[1];\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpuqwpo_9e.js:18:10)\n    at Object.<anonymous> (/tmp/tmpuqwpo_9e.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n    for(var i=2; i<arr.length; i++){\n        if(arr[i] > max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i] > second_max){\n            second_max = arr[i];\n        }\n        if(arr[i] < min){\n            second_min = min;\n            min = arr[i];\n        }\n        else if(arr[i] < second_min){\n            second_min = arr[i];\n        }\n    }\n    return Math.max(max*second_max, min*second_min);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmprcm5j35m.js:30:10)\n    at Object.<anonymous> (/tmp/tmprcm5j35m.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0]*arr[1];\n    var max_i = 0;\n    var max_j = 1;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i]*arr[j] > max){\n                max = arr[i]*arr[j];\n                max_i = i;\n                max_j = j;\n            }\n        }\n    }\n    return [max_i, max_j];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  6\n]\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp6b08qjgs.js:23:10)\n    at Object.<anonymous> (/tmp/tmp6b08qjgs.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 6 ],\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max=0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max=arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpwueijdxd.js:18:10)\n    at Object.<anonymous> (/tmp/tmpwueijdxd.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    let max = 0;\n    for(let i = 0; i < arr.length; i++){\n        for(let j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpqa46ni7b.js:18:10)\n    at Object.<anonymous> (/tmp/tmpqa46ni7b.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i] < min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i] < secondMin){\n            secondMin = arr[i];\n        }\n    }\n    return Math.max(max*secondMax, min*secondMin);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp2u6oxkyc.js:30:10)\n    at Object.<anonymous> (/tmp/tmp2u6oxkyc.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(max < arr[i]*arr[j]){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpsqia6kbi.js:18:10)\n    at Object.<anonymous> (/tmp/tmpsqia6kbi.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(max < arr[i]*arr[j]){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmphyp5x2cl.js:18:10)\n    at Object.<anonymous> (/tmp/tmphyp5x2cl.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var max2 = arr[1];\n    for(var i=0; i<arr.length; i++){\n        if(arr[i]>max){\n            max2 = max;\n            max = arr[i];\n        }\n        else if(arr[i]>max2){\n            max2 = arr[i];\n        }\n    }\n    return max*max2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpj84qluo8.js:21:10)\n    at Object.<anonymous> (/tmp/tmpj84qluo8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            max_product = Math.max(max_product,arr[i]*arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvqovw1cz.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvqovw1cz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            max_product = Math.max(max_product,arr[i]*arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvqovw1cz.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvqovw1cz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max_product){\n                max_product = arr[i] * arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp5egm79ty.js:18:10)\n    at Object.<anonymous> (/tmp/tmp5egm79ty.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            max_product = arr[i] * arr[j];\n            if(max_product > max){\n                max = max_product;\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpqsb1z9s3.js:21:10)\n    at Object.<anonymous> (/tmp/tmpqsb1z9s3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var max2 = arr[1];\n    var max3 = arr[2];\n    var min = arr[0];\n    var min2 = arr[1];\n    var min3 = arr[2];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            max3 = max2;\n            max2 = max;\n            max = arr[i];\n        }\n        else if(arr[i] > max2){\n            max3 = max2;\n            max2 = arr[i];\n        }\n        else if(arr[i] > max3){\n            max3 = arr[i];\n        }\n        if(arr[i] < min){\n            min3 = min2;\n            min2 = min;\n            min = arr[i];\n        }\n        else if(arr[i] < min2){\n            min3 = min2;\n            min2 = arr[i];\n        }\n        else if(arr[i] < min3){\n            min3 = arr[i];\n        }\n    }\n    return Math.max(max * max2 * max3, min * min2 * max);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n224\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp9_8p9ivk.js:43:10)\n    at Object.<anonymous> (/tmp/tmp9_8p9ivk.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 224,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i] < min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i] < secondMin){\n            secondMin = arr[i];\n        }\n    }\n    return (max * secondMax) > (min * secondMin) ? (max * secondMax) : (min * secondMin);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpjnsy8ic7.js:30:10)\n    at Object.<anonymous> (/tmp/tmpjnsy8ic7.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    for(var i=0;i<arr.length;i++){\n        if(arr[i]>max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i]>secondMax){\n            secondMax = arr[i];\n        }\n    }\n    return max*secondMax;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmphzoscsvu.js:21:10)\n    at Object.<anonymous> (/tmp/tmphzoscsvu.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n  var max = 0;\n  for(var i=0;i<arr.length;i++){\n    for(var j=i+1;j<arr.length;j++){\n      if(arr[i]*arr[j]>max){\n        max = arr[i]*arr[j];\n      }\n    }\n  }\n  return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpb9m5gnzp.js:18:10)\n    at Object.<anonymous> (/tmp/tmpb9m5gnzp.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            max_product = Math.max(max_product,arr[i]*arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvqovw1cz.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvqovw1cz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            var product = arr[i] * arr[j];\n            if(product > max){\n                max = product;\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpjdte_7n5.js:19:10)\n    at Object.<anonymous> (/tmp/tmpjdte_7n5.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            max_product = Math.max(max_product, arr[i] * arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpy4uo4jb8.js:16:10)\n    at Object.<anonymous> (/tmp/tmpy4uo4jb8.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0]*arr[1];\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpckypdmpa.js:18:10)\n    at Object.<anonymous> (/tmp/tmpckypdmpa.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0] * arr[1];\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpuqwpo_9e.js:18:10)\n    at Object.<anonymous> (/tmp/tmpuqwpo_9e.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0] * arr[1];\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpgor73whk.js:18:10)\n    at Object.<anonymous> (/tmp/tmpgor73whk.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    let max = arr[0];\n    let second_max = arr[1];\n    if(arr[0] < arr[1]){\n        max = arr[1];\n        second_max = arr[0];\n    }\n    for(let i = 2; i < arr.length; i++){\n        if(arr[i] > max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i] > second_max){\n            second_max = arr[i];\n        }\n    }\n    return max * second_max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpzk5vhg3j.js:25:10)\n    at Object.<anonymous> (/tmp/tmpzk5vhg3j.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0]*arr[1];\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i]*arr[j] > max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpk9ldx_p3.js:18:10)\n    at Object.<anonymous> (/tmp/tmpk9ldx_p3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0]*arr[1];\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nvar arr = [1,2,3,4,5];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpwwhgeji1.js:19:10)\n    at Object.<anonymous> (/tmp/tmpwwhgeji1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            max_product = Math.max(max_product, arr[i]*arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp__gqtp6s.js:16:10)\n    at Object.<anonymous> (/tmp/tmp__gqtp6s.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    var n = arr.length;\n    for(var i=0;i<n;i++){\n        for(var j=i+1;j<n;j++){\n            if(arr[i]*arr[j]>max_product){\n                max_product = arr[i]*arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvcrk2d6i.js:19:10)\n    at Object.<anonymous> (/tmp/tmpvcrk2d6i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(arr[i]*arr[j] > max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpgk9bmc5x.js:19:10)\n    at Object.<anonymous> (/tmp/tmpgk9bmc5x.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpkknqx0ex.js:18:10)\n    at Object.<anonymous> (/tmp/tmpkknqx0ex.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvi7qsb2m.js:18:10)\n    at Object.<anonymous> (/tmp/tmpvi7qsb2m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max1 = 0;\n    var max2 = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max1){\n            max2 = max1;\n            max1 = arr[i];\n        }\n        else if(arr[i] > max2){\n            max2 = arr[i];\n        }\n    }\n    return max1 * max2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpx3rxtm__.js:21:10)\n    at Object.<anonymous> (/tmp/tmpx3rxtm__.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max_product){\n                max_product = arr[i] * arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpk7sa66ls.js:18:10)\n    at Object.<anonymous> (/tmp/tmpk7sa66ls.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max_product){\n                max_product = arr[i] * arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpk7sa66ls.js:18:10)\n    at Object.<anonymous> (/tmp/tmpk7sa66ls.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max_product){\n                max_product = arr[i] * arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp5egm79ty.js:18:10)\n    at Object.<anonymous> (/tmp/tmp5egm79ty.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpdaphrb_o.js:19:10)\n    at Object.<anonymous> (/tmp/tmpdaphrb_o.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n  var max = arr[0] * arr[1];\n  for(var i = 0; i < arr.length; i++){\n    for(var j = i + 1; j < arr.length; j++){\n      if(arr[i] * arr[j] > max){\n        max = arr[i] * arr[j];\n      }\n    }\n  }\n  return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpj5fsnlmc.js:18:10)\n    at Object.<anonymous> (/tmp/tmpj5fsnlmc.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpd9e_2s5c.js:18:10)\n    at Object.<anonymous> (/tmp/tmpd9e_2s5c.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0]*arr[1];\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i]*arr[j] > max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpi00707yb.js:18:10)\n    at Object.<anonymous> (/tmp/tmpi00707yb.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0]*arr[1];\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpckypdmpa.js:18:10)\n    at Object.<anonymous> (/tmp/tmpckypdmpa.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(arr[i]*arr[j] > max_product){\n                max_product = arr[i]*arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp3h4j3j9z.js:18:10)\n    at Object.<anonymous> (/tmp/tmp3h4j3j9z.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i] > second_max){\n            second_max = arr[i];\n        }\n        if(arr[i] < min){\n            second_min = min;\n            min = arr[i];\n        }\n        else if(arr[i] < second_min){\n            second_min = arr[i];\n        }\n    }\n    return Math.max(max*second_max, min*second_min);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpp6ph0za1.js:30:10)\n    at Object.<anonymous> (/tmp/tmpp6ph0za1.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            max_product = arr[i] * arr[j];\n            if(max_product > max){\n                max = max_product;\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpaa5ng1bg.js:20:10)\n    at Object.<anonymous> (/tmp/tmpaa5ng1bg.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var max2 = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            max2 = max;\n            max = arr[i];\n        }\n        else if(arr[i] > max2){\n            max2 = arr[i];\n        }\n    }\n    return max * max2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpm1g9k6sb.js:21:10)\n    at Object.<anonymous> (/tmp/tmpm1g9k6sb.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i] < min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i] < secondMin){\n            secondMin = arr[i];\n        }\n    }\n    var product1 = max * secondMax;\n    var product2 = min * secondMin;\n    if(product1 > product2){\n        return product1;\n    }\n    else{\n        return product2;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpev0nu2d9.js:37:10)\n    at Object.<anonymous> (/tmp/tmpev0nu2d9.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            max_product = Math.max(max_product,arr[i]*arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvqovw1cz.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvqovw1cz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i] < min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i] < secondMin){\n            secondMin = arr[i];\n        }\n    }\n    return Math.max(max * secondMax, min * secondMin);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpv79r3kc_.js:30:10)\n    at Object.<anonymous> (/tmp/tmpv79r3kc_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpkd8i4ill.js:19:10)\n    at Object.<anonymous> (/tmp/tmpkd8i4ill.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n    for(var i=2; i<arr.length; i++){\n        if(arr[i]>max){\n            second_max = max;\n            max = arr[i];\n        }else if(arr[i]>second_max){\n            second_max = arr[i];\n        }\n        if(arr[i]<min){\n            second_min = min;\n            min = arr[i];\n        }else if(arr[i]<second_min){\n            second_min = arr[i];\n        }\n    }\n    return Math.max(max*second_max, min*second_min);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp3ke6nlo3.js:28:10)\n    at Object.<anonymous> (/tmp/tmp3ke6nlo3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i] < min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i] < secondMin){\n            secondMin = arr[i];\n        }\n    }\n    return Math.max(max * secondMax, min * secondMin);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpv79r3kc_.js:30:10)\n    at Object.<anonymous> (/tmp/tmpv79r3kc_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    let max_product = 0;\n    for(let i = 0; i < arr.length; i++){\n        for(let j = i + 1; j < arr.length; j++){\n            max_product = Math.max(max_product, arr[i] * arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpw1jf18pv.js:16:10)\n    at Object.<anonymous> (/tmp/tmpw1jf18pv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvi7qsb2m.js:18:10)\n    at Object.<anonymous> (/tmp/tmpvi7qsb2m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i] > second_max){\n            second_max = arr[i];\n        }\n        if(arr[i] < min){\n            second_min = min;\n            min = arr[i];\n        }\n        else if(arr[i] < second_min){\n            second_min = arr[i];\n        }\n    }\n    return (max * second_max > min * second_min) ? max * second_max : min * second_min;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpj9ax01si.js:31:10)\n    at Object.<anonymous> (/tmp/tmpj9ax01si.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpkknqx0ex.js:18:10)\n    at Object.<anonymous> (/tmp/tmpkknqx0ex.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    var product = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            product = arr[i] * arr[j];\n            if(product > max){\n                max = product;\n            }\n        }\n    }\n    return max;\n}\nvar arr = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpyxu5pytr.js:21:10)\n    at Object.<anonymous> (/tmp/tmpyxu5pytr.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    if(arr[1] > arr[0]){\n        max = arr[1];\n        second_max = arr[0];\n    }\n    for(var i = 2; i < arr.length; i++){\n        if(arr[i] > max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i] > second_max){\n            second_max = arr[i];\n        }\n    }\n    return max * second_max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp5ez7t83r.js:25:10)\n    at Object.<anonymous> (/tmp/tmp5ez7t83r.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max1 = -Infinity;\n    var max2 = -Infinity;\n    var max3 = -Infinity;\n    var min1 = Infinity;\n    var min2 = Infinity;\n    for(var i=0; i<arr.length; i++){\n        if(arr[i]>max1){\n            max3 = max2;\n            max2 = max1;\n            max1 = arr[i];\n        }\n        else if(arr[i]>max2){\n            max3 = max2;\n            max2 = arr[i];\n        }\n        else if(arr[i]>max3){\n            max3 = arr[i];\n        }\n        if(arr[i]<min1){\n            min2 = min1;\n            min1 = arr[i];\n        }\n        else if(arr[i]<min2){\n            min2 = arr[i];\n        }\n    }\n    return Math.max(max1*max2*max3, max1*min1*min2);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n224\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpaeyp8qsi.js:36:10)\n    at Object.<anonymous> (/tmp/tmpaeyp8qsi.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 224,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i]*arr[j] > max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp37rw4w3t.js:18:10)\n    at Object.<anonymous> (/tmp/tmp37rw4w3t.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpkknqx0ex.js:18:10)\n    at Object.<anonymous> (/tmp/tmpkknqx0ex.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var sec_max = arr[1];\n    var min = arr[0];\n    var sec_min = arr[1];\n    for(var i=2;i<arr.length;i++){\n        if(arr[i]>max){\n            sec_max = max;\n            max = arr[i];\n        }\n        else if(arr[i]>sec_max){\n            sec_max = arr[i];\n        }\n        if(arr[i]<min){\n            sec_min = min;\n            min = arr[i];\n        }\n        else if(arr[i]<sec_min){\n            sec_min = arr[i];\n        }\n    }\n    return Math.max(max*sec_max,min*sec_min);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpx9yp23bk.js:30:10)\n    at Object.<anonymous> (/tmp/tmpx9yp23bk.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    let max = 0;\n    let product = 0;\n    for(let i = 0; i < arr.length; i++){\n        for(let j = i + 1; j < arr.length; j++){\n            product = arr[i] * arr[j];\n            if(product > max){\n                max = product;\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp16asb5hq.js:20:10)\n    at Object.<anonymous> (/tmp/tmp16asb5hq.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpd9e_2s5c.js:18:10)\n    at Object.<anonymous> (/tmp/tmpd9e_2s5c.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmplqqdz252.js:19:10)\n    at Object.<anonymous> (/tmp/tmplqqdz252.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var max2 = arr[1];\n    for(var i=0;i<arr.length;i++){\n        if(arr[i]>max){\n            max2 = max;\n            max = arr[i];\n        }\n        else if(arr[i]>max2){\n            max2 = arr[i];\n        }\n    }\n    return max*max2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpcb094860.js:21:10)\n    at Object.<anonymous> (/tmp/tmpcb094860.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_prod = -1;\n    var n = arr.length;\n    for(var i=0; i<n; i++){\n        for(var j=i+1; j<n; j++){\n            if(arr[i]*arr[j] > max_prod){\n                max_prod = arr[i]*arr[j];\n            }\n        }\n    }\n    return max_prod;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp4soms7gy.js:19:10)\n    at Object.<anonymous> (/tmp/tmp4soms7gy.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmplqqdz252.js:19:10)\n    at Object.<anonymous> (/tmp/tmplqqdz252.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(max < arr[i]*arr[j]){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nvar arr = [1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpo4ne05xx.js:19:10)\n    at Object.<anonymous> (/tmp/tmpo4ne05xx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            max_product = Math.max(max_product, arr[i] * arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpy4uo4jb8.js:16:10)\n    at Object.<anonymous> (/tmp/tmpy4uo4jb8.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    let max = 0;\n    for(let i = 0; i < arr.length; i++){\n        for(let j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpqa46ni7b.js:18:10)\n    at Object.<anonymous> (/tmp/tmpqa46ni7b.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var max2 = arr[1];\n    var min = arr[0];\n    var min2 = arr[1];\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            max2 = max;\n            max = arr[i];\n        }\n        else if(arr[i] > max2){\n            max2 = arr[i];\n        }\n        if(arr[i] < min){\n            min2 = min;\n            min = arr[i];\n        }\n        else if(arr[i] < min2){\n            min2 = arr[i];\n        }\n    }\n    max_product = max * max2;\n    if(min * min2 > max_product){\n        max_product = min * min2;\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpniuav7gl.js:35:10)\n    at Object.<anonymous> (/tmp/tmpniuav7gl.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    let max_product = 0;\n    for(let i=0; i<arr.length; i++){\n        for(let j=i+1; j<arr.length; j++){\n            max_product = Math.max(max_product, arr[i]*arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpy47urd2u.js:16:10)\n    at Object.<anonymous> (/tmp/tmpy47urd2u.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i] < min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i] < secondMin){\n            secondMin = arr[i];\n        }\n    }\n    return Math.max(max * secondMax, min * secondMin);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpv79r3kc_.js:30:10)\n    at Object.<anonymous> (/tmp/tmpv79r3kc_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpd9e_2s5c.js:18:10)\n    at Object.<anonymous> (/tmp/tmpd9e_2s5c.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    var product = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = 0; j < arr.length; j++){\n            product = arr[i] * arr[j];\n            if(product > max){\n                max = product;\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n64\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp3oy6mi2p.js:20:10)\n    at Object.<anonymous> (/tmp/tmp3oy6mi2p.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 64,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            max_product = Math.max(max_product, arr[i] * arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpy4uo4jb8.js:16:10)\n    at Object.<anonymous> (/tmp/tmpy4uo4jb8.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    var min = arr[0];\n    var secondMin = arr[1];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i] > secondMax){\n            secondMax = arr[i];\n        }\n        if(arr[i] < min){\n            secondMin = min;\n            min = arr[i];\n        }\n        else if(arr[i] < secondMin){\n            secondMin = arr[i];\n        }\n    }\n    if(max * secondMax > min * secondMin){\n        return max * secondMax;\n    }\n    else{\n        return min * secondMin;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpji58qho1.js:35:10)\n    at Object.<anonymous> (/tmp/tmpji58qho1.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            max_product = Math.max(max_product, arr[i]*arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp__gqtp6s.js:16:10)\n    at Object.<anonymous> (/tmp/tmp__gqtp6s.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(arr[i]*arr[j] > max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpq16zzgq9.js:18:10)\n    at Object.<anonymous> (/tmp/tmpq16zzgq9.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    var n = arr.length;\n    for(var i=0;i<n;i++){\n        for(var j=i+1;j<n;j++){\n            if(arr[i]*arr[j]>max_product){\n                max_product = arr[i]*arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvcrk2d6i.js:19:10)\n    at Object.<anonymous> (/tmp/tmpvcrk2d6i.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max1 = Math.max(arr[0],arr[1]);\n    var max2 = Math.min(arr[0],arr[1]);\n    var max = arr[0]*arr[1];\n    for(var i=2;i<arr.length;i++){\n        if(arr[i]>max1){\n            max2 = max1;\n            max1 = arr[i];\n        }\n        else if(arr[i]>max2){\n            max2 = arr[i];\n        }\n        if(max<max1*max2){\n            max = max1*max2;\n        }\n    }\n    return max;\n}\nvar arr = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvjhgg8ir.js:26:10)\n    at Object.<anonymous> (/tmp/tmpvjhgg8ir.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvi7qsb2m.js:18:10)\n    at Object.<anonymous> (/tmp/tmpvi7qsb2m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpd9e_2s5c.js:18:10)\n    at Object.<anonymous> (/tmp/tmpd9e_2s5c.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max_product){\n                max_product = arr[i] * arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp5egm79ty.js:18:10)\n    at Object.<anonymous> (/tmp/tmp5egm79ty.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            max_product = Math.max(max_product, arr[i]*arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp__gqtp6s.js:16:10)\n    at Object.<anonymous> (/tmp/tmp__gqtp6s.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max_product){\n                max_product = arr[i]*arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp_lht36cd.js:18:10)\n    at Object.<anonymous> (/tmp/tmp_lht36cd.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvi7qsb2m.js:18:10)\n    at Object.<anonymous> (/tmp/tmpvi7qsb2m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i+1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpei214i5m.js:18:10)\n    at Object.<anonymous> (/tmp/tmpei214i5m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n  var max_product = -Infinity;\n  for(var i=0; i<arr.length; i++){\n    for(var j=i+1; j<arr.length; j++){\n      max_product = Math.max(max_product, arr[i]*arr[j]);\n    }\n  }\n  return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmps25d06pu.js:16:10)\n    at Object.<anonymous> (/tmp/tmps25d06pu.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(arr[i]*arr[j] > max_product){\n                max_product = arr[i]*arr[j];\n            }\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp3h4j3j9z.js:18:10)\n    at Object.<anonymous> (/tmp/tmp3h4j3j9z.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpkknqx0ex.js:18:10)\n    at Object.<anonymous> (/tmp/tmpkknqx0ex.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0] * arr[1];\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpgor73whk.js:18:10)\n    at Object.<anonymous> (/tmp/tmpgor73whk.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0] * arr[1];\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpgor73whk.js:18:10)\n    at Object.<anonymous> (/tmp/tmpgor73whk.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max1 = arr[0];\n    var max2 = arr[1];\n    var max3 = arr[2];\n    var min1 = arr[0];\n    var min2 = arr[1];\n    var min3 = arr[2];\n    var max = arr[0]*arr[1]*arr[2];\n    var min = arr[0]*arr[1]*arr[2];\n    for(var i=3;i<arr.length;i++){\n        if(arr[i]>max1){\n            max3 = max2;\n            max2 = max1;\n            max1 = arr[i];\n        }\n        else if(arr[i]>max2){\n            max3 = max2;\n            max2 = arr[i];\n        }\n        else if(arr[i]>max3){\n            max3 = arr[i];\n        }\n        if(arr[i]<min1){\n            min3 = min2;\n            min2 = min1;\n            min1 = arr[i];\n        }\n        else if(arr[i]<min2){\n            min3 = min2;\n            min2 = arr[i];\n        }\n        else if(arr[i]<min3){\n            min3 = arr[i];\n        }\n    }\n    if(max1*max2*max3>min1*min2*max1){\n        return max1*max2*max3;\n    }\n    else{\n        return min1*min2*max1;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n224\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmppeazn6zr.js:49:10)\n    at Object.<anonymous> (/tmp/tmppeazn6zr.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 224,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0]*arr[1];\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpckypdmpa.js:18:10)\n    at Object.<anonymous> (/tmp/tmpckypdmpa.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j] > max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp8r2vhulp.js:18:10)\n    at Object.<anonymous> (/tmp/tmp8r2vhulp.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    var max_product = 0;\n    var min = 0;\n    var min_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            max = arr[i];\n        }\n        if(arr[i] < min){\n            min = arr[i];\n        }\n    }\n    max_product = max * max;\n    min_product = min * min;\n    if(max_product > min_product){\n        return max_product;\n    }\n    else{\n        return min_product;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n64\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpmybkt0_8.js:29:10)\n    at Object.<anonymous> (/tmp/tmpmybkt0_8.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 64,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n  var max = -Infinity;\n  for(var i=0;i<arr.length;i++){\n    for(var j=i+1;j<arr.length;j++){\n      if(arr[i]*arr[j]>max){\n        max = arr[i]*arr[j];\n      }\n    }\n  }\n  return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpmiunuawr.js:18:10)\n    at Object.<anonymous> (/tmp/tmpmiunuawr.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n    for(var i=0;i<arr.length;i++){\n        if(arr[i]>max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i]>second_max){\n            second_max = arr[i];\n        }\n        if(arr[i]<min){\n            second_min = min;\n            min = arr[i];\n        }\n        else if(arr[i]<second_min){\n            second_min = arr[i];\n        }\n    }\n    if(max*second_max>min*second_min){\n        return max*second_max;\n    }\n    else{\n        return min*second_min;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp2rjerazb.js:35:10)\n    at Object.<anonymous> (/tmp/tmp2rjerazb.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0] * arr[1];\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpgor73whk.js:18:10)\n    at Object.<anonymous> (/tmp/tmpgor73whk.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(max < arr[i]*arr[j]){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpsqia6kbi.js:18:10)\n    at Object.<anonymous> (/tmp/tmpsqia6kbi.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max_product = -Infinity;\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            max_product = Math.max(max_product,arr[i]*arr[j]);\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpvqovw1cz.js:16:10)\n    at Object.<anonymous> (/tmp/tmpvqovw1cz.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    var max_product = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] > max){\n            max = arr[i];\n        }\n    }\n    for(var j = 0; j < arr.length; j++){\n        if(arr[j] != max){\n            max_product = max * arr[j];\n        }\n    }\n    return max_product;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n32\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpaa_e7nhl.js:22:10)\n    at Object.<anonymous> (/tmp/tmpaa_e7nhl.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 32,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpamoyoqik.js:18:10)\n    at Object.<anonymous> (/tmp/tmpamoyoqik.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nvar arr = [1,2,3,4,5,6,7,8,9,10];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmp8d0nw3vk.js:19:10)\n    at Object.<anonymous> (/tmp/tmp8d0nw3vk.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] * arr[j] > max){\n                max = arr[i] * arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1665517561,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpag0asxks.js:18:10)\n    at Object.<anonymous> (/tmp/tmpag0asxks.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var second_max = arr[1];\n    var min = arr[0];\n    var second_min = arr[1];\n    for(var i=0;i<arr.length;i++){\n        if(arr[i]>max){\n            second_max = max;\n            max = arr[i];\n        }\n        else if(arr[i]>second_max){\n            second_max = arr[i];\n        }\n        if(arr[i]<min){\n            second_min = min;\n            min = arr[i];\n        }\n        else if(arr[i]<second_min){\n            second_min = arr[i];\n        }\n    }\n    return (max*second_max)>(min*second_min)?(max*second_max):(min*second_min);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpc1ndted0.js:30:10)\n    at Object.<anonymous> (/tmp/tmpc1ndted0.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = -Infinity;\n    for(var i=0; i<arr.length; i++){\n        for(var j=i+1; j<arr.length; j++){\n            if(arr[i]*arr[j] > max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpq16zzgq9.js:18:10)\n    at Object.<anonymous> (/tmp/tmpq16zzgq9.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0];\n    var secondMax = arr[1];\n    if(arr[0]<arr[1]){\n        max = arr[1];\n        secondMax = arr[0];\n    }\n    for(var i=2;i<arr.length;i++){\n        if(arr[i]>max){\n            secondMax = max;\n            max = arr[i];\n        }\n        else if(arr[i]>secondMax){\n            secondMax = arr[i];\n        }\n    }\n    return max*secondMax;\n}\nvar arr = [1,2,3,4,5,6,7,8,9];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpu99wu5k0.js:26:10)\n    at Object.<anonymous> (/tmp/tmpu99wu5k0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to find a pair with highest product from a given array of integers.\nfunction max_Product(arr){\n    var max = arr[0]*arr[1];\n    for(var i=0;i<arr.length;i++){\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[i]*arr[j]>max){\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = max_Product;\n  assert.deepEqual(candidate([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8]);\n  assert.deepEqual(candidate([0, -1, -2, -4, 5, 0, -6]),[-4, -6]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 3]);\n}\n\ntest();",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n56\n\nshould loosely deep-equal\n\n[\n  7,\n  8\n]\n    at test (/tmp/tmpckypdmpa.js:18:10)\n    at Object.<anonymous> (/tmp/tmpckypdmpa.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 56,\n  expected: [ 7, 8 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
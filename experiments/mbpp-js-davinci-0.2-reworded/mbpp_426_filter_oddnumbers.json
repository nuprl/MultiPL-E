{
  "name": "mbpp_426_filter_oddnumbers",
  "language": "js",
  "prompt": "//Write a function to filter odd numbers.\nfunction filter_oddnumbers(nums){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_426_filter_oddnumbers.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = filter_oddnumbers;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),[1, 3, 5, 7, 9]);\n  assert.deepEqual(candidate([10, 20, 45, 67, 84, 93]),[45, 67, 93]);\n  assert.deepEqual(candidate([5, 7, 9, 8, 6, 4, 3]),[5, 7, 9, 3]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var odd_nums = [];\n    for(var i=0; i<nums.length; i++){\n        if(nums[i] % 2 != 0){\n            odd_nums.push(nums[i]);\n        }\n    }\n    return odd_nums;\n}",
    "    var odd_numbers = nums.filter(function(num){\n        return num % 2 != 0;\n    });\n    return odd_numbers;\n}",
    "    var odd = nums.filter(function(num){\n        return num % 2 !== 0;\n    });\n    return odd;\n}\nvar nums = [1,2,3,4,5,6,7,8,9,10];",
    "    var odd_numbers = nums.filter(function(num){\n        return num % 2 != 0;\n    });\n    return odd_numbers;\n}",
    "    var odd_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] % 2 != 0){\n            odd_nums.push(nums[i]);\n        }\n    }\n    return odd_nums;\n}",
    "    var odd = nums.filter(function(num){\n        return num % 2 != 0;\n    });\n    return odd;\n}",
    "    var odd_numbers = nums.filter(function(num){\n        return num % 2 != 0;\n    });\n    return odd_numbers;\n}",
    "    var odd_nums = [];\n    for(var i=0; i<nums.length; i++){\n        if(nums[i]%2 != 0){\n            odd_nums.push(nums[i]);\n        }\n    }\n    return odd_nums;\n}\nvar nums = [1,2,3,4,5,6,7,8,9,10];",
    "    var odd = nums.filter(function(num){\n        return num%2!=0;\n    });\n    return odd;\n}",
    "    var odd_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] % 2 != 0){\n            odd_nums.push(nums[i]);\n        }\n    }\n    return odd_nums;\n}",
    "    var odd_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] % 2 != 0){\n            odd_nums.push(nums[i]);\n        }\n    }\n    return odd_nums;\n}\nvar nums = [1,2,3,4,5,6,7,8,9,10];",
    "    var odd = nums.filter(function(num){\n        return num % 2 !== 0;\n    });\n    return odd;\n}",
    "    var oddnumbers = nums.filter(function(num){\n        return num % 2 != 0;\n    });\n    return oddnumbers;\n}",
    "    var odd_nums = [];\n    for(var i=0; i<nums.length; i++){\n        if(nums[i] % 2 != 0){\n            odd_nums.push(nums[i]);\n        }\n    }\n    return odd_nums;\n}\nvar nums = [10,20,30,40,50,60,70,80,90,100];\nvar odd_nums = filter_oddnumbers(nums);",
    "    var odd_nums = [];\n    for(var i=0; i<nums.length; i++){\n        if(nums[i]%2 != 0){\n            odd_nums.push(nums[i]);\n        }\n    }\n    return odd_nums;\n}",
    "    var odd = nums.filter(function(num){\n        return num % 2 != 0;\n    });\n    return odd;\n}",
    "    var odd_nums = [];\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i] % 2 != 0){\n            odd_nums.push(nums[i]);\n        }\n    }\n    return odd_nums;\n}\nvar nums = [1,2,3,4,5,6,7,8,9,10];",
    "    var odd_nums = nums.filter(function(num){\n        return num % 2 !== 0;\n    });\n    return odd_nums;\n}",
    "    var odd_nums = [];\n    for(var i=0; i<nums.length; i++){\n        if(nums[i]%2 != 0){\n            odd_nums.push(nums[i]);\n        }\n    }\n    return odd_nums;\n}\nvar nums = [10,20,30,40,50,60,70,80,90,100];\nvar odd_nums = filter_oddnumbers(nums);",
    "    var oddnumbers = nums.filter(function(num){\n        return num % 2 !== 0;\n    });\n    return oddnumbers;\n}"
  ]
}
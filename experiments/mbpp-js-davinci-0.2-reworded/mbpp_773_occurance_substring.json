{
  "name": "mbpp_773_occurance_substring",
  "language": "js",
  "prompt": "//Write a function to find the occurrence and position of the substrings within a string. Return undefined if there is no match.\nfunction occurance_substring(text, pattern){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_773_occurance_substring.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = occurance_substring;\n  assert.deepEqual(candidate(\"python programming, python language\", \"python\"),[\"python\", 0, 6]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18]);\n  assert.deepEqual(candidate(\"python programming,programming language\", \"language\"),[\"language\", 31, 39]);\n  assert.deepEqual(candidate(\"c++ programming, c++ language\", \"python\"),undefined);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        var k = i;\n        while(j < pattern.length && k < text.length && text[k] == pattern[j]){\n            k++;\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n",
    "    let result = [];\n    let i = 0;\n    while(i < text.length){\n        let j = 0;\n        while(j < pattern.length){\n            if(text[i+j] !== pattern[j]){\n                break;\n            }\n            j++;\n        }\n        if(j === pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return {\n            count: count,\n            pos: pos\n        };\n    }\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var index = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            index.push(i);\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return [count, index];\n    }\n}\n",
    "  var result = [];\n  var index = 0;\n  while(index < text.length){\n    var index_of_pattern = text.indexOf(pattern, index);\n    if(index_of_pattern === -1){\n      break;\n    }\n    result.push(index_of_pattern);\n    index = index_of_pattern + 1;\n  }\n  return result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}",
    "    var pos = text.indexOf(pattern);\n    if(pos == -1){\n        return undefined;\n    }\n    var count = 0;\n    while(pos != -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\n",
    "    var result = [];\n    var index = 0;\n    var i = 0;\n    while(i < text.length){\n        if(text[i] == pattern[index]){\n            index++;\n            if(index == pattern.length){\n                result.push(i - index + 1);\n                index = 0;\n            }\n        }\n        else{\n            index = 0;\n        }\n        i++;\n    }\n    return result;\n}",
    "    let result = [];\n    let index = 0;\n    while(index < text.length){\n        let index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n",
    "    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos >= 0){\n            count++;\n            result.push(pos);\n            pos += pattern.length;\n        }else{\n            break;\n        }\n    }\n    if(count > 0){\n        return result;\n    }else{\n        return undefined;\n    }\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index != -1){\n            result.push(index);\n            index += pattern.length;\n        }\n        else{\n            break;\n        }\n    }\n    return result;\n}",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        count++;\n        result.push(index);\n        index++;\n    }\n    return count == 0 ? undefined : result;\n}",
    "    let result = [];\n    let index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result.length ? result : undefined;\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] === pattern[0]){\n            for(var j = 0; j < pattern.length; j++){\n                if(text[i+j] !== pattern[j]){\n                    break;\n                }\n                if(j === pattern.length - 1){\n                    count++;\n                    position.push(i);\n                }\n            }\n        }\n    }\n    if(count === 0){\n        return undefined;\n    }\n    return {count: count, position: position};\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(pos < text.length){\n        var index = text.indexOf(pattern, pos);\n        if(index == -1){\n            break;\n        }\n        count++;\n        result.push(index);\n        pos = index + 1;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return result;\n}\n",
    "  var result = [];\n  var index = text.indexOf(pattern);\n  while(index >= 0){\n    result.push(index);\n    index = text.indexOf(pattern, index + 1);\n  }\n  return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index+1);\n    }\n    return result.length > 0 ? result : undefined;\n}",
    "    var i = 0;\n    var j = 0;\n    var count = 0;\n    var position = [];\n    while(i < text.length){\n        if(text[i] == pattern[j]){\n            i++;\n            j++;\n        }\n        else{\n            i = i - j + 1;\n            j = 0;\n        }\n        if(j == pattern.length){\n            count++;\n            position.push(i - j);\n            j = 0;\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return {\n            count: count,\n            position: position\n        }\n    }\n}",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return count + \" \" + pos;\n    }\n}",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf === -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    if(pos == -1) return undefined;\n    var count = 0;\n    while(pos != -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length){\n            if(text[i+j] != pattern[j]){\n                break;\n            }\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    if(result.length == 0){\n        return undefined;\n    }\n    return result;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    if(result.length == 0){\n        return undefined;\n    }\n    return result;\n}\n",
    "    let count = 0;\n    let position = [];\n    for(let i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) === pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count === 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        position: position\n    }\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(text[i + j] == pattern[j]){\n                j++;\n                if(j == pattern.length){\n                    count++;\n                    position.push(i);\n                    break;\n                }\n            }\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        position: position\n    };\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        if(text.substring(index, index + pattern.length) == pattern){\n            count++;\n            result.push(index);\n            index += pattern.length;\n        }else{\n            index++;\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }else{\n        return result;\n    }\n}\n",
    "    let result = [];\n    let index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    if(text.indexOf(pattern) == -1){\n        return undefined;\n    }\n    else{\n        var count = 0;\n        var position = [];\n        for(var i = 0; i < text.length; i++){\n            if(text.substring(i, i + pattern.length) == pattern){\n                count++;\n                position.push(i);\n            }\n        }\n        return {\n            count: count,\n            position: position\n        }\n    }\n}",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] === pattern[0]){\n            for(var j = 0; j < pattern.length; j++){\n                if(text[i+j] !== pattern[j]){\n                    break;\n                }\n                if(j === pattern.length - 1){\n                    count++;\n                    position.push(i);\n                }\n            }\n        }\n    }\n    if(count === 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        position: position\n    };\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            return result;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n",
    "    let count = 0;\n    let index = 0;\n    let position = [];\n    while(index < text.length){\n        if(text.slice(index, index + pattern.length) === pattern){\n            count++;\n            position.push(index);\n            index += pattern.length;\n        }else{\n            index++;\n        }\n    }\n    if(count === 0){\n        return undefined;\n    }else{\n        return {\n            count: count,\n            position: position\n        };\n    }\n}\n",
    "    var pos = text.indexOf(pattern);\n    if(pos == -1){\n        return undefined;\n    }\n    else{\n        var count = 0;\n        while(pos != -1){\n            count++;\n            pos = text.indexOf(pattern, pos + 1);\n        }\n        return count;\n    }\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return {\n            count: count,\n            position: position\n        }\n    }\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index+1);\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        count++;\n        result.push(index);\n        index++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return result;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var position = [];\n    var count = 0;\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            position.push(i);\n            count++;\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        position: position\n    };\n}",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf != -1){\n            count++;\n            result.push(indexOf);\n            index = indexOf + 1;\n        }\n        else{\n            index = text.length;\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return result;\n    }\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substr(i, pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return {\n            count: count,\n            pos: pos\n        };\n    }\n}",
    "    let count = 0;\n    let index = 0;\n    let result = [];\n    while(index < text.length){\n        let index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        count++;\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return count ? result : undefined;\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        if(text.substring(index, index + pattern.length) == pattern){\n            count++;\n            result.push(index);\n        }\n        index++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return result;\n}\n",
    "  var count = 0;\n  var pos = [];\n  for(var i = 0; i < text.length; i++){\n    if(text.substring(i, i + pattern.length) == pattern){\n      count++;\n      pos.push(i);\n    }\n  }\n  if(count == 0){\n    return undefined;\n  }\n  else{\n    return {\n      count: count,\n      pos: pos\n    }\n  }\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    if(result.length == 0){\n        return undefined;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var result = [];\n    var index = 0;\n    while (index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if (indexOf === -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}",
    "  var count = 0;\n  var position = [];\n  for(var i = 0; i < text.length; i++){\n    if(text[i] == pattern[0]){\n      var j = 0;\n      while(j < pattern.length && text[i+j] == pattern[j]){\n        j++;\n      }\n      if(j == pattern.length){\n        count++;\n        position.push(i);\n      }\n    }\n  }\n  if(count == 0){\n    return undefined;\n  }\n  else{\n    return {count: count, position: position};\n  }\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        index++;\n    }\n    return result;\n}",
    "    var result = [];\n    var pos = text.indexOf(pattern);\n    while(pos > -1){\n        result.push(pos);\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return result;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] === pattern[0]){\n            var j = 0;\n            while(j < pattern.length && text[i+j] === pattern[j]){\n                j++;\n            }\n            if(j === pattern.length){\n                count++;\n                pos.push(i);\n            }\n        }\n    }\n    if(count === 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        pos: pos\n    };\n}\n",
    "    var position = [];\n    var count = 0;\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j < pattern.length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern.length){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return {\n            count: count,\n            position: position\n        };\n    }\n}\n",
    "    var count = 0;\n    var position = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf == -1){\n            break;\n        }\n        count++;\n        position.push(indexOf);\n        index = indexOf + 1;\n    }\n    return {\n        count: count,\n        position: position\n    };\n}\n",
    "    var pos = 0;\n    var result = [];\n    var count = 0;\n    while(pos < text.length){\n        if(text.indexOf(pattern, pos) != -1){\n            result.push(text.indexOf(pattern, pos));\n            pos = text.indexOf(pattern, pos) + 1;\n            count++;\n        }else{\n            pos++;\n        }\n    }\n    if(result.length == 0){\n        return undefined;\n    }else{\n        return {\n            count: count,\n            positions: result\n        };\n    }\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var pos = 0;\n    var count = 0;\n    while(true){\n        var foundPos = text.indexOf(pattern, pos);\n        if(foundPos == -1){\n            break;\n        }\n        count++;\n        pos = foundPos + 1;\n    }\n    return count;\n}\n",
    "    var pos = [];\n    var count = 0;\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            pos.push(i);\n            count++;\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        pos: pos\n    };\n}",
    "    var count = 0;\n    var index = [];\n    for (var i = 0; i < text.length; i++){\n        if (text[i] == pattern[0]){\n            var j = 0;\n            while (j < pattern.length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if (j == pattern.length){\n                count++;\n                index.push(i);\n            }\n        }\n    }\n    if (count == 0){\n        return undefined;\n    }\n    else{\n        return [count, index];\n    }\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    if(count > 0){\n        return {\n            count: count,\n            index: text.indexOf(pattern)\n        };\n    }\n    return undefined;\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        index += pattern.length;\n        count++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return result;\n}",
    "\tvar regex = new RegExp(pattern, \"g\");\n\tvar match = text.match(regex);\n\tif(match){\n\t\treturn match.length;\n\t}\n\treturn undefined;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        count++;\n        result.push(index);\n        index++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return result;\n}",
    "    var result = [];\n    var i = 0;\n    while(text.indexOf(pattern, i) != -1){\n        result.push(text.indexOf(pattern, i));\n        i = text.indexOf(pattern, i) + 1;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var pos = 0;\n    var result = [];\n    while(pos < text.length){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        count++;\n        result.push(pos);\n        pos++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return result;\n}",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}",
    "    var result = [];\n    var pos = 0;\n    var index = text.indexOf(pattern, pos);\n    while(index != -1){\n        result.push(index);\n        pos = index + 1;\n        index = text.indexOf(pattern, pos);\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of === -1){\n            break;\n        }\n        count++;\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    if(count === 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        positions: result\n    };\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of === -1){\n            break;\n        }\n        count++;\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    if(count > 0){\n        return result;\n    }\n    return undefined;\n}",
    "    var result = [];\n    var pos = text.indexOf(pattern);\n    while(pos > -1){\n        result.push(pos);\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    if(result.length > 0){\n        return result;\n    }\n    else{\n        return undefined;\n    }\n}\n",
    "    if(text.indexOf(pattern) == -1){\n        return undefined;\n    }\n    var count = 0;\n    var pos = [];\n    var start = 0;\n    while(text.indexOf(pattern, start) != -1){\n        var index = text.indexOf(pattern, start);\n        pos.push(index);\n        start = index + 1;\n        count++;\n    }\n    return {\n        count: count,\n        pos: pos\n    };\n}\n",
    "  var result = [];\n  var pos = 0;\n  while(true){\n    pos = text.indexOf(pattern, pos);\n    if(pos == -1){\n      break;\n    }\n    result.push(pos);\n    pos += pattern.length;\n  }\n  return result;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    if(count > 0){\n        return count;\n    }\n    else{\n        return undefined;\n    }\n}",
    "    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(pos < text.length){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        count++;\n        result.push(pos);\n        pos++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var j = 0;\n            while(j < pattern.length && text[i+j] == pattern[j]){\n                j++;\n            }\n            if(j == pattern.length){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return {\n            count: count,\n            position: position\n        }\n    }\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substr(i, pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        pos: pos\n    };\n}",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index > -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}",
    "    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        count++;\n        result.push(index);\n        index++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return result;\n}",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf === -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of === -1){\n            break;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        index++;\n    }\n    return result;\n}",
    "    let result = [];\n    for(let i = 0; i < text.length; i++){\n        if(text[i] === pattern[0]){\n            let match = true;\n            for(let j = 1; j < pattern.length; j++){\n                if(text[i+j] !== pattern[j]){\n                    match = false;\n                    break;\n                }\n            }\n            if(match){\n                result.push(i);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substr(i, pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        pos: pos\n    }\n}",
    "    var count = 0;\n    var index = 0;\n    while(index != -1){\n        index = text.indexOf(pattern, index);\n        if(index != -1){\n            count++;\n            index++;\n        }\n    }\n    return count;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var pos = [];\n    var count = 0;\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        while(j < pattern.length && text[i+j] == pattern[j]){\n            j++;\n        }\n        if(j == pattern.length){\n            count++;\n            pos.push(i);\n        }\n        i++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {count: count, pos: pos};\n}\n",
    "    let result = [];\n    let index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        var k = i;\n        while(j < pattern.length && k < text.length && text[k] == pattern[j]){\n            j++;\n            k++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar index = 0;\n\tvar count = 0;\n\twhile(index != -1){\n\t\tindex = text.indexOf(pattern, index);\n\t\tif(index != -1){\n\t\t\tresult.push(index);\n\t\t\tcount++;\n\t\t\tindex++;\n\t\t}\n\t}\n\tif(count == 0){\n\t\treturn undefined;\n\t}\n\treturn result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    if(pos == -1) return undefined;\n    var count = 0;\n    while(pos != -1){\n        count++;\n        pos = text.indexOf(pattern, pos+1);\n    }\n    return count;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar index = text.indexOf(pattern);\n\twhile(index != -1){\n\t\tresult.push(index);\n\t\tindex = text.indexOf(pattern, index + 1);\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1) break;\n        result.push(index);\n        index++;\n    }\n    return result;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    let count = 0;\n    let position = [];\n    for(let i = 0; i < text.length; i++){\n        if(text[i] === pattern[0]){\n            for(let j = 0; j < pattern.length; j++){\n                if(text[i + j] !== pattern[j]){\n                    break;\n                }\n                if(j === pattern.length - 1){\n                    count++;\n                    position.push(i);\n                }\n            }\n        }\n    }\n    if(count === 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        position: position\n    }\n}\n",
    "\tvar result = [];\n\tvar index = text.indexOf(pattern);\n\twhile(index != -1){\n\t\tresult.push(index);\n\t\tindex = text.indexOf(pattern, index + 1);\n\t}\n\treturn result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result.length > 0 ? result : undefined;\n}",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos != -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return count;\n}",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        var k = i;\n        while(j < pattern.length && k < text.length && pattern[j] == text[k]){\n            j++;\n            k++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    if(result.length == 0){\n        return undefined;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    var position = 0;\n    while(index < text.length){\n        position = text.indexOf(pattern, index);\n        if(position === -1){\n            break;\n        }\n        result.push(position);\n        index = position + 1;\n    }\n    return result;\n}",
    "    var result = [];\n    var index = 0;\n    var count = 0;\n    while(index != -1){\n        index = text.indexOf(pattern, index);\n        if(index != -1){\n            result.push(index);\n            index++;\n            count++;\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var result = [];\n    var pos = 0;\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos++;\n    }\n    return result;\n}",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        var k = i;\n        while(text[k] == pattern[j]){\n            j++;\n            k++;\n            if(j == pattern.length){\n                result.push(i);\n            }\n        }\n        i++;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var position = [];\n    var index = 0;\n    while(index < text.length){\n        if(text.substring(index, index+pattern.length) == pattern){\n            count++;\n            position.push(index);\n        }\n        index++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return {\n            count: count,\n            position: position\n        };\n    }\n}\n",
    "    let result = [];\n    let index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar index = 0;\n\twhile(index < text.length){\n\t\tindex = text.indexOf(pattern, index);\n\t\tif(index == -1){\n\t\t\tbreak;\n\t\t}\n\t\tresult.push(index);\n\t\tindex++;\n\t}\n\treturn result;\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index != -1){\n        index = text.indexOf(pattern, index);\n        if(index != -1){\n            count++;\n            result.push(index);\n            index++;\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return result;\n    }\n}",
    "    if(text.indexOf(pattern) === -1){\n        return undefined;\n    }\n    let result = [];\n    let index = text.indexOf(pattern);\n    while(index !== -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf === -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}",
    "    var count = 0;\n    var index = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] === pattern[0]){\n            for(var j = 0; j < pattern.length; j++){\n                if(text[i+j] !== pattern[j]){\n                    break;\n                }\n                if(j === pattern.length - 1){\n                    count++;\n                    index.push(i);\n                }\n            }\n        }\n    }\n    if(count === 0){\n        return undefined;\n    }\n    return {count: count, index: index};\n}\n",
    "    let result = [];\n    let count = 0;\n    let index = 0;\n    while(index < text.length){\n        let foundIndex = text.indexOf(pattern, index);\n        if(foundIndex == -1){\n            break;\n        }\n        result.push(foundIndex);\n        count++;\n        index = foundIndex + 1;\n    }\n    return count == 0 ? undefined : result;\n}",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf === -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}\n",
    "\tvar result = [];\n\tvar index = text.indexOf(pattern);\n\twhile(index != -1){\n\t\tresult.push(index);\n\t\tindex = text.indexOf(pattern, index+1);\n\t}\n\treturn result;\n}\n",
    "    var count = 0;\n    var index = [];\n    var i = 0;\n    var j = 0;\n    var k = 0;\n    var flag = 0;\n    var len = text.length;\n    var len1 = pattern.length;\n    for(i = 0; i < len; i++){\n        if(text[i] == pattern[j]){\n            for(k = i, j = 0; k < len && j < len1; k++, j++){\n                if(text[k] != pattern[j]){\n                    flag = 1;\n                    break;\n                }\n            }\n            if(flag == 0){\n                count++;\n                index.push(i);\n            }\n            flag = 0;\n            j = 0;\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return {\n            count: count,\n            index: index\n        };\n    }\n}",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return {\n            count: count,\n            position: position\n        };\n    }\n}",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var j = 0;\n        var k = i;\n        while(j < pattern.length && k < text.length && text[k] == pattern[j]){\n            k++;\n            j++;\n        }\n        if(j == pattern.length){\n            result.push(i);\n        }\n        i++;\n    }\n    return result;\n}\n",
    "    var i = 0;\n    var j = 0;\n    var k = 0;\n    var pos = [];\n    while(i < text.length){\n        if(text[i] == pattern[j]){\n            i++;\n            j++;\n        }\n        else{\n            i = i - j + 1;\n            j = 0;\n        }\n        if(j == pattern.length){\n            pos[k] = i - j;\n            k++;\n            j = 0;\n        }\n    }\n    if(k == 0){\n        return undefined;\n    }\n    else{\n        return pos;\n    }\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            break;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf === -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var index = 0;\n    var pos = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index != -1){\n            count++;\n            pos.push(index);\n            index += pattern.length;\n        }\n        else{\n            break;\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return {\n            count: count,\n            pos: pos\n        };\n    }\n}",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos+1);\n    }\n    return count;\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count > 0){\n        return \"Occurance: \" + count + \" Position: \" + position;\n    }\n    else{\n        return undefined;\n    }\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        pos: pos\n    };\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf === -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}",
    "\tvar pos = text.indexOf(pattern);\n\tvar count = 0;\n\twhile(pos > -1){\n\t\tcount++;\n\t\tpos = text.indexOf(pattern, pos + 1);\n\t}\n\tif(count == 0){\n\t\treturn undefined;\n\t}\n\treturn count;\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var index = [];\n    var i = 0;\n    while(text.indexOf(pattern, i) !== -1){\n        index.push(text.indexOf(pattern, i));\n        i = text.indexOf(pattern, i) + 1;\n        count++;\n    }\n    if(count === 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        index: index\n    };\n}\n",
    "    var regex = new RegExp(pattern, 'g');\n    var match = regex.exec(text);\n    var result = [];\n    while(match != null){\n        result.push(match.index);\n        match = regex.exec(text);\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            for(var j = 0; j < pattern.length; j++){\n                if(text[i+j] != pattern[j]){\n                    break;\n                }\n                if(j == pattern.length - 1){\n                    count++;\n                    position.push(i);\n                }\n            }\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        position: position\n    };\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var flag = true;\n            for(var j = 1; j < pattern.length; j++){\n                if(text[i+j] != pattern[j]){\n                    flag = false;\n                    break;\n                }\n            }\n            if(flag){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        position: position\n    }\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of_pattern = text.indexOf(pattern, index);\n        if(index_of_pattern === -1){\n            return result;\n        }\n        result.push(index_of_pattern);\n        index = index_of_pattern + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of === -1){\n            return result;\n        }\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index+1);\n    }\n    return result;\n}",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        pos: pos\n    };\n}",
    "    let count = 0;\n    let index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index != -1){\n            count++;\n            index += pattern.length;\n        }else{\n            break;\n        }\n    }\n    return count;\n}\n",
    "    var pos = 0;\n    var count = 0;\n    var result = [];\n    while(true){\n        pos = text.indexOf(pattern, pos);\n        if(pos == -1){\n            break;\n        }\n        result.push(pos);\n        pos += 1;\n        count++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return result;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var result = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var match = true;\n            for(var j = 1; j < pattern.length; j++){\n                if(text[i + j] != pattern[j]){\n                    match = false;\n                    break;\n                }\n            }\n            if(match){\n                result.push(i);\n            }\n        }\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf === -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        position: position\n    };\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] === pattern[0]){\n            for(var j = 0; j < pattern.length; j++){\n                if(text[i+j] !== pattern[j]){\n                    break;\n                }\n                if(j === pattern.length - 1){\n                    count++;\n                    position.push(i);\n                }\n            }\n        }\n    }\n    if(count === 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        position: position\n    }\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            position.push(i);\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return [count, position];\n}\n",
    "    var result = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        i = index + 1;\n    }\n    return result;\n}\n",
    "\tvar count = 0;\n\tvar position = [];\n\tfor(var i = 0; i < text.length; i++){\n\t\tif(text[i] === pattern[0]){\n\t\t\tvar j = 0;\n\t\t\twhile(j < pattern.length && text[i+j] === pattern[j]){\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif(j === pattern.length){\n\t\t\t\tcount++;\n\t\t\t\tposition.push(i);\n\t\t\t}\n\t\t}\n\t}\n\tif(count === 0){\n\t\treturn undefined;\n\t}\n\treturn {\n\t\tcount: count,\n\t\tposition: position\n\t};\n}\n",
    "    var result = [];\n    var index = 0;\n    while(text.indexOf(pattern, index) !== -1){\n        result.push(text.indexOf(pattern, index));\n        index = text.indexOf(pattern, index) + 1;\n    }\n    return result;\n}",
    "    var index = text.indexOf(pattern);\n    var count = 0;\n    while(index != -1){\n        count++;\n        index = text.indexOf(pattern, index+1);\n    }\n    return count;\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            var k = i;\n            for(var j = 0; j < pattern.length; j++){\n                if(text[k] == pattern[j]){\n                    k++;\n                }\n                else{\n                    break;\n                }\n            }\n            if(j == pattern.length){\n                count++;\n                position.push(i);\n            }\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return {\n            count: count,\n            position: position\n        }\n    }\n}",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    if(result.length == 0){\n        return undefined;\n    }\n    return result;\n}\n",
    "\tvar position = [];\n\tvar count = 0;\n\tvar index = 0;\n\twhile(index < text.length){\n\t\tindex = text.indexOf(pattern, index);\n\t\tif(index == -1){\n\t\t\tbreak;\n\t\t}\n\t\tposition.push(index);\n\t\tcount++;\n\t\tindex++;\n\t}\n\treturn count == 0 ? undefined : {count: count, position: position};\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    if(count > 0){\n        return \"Occurance: \" + count + \" Position: \" + pos;\n    }\n    else{\n        return undefined;\n    }\n}",
    "  var count = 0;\n  var index = [];\n  for(var i = 0; i < text.length; i++){\n    if(text.substring(i, i + pattern.length) == pattern){\n      count++;\n      index.push(i);\n    }\n  }\n  if(count == 0){\n    return undefined;\n  }\n  return {count: count, index: index};\n}\n",
    "    var pos = [];\n    var count = 0;\n    var i = 0;\n    while(i < text.length){\n        if(text.substr(i, pattern.length) == pattern){\n            pos.push(i);\n            count++;\n        }\n        i++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        positions: pos\n    };\n}\n",
    "\tvar result = [];\n\tvar i = 0;\n\tvar j = 0;\n\twhile(i < text.length){\n\t\tif(text[i] == pattern[j]){\n\t\t\tj++;\n\t\t\tif(j == pattern.length){\n\t\t\t\tresult.push(i - j + 1);\n\t\t\t\tj = 0;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tj = 0;\n\t\t}\n\t\ti++;\n\t}\n\tif(result.length == 0){\n\t\treturn undefined;\n\t}\n\telse{\n\t\treturn result;\n\t}\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        if(text.indexOf(pattern, index) != -1){\n            count++;\n            result.push(text.indexOf(pattern, index));\n            index = text.indexOf(pattern, index) + 1;\n        }\n        else{\n            index++;\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return result;\n    }\n}\n",
    "    var arr = [];\n    var i = 0;\n    while(i < text.length){\n        var index = text.indexOf(pattern, i);\n        if(index == -1){\n            break;\n        }\n        arr.push(index);\n        i = index + 1;\n    }\n    return arr;\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        var index_of = text.indexOf(pattern, index);\n        if(index_of === -1){\n            break;\n        }\n        count++;\n        result.push(index_of);\n        index = index_of + 1;\n    }\n    if(count === 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        index: result\n    };\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index === -1){\n            break;\n        }\n        result.push(index);\n        index++;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var index = 0;\n    var position = [];\n    while(index != -1){\n        index = text.indexOf(pattern, index);\n        if(index != -1){\n            count++;\n            position.push(index);\n            index++;\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return {\n            count: count,\n            position: position\n        }\n    }\n}",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index === -1){\n            break;\n        }\n        result.push(index);\n        index++;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var pos = [];\n    var index = text.indexOf(pattern);\n    while (index >= 0) {\n        count++;\n        pos.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        pos: pos\n    };\n}\n",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        count++;\n        result.push(index);\n        index++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var pos = [];\n    for(var i = 0; i < text.length; i++){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            pos.push(i);\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        pos: pos\n    };\n}\n",
    "    var count = 0;\n    var index = [];\n    var i = 0;\n    while(i < text.length){\n        if(text.substring(i, i + pattern.length) == pattern){\n            count++;\n            index.push(i);\n        }\n        i++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        index: index\n    };\n}\n",
    "    var result = [];\n    var pos = text.indexOf(pattern);\n    while(pos > -1){\n        result.push(pos);\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    return result;\n}",
    "    var result = [];\n    var count = 0;\n    var index = text.indexOf(pattern);\n    while(index != -1){\n        result.push(index);\n        count++;\n        index = text.indexOf(pattern, index + 1);\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return result;\n}",
    "  var result = [];\n  var index = text.indexOf(pattern);\n  while(index != -1){\n    result.push(index);\n    index = text.indexOf(pattern, index + 1);\n  }\n  return result;\n}",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index != -1){\n        index = text.indexOf(pattern, index);\n        if(index != -1){\n            count++;\n            result.push(index);\n            index++;\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }else{\n        return result;\n    }\n}",
    "    var count = 0;\n    var position = [];\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == pattern[0]){\n            for(var j = 0; j < pattern.length; j++){\n                if(text[i+j] == pattern[j]){\n                    if(j == pattern.length - 1){\n                        count++;\n                        position.push(i);\n                    }\n                }\n                else{\n                    break;\n                }\n            }\n        }\n    }\n    if(count == 0){\n        return undefined;\n    }\n    else{\n        return [count, position];\n    }\n}\n",
    "    var pos = text.indexOf(pattern);\n    if(pos == -1) return undefined;\n    var count = 0;\n    while(pos != -1){\n        count++;\n        pos = text.indexOf(pattern, pos+1);\n    }\n    return count;\n}",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf === -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        index++;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = text.indexOf(pattern);\n    while(index >= 0){\n        result.push(index);\n        index = text.indexOf(pattern, index + 1);\n    }\n    return result;\n}",
    "    var count = 0;\n    var index = 0;\n    var result = [];\n    while(index < text.length){\n        index = text.indexOf(pattern, index);\n        if(index == -1){\n            break;\n        }\n        result.push(index);\n        count++;\n        index++;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return result;\n}\n",
    "    var result = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf === -1){\n            break;\n        }\n        result.push(indexOf);\n        index = indexOf + 1;\n    }\n    return result;\n}\n",
    "    var count = 0;\n    var positions = [];\n    var index = 0;\n    while(index < text.length){\n        var indexOf = text.indexOf(pattern, index);\n        if(indexOf == -1){\n            break;\n        }\n        count++;\n        positions.push(indexOf);\n        index = indexOf + 1;\n    }\n    if(count == 0){\n        return undefined;\n    }\n    return {\n        count: count,\n        positions: positions\n    };\n}\n",
    "    var pos = text.indexOf(pattern);\n    var count = 0;\n    while(pos > -1){\n        count++;\n        pos = text.indexOf(pattern, pos + 1);\n    }\n    if(count > 0){\n        return count;\n    }\n    else{\n        return undefined;\n    }\n}"
  ]
}
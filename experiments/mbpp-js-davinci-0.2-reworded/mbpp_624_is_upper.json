{
  "name": "mbpp_624_is_upper",
  "language": "js",
  "prompt": "//Write a jsthon function to convert a given string to uppercase.\nfunction is_upper(string){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_624_is_upper.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = is_upper;\n  assert.deepEqual(candidate(\"person\"),\"PERSON\");\n  assert.deepEqual(candidate(\"final\"),\"FINAL\");\n  assert.deepEqual(candidate(\"Valid\"),\"VALID\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    return string.toUpperCase();\n}",
    "    return string.toUpperCase();\n}",
    "    return string.toUpperCase();\n}",
    "    return string.toUpperCase();\n}",
    "    return string.toUpperCase();\n}",
    "    return string.toUpperCase();\n}",
    "    return string.toUpperCase();\n}",
    "    return string.toUpperCase();\n}",
    "    return string.toUpperCase();\n}",
    "    return string.toUpperCase();\n}",
    "    if(string.toUpperCase() === string){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n",
    "    return string.toUpperCase();\n}",
    "    if(string.toUpperCase()===string){\n        return true\n    }\n    else{\n        return false\n    }\n}",
    "    return string.toUpperCase();\n}\n",
    "    return string.toUpperCase();\n}",
    "    return string.toUpperCase();\n}",
    "    if(string.length>0){\n        return string.toUpperCase();\n    }\n}",
    "    return string.toUpperCase();\n}",
    "    if(string.toUpperCase() === string){\n        return true\n    }\n    else{\n        return false\n    }\n}",
    "    return string.toUpperCase();\n}"
  ]
}
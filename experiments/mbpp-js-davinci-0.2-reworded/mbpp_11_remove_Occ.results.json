{
  "name": "mbpp_11_remove_Occ",
  "language": "js",
  "prompt": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_11_remove_Occ.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1,s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    return s.replace(ch, \"\")\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'helo'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmpr4ijdocx.js:10:10)\n    at Object.<anonymous> (/tmp/tmpr4ijdocx.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'helo',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    return s.slice(0, first) + s.slice(first + 1, last) + s.slice(last + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i == -1 || j == -1){\n        return s;\n    }\n    return s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var s1 = s.slice(0, first);\n    var s2 = s.slice(first + 1, last);\n    var s3 = s.slice(last + 1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i == -1){\n        return s;\n    }\n    else if(i == j){\n        return s.slice(0, i) + s.slice(i+1);\n    }\n    else{\n        return s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var index = s.indexOf(ch);\n    var index1 = s.lastIndexOf(ch);\n    var s1 = s.substring(0, index);\n    var s2 = s.substring(index+1, index1);\n    var s3 = s.substring(index1+1, s.length);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var index = s.indexOf(ch);\n    var index1 = s.lastIndexOf(ch);\n    var s1 = s.substring(0, index) + s.substring(index + 1);\n    var s2 = s1.substring(0, index1) + s1.substring(index1 + 1);\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hel'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmpc2e_ihk7.js:14:10)\n    at Object.<anonymous> (/tmp/tmpc2e_ihk7.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hel',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.slice(0, first) + s.slice(first + 1, last) + s.slice(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.slice(0, first) + s.slice(first + 1, last) + s.slice(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i == -1){\n        return s;\n    }\n    else if(i == j){\n        return s.substring(0, i) + s.substring(i + 1, s.length);\n    }\n    else{\n        return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var result = s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first_pos = s.indexOf(ch);\n    var last_pos = s.lastIndexOf(ch);\n    var str1 = s.substring(0, first_pos);\n    var str2 = s.substring(first_pos + 1, last_pos);\n    var str3 = s.substring(last_pos + 1, s.length);\n    return str1 + str2 + str3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.slice(0, first) + s.slice(first + 1, last) + s.slice(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first_pos = s.indexOf(ch);\n    var last_pos = s.lastIndexOf(ch);\n    var str1 = s.substring(0, first_pos);\n    var str2 = s.substring(first_pos + 1, last_pos);\n    var str3 = s.substring(last_pos + 1, s.length);\n    return str1 + str2 + str3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0,i) + s.substring(i+1, j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.slice(0, first) + s.slice(first + 1, last) + s.slice(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i == j){\n        return s.replace(ch, '');\n    }\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var str = s.slice(0, first) + s.slice(first + 1, last) + s.slice(last + 1);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.slice(0, first) + s.slice(first + 1, last) + s.slice(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var a = s.indexOf(ch);\n    var b = s.lastIndexOf(ch);\n    var c = s.slice(0, a) + s.slice(a + 1, b) + s.slice(b + 1);\n    return c;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var s1 = s.substring(0, first);\n    var s2 = s.substring(first + 1, last);\n    var s3 = s.substring(last + 1, s.length);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var index = s.indexOf(ch);\n    var index1 = s.lastIndexOf(ch);\n    var str = s.slice(0, index) + s.slice(index + 1, index1) + s.slice(index1 + 1);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var str = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var index = s.indexOf(ch);\n    var index1 = s.lastIndexOf(ch);\n    var s1 = s.substring(0, index) + s.substring(index + 1);\n    var s2 = s1.substring(0, index1) + s1.substring(index1 + 1);\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hel'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmpc2e_ihk7.js:14:10)\n    at Object.<anonymous> (/tmp/tmpc2e_ihk7.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hel',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var new_s = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return new_s;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var result = s.slice(0, first) + s.slice(first + 1, last) + s.slice(last + 1);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var s1 = s.substring(0, first);\n    var s2 = s.substring(first+1, last);\n    var s3 = s.substring(last+1, s.length);\n    return s1+s2+s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.slice(0, first) + s.slice(first + 1, last) + s.slice(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var s1 = s.replace(ch, '');\n    var s2 = s1.replace(ch, '');\n    return s2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    return s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var newStr = s.slice(0, first) + s.slice(first + 1, last) + s.slice(last + 1);\n    return newStr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var s1 = s.substring(0, first);\n    var s2 = s.substring(first + 1, last);\n    var s3 = s.substring(last + 1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var s1 = s.substring(0, first);\n    var s2 = s.substring(first + 1, last);\n    var s3 = s.substring(last + 1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var s1 = s.substring(0, i);\n    var s2 = s.substring(i + 1, j);\n    var s3 = s.substring(j + 1, s.length);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var str = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return str;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i == -1){\n        return s;\n    }\n    if(i == j){\n        return s.slice(0, i) + s.slice(i+1);\n    }\n    return s.slice(0, i) + s.slice(i+1, j) + s.slice(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var s1 = s.substring(0, first);\n    var s2 = s.substring(first + 1, last);\n    var s3 = s.substring(last + 1, s.length);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.slice(0, first) + s.slice(first + 1, last) + s.slice(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.slice(0, i) + s.slice(i + 1, j) + s.slice(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i == -1){\n        return s;\n    }\n    else{\n        return s.substring(0,i) + s.substring(i+1,j) + s.substring(j+1);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    return s.replace(ch, '');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'helo'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmp5o9ivwlk.js:10:10)\n    at Object.<anonymous> (/tmp/tmp5o9ivwlk.js:15:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'helo',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    if(i == j){\n        return s.replace(ch, '');\n    }\n    return s.substring(0, i) + s.substring(i+1, j) + s.substring(j+1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var index = s.indexOf(ch);\n    var index2 = s.lastIndexOf(ch);\n    var s1 = s.substring(0, index);\n    var s2 = s.substring(index + 1, index2);\n    var s3 = s.substring(index2 + 1);\n    return s1 + s2 + s3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var r = s.replace(ch, '');\n    return r;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'helo'\n\nshould loosely deep-equal\n\n'heo'\n    at test (/tmp/tmpsv_tsl7j.js:11:10)\n    at Object.<anonymous> (/tmp/tmpsv_tsl7j.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'helo',\n  expected: 'heo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var first = s.indexOf(ch);\n    var last = s.lastIndexOf(ch);\n    var res = s.slice(0, first) + s.slice(first + 1, last) + s.slice(last + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1, s.length);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    return s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a jsthon function to remove first and last occurrence of a given character from the string.\nfunction remove_Occ(s, ch){\n    var i = s.indexOf(ch);\n    var j = s.lastIndexOf(ch);\n    var res = s.substring(0, i) + s.substring(i + 1, j) + s.substring(j + 1);\n    return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_Occ;\n  assert.deepEqual(candidate(\"hello\", \"l\"),\"heo\");\n  assert.deepEqual(candidate(\"abcda\", \"a\"),\"bcd\");\n  assert.deepEqual(candidate(\"PHP\", \"P\"),\"H\");\n}\n\ntest();",
      "timestamp": 1666123186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
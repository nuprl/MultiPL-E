{
  "name": "mbpp_413_extract_nth_element",
  "language": "js",
  "prompt": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_413_extract_nth_element.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i=0; i<list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n\tvar list2 = [];\n\tfor(var i=0; i<list1.length; i++){\n\t\tlist2.push(list1[i][n]);\n\t}\n\treturn list2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i=0; i<list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    console.log(result);\n}\nextract_nth_element([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "[ 3, 6, 9 ]\n[ 'Greyson Fulton', 'Brady Kent', 'Wyatt Knott', 'Beau Turnbull' ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n[\n  'Greyson Fulton',\n  'Brady Kent',\n  'Wyatt Knott',\n  'Beau Turnbull'\n]\n    at test (/tmp/tmp599396m1.js:16:10)\n    at Object.<anonymous> (/tmp/tmp599396m1.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: [ 'Greyson Fulton', 'Brady Kent', 'Wyatt Knott', 'Beau Turnbull' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nvar list1 = [[1,2,3],[4,5,6],[7,8,9]];\nvar n = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n  var list2 = [];\n  for(var i = 0; i < list1.length; i++){\n    list2.push(list1[i][n]);\n  }\n  return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i=0; i<list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i = 0; i < list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i=0; i<list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for (var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i=0; i<list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i=0; i<list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n  var result = [];\n  for(var i = 0; i < list1.length; i++){\n    result.push(list1[i][n]);\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i=0; i<list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n  var new_list = [];\n  for(var i = 0; i < list1.length; i++){\n    new_list.push(list1[i][n]);\n  }\n  return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n  var list2 = [];\n  for(var i = 0; i < list1.length; i++){\n    list2.push(list1[i][n]);\n  }\n  return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n  var result = [];\n  for(var i = 0; i < list1.length; i++){\n    result.push(list1[i][n]);\n  }\n  return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n  var result = [];\n  for(var i = 0; i < list1.length; i++){\n    result.push(list1[i][n]);\n  }\n  return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i = 0; i < list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n  var result = [];\n  for(var i = 0; i < list1.length; i++){\n    result.push(list1[i][n]);\n  }\n  return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n  var list2 = [];\n  for(var i = 0; i < list1.length; i++){\n    list2.push(list1[i][n]);\n  }\n  return list2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i=0; i<list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i=0; i<list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i = 0; i < list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i=0; i<list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i=0; i<list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nvar list1 = [[1,2,3],[4,5,6],[7,8,9]];\nvar n = 1;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i=0; i<list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i = 0; i < list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n\tvar list2 = [];\n\tfor(var i = 0; i < list1.length; i++){\n\t\tlist2.push(list1[i][n]);\n\t}\n\treturn list2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i = 0; i < list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i=0; i<list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nvar list1 = [[1,2,3],[4,5,6],[7,8,9]];\nvar n = 2;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n\tvar list2 = [];\n\tfor(var i = 0; i < list1.length; i++){\n\t\tlist2.push(list1[i][n]);\n\t}\n\treturn list2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i=0; i<list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i = 0; i < list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i = 0; i < list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nvar list1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for (var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var new_list = [];\n    for(var i=0; i<list1.length; i++){\n        new_list.push(list1[i][n]);\n    }\n    return new_list;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i=0; i<list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n\tvar list2 = [];\n\tfor(var i = 0; i < list1.length; i++){\n\t\tlist2.push(list1[i][n]);\n\t}\n\treturn list2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for (var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i=0; i<list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n  var result = [];\n  for(var i = 0; i < list1.length; i++){\n    result.push(list1[i][n]);\n  }\n  return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1666122766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var result = [];\n    for(var i = 0; i < list1.length; i++){\n        result.push(list1[i][n]);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to extract the nth element from a given array of arrays.\nfunction extract_nth_element(list1, n){\n    var list2 = [];\n    for(var i = 0; i < list1.length; i++){\n        list2.push(list1[i][n]);\n    }\n    return list2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = extract_nth_element;\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 0),[\"Greyson Fulton\", \"Brady Kent\", \"Wyatt Knott\", \"Beau Turnbull\"]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 2),[99, 96, 94, 98]);\n  assert.deepEqual(candidate([[\"Greyson Fulton\", 98, 99], [\"Brady Kent\", 97, 96], [\"Wyatt Knott\", 91, 94], [\"Beau Turnbull\", 94, 98]], 1),[98, 97, 91, 94]);\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
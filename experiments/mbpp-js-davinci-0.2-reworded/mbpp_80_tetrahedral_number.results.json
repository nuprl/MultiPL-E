{
  "name": "mbpp_80_tetrahedral_number",
  "language": "js",
  "prompt": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_80_tetrahedral_number.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  if(n === 1){\n    return 1;\n  }\n  return n + tetrahedral_number(n - 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmp80ys7zgv.js:14:10)\n    at Object.<anonymous> (/tmp/tmp80ys7zgv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for (var i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpsjldgp4y.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsjldgp4y.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n * (n + 1) * (n + 2)) / 6;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n\treturn (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpsu8ijrit.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsu8ijrit.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n * (n + 1) * (n + 2) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    let sum = 0;\n    for(let i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmp4ecnthg2.js:15:10)\n    at Object.<anonymous> (/tmp/tmp4ecnthg2.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmptqqv64ii.js:15:10)\n    at Object.<anonymous> (/tmp/tmptqqv64ii.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  if(n === 1){\n    return 1;\n  }\n  return n + tetrahedral_number(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpbxw_jaxl.js:14:10)\n    at Object.<anonymous> (/tmp/tmpbxw_jaxl.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmptqqv64ii.js:15:10)\n    at Object.<anonymous> (/tmp/tmptqqv64ii.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    var sum = 0;\n    for(var i = 0; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmp2jxl28ra.js:15:10)\n    at Object.<anonymous> (/tmp/tmp2jxl28ra.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  if(n === 1){\n    return 1;\n  }\n  return n + tetrahedral_number(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpbxw_jaxl.js:14:10)\n    at Object.<anonymous> (/tmp/tmpbxw_jaxl.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpced6gbyc.js:15:10)\n    at Object.<anonymous> (/tmp/tmpced6gbyc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmptqqv64ii.js:15:10)\n    at Object.<anonymous> (/tmp/tmptqqv64ii.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmptqqv64ii.js:15:10)\n    at Object.<anonymous> (/tmp/tmptqqv64ii.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmp658ora_f.js:14:10)\n    at Object.<anonymous> (/tmp/tmp658ora_f.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpsu8ijrit.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsu8ijrit.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return n * (n + 1) * (n + 2) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for (var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpg_e9as7g.js:15:10)\n    at Object.<anonymous> (/tmp/tmpg_e9as7g.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpced6gbyc.js:15:10)\n    at Object.<anonymous> (/tmp/tmpced6gbyc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmptqqv64ii.js:15:10)\n    at Object.<anonymous> (/tmp/tmptqqv64ii.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpced6gbyc.js:15:10)\n    at Object.<anonymous> (/tmp/tmpced6gbyc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n * (n + 1) * (n + 2) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    if(n<=0){\n        return 0;\n    }\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  let sum = 0;\n  for(let i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpwqrkdr0e.js:15:10)\n    at Object.<anonymous> (/tmp/tmpwqrkdr0e.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for (var i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpfl64pj6w.js:15:10)\n    at Object.<anonymous> (/tmp/tmpfl64pj6w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmptqqv64ii.js:15:10)\n    at Object.<anonymous> (/tmp/tmptqqv64ii.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpsu8ijrit.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsu8ijrit.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  if(n === 1){\n    return 1;\n  }\n  return n + tetrahedral_number(n - 1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmp80ys7zgv.js:14:10)\n    at Object.<anonymous> (/tmp/tmp80ys7zgv.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n\treturn (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for(var i = 0; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpfezqbnh3.js:15:10)\n    at Object.<anonymous> (/tmp/tmpfezqbnh3.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n\treturn n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpsu8ijrit.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsu8ijrit.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpotimb5on.js:15:10)\n    at Object.<anonymous> (/tmp/tmpotimb5on.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n\treturn n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n * (n + 1) * (n + 2) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n\tvar sum = 0;\n\tfor(var i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmppuda4hhu.js:15:10)\n    at Object.<anonymous> (/tmp/tmppuda4hhu.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n\treturn n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpsu8ijrit.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsu8ijrit.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n * (n + 1) * (n + 2) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmp658ora_f.js:14:10)\n    at Object.<anonymous> (/tmp/tmp658ora_f.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmptqqv64ii.js:15:10)\n    at Object.<anonymous> (/tmp/tmptqqv64ii.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum * (sum + 1) / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n120\n\nshould loosely deep-equal\n\n35\n    at test (/tmp/tmpsu8ijrit.js:15:10)\n    at Object.<anonymous> (/tmp/tmpsu8ijrit.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 120,\n  expected: 35,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n * (n + 1) * (n + 2) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1666122696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return n*(n+1)*(n+2)/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n    return (n * (n + 1) * (n + 2)) / 6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the nth tetrahedral number.\nfunction tetrahedral_number(n){\n  return (n*(n+1)*(n+2))/6;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = tetrahedral_number;\n  assert.deepEqual(candidate(5),35);\n  assert.deepEqual(candidate(6),56);\n  assert.deepEqual(candidate(7),84);\n}\n\ntest();",
      "timestamp": 1665517371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
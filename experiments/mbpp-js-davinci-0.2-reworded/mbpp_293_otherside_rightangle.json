{
  "name": "mbpp_293_otherside_rightangle",
  "language": "js",
  "prompt": "//Write a function to find the third side of a right angled triangle.\nfunction otherside_rightangle(w, h){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_293_otherside_rightangle.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = otherside_rightangle;\n  assert.deepEqual(candidate(7, 8),10.63014581273465);\n  assert.deepEqual(candidate(3, 4),5);\n  assert.deepEqual(candidate(7, 15),16.55294535724685);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    return Math.sqrt(w*w + h*h);\n}\n",
    "    return Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n}\n",
    "    var c = Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n    return c;\n}\n",
    "    var result = Math.sqrt(w*w + h*h);\n    return result;\n}\n",
    "    return Math.sqrt(w*w + h*h);\n}\n",
    "    var x = Math.sqrt(w*w + h*h);\n    return x;\n}",
    "\tvar c = Math.sqrt(w*w + h*h);\n\treturn c;\n}",
    "    return Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n}\n",
    "    return Math.sqrt(w*w + h*h);\n}",
    "    return Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n}\n",
    "    var x = Math.sqrt(Math.pow(w,2) + Math.pow(h,2));\n    return x;\n}",
    "    var thirdside = Math.sqrt(w*w + h*h);\n    return thirdside;\n}\nvar result = otherside_rightangle(2, 3);",
    "    var c = Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n    return c;\n}",
    "    var result = Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n    return result;\n}\n",
    "    var x = Math.pow(w, 2) + Math.pow(h, 2);\n    var y = Math.sqrt(x);\n    return y;\n}\n",
    "    return Math.sqrt(Math.pow(w,2) + Math.pow(h,2));\n}",
    "    return Math.sqrt(w*w + h*h);\n}\n",
    "\tvar c = Math.sqrt(Math.pow(w, 2) + Math.pow(h, 2));\n\treturn c;\n}\n",
    "    var otherside = Math.sqrt(Math.pow(w,2) + Math.pow(h,2));\n    return otherside;\n}",
    "    return Math.sqrt(w*w + h*h);\n}\n"
  ]
}
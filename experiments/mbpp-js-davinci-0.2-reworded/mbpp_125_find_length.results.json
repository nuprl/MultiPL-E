{
  "name": "mbpp_125_find_length",
  "language": "js",
  "prompt": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    var diff = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        diff = zeros - ones;\n        if(diff < 0){\n            diff = -diff;\n        }\n        if(diff > max_diff){\n            max_diff = diff;\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmplaqpagu_.js:29:10)\n    at Object.<anonymous> (/tmp/tmplaqpagu_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var arr = string.split(\"\");\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == 0){\n            count++;\n        }else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmxwzu6mh.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmxwzu6mh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero_count = 0;\n    var one_count = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_diff = Math.max(max_diff, zero_count);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp3jjvmxls.js:24:10)\n    at Object.<anonymous> (/tmp/tmp3jjvmxls.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpvrttu4ar.js:23:10)\n    at Object.<anonymous> (/tmp/tmpvrttu4ar.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero = 0;\n    var one = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, zero + one);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmptewphfi6.js:24:10)\n    at Object.<anonymous> (/tmp/tmptewphfi6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp18ph_5vn.js:37:10)\n    at Object.<anonymous> (/tmp/tmp18ph_5vn.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, count_0 - count_1);\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprtor1_mz.js:22:10)\n    at Object.<anonymous> (/tmp/tmprtor1_mz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    var n = string.length;\n    for(var i = 0; i < n; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = n - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpu1ldqi2g.js:38:10)\n    at Object.<anonymous> (/tmp/tmpu1ldqi2g.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let max_length = 0;\n    let count = 0;\n    let zero_count = 0;\n    let one_count = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_length = Math.max(max_length, i + 1);\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpevystht4.js:25:10)\n    at Object.<anonymous> (/tmp/tmpevystht4.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmps2pmfpk1.js:22:10)\n    at Object.<anonymous> (/tmp/tmps2pmfpk1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zeros - ones));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpqx_t0tyr.js:22:10)\n    at Object.<anonymous> (/tmp/tmpqx_t0tyr.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmps2pmfpk1.js:22:10)\n    at Object.<anonymous> (/tmp/tmps2pmfpk1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpiwy5ll3q.js:37:10)\n    at Object.<anonymous> (/tmp/tmpiwy5ll3q.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprqvygexx.js:24:10)\n    at Object.<anonymous> (/tmp/tmprqvygexx.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_zero += 1;\n        }\n        else{\n            count_one += 1;\n        }\n        if(count_zero == count_one){\n            count = count_zero + count_one;\n            if(count > max){\n                max = count;\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpdgj76e3a.js:28:10)\n    at Object.<anonymous> (/tmp/tmpdgj76e3a.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpxum44om_.js:35:10)\n    at Object.<anonymous> (/tmp/tmpxum44om_.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprqvygexx.js:24:10)\n    at Object.<anonymous> (/tmp/tmprqvygexx.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max_count = 0;\n    var zero_count = 0;\n    var one_count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        count = zero_count - one_count;\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max_count){\n            max_count = count;\n        }\n    }\n    return max_count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpsr3e80jo.js:29:10)\n    at Object.<anonymous> (/tmp/tmpsr3e80jo.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero_count = 0;\n    var one_count = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_diff = Math.max(max_diff, zero_count);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp7q_msn4u.js:24:10)\n    at Object.<anonymous> (/tmp/tmp7q_msn4u.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var n = string.length;\n    var zero_count = 0;\n    var one_count = 0;\n    for(var i=0; i<n; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpn1vg7zbw.js:23:10)\n    at Object.<anonymous> (/tmp/tmpn1vg7zbw.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros * 2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros * 2);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1d_fkgmc.js:37:10)\n    at Object.<anonymous> (/tmp/tmp1d_fkgmc.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var str = string.split(\"\");\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == 0){\n            count = count + 1;\n        }\n        else{\n            count = count - 1;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = \"0\".repeat(string.length);\n    var ones = \"1\".repeat(string.length);\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        for(var j = 1; j <= string.length - i; j++){\n            var str = string.substr(i, j);\n            var zero = str.split(\"1\").join(\"\");\n            var one = str.split(\"0\").join(\"\");\n            if(zero.length == 0 || one.length == 0){\n                continue;\n            }\n            if(max < Math.abs(zero.length - one.length)){\n                max = Math.abs(zero.length - one.length);\n            }\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp0mjkv_uo.js:28:10)\n    at Object.<anonymous> (/tmp/tmp0mjkv_uo.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    var zero = 0;\n    var one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, i+1);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpo3z6kp80.js:25:10)\n    at Object.<anonymous> (/tmp/tmpo3z6kp80.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var arr = string.split('');\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == 0){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpxum44om_.js:35:10)\n    at Object.<anonymous> (/tmp/tmpxum44om_.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max_count = 0;\n    var i = 0;\n    var j = 0;\n    var n = string.length;\n    while(i < n && j < n){\n        if(string[i] == string[j]){\n            if(string[i] == '0'){\n                count++;\n            }\n            else{\n                count--;\n            }\n            j++;\n        }\n        else{\n            max_count = Math.max(max_count, Math.abs(count));\n            count = 0;\n            i = j;\n        }\n    }\n    max_count = Math.max(max_count, Math.abs(count));\n    return max_count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpzr_zmmqb.js:32:10)\n    at Object.<anonymous> (/tmp/tmpzr_zmmqb.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero = 0;\n    var one = 0;\n    var max = 0;\n    for(var i=0;i<string.length;i++){\n        if(string[i] == 0){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max,zero+one);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpdiha6u4t.js:24:10)\n    at Object.<anonymous> (/tmp/tmpdiha6u4t.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpawg3he6t.js:21:10)\n    at Object.<anonymous> (/tmp/tmpawg3he6t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp2xsdfj9d.js:25:10)\n    at Object.<anonymous> (/tmp/tmp2xsdfj9d.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max = 0;\n    var count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros*2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i=string.length-1; i>=0; i--){\n        if(string[i] == '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros*2);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9nsdrzgu.js:37:10)\n    at Object.<anonymous> (/tmp/tmp9nsdrzgu.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_length = 0;\n    var count = 0;\n    var i;\n    var n = string.length;\n    for(i=0; i<n; i++){\n        if(string[i] == '0'){\n            count = count - 1;\n        }\n        else{\n            count = count + 1;\n        }\n        if(count == 0){\n            max_length = i+1;\n        }\n        else if(count < 0){\n            count = 0;\n        }\n    }\n    return max_length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp4ke_dsv2.js:29:10)\n    at Object.<anonymous> (/tmp/tmp4ke_dsv2.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == 0){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpf7m4k0i7.js:24:10)\n    at Object.<anonymous> (/tmp/tmpf7m4k0i7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero_count = 0;\n    var one_count = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp8ept52zo.js:22:10)\n    at Object.<anonymous> (/tmp/tmp8ept52zo.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros*2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros*2);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9m0sw94_.js:37:10)\n    at Object.<anonymous> (/tmp/tmp9m0sw94_.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpevx5g2wt.js:37:10)\n    at Object.<anonymous> (/tmp/tmpevx5g2wt.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero = 0;\n    var one = 0;\n    var max = 0;\n    for(var i=0;i<string.length;i++){\n        if(string[i] == '0'){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max,zero+one);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp0xqcdpr3.js:24:10)\n    at Object.<anonymous> (/tmp/tmp0xqcdpr3.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpe9dtzday.js:24:10)\n    at Object.<anonymous> (/tmp/tmpe9dtzday.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    var n = string.length;\n    for(var i = 0; i < n; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = n - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpu1ldqi2g.js:38:10)\n    at Object.<anonymous> (/tmp/tmpu1ldqi2g.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_length = 0;\n    var count = 0;\n    var zero_count = 0;\n    var one_count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_length = Math.max(max_length, i+1);\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp8m6wjv7q.js:25:10)\n    at Object.<anonymous> (/tmp/tmp8m6wjv7q.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpxum44om_.js:35:10)\n    at Object.<anonymous> (/tmp/tmpxum44om_.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros * 2);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpj6bcz7b_.js:24:10)\n    at Object.<anonymous> (/tmp/tmpj6bcz7b_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var arr = string.split(\"\");\n    var count = 0;\n    var max = 0;\n    for(var i=0; i<arr.length; i++){\n        if(arr[i] == 1){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp709x5jtf.js:27:10)\n    at Object.<anonymous> (/tmp/tmp709x5jtf.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmphyd8cshh.js:23:10)\n    at Object.<anonymous> (/tmp/tmphyd8cshh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var arr = string.split('');\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == 0){\n            count++;\n        }else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }else{\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmphnmyeqqr.js:21:10)\n    at Object.<anonymous> (/tmp/tmphnmyeqqr.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpevx5g2wt.js:37:10)\n    at Object.<anonymous> (/tmp/tmpevx5g2wt.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpv07npan3.js:38:10)\n    at Object.<anonymous> (/tmp/tmpv07npan3.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_1 + count_0);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_1 + count_0);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpq9vrmu28.js:37:10)\n    at Object.<anonymous> (/tmp/tmpq9vrmu28.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max = 0;\n    var count = 0;\n    var zero = 0;\n    var one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            count = zero + one;\n            if(count > max){\n                max = count;\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmplcljuh5q.js:28:10)\n    at Object.<anonymous> (/tmp/tmplcljuh5q.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zeros += 1;\n        }\n        else{\n            ones += 1;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zeros - ones));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpy_w7tmni.js:22:10)\n    at Object.<anonymous> (/tmp/tmpy_w7tmni.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length-1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp4c7gtm52.js:37:10)\n    at Object.<anonymous> (/tmp/tmp4c7gtm52.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_length = 0;\n    var count = 0;\n    var zero_count = 0;\n    var one_count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_length = Math.max(max_length, i + 1);\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpt2ktvb60.js:25:10)\n    at Object.<anonymous> (/tmp/tmpt2ktvb60.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max = 0;\n    var count = 0;\n    var i = 0;\n    var j = 0;\n    var n = string.length;\n    while(j < n){\n        if(string[j] == 0){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count > max){\n            max = count;\n        }\n        if(count < 0){\n            count = 0;\n            i = j + 1;\n        }\n        j++;\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(let i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9e1n4vj9.js:37:10)\n    at Object.<anonymous> (/tmp/tmp9e1n4vj9.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_length = 0;\n    var count = 0;\n    var zero_count = 0;\n    var one_count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_length = Math.max(max_length, i+1);\n        }\n    }\n    return max_length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpiwf_n63w.js:26:10)\n    at Object.<anonymous> (/tmp/tmpiwf_n63w.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, count_1 - count_0);\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpa9ukwmr6.js:22:10)\n    at Object.<anonymous> (/tmp/tmpa9ukwmr6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length-1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp4c7gtm52.js:37:10)\n    at Object.<anonymous> (/tmp/tmp4c7gtm52.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n  var max_diff = 0;\n  var count_0 = 0;\n  var count_1 = 0;\n  for(var i = 0; i < string.length; i++){\n    if(string[i] == '0'){\n      count_0 += 1;\n    }\n    else{\n      count_1 += 1;\n    }\n    max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n  }\n  return max_diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpktucupt1.js:23:10)\n    at Object.<anonymous> (/tmp/tmpktucupt1.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp33dzoemj.js:22:10)\n    at Object.<anonymous> (/tmp/tmp33dzoemj.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero = 0;\n    var one = 0;\n    var result = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            result = Math.max(result, zero + one);\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpfctd8rwj.js:24:10)\n    at Object.<anonymous> (/tmp/tmpfctd8rwj.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    var diff = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        diff = zeros - ones;\n        if(diff < 0){\n            diff = diff * -1;\n        }\n        if(diff > max_diff){\n            max_diff = diff;\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmuvzpfxm.js:29:10)\n    at Object.<anonymous> (/tmp/tmpmuvzpfxm.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp68a7jz65.js:24:10)\n    at Object.<anonymous> (/tmp/tmp68a7jz65.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max_count = 0;\n    var zero_count = 0;\n    var one_count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }else{\n            one_count++;\n        }\n        count = Math.abs(zero_count - one_count);\n        if(count > max_count){\n            max_count = count;\n        }\n    }\n    return max_count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp5mmep1_f.js:25:10)\n    at Object.<anonymous> (/tmp/tmp5mmep1_f.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero = 0;\n    var one = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, zero + one);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmptewphfi6.js:24:10)\n    at Object.<anonymous> (/tmp/tmptewphfi6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmphyd8cshh.js:23:10)\n    at Object.<anonymous> (/tmp/tmphyd8cshh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max = 0;\n    var count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(max < count){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpawg3he6t.js:21:10)\n    at Object.<anonymous> (/tmp/tmpawg3he6t.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    var zero = 0;\n    var one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            count = zero + one;\n            if(count > max){\n                max = count;\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpe7j8w6fi.js:28:10)\n    at Object.<anonymous> (/tmp/tmpe7j8w6fi.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpxkcg4cx2.js:35:10)\n    at Object.<anonymous> (/tmp/tmpxkcg4cx2.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    var arr = string.split(\"\");\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == 0){\n            count++;\n        }else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero = 0;\n    var one = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, zero + one);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmptewphfi6.js:24:10)\n    at Object.<anonymous> (/tmp/tmptewphfi6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpc3t03nqp.js:22:10)\n    at Object.<anonymous> (/tmp/tmpc3t03nqp.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let max = 0;\n    let count = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        if(string[i] == 1){\n            count_1++;\n        }\n        count = count_0 - count_1;\n        if(count < 0){\n            count = -count;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmplqpfkhsw.js:29:10)\n    at Object.<anonymous> (/tmp/tmplqpfkhsw.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count++;\n        }else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max = 0;\n    var count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero = 0, one = 0, max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, one + zero);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp7cb9wy48.js:22:10)\n    at Object.<anonymous> (/tmp/tmp7cb9wy48.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_length = 0;\n    var count = 0;\n    var zero_count = 0;\n    var one_count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            count = zero_count + one_count;\n            if(count > max_length){\n                max_length = count;\n            }\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpoko33oyh.js:28:10)\n    at Object.<anonymous> (/tmp/tmpoko33oyh.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    var diff = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }else{\n            ones++;\n        }\n        diff = zeros - ones;\n        if(diff < 0){\n            diff = -diff;\n        }\n        if(diff > max_diff){\n            max_diff = diff;\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpdaqmzjrp.js:28:10)\n    at Object.<anonymous> (/tmp/tmpdaqmzjrp.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max = 0;\n    var count = 0;\n    var count1 = 0;\n    var count2 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count1++;\n        }\n        if(string[i] == '1'){\n            count2++;\n        }\n        count = count1 - count2;\n        if(count < 0){\n            count = count * -1;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmptmrjo3o8.js:29:10)\n    at Object.<anonymous> (/tmp/tmptmrjo3o8.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count_0 = 0;\n    var count_1 = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp_1c_856z.js:24:10)\n    at Object.<anonymous> (/tmp/tmp_1c_856z.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmx9g3yva.js:37:10)\n    at Object.<anonymous> (/tmp/tmpmx9g3yva.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp18ph_5vn.js:37:10)\n    at Object.<anonymous> (/tmp/tmp18ph_5vn.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero = 0, one = 0, max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, zero + one);\n        }\n    }\n    zero = 0;\n    one = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zero++;\n        }else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, zero + one);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpvf9cj7iu.js:33:10)\n    at Object.<anonymous> (/tmp/tmpvf9cj7iu.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero_count = 0;\n    var one_count = 0;\n    var max_length = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_length = Math.max(max_length, zero_count + one_count);\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp_lqcjjue.js:24:10)\n    at Object.<anonymous> (/tmp/tmp_lqcjjue.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpevx5g2wt.js:37:10)\n    at Object.<anonymous> (/tmp/tmpevx5g2wt.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = string.split(\"1\").length - 1;\n    var ones = string.split(\"0\").length - 1;\n    return Math.abs(zeros - ones);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpplp0231o.js:12:10)\n    at Object.<anonymous> (/tmp/tmpplp0231o.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }else{\n            ones++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zeros - ones));\n    }\n    return max_diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpx13e6dqc.js:22:10)\n    at Object.<anonymous> (/tmp/tmpx13e6dqc.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max = 0;\n    var count = 0;\n    var arr = string.split(\"\");\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == 0){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmps2pmfpk1.js:22:10)\n    at Object.<anonymous> (/tmp/tmps2pmfpk1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    var zero = 0;\n    var one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            count = zero + one;\n            if(count > max){\n                max = count;\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpe7j8w6fi.js:28:10)\n    at Object.<anonymous> (/tmp/tmpe7j8w6fi.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp33dzoemj.js:22:10)\n    at Object.<anonymous> (/tmp/tmp33dzoemj.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == 0){\n            count--;\n        }\n        else{\n            count++;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpcugviy4_.js:26:10)\n    at Object.<anonymous> (/tmp/tmpcugviy4_.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    var arr = string.split('');\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == 0){\n            count--;\n        }else{\n            count++;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpc7yrvkps.js:26:10)\n    at Object.<anonymous> (/tmp/tmpc7yrvkps.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpuoizpne2.js:24:10)\n    at Object.<anonymous> (/tmp/tmpuoizpne2.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string[i] === '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 === count_1){\n            max_diff = Math.max(max_diff, count_1 + count_0);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(let i = string.length - 1; i >= 0; i--){\n        if(string[i] === '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 === count_1){\n            max_diff = Math.max(max_diff, count_1 + count_0);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1qbesa5_.js:37:10)\n    at Object.<anonymous> (/tmp/tmp1qbesa5_.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp2xsdfj9d.js:25:10)\n    at Object.<anonymous> (/tmp/tmp2xsdfj9d.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpd9phydv7.js:22:10)\n    at Object.<anonymous> (/tmp/tmpd9phydv7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    var n = string.length;\n    for(var i = 0; i < n; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = n - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpu1ldqi2g.js:38:10)\n    at Object.<anonymous> (/tmp/tmpu1ldqi2g.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] === '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros === ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length-1; i >= 0; i--){\n        if(string[i] === '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros === ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpen9xqmkm.js:37:10)\n    at Object.<anonymous> (/tmp/tmpen9xqmkm.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    var zeros = 0;\n    var ones = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, i+1);\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpuxzxxbv0.js:26:10)\n    at Object.<anonymous> (/tmp/tmpuxzxxbv0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let max_diff = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_zero++;\n        }else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for(let i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            count_zero++;\n        }else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpea0r6c7z.js:35:10)\n    at Object.<anonymous> (/tmp/tmpea0r6c7z.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let count = 0;\n    let max = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count += 1;\n        }\n        else{\n            count -= 1;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    return max_diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpxo6ajmsr.js:38:10)\n    at Object.<anonymous> (/tmp/tmpxo6ajmsr.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpevx5g2wt.js:37:10)\n    at Object.<anonymous> (/tmp/tmpevx5g2wt.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let zero = 0;\n    let one = 0;\n    let max = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, zero + one);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmyzh9jq6.js:24:10)\n    at Object.<anonymous> (/tmp/tmpmyzh9jq6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpc3t03nqp.js:22:10)\n    at Object.<anonymous> (/tmp/tmpc3t03nqp.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        if(string[i] == '1'){\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_diff = Math.max(max_diff, count_zero+count_one);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpuoyrbpon.js:24:10)\n    at Object.<anonymous> (/tmp/tmpuoyrbpon.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpxkcg4cx2.js:35:10)\n    at Object.<anonymous> (/tmp/tmpxkcg4cx2.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == 0){\n            zeros += 1;\n        }\n        else{\n            ones += 1;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zeros-ones));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpk2x0j9o5.js:22:10)\n    at Object.<anonymous> (/tmp/tmpk2x0j9o5.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    var i = 0;\n    var j = 0;\n    while(j < string.length){\n        if(string[j] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, j - i + 1);\n        }\n        j++;\n    }\n    return max_diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpk5rphccl.js:27:10)\n    at Object.<anonymous> (/tmp/tmpk5rphccl.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_length = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_length = Math.max(max_length, count_zero + count_one);\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpethinq51.js:24:10)\n    at Object.<anonymous> (/tmp/tmpethinq51.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    var i = 0;\n    var j = string.length - 1;\n    while(i < j){\n        if(string[i] == 0){\n            count++;\n        }\n        if(string[j] == 1){\n            count++;\n        }\n        if(count > max){\n            max = count;\n        }\n        i++;\n        j--;\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp5gfxkbsn.js:27:10)\n    at Object.<anonymous> (/tmp/tmp5gfxkbsn.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] === '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros === ones){\n            max = Math.max(max, zeros * 2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] === '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros === ones){\n            max = Math.max(max, zeros * 2);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpifwdf2bm.js:37:10)\n    at Object.<anonymous> (/tmp/tmpifwdf2bm.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero = 0;\n    var one = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, one*2);\n        }\n    }\n    zero = 0;\n    one = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zero++;\n        }else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, one*2);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpfb8ofth7.js:35:10)\n    at Object.<anonymous> (/tmp/tmpfb8ofth7.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_zero++;\n        }else{\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmppv6ck7iu.js:21:10)\n    at Object.<anonymous> (/tmp/tmppv6ck7iu.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n  var count = 0;\n  var max = 0;\n  for(var i = 0; i < string.length; i++){\n    if(string[i] == 0){\n      count--;\n    }\n    else{\n      count++;\n    }\n    if(count < 0){\n      count = 0;\n    }\n    if(count > max){\n      max = count;\n    }\n  }\n  return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpwpj_kldm.js:26:10)\n    at Object.<anonymous> (/tmp/tmpwpj_kldm.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros);\n        }\n    }\n    return max_diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp5jy4tj84.js:25:10)\n    at Object.<anonymous> (/tmp/tmp5jy4tj84.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_length = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_length = Math.max(max_length, count_zero + count_one);\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpm3y63z8o.js:24:10)\n    at Object.<anonymous> (/tmp/tmpm3y63z8o.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp68a7jz65.js:24:10)\n    at Object.<anonymous> (/tmp/tmp68a7jz65.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmx9g3yva.js:37:10)\n    at Object.<anonymous> (/tmp/tmpmx9g3yva.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpxdajv994.js:37:10)\n    at Object.<anonymous> (/tmp/tmpxdajv994.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n        if(count_zero < count_one){\n            count_zero = 0;\n            count_one = 0;\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == 0){\n            count_zero++;\n        }else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp_r7qd106.js:23:10)\n    at Object.<anonymous> (/tmp/tmp_r7qd106.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max_count = 0;\n    var i = 0;\n    var j = 0;\n    while(j < string.length){\n        if(string[j] == 0){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count > max_count){\n            max_count = count;\n        }\n        if(count < 0){\n            i = j + 1;\n            count = 0;\n        }\n        j++;\n    }\n    return max_count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp33dzoemj.js:22:10)\n    at Object.<anonymous> (/tmp/tmp33dzoemj.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_length = 0;\n    var count = 0;\n    var zero_count = 0;\n    var one_count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_length = Math.max(max_length, i+1);\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp8m6wjv7q.js:25:10)\n    at Object.<anonymous> (/tmp/tmp8m6wjv7q.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero_count = 0;\n    var one_count = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero_count++;\n        }else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_diff = Math.max(max_diff, zero_count * 2);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zero_count++;\n        }else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_diff = Math.max(max_diff, zero_count * 2);\n        }\n    }\n    return max_diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpikbnrgzf.js:36:10)\n    at Object.<anonymous> (/tmp/tmpikbnrgzf.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zeros++;\n        }else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpm6p0wq9u.js:23:10)\n    at Object.<anonymous> (/tmp/tmpm6p0wq9u.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max_count = 0;\n    var n = string.length;\n    for(var i = 0; i < n; i++){\n        if(string[i] == '0'){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max_count){\n            max_count = count;\n        }\n    }\n    return max_count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp68a7jz65.js:24:10)\n    at Object.<anonymous> (/tmp/tmp68a7jz65.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero_count = 0;\n    var one_count = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_diff = Math.max(max_diff, zero_count);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpp5yvxe_v.js:23:10)\n    at Object.<anonymous> (/tmp/tmpp5yvxe_v.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == '0'){\n            zeros++;\n        }else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros*2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i=string.length-1; i>=0; i--){\n        if(string[i] == '0'){\n            zeros++;\n        }else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros*2);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprqdacnhu.js:35:10)\n    at Object.<anonymous> (/tmp/tmprqdacnhu.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let max_length = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(let i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp0n0ibrhe.js:35:10)\n    at Object.<anonymous> (/tmp/tmp0n0ibrhe.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max_count = 0;\n    var n = string.length;\n    for(var i = 0; i < n; i++){\n        if(string[i] == 0){\n            count = count - 1;\n        }\n        else{\n            count = count + 1;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max_count){\n            max_count = count;\n        }\n    }\n    return max_count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpuk8g63mj.js:27:10)\n    at Object.<anonymous> (/tmp/tmpuk8g63mj.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpxkcg4cx2.js:35:10)\n    at Object.<anonymous> (/tmp/tmpxkcg4cx2.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max = 0;\n    var count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count++;\n        }else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max = 0;\n    var count = 0;\n    var zero = 0;\n    var one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero++;\n        }else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, i+1);\n        }\n    }\n    for(var i = 0; i < string.length - 1; i++){\n        if(string[i] == '0'){\n            zero--;\n        }else{\n            one--;\n        }\n        if(string[string.length - 1 - i] == '0'){\n            zero++;\n        }else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, string.length - i - 1);\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp_erfgw8k.js:40:10)\n    at Object.<anonymous> (/tmp/tmp_erfgw8k.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprqvygexx.js:24:10)\n    at Object.<anonymous> (/tmp/tmprqvygexx.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n  let zero = 0;\n  let one = 0;\n  let max = 0;\n  for(let i = 0; i < string.length; i++){\n    if(string[i] == 0){\n      zero++;\n    }\n    else{\n      one++;\n    }\n    if(zero == one){\n      max = Math.max(max, zero + one);\n    }\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp_kxa94s2.js:25:10)\n    at Object.<anonymous> (/tmp/tmp_kxa94s2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_diff = Math.max(max_diff, count_zero + count_one);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpx5631f5f.js:37:10)\n    at Object.<anonymous> (/tmp/tmpx5631f5f.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    var arr = string.split(\"\");\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == 0){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero_count = 0;\n    var one_count = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpze_g2xv1.js:25:10)\n    at Object.<anonymous> (/tmp/tmpze_g2xv1.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero = 0;\n    var one = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, zero*2);\n        }\n    }\n    zero = 0;\n    one = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zero++;\n        }\n        else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, zero*2);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmppjatb5pi.js:37:10)\n    at Object.<anonymous> (/tmp/tmppjatb5pi.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprf7kk4o6.js:23:10)\n    at Object.<anonymous> (/tmp/tmprf7kk4o6.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpwgyg8xxy.js:35:10)\n    at Object.<anonymous> (/tmp/tmpwgyg8xxy.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var arr = string.split('');\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == '0'){\n            count++;\n        }else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros * 2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros * 2);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1d_fkgmc.js:37:10)\n    at Object.<anonymous> (/tmp/tmp1d_fkgmc.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max_count = 0;\n    var zero_count = 0;\n    var one_count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        count = zero_count - one_count;\n        if(count < 0){\n            count = -count;\n        }\n        if(count > max_count){\n            max_count = count;\n        }\n    }\n    return max_count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmj5waeyg.js:29:10)\n    at Object.<anonymous> (/tmp/tmpmj5waeyg.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max_count = 0;\n    var zeros = 0;\n    var ones = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zeros++;\n        }else{\n            ones++;\n        }\n        count = zeros - ones;\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max_count){\n            max_count = count;\n        }\n    }\n    return max_count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpfzg8pkpt.js:28:10)\n    at Object.<anonymous> (/tmp/tmpfzg8pkpt.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, count_0 - count_1);\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmprtor1_mz.js:22:10)\n    at Object.<anonymous> (/tmp/tmprtor1_mz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var arr = string.split('');\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == 1){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp3ebd84pm.js:27:10)\n    at Object.<anonymous> (/tmp/tmp3ebd84pm.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero_count = 0;\n    var one_count = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_diff = Math.max(max_diff, zero_count * 2);\n        }\n    }\n    zero_count = 0;\n    one_count = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            zero_count++;\n        }else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_diff = Math.max(max_diff, zero_count * 2);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpjesixfsd.js:35:10)\n    at Object.<anonymous> (/tmp/tmpjesixfsd.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero_count = 0;\n    var one_count = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_diff = Math.max(max_diff, zero_count + one_count);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpbhjv9yc2.js:24:10)\n    at Object.<anonymous> (/tmp/tmpbhjv9yc2.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpnsmcuv11.js:35:10)\n    at Object.<anonymous> (/tmp/tmpnsmcuv11.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] === '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros === ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var j = string.length-1; j >= 0; j--){\n        if(string[j] === '0'){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros === ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpl_vwyoly.js:37:10)\n    at Object.<anonymous> (/tmp/tmpl_vwyoly.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var arr = string.split('');\n    var zero_count = 0;\n    var one_count = 0;\n    var max_diff = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == 0){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_diff = zero_count + one_count;\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp0__5uqi1.js:25:10)\n    at Object.<anonymous> (/tmp/tmp0__5uqi1.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var arr = string.split(\"\");\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == 1){\n            count++;\n        }else{\n            count--;\n        }\n        if(count == 0){\n            max = i + 1;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpslpb7mo9.js:23:10)\n    at Object.<anonymous> (/tmp/tmpslpb7mo9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max = 0;\n    var count = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            count = count_0 + count_1;\n            if(count > max){\n                max = count;\n            }\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp6w4qizjg.js:28:10)\n    at Object.<anonymous> (/tmp/tmp6w4qizjg.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp8zmxoc9m.js:24:10)\n    at Object.<anonymous> (/tmp/tmp8zmxoc9m.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max_count = 0;\n    var zero_count = 0;\n    var one_count = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_count = Math.max(max_count, count);\n            count = 0;\n            zero_count = 0;\n            one_count = 0;\n        }\n        else{\n            count++;\n        }\n    }\n    return max_count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpqiv1jx_w.js:31:10)\n    at Object.<anonymous> (/tmp/tmpqiv1jx_w.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max = 0;\n    var count = 0;\n    var count1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count++;\n        }else{\n            count1++;\n        }\n        if(count == count1){\n            max = Math.max(max, count + count1);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp6jqbaral.js:23:10)\n    at Object.<anonymous> (/tmp/tmp6jqbaral.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i=0;i<string.length;i++){\n        if(string[i]==0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros==ones){\n            max = Math.max(max,zeros*2);\n        }\n        else if(zeros>ones){\n            zeros = 0;\n            ones = 0;\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i=string.length-1;i>=0;i--){\n        if(string[i]==0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros==ones){\n            max = Math.max(max,zeros*2);\n        }\n        else if(zeros<ones){\n            zeros = 0;\n            ones = 0;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpe_4cvwne.js:45:10)\n    at Object.<anonymous> (/tmp/tmpe_4cvwne.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp33dzoemj.js:22:10)\n    at Object.<anonymous> (/tmp/tmp33dzoemj.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let zeros = 0;\n    let ones = 0;\n    let max = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(let i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpi84ta_s2.js:37:10)\n    at Object.<anonymous> (/tmp/tmpi84ta_s2.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros += 1;\n        }else{\n            ones += 1;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros += 1;\n        }else{\n            ones += 1;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpr629wrdg.js:35:10)\n    at Object.<anonymous> (/tmp/tmpr629wrdg.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == '0'){\n            count++;\n        }else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let max_length = 0;\n    let count = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_length = Math.max(max_length, count_0 + count_1);\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp1nmb04fz.js:25:10)\n    at Object.<anonymous> (/tmp/tmp1nmb04fz.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp2xsdfj9d.js:25:10)\n    at Object.<anonymous> (/tmp/tmp2xsdfj9d.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpodzdv23b.js:37:10)\n    at Object.<anonymous> (/tmp/tmpodzdv23b.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }else{\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_zero - count_one));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpoexbi9mq.js:21:10)\n    at Object.<anonymous> (/tmp/tmpoexbi9mq.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(count_0 - count_1));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpd9phydv7.js:22:10)\n    at Object.<anonymous> (/tmp/tmpd9phydv7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max_count = 0;\n    var n = string.length;\n    for(var i=0;i<n;i++){\n        if(string[i] == '0'){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max_count){\n            max_count = count;\n        }\n    }\n    return max_count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var arr = string.split('');\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == 0){\n            count++;\n        }else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_length = 0;\n    var count = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            count = count_0 + count_1;\n            if(max_length < count){\n                max_length = count;\n            }\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp9px7cqar.js:28:10)\n    at Object.<anonymous> (/tmp/tmp9px7cqar.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero_count = 0;\n    var one_count = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp7u3b_xju.js:22:10)\n    at Object.<anonymous> (/tmp/tmp7u3b_xju.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == '0'){\n            zeros += 1;\n        }\n        else{\n            ones += 1;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros*2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i=string.length-1; i>=0; i--){\n        if(string[i] == '0'){\n            zeros += 1;\n        }\n        else{\n            ones += 1;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros*2);\n        }\n    }\n    return max_diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp168ph1__.js:38:10)\n    at Object.<anonymous> (/tmp/tmp168ph1__.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero_count = 0;\n    var one_count = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }else{\n            one_count++;\n        }\n        if(zero_count == one_count){\n            max_diff = Math.max(max_diff, zero_count);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpp5yvxe_v.js:23:10)\n    at Object.<anonymous> (/tmp/tmpp5yvxe_v.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero_count = 0;\n    var one_count = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            zero_count++;\n        }\n        else{\n            one_count++;\n        }\n        max_diff = Math.max(max_diff, Math.abs(zero_count - one_count));\n    }\n    return max_diff;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmplwryk_64.js:23:10)\n    at Object.<anonymous> (/tmp/tmplwryk_64.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zero = 0;\n    var one = 0;\n    var max = 0;\n    for(var i=0; i<string.length; i++){\n        if(string[i] == 0){\n            zero++;\n        }else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, zero+one);\n        }\n    }\n    zero = 0;\n    one = 0;\n    for(var i=string.length-1; i>=0; i--){\n        if(string[i] == 0){\n            zero++;\n        }else{\n            one++;\n        }\n        if(zero == one){\n            max = Math.max(max, zero+one);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpuwwmxzd5.js:35:10)\n    at Object.<anonymous> (/tmp/tmpuwwmxzd5.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] === '0'){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count < 0){\n            count = 0;\n        }\n        if(max < count){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var str = string.split(\"\");\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < str.length; i++){\n        if(str[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = str.length - 1; i >= 0; i--){\n        if(str[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros*2);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmplufx0j3x.js:38:10)\n    at Object.<anonymous> (/tmp/tmplufx0j3x.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_zero = 0;\n    var count_one = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        max_diff = Math.max(max_diff, count_zero - count_one);\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpmxwzu6mh.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmxwzu6mh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let max_length = 0;\n    let count_zero = 0;\n    let count_one = 0;\n    for(let i=0; i<string.length; i++){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_length = Math.max(max_length, count_zero*2);\n        }\n    }\n    count_zero = 0;\n    count_one = 0;\n    for(let i=string.length-1; i>=0; i--){\n        if(string[i] == '0'){\n            count_zero++;\n        }\n        else{\n            count_one++;\n        }\n        if(count_zero == count_one){\n            max_length = Math.max(max_length, count_zero*2);\n        }\n    }\n    return max_length;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpr5dy6sjx.js:37:10)\n    at Object.<anonymous> (/tmp/tmpr5dy6sjx.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122961,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpevx5g2wt.js:37:10)\n    at Object.<anonymous> (/tmp/tmpevx5g2wt.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var count = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count > max){\n            max = count;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpq3ax6c55.js:23:10)\n    at Object.<anonymous> (/tmp/tmpq3ax6c55.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max_diff = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }else{\n            ones++;\n        }\n        if(zeros == ones){\n            max_diff = Math.max(max_diff, zeros + ones);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpwgyg8xxy.js:35:10)\n    at Object.<anonymous> (/tmp/tmpwgyg8xxy.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var zeros = 0;\n    var ones = 0;\n    var max = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    zeros = 0;\n    ones = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == 0){\n            zeros++;\n        }\n        else{\n            ones++;\n        }\n        if(zeros == ones){\n            max = Math.max(max, zeros + ones);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmp18ph_5vn.js:37:10)\n    at Object.<anonymous> (/tmp/tmp18ph_5vn.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let max_diff = 0;\n    let count_0 = 0;\n    let count_1 = 0;\n    for(let i=0; i<string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0*2);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(let i=string.length-1; i>=0; i--){\n        if(string[i] == '0'){\n            count_0++;\n        }\n        else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0*2);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpsian16cu.js:37:10)\n    at Object.<anonymous> (/tmp/tmpsian16cu.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    let max = 0;\n    let count = 0;\n    let count1 = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string[i] == 0){\n            count++;\n        }\n        if(string[i] == 1){\n            count1++;\n        }\n        if(count == count1){\n            max = Math.max(max, count + count1);\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmptvwa_ila.js:24:10)\n    at Object.<anonymous> (/tmp/tmptvwa_ila.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpxum44om_.js:35:10)\n    at Object.<anonymous> (/tmp/tmpxum44om_.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length(string){\n    var max_diff = 0;\n    var count_0 = 0;\n    var count_1 = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string[i] == '0'){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    count_0 = 0;\n    count_1 = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        if(string[i] == '0'){\n            count_0++;\n        }else{\n            count_1++;\n        }\n        if(count_0 == count_1){\n            max_diff = Math.max(max_diff, count_0 + count_1);\n        }\n    }\n    return max_diff;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_length;\n  assert.deepEqual(candidate(\"11000010001\"),6);\n  assert.deepEqual(candidate(\"10111\"),1);\n  assert.deepEqual(candidate(\"11011101100101\"),2);\n}\n\ntest();",
      "timestamp": 1665509956,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely deep-equal\n\n6\n    at test (/tmp/tmpxum44om_.js:35:10)\n    at Object.<anonymous> (/tmp/tmpxum44om_.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
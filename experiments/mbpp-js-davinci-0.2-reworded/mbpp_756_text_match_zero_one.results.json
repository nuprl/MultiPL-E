{
  "name": "mbpp_756_text_match_zero_one",
  "language": "js",
  "prompt": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_756_text_match_zero_one.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpeh22d9dw.js:11:10)\n    at Object.<anonymous> (/tmp/tmpeh22d9dw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/;\n    if(regex.test(text)){\n        console.log(\"Match\");\n    }else{\n        console.log(\"Not match\");\n    }\n}\ntext_match_zero_one(\"ab\");\ntext_match_zero_one(\"abb\");\ntext_match_zero_one(\"abbb\");\ntext_match_zero_one(\"abbbb\");\ntext_match_zero_one(\"abbbbb\");\ntext_match_zero_one(\"abbbbbb\");\ntext_match_zero_one(\"abbbbbbb\");\ntext_match_zero_one(\"abbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbbbbbbbbbbbbbb\");\ntext_match_zero_one(\"abbbbbbbbbbbbbbbbbb\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "/tmp/tmpnyehb791.js:36\ntext_match_zero_one(\"abbbbbbbbbbbbbbbbbb\n                    ^^^^^^^^^^^^^^^^^^^^\n\nSyntaxError: Invalid or unexpected token\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnd8odenz.js:12:10)\n    at Object.<anonymous> (/tmp/tmpnd8odenz.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/;\n    let result = regex.test(text);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    if(text.match(/ab{1,}/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    if(regex.test(text)){\n        console.log(\"Yes, there is at least one match!\");\n    }else{\n        console.log(\"No match!\");\n    }\n}\ntext_match_zero_one(\"ac\");\ntext_match_zero_one(\"abc\");\ntext_match_zero_one(\"abbc\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "Yes, there is at least one match!\nYes, there is at least one match!\nYes, there is at least one match!\nYes, there is at least one match!\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1l_pkjn6.js:19:10)\n    at Object.<anonymous> (/tmp/tmp1l_pkjn6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    return text.match(regex);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k9cqztk.js:12:10)\n    at Object.<anonymous> (/tmp/tmp1k9cqztk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    if (regex.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpc8nkcm13.js:14:10)\n    at Object.<anonymous> (/tmp/tmpc8nkcm13.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1mctly8k.js:15:10)\n    at Object.<anonymous> (/tmp/tmp1mctly8k.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    if(text.match(/ab{1,}/)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    if (regex.test(text)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmph9to4lwk.js:17:10)\n    at Object.<anonymous> (/tmp/tmph9to4lwk.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    return text.match(regex);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp60qy0im9.js:11:10)\n    at Object.<anonymous> (/tmp/tmp60qy0im9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    if (regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp11ep4lbm.js:15:10)\n    at Object.<anonymous> (/tmp/tmp11ep4lbm.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpeh22d9dw.js:11:10)\n    at Object.<anonymous> (/tmp/tmpeh22d9dw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    let result = regex.test(text);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp6gypvn0y.js:12:10)\n    at Object.<anonymous> (/tmp/tmp6gypvn0y.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    if(text.match(/ab{1,}/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8fekjn_y.js:15:10)\n    at Object.<anonymous> (/tmp/tmp8fekjn_y.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpeq4_oy_c.js:12:10)\n    at Object.<anonymous> (/tmp/tmpeq4_oy_c.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1mctly8k.js:15:10)\n    at Object.<anonymous> (/tmp/tmp1mctly8k.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab{1,}/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    return text.match(regex);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp60qy0im9.js:11:10)\n    at Object.<anonymous> (/tmp/tmp60qy0im9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    console.log(regex.test(text));\n}\ntext_match_zero_one(\"ab\");\ntext_match_zero_one(\"abc\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "true\ntrue\ntrue\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1ppc1ion.js:14:10)\n    at Object.<anonymous> (/tmp/tmp1ppc1ion.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var pattern = /ab?/;\n    if(pattern.test(text)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpe_3tzdcm.js:16:10)\n    at Object.<anonymous> (/tmp/tmpe_3tzdcm.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    return text.match(regex);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp60qy0im9.js:11:10)\n    at Object.<anonymous> (/tmp/tmp60qy0im9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/g;\n    return text.match(regex);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvr0g7c7y.js:11:10)\n    at Object.<anonymous> (/tmp/tmpvr0g7c7y.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    if(text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    let result = text.match(regex);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpjh9f8ytx.js:12:10)\n    at Object.<anonymous> (/tmp/tmpjh9f8ytx.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/g;\n    var result = text.match(regex);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpqw5ogufd.js:12:10)\n    at Object.<anonymous> (/tmp/tmpqw5ogufd.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpeh22d9dw.js:11:10)\n    at Object.<anonymous> (/tmp/tmpeh22d9dw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8fekjn_y.js:15:10)\n    at Object.<anonymous> (/tmp/tmp8fekjn_y.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return text.match(regex);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  groups: undefined,\n  index: 0,\n  input: 'ac'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuv4ovyjm.js:12:10)\n    at Object.<anonymous> (/tmp/tmpuv4ovyjm.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', index: 0, input: 'ac', groups: undefined ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/g;\n    return text.match(regex);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvr0g7c7y.js:11:10)\n    at Object.<anonymous> (/tmp/tmpvr0g7c7y.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    return text.match(regex);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k9cqztk.js:12:10)\n    at Object.<anonymous> (/tmp/tmp1k9cqztk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8fekjn_y.js:15:10)\n    at Object.<anonymous> (/tmp/tmp8fekjn_y.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    if(regex.test(text)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmptnb3xqf7.js:16:10)\n    at Object.<anonymous> (/tmp/tmptnb3xqf7.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    if(text.match(/ab+/)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/;\n    let result = regex.test(text);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/g;\n    let result = text.match(regex);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdf226coe.js:13:10)\n    at Object.<anonymous> (/tmp/tmpdf226coe.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    if(regex.test(text)){\n        console.log(\"Yes, there is at least one match!\");\n    } else {\n        console.log(\"No match!\");\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "Yes, there is at least one match!\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpj6aa_5rz.js:16:10)\n    at Object.<anonymous> (/tmp/tmpj6aa_5rz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    let match = text.match(regex);\n    return match;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmperkwt6b7.js:13:10)\n    at Object.<anonymous> (/tmp/tmperkwt6b7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/g;\n    return text.match(regex);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8s1d3elg.js:12:10)\n    at Object.<anonymous> (/tmp/tmp8s1d3elg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    if(regex.test(text)){\n        console.log(\"Yes, there is at least one match!\");\n    }else{\n        console.log(\"No match found.\");\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "Yes, there is at least one match!\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpp14avatg.js:16:10)\n    at Object.<anonymous> (/tmp/tmpp14avatg.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    if(regex.test(text)){\n        console.log(\"Yes\");\n    }else{\n        console.log(\"No\");\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "Yes\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpovsfk6zc.js:16:10)\n    at Object.<anonymous> (/tmp/tmpovsfk6zc.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n\tvar regex = /ab?/;\n\treturn regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp3afsu3qc.js:12:10)\n    at Object.<anonymous> (/tmp/tmp3afsu3qc.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    if (regex.test(text)){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuv0v6nd1.js:16:10)\n    at Object.<anonymous> (/tmp/tmpuv0v6nd1.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    let result = regex.test(text);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpx7m9sll7.js:13:10)\n    at Object.<anonymous> (/tmp/tmpx7m9sll7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    let found = text.match(regex);\n    console.log(found);\n}\ntext_match_zero_one(\"abbc\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "[ 'ab' ]\n[ 'a' ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwq_bvt27.js:14:10)\n    at Object.<anonymous> (/tmp/tmpwq_bvt27.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    if(/ab?/.test(text)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpbwg9ucfk.js:13:10)\n    at Object.<anonymous> (/tmp/tmpbwg9ucfk.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    return text.match(regex);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k9cqztk.js:12:10)\n    at Object.<anonymous> (/tmp/tmp1k9cqztk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    console.log(text.match(regex));\n}\ntext_match_zero_one(\"ac\");\ntext_match_zero_one(\"abc\");\ntext_match_zero_one(\"abbc\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "[ 'a' ]\n[ 'ab' ]\n[ 'ab' ]\n[ 'a' ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpfow2larh.js:15:10)\n    at Object.<anonymous> (/tmp/tmpfow2larh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    let found = text.match(regex);\n    return found;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpw_negu30.js:12:10)\n    at Object.<anonymous> (/tmp/tmpw_negu30.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/g;\n    return text.match(regex);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8s1d3elg.js:12:10)\n    at Object.<anonymous> (/tmp/tmp8s1d3elg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab+/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    if (regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8_pz94vv.js:15:10)\n    at Object.<anonymous> (/tmp/tmp8_pz94vv.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1mctly8k.js:15:10)\n    at Object.<anonymous> (/tmp/tmp1mctly8k.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/g;\n    return text.match(regex);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8s1d3elg.js:12:10)\n    at Object.<anonymous> (/tmp/tmp8s1d3elg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpeq4_oy_c.js:12:10)\n    at Object.<anonymous> (/tmp/tmpeq4_oy_c.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    let found = text.match(regex);\n    console.log(found);\n}\ntext_match_zero_one(\"abb\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "[ 'ab' ]\n[ 'a' ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpokou0l76.js:14:10)\n    at Object.<anonymous> (/tmp/tmpokou0l76.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    let result = text.match(regex);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1oui8pwv.js:13:10)\n    at Object.<anonymous> (/tmp/tmp1oui8pwv.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    if(text.match(/ab?/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmporn_ilmf.js:13:10)\n    at Object.<anonymous> (/tmp/tmporn_ilmf.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    if(text.match(/ab{1,}/)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    let found = text.match(regex);\n    return found;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpw_negu30.js:12:10)\n    at Object.<anonymous> (/tmp/tmpw_negu30.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/g;\n    return text.match(regex);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpa6p03prz.js:11:10)\n    at Object.<anonymous> (/tmp/tmpa6p03prz.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab{1,}/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    if(text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    if(regex.test(text)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1mctly8k.js:15:10)\n    at Object.<anonymous> (/tmp/tmp1mctly8k.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab{1,}/;\n    var result = regex.test(text);\n    return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/g;\n    return text.match(regex);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8s1d3elg.js:12:10)\n    at Object.<anonymous> (/tmp/tmp8s1d3elg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    return text.match(regex);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k9cqztk.js:12:10)\n    at Object.<anonymous> (/tmp/tmp1k9cqztk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    return text.match(regex);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp60qy0im9.js:11:10)\n    at Object.<anonymous> (/tmp/tmp60qy0im9.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/g;\n    console.log(text.match(regex));\n}\ntext_match_zero_one(\"ab\");\ntext_match_zero_one(\"abb\");\ntext_match_zero_one(\"abbb\");\ntext_match_zero_one(\"abbbb\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "[ 'ab' ]\n[ 'abb' ]\n[ 'abbb' ]\n[ 'abbbb' ]\nnull\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpe19xkq2_.js:16:10)\n    at Object.<anonymous> (/tmp/tmpe19xkq2_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpeq4_oy_c.js:12:10)\n    at Object.<anonymous> (/tmp/tmpeq4_oy_c.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    if(regex.test(text)){\n        console.log(\"The text matches the pattern\");\n    }else{\n        console.log(\"The text does not match the pattern\");\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "The text matches the pattern\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmps_3qc45r.js:16:10)\n    at Object.<anonymous> (/tmp/tmps_3qc45r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/g;\n    let found = text.match(regex);\n    return found;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpotm4vl2w.js:12:10)\n    at Object.<anonymous> (/tmp/tmpotm4vl2w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpeq4_oy_c.js:12:10)\n    at Object.<anonymous> (/tmp/tmpeq4_oy_c.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    let result = text.match(regex);\n    console.log(result);\n}\ntext_match_zero_one(\"ab\");\ntext_match_zero_one(\"abc\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "[ 'ab' ]\n[ 'ab' ]\n[ 'a' ]\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmprx8kz0m2.js:15:10)\n    at Object.<anonymous> (/tmp/tmprx8kz0m2.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuevdph0a.js:11:10)\n    at Object.<anonymous> (/tmp/tmpuevdph0a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    if (text.match(/ab{1,}/)){\n        return true;\n    }\n    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    return text.match(regex);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k9cqztk.js:12:10)\n    at Object.<anonymous> (/tmp/tmp1k9cqztk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    let found = text.match(regex);\n    return found;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpw_negu30.js:12:10)\n    at Object.<anonymous> (/tmp/tmpw_negu30.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/g;\n    return text.match(regex);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp8s1d3elg.js:12:10)\n    at Object.<anonymous> (/tmp/tmp8s1d3elg.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    var regex = /ab?/;\n    return regex.test(text);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpeh22d9dw.js:11:10)\n    at Object.<anonymous> (/tmp/tmpeh22d9dw.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    console.log(regex.test(text));\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "true\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpunv7uvct.js:11:10)\n    at Object.<anonymous> (/tmp/tmpunv7uvct.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/g;\n    return text.match(regex);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1k9cqztk.js:12:10)\n    at Object.<anonymous> (/tmp/tmp1k9cqztk.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    if(text.match(/ab+/)){\n        return true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab{1,}/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    let result = regex.test(text);\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmpx7m9sll7.js:13:10)\n    at Object.<anonymous> (/tmp/tmpx7m9sll7.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/jsthon-exercises/re/jsthon-re-exercise-3.php\nfunction text_match_zero_one(text){\n    let regex = /ab?/;\n    return regex.test(text);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = text_match_zero_one;\n  assert.deepEqual(candidate(\"ac\"),false);\n  assert.deepEqual(candidate(\"dc\"),false);\n  assert.deepEqual(candidate(\"abbbba\"),true);\n  assert.deepEqual(candidate(\"dsabbbba\"),true);\n  assert.deepEqual(candidate(\"asbbbba\"),false);\n  assert.deepEqual(candidate(\"abaaa\"),true);\n}\n\ntest();",
      "timestamp": 1665510608,
      "stdout": "",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould loosely deep-equal\n\nfalse\n    at test (/tmp/tmphxmjjk7w.js:12:10)\n    at Object.<anonymous> (/tmp/tmphxmjjk7w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    }
  ]
}
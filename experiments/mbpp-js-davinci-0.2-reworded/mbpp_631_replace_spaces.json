{
  "name": "mbpp_631_replace_spaces",
  "language": "js",
  "prompt": "//Write a function to replace whitespaces with an underscore and vice versa in a given string.\nfunction replace_spaces(text){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_631_replace_spaces.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = replace_spaces;\n  assert.deepEqual(candidate(\"Jumanji The Jungle\"),\"Jumanji_The_Jungle\");\n  assert.deepEqual(candidate(\"The_Avengers\"),\"The Avengers\");\n  assert.deepEqual(candidate(\"Fast and Furious\"),\"Fast_and_Furious\");\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "completions": [
    "    var new_text = text.replace(/\\s/g, '_');\n    return new_text;\n}\n",
    "    var new_text = text.replace(/ /g, \"_\");\n    return new_text;\n}",
    "    var new_text = text.replace(/\\s/g, '_');\n    return new_text;\n}\n",
    "    var result = text.replace(/\\s/g, '_');\n    return result;\n}",
    "    var new_text = text.replace(/\\s/g, '_');\n    return new_text;\n}\n",
    "    var newText = text.replace(/\\s/g, \"_\");\n    return newText;\n}",
    "    var new_text = \"\";\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == \" \"){\n            new_text += \"_\";\n        }\n        else if(text[i] == \"_\"){\n            new_text += \" \";\n        }\n        else{\n            new_text += text[i];\n        }\n    }\n    return new_text;\n}",
    "    var new_text = text.replace(/\\s/g, '_');\n    return new_text;\n}",
    "    return text.replace(/\\s/g, '_');\n}\n",
    "    var new_text = text.replace(/\\s/g, '_');\n    return new_text;\n}\n",
    "    return text.replace(/\\s/g, '_');\n}\n",
    "    var new_text = text.replace(/\\s/g, \"_\");\n    return new_text;\n}\n",
    "    var new_text = text.replace(/\\s/g, \"_\");\n    return new_text;\n}\n",
    "    var new_text = text.replace(/\\s/g, '_');\n    return new_text;\n}\n",
    "    var new_text = text.replace(/\\s/g, '_');\n    return new_text;\n}",
    "    var new_text = \"\";\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == \" \"){\n            new_text += \"_\";\n        }\n        else if(text[i] == \"_\"){\n            new_text += \" \";\n        }\n        else{\n            new_text += text[i];\n        }\n    }\n    return new_text;\n}\n",
    "    var new_text = text.replace(/\\s/g, \"_\");\n    return new_text;\n}\n",
    "    var result = \"\";\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == \" \"){\n            result += \"_\";\n        }\n        else if(text[i] == \"_\"){\n            result += \" \";\n        }\n        else{\n            result += text[i];\n        }\n    }\n    return result;\n}",
    "    var new_text = text.replace(/\\s/g, '_');\n    return new_text;\n}",
    "    var new_text = text.replace(/\\s/g, \"_\");\n    return new_text;\n}\n"
  ]
}
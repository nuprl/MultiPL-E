{
  "name": "mbpp_397_median_numbers",
  "language": "js",
  "prompt": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_397_median_numbers.py",
  "prompt_terminology": "reworded",
  "tests": "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nconsole.log"
  ],
  "results": [
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b && a<c || a<b && a>c){\n        return a;\n    }\n    else if(b>a && b<c || b<a && b>c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }else if(a > c){\n            return c;\n        }else{\n            return a;\n        }\n    }else{\n        if(a > c){\n            return a;\n        }else if(b > c){\n            return c;\n        }else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }else if(a > c){\n            return c;\n        }else{\n            return a;\n        }\n    }else{\n        if(a > c){\n            return a;\n        }else if(b > c){\n            return c;\n        }else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median;\n    if(a > b){\n        if(b > c){\n            median = b;\n        }else if(a > c){\n            median = c;\n        }else{\n            median = a;\n        }\n    }else{\n        if(a > c){\n            median = a;\n        }else if(b > c){\n            median = c;\n        }else{\n            median = b;\n        }\n    }\n    return median;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a > c && a < b){\n        return a;\n    }else if(b > a && b < c || b > c && b < a){\n        return b;\n    }else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else if(b > c){\n        if(a > c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n    else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b && a<c || a<b && a>c){\n        return a;\n    }\n    else if(b>a && b<c || b<a && b>c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a > c && a < b){\n        return a;\n    }\n    else if(b > a && b < c || b > c && b < a){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    } else if(b > a && b < c || b < a && b > c){\n        return b;\n    } else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a > b && a < c || a < b && a > c) {\n        return a;\n    }\n    else if (b > a && b < c || b < a && b > c) {\n        return b;\n    }\n    else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(a < c){\n            return a;\n        }\n        else if(b > c){\n            return b;\n        }\n        else{\n            return c;\n        }\n    }\n    else if(a < b){\n        if(b < c){\n            return b;\n        }\n        else if(a > c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median = 0;\n    if(a > b && a < c || a < b && a > c){\n        median = a;\n    }else if(b > a && b < c || b < a && b > c){\n        median = b;\n    }else{\n        median = c;\n    }\n    return median;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else if(a > c){\n        return a;\n    }\n    else if(b > c){\n        return c;\n    }\n    else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a > c){\n        if(b > c){\n            return b;\n        }else{\n            return c;\n        }\n    }else if(b > a && b > c){\n        if(a > c){\n            return a;\n        }else{\n            return c;\n        }\n    }else if(c > a && c > b){\n        if(a > b){\n            return a;\n        }else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(a < c){\n            return a;\n        }\n        else if(b > c){\n            return b;\n        }\n        else{\n            return c;\n        }\n    }\n    else if(a < b){\n        if(b < c){\n            return b;\n        }\n        else if(a > c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median = 0;\n    if(a > b){\n        if(b > c){\n            median = b;\n        }else if(a > c){\n            median = c;\n        }else{\n            median = a;\n        }\n    }else{\n        if(a > c){\n            median = a;\n        }else if(b > c){\n            median = c;\n        }else{\n            median = b;\n        }\n    }\n    return median;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }else if(a > c){\n            return c;\n        }else{\n            return a;\n        }\n    }else{\n        if(a > c){\n            return a;\n        }else if(b > c){\n            return c;\n        }else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b){\n        if(b>c){\n            return b;\n        }else if(a>c){\n            return c;\n        }else{\n            return a;\n        }\n    }else{\n        if(a>c){\n            return a;\n        }else if(b>c){\n            return c;\n        }else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else if(a > c){\n        return a;\n    }\n    else if(b > c){\n        return c;\n    }\n    else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a > c && a < b){\n        return a;\n    }\n    else if(b > a && b < c || b > c && b < a){\n        return b;\n    }\n    else if(c > a && c < b || c > b && c < a){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else if(b > c){\n        if(a > c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n    else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }else if(b > a && b < c || b < a && b > c){\n        return b;\n    }else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a > c){\n        if(b > c){\n            return b;\n        }\n        else{\n            return c;\n        }\n    }\n    else if(b > a && b > c){\n        if(a > c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n    else if(c > a && c > b){\n        if(a > b){\n            return a;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if (b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else if (c < a && c > b || c > a && c < b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b && a<c || a<b && a>c){\n        return a;\n    }\n    else if(b>a && b<c || b<a && b>c){\n        return b;\n    }\n    else if(c>a && c<b || c<a && c>b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b && a<c || a>c && a<b){\n        return a;\n    }\n    if(b>a && b<c || b>c && b<a){\n        return b;\n    }\n    if(c>a && c<b || c>b && c<a){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median = 0;\n    if(a > b && a < c || a < b && a > c){\n        median = a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        median = b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        median = c;\n    }\n    else{\n        median = \"The numbers are equal\";\n    }\n    return median;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c)\n        return a;\n    else if(b > a && b < c || b < a && b > c)\n        return b;\n    else\n        return c;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b){\n        if(a>c){\n            if(b>c){\n                return b;\n            }\n            else{\n                return c;\n            }\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a>c){\n            return a;\n        }\n        else{\n            if(b>c){\n                return c;\n            }\n            else{\n                return b;\n            }\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b && a<c || a<b && a>c){\n        return a;\n    }\n    else if(b>a && b<c || b<a && b>c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a > c){\n            return a;\n        }\n        else if(b > c){\n            return c;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a>b && a<c || a<b && a>c){\n        return a;\n    }\n    else if (b>a && b<c || b<a && b>c){\n        return b;\n    }\n    else if (c>a && c<b || c<a && c>b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if((a > b && a < c) || (a < b && a > c)){\n        return a;\n    }\n    else if((b > a && b < c) || (b < a && b > c)){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a > c && a < b){\n        return a;\n    }\n    else if(b > a && b < c || b > c && b < a){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a > c){\n        if(b > c){\n            return b;\n        }\n        else{\n            return c;\n        }\n    }\n    else if(b > a && b > c){\n        if(a > c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n    else if(c > a && c > b){\n        if(a > b){\n            return a;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a > c && a < b){\n        return a;\n    }\n    else if(b > a && b < c || b > c && b < a){\n        return b;\n    }\n    else if(c > a && c < b || c > b && c < a){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b){\n        if(a>c){\n            if(b>c){\n                return b;\n            }\n            else{\n                return c;\n            }\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(b>c){\n            if(a>c){\n                return a;\n            }\n            else{\n                return c;\n            }\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var med = 0;\n    if(a > b){\n        if(b > c){\n            med = b;\n        }else if(a > c){\n            med = c;\n        }else{\n            med = a;\n        }\n    }else{\n        if(a > c){\n            med = a;\n        }else if(b > c){\n            med = c;\n        }else{\n            med = b;\n        }\n    }\n    return med;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(a < c){\n            return a;\n        }\n        else if(b > c){\n            return b;\n        }\n        else{\n            return c;\n        }\n    }\n    else if(a < b){\n        if(b < c){\n            return b;\n        }\n        else if(a > c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n    else{\n        return a;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median = 0;\n    if(a > b && a < c || a < b && a > c){\n        median = a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        median = b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        median = c;\n    }\n    return median;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b){\n        if(b>c){\n            return b;\n        }\n        else if(a>c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a>c){\n            return a;\n        }\n        else if(b>c){\n            return c;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a<b && a<c){\n        if(b<c){\n            return b;\n        }\n        else{\n            return c;\n        }\n    }\n    else if(b<a && b<c){\n        if(a<c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n    else if(c<a && c<b){\n        if(a<b){\n            return a;\n        }\n        else{\n            return b;\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }else if(a > c){\n            return c;\n        }else{\n            return a;\n        }\n    }else{\n        if(a > c){\n            return a;\n        }else if(b > c){\n            return c;\n        }else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a > c && a < b){\n        return a;\n    }else if(b > a && b < c || b > c && b < a){\n        return b;\n    }else if(c > a && c < b || c > b && c < a){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if((a > b && a < c) || (a < b && a > c)){\n        return a;\n    }\n    else if((b > a && b < c) || (b < a && b > c)){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(a < c){\n            return a;\n        }\n        else if(b > c){\n            return b;\n        }\n        else{\n            return c;\n        }\n    }\n    else if(a < b){\n        if(b < c){\n            return b;\n        }\n        else if(a > c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else if(a > c){\n        return a;\n    }\n    else if(b > c){\n        return c;\n    }\n    else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }else if(b > a && b < c || b < a && b > c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(a < c){\n            return a;\n        }\n        else if(b > c){\n            return b;\n        }\n        else{\n            return c;\n        }\n    }\n    else if(a < b){\n        if(b < c){\n            return b;\n        }\n        else if(a > c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n\tif(a > b && a < c || a < b && a > c){\n\t\treturn a;\n\t}else if(b > a && b < c || b < a && b > c){\n\t\treturn b;\n\t}else{\n\t\treturn c;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a > b && a < c || a < b && a > c) {\n        return a;\n    } else if (b > a && b < c || b < a && b > c) {\n        return b;\n    } else {\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if((a > b && a < c) || (a < b && a > c)){\n        return a;\n    }\n    else if((b > a && b < c) || (b < a && b > c)){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median;\n    if (a > b){\n        if (b > c){\n            median = b;\n        }\n        else if (a > c){\n            median = c;\n        }\n        else {\n            median = a;\n        }\n    }\n    else {\n        if (a > c){\n            median = a;\n        }\n        else if (b > c){\n            median = c;\n        }\n        else {\n            median = b;\n        }\n    }\n    return median;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if((a > b && a < c) || (a < b && a > c)){\n        return a;\n    }\n    else if((b > a && b < c) || (b < a && b > c)){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a > c && a < b){\n        return a;\n    }\n    else if(b > a && b < c || b > c && b < a){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median = 0;\n    if(a > b){\n        if(b > c){\n            median = b;\n        }else if(a > c){\n            median = c;\n        }else{\n            median = a;\n        }\n    }else{\n        if(a > c){\n            median = a;\n        }else if(b > c){\n            median = c;\n        }else{\n            median = b;\n        }\n    }\n    return median;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n  if(a > b && a < c || a < b && a > c){\n    return a;\n  }\n  else if(b > a && b < c || b < a && b > c){\n    return b;\n  }\n  else{\n    return c;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median;\n    if(a > b){\n        if(b > c){\n            median = b;\n        }\n        else if(a > c){\n            median = c;\n        }\n        else{\n            median = a;\n        }\n    }\n    else{\n        if(a > c){\n            median = a;\n        }\n        else if(b > c){\n            median = c;\n        }\n        else{\n            median = b;\n        }\n    }\n    return median;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(a < c){\n            return a;\n        }else if(b > c){\n            return b;\n        }else{\n            return c;\n        }\n    }else if(a < b){\n        if(b < c){\n            return b;\n        }else if(a > c){\n            return a;\n        }else{\n            return c;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }else if(a > c){\n            return c;\n        }else{\n            return a;\n        }\n    }else{\n        if(a > c){\n            return a;\n        }else if(b > c){\n            return c;\n        }else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a > c){\n            return a;\n        }\n        else if(b > c){\n            return c;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else if(a > c){\n        return a;\n    }\n    else if(b > c){\n        return c;\n    }\n    else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }else if(b < a && b > c || b > a && b < c){\n        return b;\n    }else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if (b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else if(a > c){\n        return a;\n    }\n    else if(b > c){\n        return c;\n    }\n    else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if((a>b && a<c) || (a<b && a>c)){\n        return a;\n    }\n    else if((b>a && b<c) || (b<a && b>c)){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a > c){\n            return a;\n        }\n        else if(b > c){\n            return c;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a > c && a < b){\n        return a;\n    }else if(b > a && b < c || b > c && b < a){\n        return b;\n    }else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b){\n        if(a>c){\n            if(b>c){\n                return b;\n            }\n            else{\n                return c;\n            }\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(b>c){\n            if(a>c){\n                return a;\n            }\n            else{\n                return c;\n            }\n        }\n        else{\n            return b;\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n\tif(a > b && a < c || a < b && a > c){\n\t\treturn a;\n\t}\n\telse if(b > a && b < c || b < a && b > c){\n\t\treturn b;\n\t}\n\telse{\n\t\treturn c;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a > b && a < c || a > c && a < b){\n        return a;\n    }\n    else if (b > a && b < c || b > c && b < a){\n        return b;\n    }\n    else if (c > a && c < b || c > b && c < a){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b && a<c || a>c && a<b){\n        return a;\n    }\n    else if(b>a && b<c || b>c && b<a){\n        return b;\n    }\n    else if(c>a && c<b || c>b && c<a){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b && a<c || a<b && a>c){\n        return a;\n    }\n    else if(b>a && b<c || b<a && b>c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median = 0;\n    if(a > b){\n        if(b > c){\n            median = b;\n        }else if(a > c){\n            median = c;\n        }else{\n            median = a;\n        }\n    }else{\n        if(a > c){\n            median = a;\n        }else if(b > c){\n            median = c;\n        }else{\n            median = b;\n        }\n    }\n    return median;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a < b && a > c || a > b && a < c){\n        return a;\n    } else if (b < a && b > c || b > a && b < c){\n        return b;\n    } else {\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(a < c){\n            return a;\n        }else if(b > c){\n            return b;\n        }else{\n            return c;\n        }\n    }else{\n        if(a > c){\n            return a;\n        }else if(b < c){\n            return b;\n        }else{\n            return c;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n\tvar median = 0;\n\tif(a > b){\n\t\tif(b > c){\n\t\t\tmedian = b;\n\t\t}\n\t\telse if(a > c){\n\t\t\tmedian = c;\n\t\t}\n\t\telse{\n\t\t\tmedian = a;\n\t\t}\n\t}\n\telse{\n\t\tif(a > c){\n\t\t\tmedian = a;\n\t\t}\n\t\telse if(b > c){\n\t\t\tmedian = c;\n\t\t}\n\t\telse{\n\t\t\tmedian = b;\n\t\t}\n\t}\n\treturn median;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a > c){\n            return a;\n        }\n        else if(b > c){\n            return c;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median;\n    if(a > b){\n        if(b > c){\n            median = b;\n        }\n        else if(a > c){\n            median = c;\n        }\n        else{\n            median = a;\n        }\n    }\n    else{\n        if(a > c){\n            median = a;\n        }\n        else if(b > c){\n            median = c;\n        }\n        else{\n            median = b;\n        }\n    }\n    return median;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else if(b > c){\n        if(a > c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n    else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b){\n        if(b>c){\n            return b;\n        }\n        else if(a>c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a>c){\n            return a;\n        }\n        else if(b>c){\n            return c;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if (b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else {\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a > c && a < b){\n        return a;\n    }\n    else if(b > a && b < c || b > c && b < a){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n\tif(a > b){\n\t\tif(b > c){\n\t\t\treturn b;\n\t\t}else if(a > c){\n\t\t\treturn c;\n\t\t}else{\n\t\t\treturn a;\n\t\t}\n\t}else{\n\t\tif(a > c){\n\t\t\treturn a;\n\t\t}else if(b > c){\n\t\t\treturn c;\n\t\t}else{\n\t\t\treturn b;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a > c){\n            return a;\n        }\n        else if(b > c){\n            return c;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a > c){\n            return a;\n        }\n        else if(b > c){\n            return c;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median = 0;\n    if(a > b){\n        if(a < c){\n            median = a;\n        }\n        else if(b > c){\n            median = b;\n        }\n        else{\n            median = c;\n        }\n    }\n    else{\n        if(a > c){\n            median = a;\n        }\n        else if(b < c){\n            median = b;\n        }\n        else{\n            median = c;\n        }\n    }\n    return median;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }else if(b > a && b < c || b < a && b > c){\n        return b;\n    }else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }else if(a > c){\n            return c;\n        }else{\n            return a;\n        }\n    }else{\n        if(a > c){\n            return a;\n        }else if(b > c){\n            return c;\n        }else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && b < c){\n        return b;\n    }\n    else if(b < a && a < c){\n        return a;\n    }\n    else if(a < c && c < b){\n        return c;\n    }\n    else if(b < c && c < a){\n        return c;\n    }\n    else if(c < a && a < b){\n        return a;\n    }\n    else if(c < b && b < a){\n        return b;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a > c){\n            return a;\n        }\n        else if(b > c){\n            return c;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }else if(a > c){\n            return c;\n        }else{\n            return a;\n        }\n    }else{\n        if(a > c){\n            return a;\n        }else if(b > c){\n            return c;\n        }else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a < b && a > c || a > b && a < c) {\n        return a;\n    } else if (b < a && b > c || b > a && b < c) {\n        return b;\n    } else {\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a > b && a < c || a > c && a < b){\n        return a;\n    }\n    else if (b > a && b < c || b > c && b < a){\n        return b;\n    }\n    else if (c > a && c < b || c > b && c < a){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a > b && a < c || a < b && a > c) {\n        return a;\n    } else if (b > a && b < c || b < a && b > c) {\n        return b;\n    } else if (c > a && c < b || c < a && c > b) {\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else if(a > c){\n        return a;\n    }\n    else if(b > c){\n        return c;\n    }\n    else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && b < c){\n        return b;\n    }else if(a < c && c < b){\n        return c;\n    }else if(b < a && a < c){\n        return a;\n    }else if(b < c && c < a){\n        return c;\n    }else if(c < a && a < b){\n        return a;\n    }else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }else if(a > c){\n            return c;\n        }else{\n            return a;\n        }\n    }else{\n        if(a > c){\n            return a;\n        }else if(b > c){\n            return c;\n        }else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(a < c){\n            return a;\n        }\n        else if(b > c){\n            return b;\n        }\n        else{\n            return c;\n        }\n    }\n    else{\n        if(a > c){\n            return a;\n        }\n        else if(b < c){\n            return b;\n        }\n        else{\n            return c;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }else if(b > a && b < c || b < a && b > c){\n        return b;\n    }else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(a < c){\n            return a;\n        }else if(b > c){\n            return b;\n        }else{\n            return c;\n        }\n    }else if(a < b){\n        if(b < c){\n            return b;\n        }else if(a > c){\n            return a;\n        }else{\n            return c;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else if(a > c){\n        return a;\n    }\n    else if(b > c){\n        return c;\n    }\n    else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else if(c < a && c > b || c > a && c < b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a > c){\n        if(b > c){\n            return b;\n        }else{\n            return c;\n        }\n    }else if(b > a && b > c){\n        if(a > c){\n            return a;\n        }else{\n            return c;\n        }\n    }else if(c > a && c > b){\n        if(a > b){\n            return a;\n        }else{\n            return b;\n        }\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a > b && a < c || a < b && a > c) {\n        return a;\n    }\n    else if (b > a && b < c || b < a && b > c) {\n        return b;\n    }\n    else if (c > a && c < b || c < a && c > b) {\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a > c && a < b){\n        return a;\n    }\n    else if(b > a && b < c || b > c && b < a){\n        return b;\n    }\n    else if(c > a && c < b || c > b && c < a){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b && a<c || a<b && a>c){\n        return a;\n    }\n    else if(b>a && b<c || b<a && b>c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(a < c){\n            return a;\n        }\n        else if(b > c){\n            return b;\n        }\n        else{\n            return c;\n        }\n    }\n    else if(a < b){\n        if(b < c){\n            return b;\n        }\n        else if(a > c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n    else{\n        return a;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(a < c){\n            return a;\n        }else if(b > c){\n            return b;\n        }else{\n            return c;\n        }\n    }else{\n        if(a > c){\n            return a;\n        }else if(b < c){\n            return b;\n        }else{\n            return c;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }else if(a > c){\n            return c;\n        }else{\n            return a;\n        }\n    }else{\n        if(a > c){\n            return a;\n        }else if(b > c){\n            return c;\n        }else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n\tvar median;\n\tif(a > b && a < c || a < b && a > c){\n\t\tmedian = a;\n\t}\n\telse if(b > a && b < c || b < a && b > c){\n\t\tmedian = b;\n\t}\n\telse{\n\t\tmedian = c;\n\t}\n\treturn median;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }else if(b > a && b < c || b < a && b > c){\n        return b;\n    }else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else if(a > c){\n        return a;\n    }\n    else if(b > c){\n        return c;\n    }\n    else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a > c && a < b){\n        console.log(a);\n    }\n    else if(b > a && b < c || b > c && b < a){\n        console.log(b);\n    }\n    else if(c > a && c < b || c > b && c < a){\n        console.log(c);\n    }\n}\nmedian_numbers(1, 2, 3);\nmedian_numbers(1, 3, 2);\nmedian_numbers(2, 1, 3);\nmedian_numbers(2, 3, 1);\nmedian_numbers(3, 1, 2);\nmedian_numbers(3, 2, 1);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "2\n2\n2\n2\n2\n2\n55\n",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\nshould loosely deep-equal\n\n55\n    at test (/tmp/tmpj5rdu3tl.js:25:10)\n    at Object.<anonymous> (/tmp/tmpj5rdu3tl.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n  expected: 55,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "exit_code": 1,
      "status": "AssertionError"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a > c && a < b){\n        return a;\n    }else if(b > a && b < c || b > c && b < a){\n        return b;\n    }else if(c > a && c < b || c > b && c < a){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }else if(b > a && b < c || b < a && b > c){\n        return b;\n    }else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if((a > b && a < c) || (a < b && a > c)){\n        return a;\n    }\n    else if((b > a && b < c) || (b < a && b > c)){\n        return b;\n    }\n    else if((c > a && c < b) || (c < a && c > b)){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b && a<c || a<b && a>c){\n        return a;\n    }\n    else if(b>a && b<c || b<a && b>c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }else if(a > c){\n            return c;\n        }else{\n            return a;\n        }\n    }else{\n        if(a > c){\n            return a;\n        }else if(b > c){\n            return c;\n        }else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a > c){\n            return a;\n        }\n        else if(b > c){\n            return c;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else if(c < a && c > b || c > a && c < b){\n        return c;\n    }\n    else{\n        return \"There is no median number.\"\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median = 0;\n    if(a > b){\n        if(a < c){\n            median = a;\n        }\n        else if(b > c){\n            median = b;\n        }\n        else{\n            median = c;\n        }\n    }\n    else{\n        if(a > c){\n            median = a;\n        }\n        else if(b < c){\n            median = b;\n        }\n        else{\n            median = c;\n        }\n    }\n    return median;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median = 0;\n    if(a > b){\n        if(b > c){\n            median = b;\n        }else if(a > c){\n            median = c;\n        }else{\n            median = a;\n        }\n    }else{\n        if(a > c){\n            median = a;\n        }else if(b > c){\n            median = c;\n        }else{\n            median = b;\n        }\n    }\n    return median;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(a < c){\n            return a;\n        }\n        else if(b > c){\n            return b;\n        }\n        else{\n            return c;\n        }\n    }\n    else if(a < b){\n        if(b < c){\n            return b;\n        }\n        else if(a > c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n    else{\n        return a;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else if(a > c){\n        return a;\n    }\n    else if(b > c){\n        return c;\n    }\n    else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n\tif(a < b && a > c || a > b && a < c){\n\t\treturn a;\n\t}\n\telse if(b < a && b > c || b > a && b < c){\n\t\treturn b;\n\t}\n\telse if(c < a && c > b || c > a && c < b){\n\t\treturn c;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if (b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if (c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a > c){\n            return a;\n        }\n        else if(b > c){\n            return c;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a > c){\n            return a;\n        }\n        else if(b > c){\n            return c;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if(c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a>b && a<c || a<b && a>c){\n        return a;\n    }\n    else if(b>a && b<c || b<a && b>c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if(b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    var median;\n    if(a > b && a < c || a < b && a > c){\n        median = a;\n    }else if(b > a && b < c || b < a && b > c){\n        median = b;\n    }else{\n        median = c;\n    }\n    return median;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a < c){\n        if(b < c){\n            return b;\n        }else{\n            return c;\n        }\n    }else if(b < a && b < c){\n        if(a < c){\n            return a;\n        }else{\n            return c;\n        }\n    }else{\n        if(a < b){\n            return a;\n        }else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    else if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    else{\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if (a > b && a < c || a < b && a > c){\n        return a;\n    }\n    else if (b > a && b < c || b < a && b > c){\n        return b;\n    }\n    else if (c > a && c < b || c < a && c > b){\n        return c;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a < b && a > c || a > b && a < c){\n        return a;\n    }\n    if(b < a && b > c || b > a && b < c){\n        return b;\n    }\n    if(c < a && c > b || c > a && c < b){\n        return c;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else if(b > c){\n        if(a > c){\n            return a;\n        }\n        else{\n            return c;\n        }\n    }\n    else{\n        return b;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "//Write a function to find the median of three numbers.\nfunction median_numbers(a, b, c){\n    if(a > b){\n        if(b > c){\n            return b;\n        }\n        else if(a > c){\n            return c;\n        }\n        else{\n            return a;\n        }\n    }\n    else{\n        if(a > c){\n            return a;\n        }\n        else if(b > c){\n            return c;\n        }\n        else{\n            return b;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median_numbers;\n  assert.deepEqual(candidate(25, 55, 65),55.0);\n  assert.deepEqual(candidate(20, 10, 30),20.0);\n  assert.deepEqual(candidate(15, 45, 75),45.0);\n}\n\ntest();",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
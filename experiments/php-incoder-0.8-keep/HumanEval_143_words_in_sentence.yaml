name: HumanEval_143_words_in_sentence
language: php
prompt: "<?php\n// You are given a string representing a sentence,\n// the sentence\
  \ contains some words separated by a space,\n// and you have to return a string\
  \ that contains the words from the original sentence,\n// whose lengths are prime\
  \ numbers,\n// the order of the words in the new string should be the same as the\
  \ original one.\n// Example 1:\n// Input: sentence = \"This is a test\"\n// Output:\
  \ \"is\"\n// Example 2:\n// Input: sentence = \"lets go for swimming\"\n// Output:\
  \ \"go for\"\n// Constraints:\n// * 1 <= len(sentence) <= 100\n// * sentence contains\
  \ only letters\nfunction words_in_sentence($sentence) {\n"
tests: "function candidate(...$args) {\n    return words_in_sentence(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"This is a test\") !== \"is\")\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"lets go for swimming\"\
  ) !== \"go for\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  there is no place available here\") !== \"there is no place\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Hi I am Hussein\") !== \"Hi am Hussein\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"go for it\") !==\
  \ \"go for it\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  here\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  here is\") !== \"is\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: []
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

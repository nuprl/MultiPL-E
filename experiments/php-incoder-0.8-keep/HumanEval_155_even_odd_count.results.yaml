name: HumanEval_155_even_odd_count
language: php
results:
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\tif ($num\
    \ < 0) {\n\t\t$num *= -1;\n\t}\n\t$result = [0, 0];\n\twhile (strlen($num) > 0)\
    \ {\n\t\t$result[0] += count(preg_match('/[0-7]/i', $num));\n\t\t$result[1] +=\
    \ count(preg_match('/[89AB]/i', $num));\n\t\t$num = preg_replace('/([89AB])/',\
    \ '', $num);\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "b'\\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpk13b31yd.php on line 12\\n\\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpk13b31yd.php\
    \ on line 13\\n\\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpk13b31yd.php on line 12\\n\\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpk13b31yd.php\
    \ on line 13\\n\\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpk13b31yd.php on line 12\\n\\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpk13b31yd.php\
    \ on line 13\\n\\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpk13b31yd.php on line 12\\n\\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpk13b31yd.php\
    \ on line 13\\n\\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpk13b31yd.php on line 12\\n\\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpk13b31yd.php\
    \ on line 13\\n\\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpk13b31yd.php on line 12\\n\\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpk13b31yd.php\
    \ on line 13\\n\\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpk13b31yd.php on line 12\\n\\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpk13b31yd.php\
    \ on line 13\\n\\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpk13b31yd.php on line 12\\n\\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpk13b31yd.php\
    \ on line 13\\n\\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while (0 !== ($digit = bcmod($num, 10))) {\n      \
    \  if ($digit === 0 || $digit === 1) {\n            $even += 1;\n        } else\
    \ {\n            $odd += 1;\n        }\n        $num = $digit * 10;\n    }\n \
    \   return array($even, $odd);\n}\n</code>\n<|/ a dscore=3 tags=algorithm,php,math\
    \ |>\n<| c |>\nHow did you get the value for `9`?\n<|/ c |>\n<| c |>\n9 is the\
    \ only number with 1 digit, which is not even, and therefore odd. There are other\
    \ numbers with 2 digits, which are not even and odd.\n<|/ c |>\n<| c |>\nBut `9`\
    \ is *not* an even number. `9` is even, but *not* odd.\n<|/ c |>\n<| c |>\nI see.\
    \ I misunderstood the problem. I thought you were asking how to get `1` and `2`\
    \ for `1` and `3` for `2`.\n<|/ c |>\n<| c |>\nThe answer for 9 can be found easily.\
    \ `9 mod 10` is `1` and `9 mod 100` is `0`.\n<|/ c |>\n<| a tags=algorithm,php,math\
    \ |>\nIn case you were looking for a more general solution, this is another method\
    \ which can return a list of all numbers that are divisible by either even or\
    \ odd numbers. \nIt does not use recursion, only math:\n<code>\n<?php\n$number\
    \ = 13;\n$result = [];\n$remainder = $number % 10;\n$divisor = ($number % 100)\
    \ / 10;\n\nwhile ($number != 0) {\n  if ($divisor % 2 == 0) {\n    $result[] =\
    \ $number / 10;\n  }\n\n  if ($remainder % 2 == 0) {\n    $result[] = $number\
    \ % 10;\n  }\n\n  $number = $number / 10;\n  $remainder = $number % 10;\n  $divisor\
    \ = ($number % 100) / 10;\n}\n\necho count($result) . \"\\n\";\n\nforeach ($result\
    \ as $number) {\n  echo \" \" . $number . \"\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp73eddr9g.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even_odd_count_tuple\
    \ = array();\n\t// $num = $num * -1; // multiply by -1 to get a positive number\
    \ to count as odd.\n\tif ($num % 2 === 0) { // if number is even\n\t\t$even_odd_count_tuple[1]\
    \ = 1;\n\t} else { // if number is odd\n\t\t$even_odd_count_tuple[1] = 0;\n\t\
    }\n\tif ($num < 10 || $num > 100) { // if number < 10 or > 100, then not even\n\
    \t\t$even_odd_count_tuple[0] = 1;\n\t} else { // if number < 10 or > 100\n\t\t\
    $even_odd_count_tuple[0] = 0;\n\t}\n\t\n\treturn $even_odd_count_tuple;\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9o663y4.php:28\n\
    Stack trace:\n#0 /tmp/tmpm9o663y4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm9o663y4.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) {\n        return (1, 0);\n    }\n\n    $result = [];\n    $tmp = $num;\n\
    \n    while ($tmp > 0) {\n        $remainder = $tmp % 10;\n        $tmp      =\
    \ floor($tmp / 10);\n\n        if ($remainder % 2 == 0) {\n            $result[]\
    \ = $remainder;\n        }\n    }\n\n    return ($result, count($result));\n}\n\
    </code>\nThe only \"hacky\" part of this solution compared to your code is that\
    \ the function only returns 2 values for the number of even and odd digits. But\
    \ that's perfectly fine since that is what you are trying to achieve.\n<|/ a dscore=0\
    \ |>\n<| c |>\nThat actually doesn't work very well on negative numbers.  It doesn't\
    \ give the right answer for -123, for example.\n<|/ c |>\n<| c |>\n: It works\
    \ on negative numbers. Check it out here: https://3v4l.org/sVu5h. There must be\
    \ something wrong with the example you provided.\n<|/ c |>\n<| c |>\n: You're\
    \ right, my mistake.  I'll fix it now.\n<|/ c |>\n<| c |>\nIt works now.  However,\
    \ this solution does not use PHP.  I feel like this is an extremely basic question,\
    \ but I don't know a way to do this without using PHP.  Thanks for helping me\
    \ anyways.\n<|/ c |>\n<| c |>\n: You might be able to use [`gmp_init`](http://php.net/manual/en/function.gmp-initoff.php)\
    \ then [`gmp_add`](http://php.net/manual/en/function.gmp-add.php) then [`gmp_modpow`](http://php.net/manual/en/function.gmp-modpow.php)\
    \ to do the math.  That is really not a trivial question though.\n<|/ c |>\n<|\
    \ a dscore=0 |>\nHere's an alternative way without using a function which can\
    \ help you to understand the problem in more depth.\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnhtswmhn.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ array($num%2 == 0 ? $num / 2 : $num, $num%2);\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\nHere is a solution in Python.  \n<code>\ndef even_odd_count(n):\n   \
    \ odd_count = 0\n    even_count = 0\n    while n > 0:\n        odd_count += n%2\n\
    \        n /= 2\n    if odd_count:\n        even_count += odd_count\n    return\
    \ even_count\n</code>\n<|/ a tags=language-agnostic dscore=0 |>\n<| a |>\n<code>\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwfhma5r5.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \ = 0;\n    $odd_count = 0;\n    if ($num < 0) {\n        $num = abs($num);\n\
    \        $odd_count = 1;\n    }\n    while (1) {\n        $current_remainder =\
    \ intval($num % 10);\n        $current_odd_count = isset($odd_counts[$current_remainder])\
    \ ? $odd_counts[$current_remainder] : 1;\n        $num = intval($num / 10);\n\
    \        if (isset($even_counts[$current_remainder])) {\n            $even_count\
    \ = $even_count + $current_odd_count;\n        } else {\n            $even_count\
    \ = $current_odd_count;\n        }\n        if ($num == 0) break;\n        $odd_counts[$current_remainder]\
    \ = $odd_count + $current_odd_count;\n        $even_counts[$current_remainder]\
    \ = $even_count + $current_odd_count;\n    }\n    return array((int)$even_count,\
    \ (int)$odd_count);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,algorithm,performance\
    \ |>\nI made some researching and found a solution with time complexity of O(n)\
    \ where n is the length of the number.\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr59yjg_j.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ $num < 0 ? (int) floor(abs($num) / 2) : (int) floor($num / 2);\n}\n\n/**\n *\
    \ Return true if the number is odd. Return false otherwise.\n * \n * @param int\
    \ $num The number to test.\n * @return bool True if $num is odd.\n */\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzq1l8523.php:21\n\
    Stack trace:\n#0 /tmp/tmpzq1l8523.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzq1l8523.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ $odd = $num_digits = $sign = 0;\n\n  if ($num < 0) {\n    return ($sign, abs($num),\
    \ 0, 0, 0);\n  }\n\n  while ($num) {\n    $digit = intval($num % 10);\n    $num_digits++;\n\
    \    $num = $num / 10;\n\n    if ($num_digits % 2 == 0) {\n      $even++;\n  \
    \  } else {\n      $odd++;\n    }\n\n    if ($num_digits > 4) {\n      $sign =\
    \ 1;\n      $num_digits = 4;\n    } else {\n      $sign = 0;\n    }\n  }\n\n \
    \ return ($sign, $even, $odd, $num_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgd34uwap.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$num = (int)$num;\n\
    \t$count = 0;\n\n\twhile ($num > 0) {\n\t\t$mod = ($num % 10);\n\t\tif ($mod ===\
    \ 0) {\n\t\t\t$count++;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\t$num = floor($num\
    \ / 10);\n\t}\n\treturn array($count, $num);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp307fzchd.php:27\n\
    Stack trace:\n#0 /tmp/tmp307fzchd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp307fzchd.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ preg_match(\"/[13579]/\",$num) ? array(1, 1) : array(0, 0);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50h7vtkb.php:14\n\
    Stack trace:\n#0 /tmp/tmp50h7vtkb.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp50h7vtkb.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $evenCount\
    \ = 0;\n    $oddCount = 0;\n    while($num > 0) {\n        $num = $num / 10;\n\
    \        $evenCount++;\n        if($num % 2 == 0)\n            $oddCount++;\n\
    \    }\n    return array($evenCount, $oddCount);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnav53b77.php:23\n\
    Stack trace:\n#0 /tmp/tmpnav53b77.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnav53b77.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odd =\
    \ $even = 0;\n\n    // If input is odd, multiply by 10 until the input is even.\n\
    \    while ($num >= 10) {\n        $even++;\n        $num -= 10;\n    }\n\n  \
    \  // If input was even, divide by 10 until input is odd.\n    while ($num >=\
    \ 10) {\n        $odd++;\n        $num -= 10;\n    }\n\n    return [$even, $odd];\n\
    }\n</code>\n<|/ a dscore=3 |>\n<| c |>\nFor a number like -123 this returns 0\
    \ even though there are two odd digits. Change the second while to `while ($num\
    \ >= 10) { $odd++ ; $num -= 10; }`\n<|/ c |>\n<| c |>\nThanks. Fixed now\n<|/\
    \ c |>\n<| a dscore=3 tags=php,math,algorithm |>\nIn PHP:\n<code>\n$n = [1, 2,\
    \ 3];\n\nfor($i = 0; $i < count($n); $i++) {\n    $n[$i] = floor($n[$i] / 10);\n\
    }\n\necho \"Even count: \" . $n[0] . \"<br />\";\necho \"Odd count: \" . $n[1];\n\
    </code>\n<|/ a |>\n<| c |>\nIt works fine but why `$n[0] = $n[0] / 10;` instead\
    \ of `$n[$i] = floor($n[$i] / 10);` ?\n<|/ c |>\n<| c |>\nIt doesn't work fine\
    \ if you test it on -12.\n<|/ c |>\n<| c |>\nBecause you wrote `$n[0] = $n[0]\
    \ / 10;` instead of `$n[$i] = floor($n[$i] / 10);`.\n<|/ c |>\n<| c |>\nAnd that\
    \ comment was posted before your edit.\n<|/ c |>\n<| a dscore=3 |>\nIn PHP:\n\
    <code>\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpeokmdmow.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kgnjy8r.php:14\n\
    Stack trace:\n#0 /tmp/tmp1kgnjy8r.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp1kgnjy8r.php\
    \ on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $count\
    \ = 0;\n    $odd = 0;\n    while ($num) {\n        $count++;\n        $num = $num\
    \ / 10;\n    }\n    return [$count, $odd];\n}\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd705t65u.php:20\n\
    Stack trace:\n#0 /tmp/tmpd705t65u.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd705t65u.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num % 10;\n \
    \       $even++;\n        if ($digit % 2 == 0) {\n            $even++;\n     \
    \   }\n        $num = $num / 10;\n        $odd++;\n    }\n\n    return array($even,\
    \ $odd);\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThank you so much for your answer!\n\
    <|/ c |>\n<| a dscore=0 |>\nHere is my answer to a similar question that might\
    \ help you understand how to use modulus in a way that matches the problem you\
    \ are trying to solve:\n<code>\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpunru5g8g.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $result\
    \ = (int) $num;\n    if ($num < 0 || $num >= 10) {\n        return array(0, 0);\n\
    \    }\n    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even += 1;\n    \
    \    } else {\n            $odd += 1;\n        }\n        $num = (int) ($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiba_alj3.php:31\n\
    Stack trace:\n#0 /tmp/tmpiba_alj3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpiba_alj3.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ intval($num / 2);\n  $odd = intval($num / 2);\n\n  if ($num % 2 != 0) {\n  \
    \  $odd += 1;\n  }\n\n  return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7c3g7b_u.php:22\n\
    Stack trace:\n#0 /tmp/tmp7c3g7b_u.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7c3g7b_u.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num_str\
    \ = strval($num);\n\n    $count = array();\n    $even = 0;\n    $odd = 0;\n\n\
    \    foreach (str_split($num_str) as $digit) {\n        if ($digit == 1) {\n \
    \           $count[$even]++;\n        } else {\n            $count[$odd]++;\n\
    \        }\n    }\n\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6v9v1ib0.php:29\n\
    Stack trace:\n#0 /tmp/tmp6v9v1ib0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6v9v1ib0.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ == 0)\n        return (0, 0);\n\n    $odd = $num % 10;\n    $num = $num / 10;\n\
    \    $even = $num % 10;\n\n    return ($even, $odd);\n}\n</code>\n<|/ a |>\n<|\
    \ c |>\nWhy this answer has downvoted without any comment?\n<|/ c |>\n<| c |>\n\
    This answer also returns the count as `array()`. Hence, I added a `[0]` after\
    \ the return statement to make it return the count as `int`.\n<|/ c |>\n<| a |>\n\
    You can use the following solution that utilizes array manipulation rather than\
    \ looping:\n<code>\n$input = 103;\n$digits = str_split($input);\n$count_even_odd\
    \ = array_filter(\n    $digits,\n    function($digit) use ($digits){\n       \
    \ return ($digit % 2 == 0);\n    }\n);\n\n$count_even_odd = array_sum($count_even_odd);\n\
    </code>\nThis solution works because the function array_filter will remove all\
    \ entries in the $digits array that are false. If we look at the first two numbers\
    \ of the array, $digits, we will see this in plain English:\n<code>\narray(\n\
    \    [0] => 3,\n    [1] => 3\n)\n</code>\nEach element of that array is actually\
    \ a number, but because of the comma between each element, PHP converts it to\
    \ an array:\n<code>\narray(\n    [0] => 3,\n    [1] => 3\n)\n</code>\nIf we had\
    \ an array with more than one element, PHP would concatenate them with a comma.\n\
    <code>\narray(\n    [0] => 3,\n    [1] => 3\n)\n</code>\nTherefore, array_filter\
    \ will only remove those elements that are false:\n<code>\narray(\n    0 => 3,\n\
    \    1 => 3\n)\n</code>\nTherefore, array_filter with that parameter will leave\
    \ only the even numbers in the array. Those elements will then be counted with\
    \ the array_sum.\n<|/ a dscore=4 tags=php |>\n<| c |>\n`array_filter()` will loop\
    \ through the array and count the items. Just to make it clear that it does that\
    \ it is using the `count()` function.\n<|/ c |>\n<| c |>\nNo, it doesn't. [`array_filter`](http://php.net/manual/en/function.array-filter.php)\
    \ will remove any value that evaluates as false in a boolean context. That means\
    \ that `false`, `0`, `\"\"`, `null`, and `array()` will all be removed from an\
    \ array. This is important for arrays that contain a lot of false values. If the\
    \ array only contains `true` or `1` values then it will take less time to calculate\
    \ the sum\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwqfrwlhs.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $count\
    \ = explode('', $num);\n    foreach ($count as $key => $value) {\n        if ($key\
    \ % 2 === 0) {\n            $count[$key] = 'even';\n        } else {\n       \
    \     $count[$key] = 'odd';\n        }\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: explode(): Empty delimiter in /tmp/tmpdiok5xpg.php on line 7\n\
    \nWarning: Invalid argument supplied for foreach() in /tmp/tmpdiok5xpg.php on\
    \ line 8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdiok5xpg.php:22\n\
    Stack trace:\n#0 /tmp/tmpdiok5xpg.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdiok5xpg.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $sum = 0;\n    \n    while( ($num >= 0) && ($num <\
    \ 10) ){\n        $sum = $num % 10;\n        if ($sum % 2 === 0) {\n         \
    \   $even++;\n        } else {\n            $odd++;\n        }\n        $num =\
    \ $num / 10;\n    }\n    \n    return array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // initialize\
    \ to odd number to start counting\n    $odd = 1;\n    // initialize to even number\
    \ to start counting\n    $even = 1;\n    // add 1 to $odd if it is odd\n    if($num\
    \ % 2 == 0) {\n        $odd += 1;\n    }\n    // if the number is odd, then count\
    \ its digits from 0 to 9\n    while($num != 0) {\n        // add 1 to $even if\
    \ it is even\n        if($num % 2 == 0) {\n            $even += 1;\n        }\n\
    \        // remove 1 from $even\n        $even--;\n        // subtract 1 from\
    \ $odd if it is odd\n        if($num % 2 == 0) {\n            $odd -= 1;\n   \
    \     }\n        // remove 1 from $odd\n        $odd--;\n        // set $num to\
    \ its previous value\n        $num = $num / 2;\n    }\n    // return the tuple\
    \ (odd, even)\n    return array($odd, $even);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp22ok_q46.php:40\n\
    Stack trace:\n#0 /tmp/tmp22ok_q46.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp22ok_q46.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odd =\
    \ array_filter($num = str_split($num), function ($val) {\n        return $val\
    \ % 2 == 1;\n    });\n    $even = array_filter($num = str_split($num), function\
    \ ($val) {\n        return $val % 2 == 0;\n    });\n    return array(count($odd),\
    \ count($even));\n}\n</code>\n<|/ a tags=php,math,algorithm |>\n<| a dscore=0\
    \ tags=php,math,algorithm |>\nThis is a mathematical problem and not a programming\
    \ one.\nSo what you need to do is figure out how to express your problem mathematically.\n\
    For instance, you already have the sum of all the numbers in the given range,\
    \ just take that and divide by 2.\nNow take that number and subtract it from the\
    \ sum and you have the even or odd number. \n<code>\n$total = 21;\n$num = array_sum(array_slice($num,0,$total/2));\n\
    if($num > 0){\n    echo \"Even\"\n}else{\n    echo \"Odd\"\n}\n</code>\n<|/ a\
    \ |>\n<| a tags=php,math,algorithm |>\nHere is an example of how you can achieve\
    \ it by calculating all the possible combinations and getting the count of odd\
    \ numbers from each combination\n<code>\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr_1igl5_.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // Get\
    \ the value of the $num variable\n    $num = $num->value;\n\n    // Initialize\
    \ an array to hold the even and odd values\n    $even = array();\n    $odd = array();\n\
    \n    // Iterate over each digit\n    for ($i = 0; $i < strlen($num); $i++) {\n\
    \        // If the current digit is an even digit\n        if ($num[$i] == \"\
    0\") {\n            // Add the current digit to the $even array\n            array_push($even,\
    \ $num[$i]);\n        } else {\n            // Add the current digit to the $odd\
    \ array\n            array_push($odd, $num[$i]);\n        }\n    }\n\n    // Return\
    \ the tuple with even and odd digits\n    return array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0knzg_2g.php:35\n\
    Stack trace:\n#0 /tmp/tmp0knzg_2g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0knzg_2g.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ 0;\n\t$odd = 0;\n\twhile (1) {\n\t\t$num = $num / 10;\n\t\tif ($num == 0) {\n\
    \t\t\tbreak;\n\t\t}\n\t\tif ($num % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\
    \t\t$odd++;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmsosj60.php:28\n\
    Stack trace:\n#0 /tmp/tmplmsosj60.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplmsosj60.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $sum_odd\
    \ = $sum_even = 0;\n    $n = abs($num);\n    if ($n < 0)\n        return null;\n\
    \    if ($num > 0) {\n        $odd = 1;\n    } else {\n        $even = 1;\n  \
    \  }\n    while ($n > 0) {\n        $odd = ($odd * 10) + $n % 10;\n        $sum_odd\
    \ += $odd;\n        $n = ($n - $odd) / 10;\n    }\n    while ($sum_even + $sum_odd\
    \ < $n) {\n        $sum_even++;\n        $sum_odd++;\n    }\n    return array($sum_even,\
    \ $sum_odd);\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2b6w808p.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num =\
    \ abs($num);\n    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $mod\
    \ = $num % 10;\n        if ($mod == 0)\n            $even++;\n        else\n \
    \           $odd++;\n        $num = $num / 10;\n    }\n    return array($even,\
    \ $odd);\n}\n</code>\n<|/ a tags=php |>\n<| c |>\nHi, I tried this solution and\
    \ got this error: Warning: Division by zero in /home/u997740401/public_html/test2.php\
    \ on line 16. I don't know what it is trying to tell me.\n<|/ c |>\n<| c |>\n\
    Yeah, this only works when $num is an integer. If $num is a float, you will need\
    \ to divide it by 10 before checking the remainder, eg: `$num = $num / 10;` before\
    \ `$mod % 10`\n<|/ c |>\n<| a |>\nI find it easier to use an array:\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpobm76kai.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_odd_count\
    \ = array();\n    $even_odd_count['even'] = $num % 2 == 0;\n    $even_odd_count['odd']\
    \ = $num % 2 == 1;\n    return $even_odd_count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17l5v7gd.php:18\n\
    Stack trace:\n#0 /tmp/tmp17l5v7gd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp17l5v7gd.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $counts\
    \ = array();\n    for ($i = 0; $i < strlen($num); $i++) {\n        $numDigit =\
    \ strpos($num, substr($num,$i,1));\n        if ($numDigit == false || $numDigit\
    \ < 1) {\n            $counts = array();\n            break;\n        }\n    \
    \    $digit = substr($num,$i,1);\n        if ($digit == '0') {\n            $counts\
    \ = array();\n            break;\n        }\n        $counts[substr($digit,0,1)]\
    \ += 1;\n    }\n    return $counts;\n}\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6vsatkeu.php:28\n\
    Stack trace:\n#0 /tmp/tmp6vsatkeu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6vsatkeu.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  if ($num\
    \ < 0) {\n    return (1, 0);\n  }\n  $counts = array_count_values(str_split($num));\n\
    \  return array_keys($counts);\n}\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbxzl51i_.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $result\
    \ = [0, 0];\n  do {\n    $result[0] += $num & 1;\n    $num >>= 1;\n  } while ($num);\n\
    \  do {\n    $result[1] += $num & 1;\n    $num >>= 1;\n  } while ($num);\n  return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxmwkbcw.php:23\n\
    Stack trace:\n#0 /tmp/tmphxmwkbcw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphxmwkbcw.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $num = (int) ($num / 10);\n\
    \        if ($num % 2 === 0) {\n            $even++;\n        } else {\n     \
    \       $odd++;\n        }\n    }\n    return array($even, $odd);\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmnmdnxw4.php:24\n\
    Stack trace:\n#0 /tmp/tmpmnmdnxw4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmnmdnxw4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$i = 0;\n\
    \t$even_odd_count = 0;\n\twhile ($num) {\n\t\tif ($num % 2 === 0) {\n\t\t\t$even_odd_count++;\n\
    \t\t} else {\n\t\t\t$even_odd_count--;\n\t\t}\n\t\t$num /= 10;\n\t\t$i++;\n\t\
    }\n\n\treturn array($even_odd_count, $i);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgcpmjt2.php:27\n\
    Stack trace:\n#0 /tmp/tmpwgcpmjt2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwgcpmjt2.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_counter\
    \ = 0;\n    $odd_counter = 0;\n    $temp_num = $num;\n    $temp_integer = $temp_num;\n\
    \    while ($temp_integer > 0) {\n        $odd_counter += $temp_integer % 10;\n\
    \        $temp_integer = $temp_integer / 10;\n    }\n    while ($temp_num > 0)\
    \ {\n        $even_counter += $temp_num % 10;\n        $temp_num = $temp_num /\
    \ 10;\n    }\n    return array($even_counter, $odd_counter);\n}\n</code>\n<|/\
    \ a tags=php |>\n<| a |>\nYou can use this:\n<code>\necho count(array_filter(range(1,100)));\n\
    </code>\n<|/ a dscore=0 tags=php |>\n<| a tags=php |>\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4e1g5arm.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $count =\
    \ 0;\n  if ($num < 0){\n    $num = -$num;\n  }\n  $even_count = 0;\n  $odd_count\
    \ = 0;\n  while (strlen($num) > 0) {\n    $char = substr($num, 0, 1);\n    if\
    \ ($char === '1') {\n      $even_count++;\n    }else{\n      $odd_count++;\n \
    \   }\n    $num = substr($num, 1);\n  }\n  return array($even_count, $odd_count);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbq9lnucb.php:30\n\
    Stack trace:\n#0 /tmp/tmpbq9lnucb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbq9lnucb.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0)\n    {\n        $num = abs($num);\n    }\n    if ($num < 10) {\n      \
    \  return array(0, 1);\n    }\n    if ($num < 100) {\n        return array(1,\
    \ 1);\n    }\n    if ($num < 1000) {\n        return array(1, 2);\n    }\n   \
    \ if ($num < 10000) {\n        return array(2, 1);\n    }\n    if ($num < 100000)\
    \ {\n        return array(2, 2);\n    }\n    if ($num < 1000000) {\n        return\
    \ array(3, 1);\n    }\n    if ($num < 10000000) {\n        return array(3, 2);\n\
    \    }\n    if ($num < 100000000) {\n        return array(3, 3);\n    }\n    if\
    \ ($num < 1000000000) {\n        return array(3, 4);\n    }\n    if ($num < 10000000000)\
    \ {\n        return array(3, 5);\n    }\n    if ($num < 100000000000) {\n    \
    \    return array(3, 6);\n    }\n    if ($num < 1000000000000) {\n        return\
    \ array(3, 7);\n    }\n    if ($num < 10000000000000) {\n        return array(3,\
    \ 8);\n    }\n    if ($num < 100000000000000) {\n        return array(3, 9);\n\
    \    }\n    if ($num < 1000000000000000) {\n        return array(4, 1);\n    }\n\
    \    if ($num < 10000000000000000) {\n        return array(4, 2);\n    }\n   \
    \ if ($num < 100000000000000000) {\n        return array(4, 3);\n    }\n    if\
    \ ($num < 1000000000000000000) {\n        return array(4, 4);\n    }\n    if ($num\
    \ < 10000000000000000000) {\n        return array(4, 5);\n    }\n    if ($num\
    \ < 100000000000000000000) {\n        return array(4, 6);\n    }\n    if ($num\
    \ < 1000000000000000000000) {\n        return array(4, 7);\n    }\n    if ($num\
    \ < 10000000000000000000000) {\n        return array(4, 8);\n    }\n    if ($num\
    \ < 100000000000000000000000) {\n        return array(4, 9);\n    }\n    if ($num\
    \ < 1000000000000000000000000) {\n        return array(5, 1);\n    }\n    if ($num\
    \ < 10000000000000000000000000) {\n        return array(5, 2);\n    }\n    if\
    \ ($num < 100000000000000000000000000) {\n        return array(5, 3);\n    }\n\
    \    if ($num < 1000000000000000000000000000) {\n        return array(5, 4);\n\
    \    }\n    if ($num < 10000000000000000000000000000) {\n        return array(5,\
    \ 5);\n    }\n    if ($num < 100000000000000000000000000000) {\n        return\
    \ array(5, 6);\n    }\n    if ($num < 1000000000000000000000000000000) {\n   \
    \     return array(5, 7);\n    }\n    if ($num < 10000000000000000000000000000000)\
    \ {\n        return array(5, 8);\n    }\n    if ($num < 100000000000000000000000000000000)\
    \ {\n        return array(5, 9);\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfkpbj2ic.php on line 122\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $result\
    \ = array();\n    while ($num > 0) {\n        $num = $num / 10;\n        if ($num\
    \ % 2 == 0) {\n            $result[] = array($num);\n        }\n        $num =\
    \ $num / 2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbedq504p.php:23\n\
    Stack trace:\n#0 /tmp/tmpbedq504p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbedq504p.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0; $odd = 0;\n  $num_str = strval($num);\n  $num_str = preg_replace('/[^\\d]/',\
    \ \"\", $num_str);\n  for($i = strlen($num_str) - 1; $i >= 0; $i--) {\n    $digit\
    \ = substr($num_str, $i, 1);\n    if ($digit == \"0\")\n      $even++;\n    else\n\
    \      $odd++;\n  }\n  return array(\"even_count\" => $even, \"odd_count\" =>\
    \ $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvcfupk6.php:24\n\
    Stack trace:\n#0 /tmp/tmpsvcfupk6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsvcfupk6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$result\
    \ = array();\n\t$num = (string) $num;\n\t$evens = 0;\n\t$odds = 0;\n\tif (preg_match('/^-?[0-9]+$/',\
    \ $num) == 1) {\n\t\t$num = str_replace(',', '', $num);\n\t\t$len = strlen($num);\n\
    \t\tfor ($i = 0; $i < $len; $i++) {\n\t\t\tif ($num[$i] !== '.') {\n\t\t\t\tif\
    \ ($num[$i] % 2 === 0) {\n\t\t\t\t\t$evens++;\n\t\t\t\t} else {\n\t\t\t\t\t$odds++;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$result = ($evens == $odds) ? array() : ($evens,\
    \ $odds);\n\t\treturn $result;\n\t}\n\treturn $result;\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplj7tjd8e.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $remainder = 0;\n\n    while (is_integer($num)) {\n\
    \        $remainder = $num % 10;\n        if ($remainder % 2 == 0) {\n       \
    \     $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = $num / 10;\n    }\n\n    return (array($even, $odd));\n}\n\n$num = $_GET['num'];\n\
    \n$num = intval($num);\n$even = $odd = 0;\n\nif ($num >= 0) {\n    $num = $num\
    \ * 100;\n}\n\n$digits = strlen($num);\n$even = even_odd_count($num);\n\nfor ($i\
    \ = 0; $i < $digits; $i++) {\n    if ($i % 2 == 0) {\n        if ($even[0] !=\
    \ 0) {\n            if ($even[0] == 1) {\n                echo \"$even[1]\";\n\
    \            } else {\n                echo \"$even[0]\";\n            }\n   \
    \     }\n        if ($odd == 0) {\n            echo \"0\";\n        } else {\n\
    \            if ($odd == 1) {\n                echo \"1\";\n            } else\
    \ {\n                echo \"2\";\n            }\n        }\n    } else {\n   \
    \     if ($even[1] != 0) {\n            if ($even[1] == 1) {\n               \
    \ echo \"$even[0]\";\n            } else {\n                echo \"$even[1]\"\
    ;\n            }\n        }\n        if ($odd == 0) {\n            echo \"0\"\
    ;\n        } else {\n            if ($odd == 1) {\n                echo \"1\"\
    ;\n            } else {\n                echo \"2\";\n            }\n        }\n\
    \    }\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $rep =\
    \ intdiv($num, $2);\n    $rem = intdiv($num - $rep, 2);\n    return array($rep,\
    \ $rem);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp95lnavy4.php on line 7\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$count =\
    \ 0;\n\twhile($num > 0) {\n\t\t$count += ($num % 2 == 0);\n\t\t$num = $num / 2;\n\
    \t}\n\treturn array($count,$num);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07__xnhs.php:20\n\
    Stack trace:\n#0 /tmp/tmp07__xnhs.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp07__xnhs.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odd =\
    \ $even = 0;\n    while (true) {\n        $num = ($num / 10) % 10;\n        $odd++;\n\
    \        if ($num == 0) {\n            $even++;\n            break;\n        }\n\
    \    }\n\n    return array($even, $odd);\n}\n\n$even = even_odd_count(-5);\n$odd\
    \ = even_odd_count(5);\n\nprint(\"Even digits: $even[0], Odd digits: $odd[0].\\\
    n\");\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Even digits: 1, Odd digits: 1.\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhc7izpk.php:30\nStack trace:\n#0 /tmp/tmprhc7izpk.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhc7izpk.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $num_str\
    \ = strval($num);\n  $even = 0;\n  $odd = 0;\n  for ($i = 0; $i < strlen($num_str);\
    \ $i++) {\n    if ($num_str[$i] % 2 == 0) {\n      $even++;\n    } else {\n  \
    \    $odd++;\n    }\n  }\n  return array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp1pzplfv4.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1pzplfv4.php:25\n\
    Stack trace:\n#0 /tmp/tmp1pzplfv4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1pzplfv4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $remainder\
    \ = 0;\n    $num = $num * 100 % 10;\n    $even_digit = 0;\n    $odd_digit = 0;\n\
    \n    while($num > 0) {\n        $remainder = $num % 10;\n        $num = $num\
    \ / 10;\n\n        if($remainder === 1) {\n            $even_digit++;\n      \
    \  }\n\n        if($remainder === 0) {\n            $odd_digit++;\n        }\n\
    \    }\n\n    return array($even_digit, $odd_digit);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11jn81j7.php:33\n\
    Stack trace:\n#0 /tmp/tmp11jn81j7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp11jn81j7.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$odds =\
    \ 0;\n\t$evens = 0;\n\tfor ($i = 0; $i <= $num; $i++) {\n\t\t$evens += (is_numeric($num\
    \ - $i) ? 1 : 0);\n\t\t$odds += (is_numeric($num / $i) ? 1 : 0);\n\t}\n\treturn\
    \ array(($evens - 1), ($odds - 1));\n}\n</code>\n<|/ a tags=arrays,php |>\n<|\
    \ c |>\nI like this solution! Though i think the complexity should be O(n), not\
    \ O(n*m) since we check each number once\n<|/ c |>\n<| a dscore=2 |>\nI would\
    \ propose a different approach. I would first create an array of all numbers with\
    \ their digits.\n<code>\n$numbers = array_map(function ($n) {\n    return str_split($n);\n\
    }, range(-12, 13));\n</code>\nThen I would use array_filter() to filter out the\
    \ numbers that are not evenly divisible by 2. This saves me from having to recreate\
    \ the array each time the function gets called.\n<code>\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp074o0cys.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $remain = $num % 10;\n\
    \        $even = $even + $remain * 2;\n        $odd = $odd + $remain;\n      \
    \  $num = $num / 10;\n    }\n    return array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggyaj_js.php:22\n\
    Stack trace:\n#0 /tmp/tmpggyaj_js.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpggyaj_js.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  if ($num\
    \ < 0)\n    die(\"Need a positive number!\");\n\n  $odds = 0;\n  $evens = 0;\n\
    \  while (1) {\n    if ($num % 2 === 0) // even digit\n      $evens++;\n    else\n\
    \      $odds++;\n    if ($num === 0) // the number is 0, we're done\n      break;\n\
    \    $num = $num / 2;\n  }\n\n  return array($evens, $odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $result\
    \ = array();\n    if ($num < 0) {\n        return $result;\n    }\n    if ($num\
    \ < 10) {\n        $result[] = $num;\n        return $result;\n    }\n    $odd_count\
    \ = 0;\n    $even_count = 0;\n    $current_num = $num;\n    while ($current_num\
    \ > 0) {\n        $odd_count++;\n        $current_num = floor($current_num / 10);\n\
    \    }\n    while ($current_num >= 10) {\n        $current_num = $current_num\
    \ / 10;\n        $even_count++;\n    }\n    $result[] = $even_count;\n    $result[]\
    \ = $odd_count;\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv14ebo27.php:36\n\
    Stack trace:\n#0 /tmp/tmpv14ebo27.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpv14ebo27.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  if ($num\
    \ < 0) return array(-1, 0);\n\n  $num = $num % 10;\n  $odds = floor($num / 10);\n\
    \  $evens = ($num - $odds) * 10;\n\n  return array($evens, $odds);\n}\n</code>\n\
    <|/ a tags=php,algorithm,math |>\n<| c |>\nThe number will be negative. Try it\
    \ on -12\n<|/ c |>\n<| c |>\nThank you so much for this answer. Even though the\
    \ question is very old and already answered, I felt that this answer helped me\
    \ a lot so +1 :)\n<|/ c |>\n<| a dscore=3 |>\nHere is my simple solution:\n<code>\n\
    <?php\n$n = intval(preg_replace('/[^0-9.]/', '', $input));\n$even_odd = ($n %\
    \ 2 != 0) ? \"even\" : \"odd\";\necho $even_odd.\" number: \".$n;\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpp36jb_k5.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ [$num % 2 == 0 ? ($num % 2 == 1 ? 'even' : 'odd') : 'even', ($num % 2 == 1 ?\
    \ 'odd' : 'even')];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4d_mmd6d.php:15\n\
    Stack trace:\n#0 /tmp/tmp4d_mmd6d.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4d_mmd6d.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$evens =\
    \ 0;\n\t$odds = 0;\n\twhile($num >= 10) {\n\t\t$num -= 10;\n\t\t$evens++;\n\t\
    }\n\t$odds = ($evens%2 == 0) ? $evens-1 : $evens;\n\treturn array($evens, $odds);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx7vmyg8e.php:21\n\
    Stack trace:\n#0 /tmp/tmpx7vmyg8e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpx7vmyg8e.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num_str\
    \ = strval($num);\n    $even = intval(substr($num_str, 0, strpos($num_str, ',')));\n\
    \    $odd = intval(substr($num_str, strpos($num_str, ',') + 1));\n    return ($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3xk04r4u.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $result\
    \ = array(0 => 0, 1 => 0);\n    do {\n        $result[$num % 10] += 1;\n     \
    \   $num = floor($num / 10);\n    } while ($num > 0);\n    return $result;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=php |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp54rio5ch.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  return [$num\
    \ / 2 % 2 == 0, $num / 2 % 2 != 0];\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Thank you, this is what I was looking for.\n<|/ c |>\n<| a |>\nTry this code:\n\
    <code>\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphlmgo5ks.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odd =\
    \ $even = 0;\n    $result = null;\n    while ($num !== 0) {\n        $remainder\
    \ = $num % 10;\n        if ($num % 2 === 0) {\n            $even += $remainder;\n\
    \        }\n        $odd += $remainder;\n        $num = floor($num / 10);\n  \
    \  }\n    return array('even' => $even, 'odd' => $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) {\n        return -1;\n    }\n    if ($num == 0) {\n        return 0;\n\
    \    }\n    $count = 0;\n    while (1) {\n        if ($num % 2 === 0) {\n    \
    \        $count++;\n        }\n        $num /= 10;\n        if ($num == 0) {\n\
    \            break;\n        }\n    }\n    return array($count, $num % 10);\n\
    }\n\n/**\n * Return the number of characters in the given string.\n *\n * @param\
    \ string $str\n *\n * @return integer\n */\nfunction candidate(...$args) {\n \
    \   return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnj85_ji7.php:38\n\
    Stack trace:\n#0 /tmp/tmpnj85_ji7.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnj85_ji7.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $result\
    \ = [];\n  $i = 0;\n  $num = (int) $num;\n  if ($num < 0) {\n    return $result;\n\
    \  }\n  do {\n    $result[$i] = (int)($num % 10);\n    $num = (int) ($num / 10);\n\
    \    if ($num % 2 == 0) {\n      $i++;\n    }\n  } while ($num);\n\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5qjpwld.php:29\n\
    Stack trace:\n#0 /tmp/tmpy5qjpwld.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpy5qjpwld.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even_count\
    \ = 0;\n  $odd_count = 0;\n  for ($i = 0; $i < strlen($num); $i++) {\n    if ($num[$i]\
    \ % 2 == 0) {\n      $even_count++;\n    } else {\n      $odd_count++;\n    }\n\
    \  }\n  return array($even_count, $odd_count);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6nl6wt29.php:24\n\
    Stack trace:\n#0 /tmp/tmp6nl6wt29.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6nl6wt29.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num +=\
    \ 0;\n    $odd = 0;\n    $even = 0;\n\n    // find out how many evens and odds\
    \ are in the number\n    while (1) {\n        if ($num % 2 === 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n\n        //\
    \ stop the loop if the number is either zero or one of the two numbers have all\
    \ been found\n        if ($num === 0 || ($even + $odd) === 2) {\n            break;\n\
    \        }\n\n        // find the next even and odd number\n        $num = $num\
    \ / 2;\n    }\n\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3q3r1bo.php:36\n\
    Stack trace:\n#0 /tmp/tmp_3q3r1bo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_3q3r1bo.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even_count\
    \ = 0;\n\t$odd_count = 0;\n\t\n\t// Iterate over every digit.\n\tfor ($i = 0;\
    \ $i < strlen($num); ++$i) {\n\t\tif ($num[$i] % 2 == 0) {\n\t\t\t$even_count++;\n\
    \t\t} else {\n\t\t\t$odd_count++;\n\t\t}\n\t}\n\t\n\treturn array($even_count,\
    \ $odd_count);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpww4d51v5.php:26\n\
    Stack trace:\n#0 /tmp/tmpww4d51v5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpww4d51v5.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0){\n        return \"(\" . even_odd_count($num * -1) . \", 0)\";\n    }\n\
    \n    // initialize array to store count of even and odd digits\n    $odd_nums\
    \ = array();\n    $even_nums = array();\n\n    // iterate through the digits in\
    \ the number and check if it is even\n    // or odd\n    $nums = str_split($num);\n\
    \    foreach ($nums as $num) {\n        if($num % 2 === 0) {\n            $even_nums[]\
    \ = $num;\n        } else {\n            $odd_nums[] = $num;\n        }\n    }\n\
    \n    return array(count($even_nums), count($odd_nums));\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=php |>\n<code>\n$number = 123456789;\n$num_digits = str_split($number);\n\
    $odd_digits = array_filter($num_digits, function ($value) {\n    return $value\
    \ % 2 === 1;\n});\n$even_digits = array_filter($num_digits, function ($value)\
    \ {\n    return $value % 2 === 0;\n});\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    While this code may answer the question, providing additional context regarding\
    \ how and/or why it solves the problem would improve the answer's long-term value.\
    \ Please read this [how-to-answer](http://stackoverflow.com/help/how-to-answer)\
    \ for providing quality answer.\n<|/ c |>\n<| a |>\n<code>\n<?php\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpi5sj2wv7.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  while (true) {\n    if ($num < 0) {\n      break;\n    }\n\
    \    if ($num % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n\
    \    $num = $num / 2;\n  }\n\n  return [$even, $odd];\n}\n</code>\n<|/ a |>\n\
    <| a |>\nUsing binary arithmetic and bit shifting:\n<code>\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpoy12x0cv.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $evenCount\
    \ = 0;\n    $oddCount = 0;\n    $divisor = intval($num / 2);\n\n    while( ($num\
    \ % $divisor) != 0) {\n        $evenCount++;\n        $num = $divisor + $num;\n\
    \    }\n\n    while( ($num % $divisor) == 0) {\n        $oddCount++;\n       \
    \ $num = $divisor + $num;\n    }\n    return array( $evenCount, $oddCount );\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $count\
    \ = 0;\n    while ($num != 0) {\n        if ($num % 2 == 0) {\n            $count++;\n\
    \        } else {\n            $num = floor($num / 2);\n        }\n    }\n   \
    \ return array($count, abs($num % 2));\n}\n$ans = even_odd_count($num);\n\n$evenCount=substr($ans[0],0,0);\n\
    $oddCount=substr($ans[1],0,0);\nif($num == 0){\n    echo \"$evenCount$oddCount\\\
    n\";\n}else{\n    echo \"$evenCount$oddCount\\n\" . even_odd_count($num) . \"\\\
    n\";\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh3znmxe.php:31\n\
    Stack trace:\n#0 /tmp/tmprh3znmxe.php(41): test()\n#1 {main}\n  thrown in /tmp/tmprh3znmxe.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $evens\
    \ = 0;\n    $odds = 0;\n    while ($num) {\n        $odd_or_even = ($num % 10\
    \ == 0) ? \"even\" : \"odd\";\n        array_push($num, $odd_or_even);\n     \
    \   if ($odd_or_even == \"even\") {\n            $evens++;\n        } else {\n\
    \            $odds++;\n        }\n        $num /= 10;\n    }\n    return array($evens,\
    \ $odds);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_push() expects parameter 1 to be array, int given in /tmp/tmpcp_n1pel.php\
    \ on line 11\n\nWarning: array_push() expects parameter 1 to be array, float given\
    \ in /tmp/tmpcp_n1pel.php on line 11\n\nWarning: array_push() expects parameter\
    \ 1 to be array, float given in /tmp/tmpcp_n1pel.php on line 11\n\nWarning: array_push()\
    \ expects parameter 1 to be array, float given in /tmp/tmpcp_n1pel.php on line\
    \ 11\n\nWarning: array_push() expects parameter 1 to be array, float given in\
    \ /tmp/tmpcp_n1pel.php on line 11\n\nWarning: array_push() expects parameter 1\
    \ to be array, float given in /tmp/tmpcp_n1pel.php on line 11\n\nWarning: array_push()\
    \ expects parameter 1 to be array, float given in /tmp/tmpcp_n1pel.php on line\
    \ 11\n\nWarning: array_push() expects parameter 1 to be array, float given in\
    \ /tmp/tmpcp_n1pel.php on line 11\n\nWarning: array_push() expects parameter 1\
    \ to be array, float given in /tmp/tmpcp_n1pel.php on line 11\n\nWarning: array_push()\
    \ expects parameter 1 to be array, float given in /tmp/tmpcp_n1pel.php on line\
    \ 11\n\nWarning: array_push() expects parameter 1 to be array, float given in\
    \ /tmp/tmpcp_n1pel.php on line 11\n\nWarning: array_push() expects parameter 1\
    \ to be array, float given in /tmp/tmpcp_n1pel.php on line 11\n\nWarning: array_push()\
    \ expects parameter 1 to be array, float given in /tmp/tmpcp_n1pel.php on line\
    \ 11\n\nWarning: array_push() expects parameter 1 to be array, float given in\
    \ /tmp/tmpcp_n1pel.php on line 11\n\nWarning: array_push() expects parameter 1\
    \ to be array, float given in /tmp/tmpcp_n1pel.php on line 11\n\nWarning: array_push()\
    \ expects parameter 1 to be array, float given in /tmp/tmpcp_n1pel.php on line\
    \ 11\n\nWarning: array_push() expects parameter 1 to be array, float given in\
    \ /tmp/tmpcp_n1pel.php on line 11\n\nWarning: array_push() expects parameter 1\
    \ to be array, float given in /tmp/tmpcp_n1pel.php on line 11\n\nWarning: array_push()\
    \ expects parameter 1 to be array, float given in /tmp/tmpcp_n1pel.php on line\
    \ 11\n\nWarning: array_push() expects parameter 1 to be array, float given in\
    \ /tmp/tmpcp_n1pel.php o"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $evens =\
    \ $odds = 0;\n\n  for ($i = 0; $i < strlen($num); $i++) {\n    if ($num[$i] &\
    \ 1) {\n      $odds++;\n    } else {\n      $evens++;\n    }\n  }\n\n  return\
    \ [$evens, $odds];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhggvhae.php:25\n\
    Stack trace:\n#0 /tmp/tmpyhggvhae.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyhggvhae.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $count =\
    \ 0;\n  $odd = false;\n  $even = true;\n\n  while ($num) {\n    $mod = $num %\
    \ 10;\n    if ($mod > 1 && !$odd)\n      $odd++;\n    elseif (!$mod && $odd)\n\
    \      $even++;\n    $num = $num / 10;\n  }\n  return array($even, $odd);\n}\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5qooqey.php:27\n\
    Stack trace:\n#0 /tmp/tmpd5qooqey.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd5qooqey.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \ = 0\n    $odd_count = 0\n    while($num > 0) {\n        if($num % 2 == 0) {\n\
    \            $even_count++\n        } else {\n            $odd_count++\n     \
    \   }\n        $num = $num / 2;\n    }\n    return [$even_count, $odd_count];\n\
    }\n</code>\nTests\n<code>\necho even_odd_count(-1); //(-1, 0)\necho even_odd_count(1);\
    \ //(1, 0)\necho even_odd_count(3); //(1, 2)\necho even_odd_count(5); //(1, 3)\n\
    echo even_odd_count(7); //(2, 4)\necho even_odd_count(10); //(2, 5)\necho even_odd_count(13);\
    \ //(2, 6)\necho even_odd_count(20); //(3, 8)\necho even_odd_count(27); //(4,\
    \ 10)\n</code>\n<|/ a dscore=1 |>\n<| c |>\nWhy are you doing `intval($num)`?\n\
    <|/ c |>\n<| c |>\nAh ha! I was thinking I was using that to round the number\
    \ down to integer. Thanks\n<|/ c |>\n<| c |>\nYeah this worked for me. I had to\
    \ add an extra line and I added it before the `return` statement: `$num_digits\
    \ = strlen($num); $num_odd = $num_digits - $odd_count; $num_even = $num_digits\
    \ - $even_count;`\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpn1aimduz.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\tlist($even,\
    \ $odd) = array(1, 0);\n\twhile ($num >= 1) {\n\t\t$odd = $odd + $num % 2 ? 1\
    \ : 0;\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_x8lfwk.php:20\n\
    Stack trace:\n#0 /tmp/tmpo_x8lfwk.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpo_x8lfwk.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  return [intval($num\
    \ % 2 === 0), intval($num % 2 !== 0)];\n}\n</code>\nThe result is the same for\
    \ any positive number, but it can easily be extended to handle negative numbers.\n\
    <|/ a tags=php,algorithm,number-theory,performance |>\n<| c |>\nThank you for\
    \ the solution and the time you took to explain it :) i was able to understand\
    \ the code and it works.\n<|/ c |>\n<| a dscore=3 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvdh4rpir.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0)\n    {\n        echo \"Invalid input\";\n        return;\n    }\n    $numString\
    \ = (string)$num;\n    $evenCount = 0;\n    $oddCount = 0;\n    for ($i = 0; $i\
    \ < strlen($numString); $i++)\n    {\n        // $numString[$i] contains the current\
    \ character\n        if ($numString[$i] >= '0' && $numString[$i] <= '9')\n   \
    \     {\n            if ($numString[$i] % 2 == '0')\n            {\n         \
    \       $evenCount++;\n            }\n            else\n            {\n      \
    \          $oddCount++;\n            }\n        }\n    }\n    return array( $evenCount,\
    \ $oddCount);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Invalid input\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzu5x0_n1.php:39\n\
    Stack trace:\n#0 /tmp/tmpzu5x0_n1.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpzu5x0_n1.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num =\
    \ abs($num); // remove sign if any\n    $odd = $even = 0;\n\n    if ($num < 0)\n\
    \        $num = -$num;\n\n    while ($num) {\n        if ($num & 1)\n        \
    \    $even++;\n        else\n            $odd++;\n        $num >>= 1;\n    }\n\
    \n    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6s690hy.php:29\n\
    Stack trace:\n#0 /tmp/tmpe6s690hy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpe6s690hy.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$evens =\
    \ 0;\n\t$odds = 0;\n\tif ($num < 0) {\n\t\treturn array(0, 0);\n\t}\n\tdo {\n\t\
    \tif ($num % 2 == 0) {\n\t\t\t$evens++;\n\t\t} else {\n\t\t\t$odds++;\n\t\t}\n\
    \t} while ($num > 0);\n\treturn array($evens, $odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // Only\
    \ odd numbers are counted as even ones\n    $num_as_str = abs($num);\n    $num_as_str\
    \ = (strlen($num_as_str) - 1);\n    $even_count = 0; // Even numbers are counted\
    \ from 0 to num_as_str\n    $odd_count = 0; // Odd numbers are counted from 1\
    \ to num_as_str\n    for ($i = 0; $i < strlen($num_as_str); $i++) {\n        //\
    \ If the current digit is odd, add the one to the odd count\n        if ($num_as_str\
    \ % 2 == 1) {\n            $odd_count++;\n        } else {\n            // If\
    \ the current digit is even, add the one to the even count\n            $even_count++;\n\
    \        }\n    }\n    return array(\"even_count\" => $even_count, \"odd_count\"\
    \ => $odd_count);\n}\n</code>\nTest:\n<code>\n$number = -123;\n$result = even_odd_count($number);\n\
    \nvar_dump($result); // Prints: array (size=2)\n    // 0 => string 'even_count'\
    \ (length=12)\n    // 1 => int 1\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    The most simple way is to do with modulus:\n<code>\n<?php\n\n$num = 1;\n$odd_count\
    \ = floor($num / 2);\n$even_count = ceil($num / 2);\n\necho $even_count .\" even\
    \ numbers. \";\necho $odd_count .\" odd numbers.\";\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5n2__0xc.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $n = abs($num);\n\
    \  return array($n%(2*floor($n/2)), $n%(2*floor($n/2))-$n%(2*floor($n/2)));\n\
    }\n</code>\nI got the above function from here\n<|/ a |>\n<| a dscore=0 |>\n<code>\n\
    <?php\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5zzkbuoa.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ array(count($num) % 2 == 0 ? 1 : 0, count($num) % 2 == 1 ? 1 : 0);\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp2o5p_s43.php on line 7\n\nWarning: count(): Parameter must\
    \ be an array or an object that implements Countable in /tmp/tmp2o5p_s43.php on\
    \ line 7\n\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp2o5p_s43.php on line 7\n\nWarning: count(): Parameter must\
    \ be an array or an object that implements Countable in /tmp/tmp2o5p_s43.php on\
    \ line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2o5p_s43.php:15\n\
    Stack trace:\n#0 /tmp/tmp2o5p_s43.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2o5p_s43.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num =\
    \ $num % 10; // get last digit (even or odd)\n    $even_count = (int) ($num /\
    \ 10); // get number of evens\n    $odd_count = (int) ($num / 10); // get number\
    \ of odds\n    return array($even_count, $odd_count);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp05y1cicy.php:18\n\
    Stack trace:\n#0 /tmp/tmp05y1cicy.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp05y1cicy.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) {\n        return null;\n    }\n    $count = 0;\n    $odd = 0;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        // If $i is odd, increase by 1.\
    \ \n        if ($num[$i] % 2 != 0) {\n            $count++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return array(\"even\" => $count, \"\
    odd\" => $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphx6bigtf.php:28\n\
    Stack trace:\n#0 /tmp/tmphx6bigtf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphx6bigtf.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) {\n        return (1, 0);\n    }\n    if ($num == 0) {\n        return\
    \ (0, 0);\n    }\n    if ($num > 0) {\n        $arr = str_split($num);\n     \
    \   foreach ($arr as $key => $val) {\n            if ($val % 2 == 0) {\n     \
    \           return (1, $key+1);\n            }\n        }\n    }\n    return (0,\
    \ 0);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4tvau21e.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) return ($num, 0);\n    if ($num == 0) return ($num, 0);\n    $even = 0;\n\
    \    $odd = 0;\n    while (is_integer($num)) {\n        if ($num % 2 === 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    \
    \    $num = floor($num / 10);\n    }\n    return ($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1ntnhe_h.php on line 7\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \ = 0;\n    $odd_count = 0;\n    if ($num < 0) {\n        // negative number\n\
    \        return ($odd_count, abs($num));\n    }\n    $i = 1;\n    while (true)\
    \ {\n        $is_even = (($num & $i) == 0);\n        $odd = !$is_even;\n     \
    \   $even_count = $is_even ? $even_count + 1 : $even_count;\n        $odd_count\
    \ = $odd ? $odd_count + 1 : $odd_count;\n        $i = $i + 2;\n        if ($i\
    \ == $num) {\n            break;\n        }\n    }\n    return ($even_count, $odd_count);\n\
    }\n\n/**\n * Check if a value is an integer.\n *\n * @param mixed $num\n * @return\
    \ bool\n */\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpngbyd01r.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even_count\
    \ = $odd_count = 0;\n  while (true) {\n    if ($num < 0) {\n      $num = -$num;\n\
    \      $sign = '-';\n    } else {\n      $sign = '';\n    }\n    if ($num % 2\
    \ == 0) {\n      $even_count++;\n    } else {\n      $odd_count++;\n    }\n  \
    \  if ($num == 0) {\n      break;\n    }\n    $num = $num / 10;\n  }\n\n  return\
    \ array($sign, $even_count, $odd_count);\n}\n\n$input = array();\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapufpm8c.php:35\n\
    Stack trace:\n#0 /tmp/tmpapufpm8c.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpapufpm8c.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $temp = $num % 10;\n  \
    \      $num = $num / 10;\n        if ($temp % 2 === 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdf81byxs.php:26\n\
    Stack trace:\n#0 /tmp/tmpdf81byxs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdf81byxs.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) return (1, 0);\n    if ($num % 2 == 0) return (0, 1);\n    return (1, 0);\n\
    }\n</code>\n<|/ a tags=php,algorithm |>\n<| c |>\nThis is not correct.  A number\
    \ that ends in 2 evens should have one 0 and one 1.\n<|/ c |>\n<| c |>\nThis answer\
    \ is wrong. Number that ends in 3 evens should have 2 `0` and one `1`, as in your\
    \ example. But, your function gives `3` as a result.\n<|/ c |>\n<| c |>\n`even_odd_count(-10)`\
    \ gives `(-1, 1)`, not `(1, 1)`.\n<|/ c |>\n<| c |>\n- Yes, you're right. Didn't\
    \ see the negative number. Thanks. Fixed.\n<|/ c |>\n<| c |>\n- Please take a\
    \ look at the example given and tell me if that is the output you get for `even_odd_count(-10)`\n\
    <|/ c |>\n<| a tags=php,algorithm |>\nHere's an improved version. I thought I\
    \ should share it.\n<code>\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8ac3y0tv.php on line 7\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$sum = 0;\n\
    \tfor ($i = 0; $i < strlen($num); $i++) {\n\t\t$digit = $num[$i];\n\t\tif ($digit\
    \ == 1) {\n\t\t\t$sum += 2;\n\t\t} else {\n\t\t\t$sum += 1;\n\t\t}\n\t}\n\treturn\
    \ ($sum % 2 != 0, $sum % 2 == 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpa9c6swly.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while($num != 0) {\n        if($num % 2 == 0) {\n \
    \           $even++;\n        }\n        else {\n            $odd++;\n       \
    \ }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp424bff_o.php:26\n\
    Stack trace:\n#0 /tmp/tmp424bff_o.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp424bff_o.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while (abs($num) > 0) {\n        $num = floor($num\
    \ / 10);\n        if ($num % 2 === 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9mvwr280.php:24\n\
    Stack trace:\n#0 /tmp/tmp9mvwr280.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9mvwr280.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odd =\
    \ $num % 2 == 0;\n    $even = ! $odd;\n    return array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnydwju37.php:17\n\
    Stack trace:\n#0 /tmp/tmpnydwju37.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnydwju37.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $evens =\
    \ 0;\n  $odds = 0;\n  while ($num > 0) {\n    $remainder = $num % 10;\n    $num\
    \ = (int) $num / 10;\n    if ($remainder % 2 == 0) {\n      $evens++;\n    } else\
    \ {\n      $odds++;\n    }\n  }\n  return [$evens, $odds];\n}\n\n$num = intval($input[0]);\n\
    \n$result = even_odd_count($num);\n\n$odd = $result[0];\n$even = $result[1];\n\
    \necho \"The number is even: $even, odd: $odd\\n\";\n</code>\nOutput:\n<code>\n\
    The number is even: 1, odd: 1\n</code>\n<|/ a tags=math,php |>\n<| c |>\nVery\
    \ nice! I love this approach - much more concise and to the point. I think I'll\
    \ go ahead and delete my answer as yours is a much better approach.\n<|/ c |>\n\
    <| c |>\nI agree with you guys. I deleted my answer before I saw yours :) It would\
    \ be nice to have a bit of a different approach though.\n<|/ c |>\n<| c |>\nI\
    \ hope you guys find my answer helpful :)\n<|/ c |>\n<| a tags=math,php dscore=1\
    \ |>\nThe accepted answer works well but since you are doing a lot of math operations,\
    \ you should look into doing this with a library like GMP (GNU Multiprecision\
    \ arithmetic library) which provides additional functionality.\n<code>\n$evens\
    \ = GMP::divide($num, 10, 2);\n$odds = GMP::divide($num, 10, 1);\n</code>\nhttps://3v4l.org/W8S7H\n\
    <|/ a |>\n<| c |>\nYeah, I read about that. Unfortunately I have to use `gmp`\
    \ for this project. Thank you for pointing it out.\n<|/ c |>\n<| a tags=math,php\
    \ dscore=1 |>\nOkay, the other answers are excellent, but for anyone who has to\
    \ use gmp...\nThis isn't the most efficient code, but it's pretty straightforward:\n\
    <code>\n$num = intval($input[0]);\n\n$evens = floor($num / 10);\n$odds = $num\
    \ % 10;\n\necho \"The number is even: $evens, odd: $odds\\n\";\n</code>\n<|/ a\
    \ |>\n<| c |>\nThank you for the input. I'm a noob when it comes to php, so I\
    \ didn't even consider doing it this way. I'll have to take a closer look at this\
    \ and make sure I understand it full\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpp5o87bdd.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ array( (int)floor(abs($num) / 2), (int)ceil(abs($num) / 2) );\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 tags=php |>\nThis solution avoids any unnecessary\
    \ looping and is more efficient:\n<code>\n<?php\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe8oyb_cj.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) return (0, 0);\n    if ($num < 10) return (1, $num);\n\n    // binary representation\
    \ of $num as binary, $bin_rep\n    $bin_rep = base_convert($num, 10, 2);\n\n \
    \   // $bin_rep is array type because php does not have the bitwise operator to\
    \ determine even/odd bit directly.\n    // So using array_pop to check whether\
    \ even or odd bit exists.\n    $even_odd_bit = array_pop($bin_rep);\n\n    //\
    \ If even bit is 1, then odd is 0, else odd = 1.\n    return ( ($even_odd_bit\
    \ == 1) ? 0 : 1 );\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0nc95i6j.php on line 7\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ array_map(function ($item) {\n        return $item % 2 == 0;\n    }, $num->strToInt(),\
    \ array_filter(array_map(function ($item) {\n        return $item % 2 != 0;\n\
    \    }, $num->strToInt())));\n}\n\nclass EvenOddHelper extends Helper {\n    public\
    \ function __construct($num) {\n        $this->num = $num;\n    }\n\n    public\
    \ function display() {\n        $even_odd_count = even_odd_count($this->num);\n\
    \n        return $this->html(\"Even: \" . count($even_odd_count[0]) . \" / Odd:\
    \ \" . count($even_odd_count[1]));\n    }\n}\n</code>\nOutput is:\n<code>\nEven:\
    \ 4 / Odd: 6\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\nI would use array_reduce()\
    \ with array_filter() instead of array_map(). array_reduce() would do the same\
    \ thing as array_map(), except it returns an array of the results of those function\
    \ calls.\n<code>\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkmyfcbqr.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odd =\
    \ $even = 0;\n    $number = abs($num);\n    if ($number < 0) {\n        return\
    \ Array($odd, $even);\n    }\n    while ($number != 0) {\n        $remainder =\
    \ $number % 10;\n        if ($remainder == 0) {\n            $even++;\n      \
    \  }\n        else {\n            $odd++;\n        }\n        $number /= 10;\n\
    \    }\n    return Array($odd, $even);\n}\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahad21xv.php:29\n\
    Stack trace:\n#0 /tmp/tmpahad21xv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpahad21xv.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) {\n        $num = -$num;\n    }\n    $count = 0;\n    do {\n        if\
    \ ($num % 2 === 1) {\n            $count++;\n        }\n        $num = floor($num\
    \ / 10);\n    } while ($num > 0);\n    return [$count, $num];\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_moqsq2c.php:25\n\
    Stack trace:\n#0 /tmp/tmp_moqsq2c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_moqsq2c.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\tif ($num\
    \ == 0) {\n\t\treturn (1, 0);\n\t}\n\tif ($num < 0) {\n\t\treturn (-1, 1);\n\t\
    }\n\t$count = 0;\n\tfor ($i = 0; $num > 0; $i++) {\n\t\t$count += intval($num\
    \ % 10);\n\t\t$num = intval($num / 10);\n\t}\n\treturn ($count, $count);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0_a5nsth.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n\n    $num = abs($num);\n\n    while ($num) {\n       \
    \ $temp = floor($num / 10);\n        $even = $even + ($temp % 2 === 0);\n    \
    \    $odd = $odd + ($temp % 2 === 1);\n        $num = $temp / 10;\n    }\n\n \
    \   return array($even, $odd);\n}\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmu2v8_6n.php:26\n\
    Stack trace:\n#0 /tmp/tmpmu2v8_6n.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmu2v8_6n.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // If\
    \ num is negative, return 0\n    if ($num < 0)\n        return array(0,0);\n \
    \   \n    $even = 0;\n    $odd = 0;\n    \n    // If num is even, add one to even,\
    \ else subtract one from even.\n    if ($num%2 == 0) {\n        $even++;\n   \
    \ } else {\n        $even--;\n    }\n\n    while($num >= 10) {\n        // Divide\
    \ the number by 10\n        $num -= 10;\n\n        // If number is even, add one\
    \ to even, else subtract one from even.\n        if ($num%2 == 0) {\n        \
    \    $even++;\n        } else {\n            $even--;\n        }\n    }\n\n  \
    \  return array($even, $odd);\n}\n</code>\nThis solution uses very little code.\n\
    <|/ a dscore=2 |>\n<| c |>\nThanks for your answer. But it is giving some warnings\
    \ and notices. I've written the code according to the warnings and notices.\n\
    <|/ c |>\n<| c |>\nWarnings and notices appear for various reasons. I'll post\
    \ an edit to my answer with a more specific way to write your code.\n<|/ c |>\n\
    <| a tags=algorithm,php |>\nI see that you have no answer to your question, but\
    \ I want to say that your code is actually not the simplest solution. Maybe you\
    \ have just started with PHP and you started writing it with the simplest code\
    \ possible. \nSo I wanted to share the most easiest solution to do this: \n<code>\n\
    $num = -123;\n\n$evenDigits = array_filter(str_split($num), function($digit) {\
    \ return $digit % 2 == 0; });\n\n$oddDigits = array_filter(str_split($num), function($digit)\
    \ { return $digit % 2 != 0; });\n\necho \"Even digits: \" . implode(\" \", $evenDigits)\
    \ . \"\\n\";\necho \"Odd digits: \" . implode(\" \", $oddDigits) . \"\\n\";\n\
    </code>\nBut you still can use this code with any number you want. \nPlease read\
    \ more about array_filter(): https://secure.php.net/manual/en/function.array-filter.php\n\
    <|/ a dscore=2 |>\n<| c |>\nThanks for your answer. But it is giving some warnings\
    \ and notices. I've written the code according to the warnings and notices.\n\
    <|/ c |>\n<| c |>\nWhat I mean by \"warnings and notices\" is that I get the output\
    \ in two lines, but not the output as I want. I am getting the output in one line\
    \ as I want.\n<|/ c |>\n<| c |>\nSorry for that. I thought you were ask\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1y8r1g9n.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // TODO:\
    \ Implement Function\n    return ($num == 0 ? 0 : 1);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvsmcmdja.php:15\n\
    Stack trace:\n#0 /tmp/tmpvsmcmdja.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpvsmcmdja.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \ = $odd_count = 0;\n    while($num > 0) {\n        $remainder = $num % 10;\n\
    \        if( $remainder % 2 == 0 ) {\n            $even_count++;\n        } else\
    \ {\n            $odd_count++;\n        }\n        $num = $num / 10;\n    }\n\
    \    return array('even_count' => $even_count, 'odd_count' => $odd_count);\n}\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc1h1v9v.php:24\n\
    Stack trace:\n#0 /tmp/tmpoc1h1v9v.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpoc1h1v9v.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $count =\
    \ 0;\n  $odd_count = 0;\n  while (!($num & 1)) {\n    $num = ~$num;\n    $count\
    \ += 1;\n  }\n  while (!($num & 1)) {\n    $num >>= 1;\n    $odd_count += 1;\n\
    \  }\n  return [$count, $odd_count];\n}\n\n/**\n * Returns true if an even integer\
    \ is passed as argument.\n *\n * @param int $num an integer number\n * @return\
    \ bool\n */\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcho6siok.php:31\n\
    Stack trace:\n#0 /tmp/tmpcho6siok.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcho6siok.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  while($num > 0) {\n    $remainder = $num % 10;\n    if ($remainder\
    \ === 2) {\n      $even++;\n    } else {\n      $odd++;\n    }\n    $num = $num\
    \ / 10;\n  }\n\n  return [$even, $odd];\n}\nfunction candidate(...$args) {\n \
    \   return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb17dw94n.php:26\n\
    Stack trace:\n#0 /tmp/tmpb17dw94n.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb17dw94n.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0)\n    {\n        return (-1, 1);\n    }\n    $evens = 0;\n    $odds = 1;\n\
    \    while ($num > 0)\n    {\n        $current_digit = $num % 10;\n        if\
    \ ($current_digit % 2 == 0)\n        {\n            $evens++;\n        }\n   \
    \     else\n        {\n            $odds++;\n        }\n        $num = $num /\
    \ 10;\n    }\n    return ($evens, $odds);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6oc6sq0g.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    for ($i = 1; $i <= $num; $i++) {\n        if ($num\
    \ % $i == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyiog1osb.php:24\n\
    Stack trace:\n#0 /tmp/tmpyiog1osb.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpyiog1osb.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // Write\
    \ your code here\n    $odd = $even = 0;\n    while($num > 0) {\n        $mod =\
    \ $num % 10;\n        if ($mod % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = ($num - $mod * 10) / 10;\n\
    \    }\n\n    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisiapm7l.php:28\n\
    Stack trace:\n#0 /tmp/tmpisiapm7l.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpisiapm7l.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 1;\n    for ($i = 2; $i <= log10($num); $i++) {\n        if\
    \ ($num / pow(10, $i) == floor($num / pow(10, $i))) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n</code>\n<|/ a tags=algorithm,php |>\n<| a dscore=2 tags=algorithm,php\
    \ |>\nHere is the solution that I came up with in Java for fun and profit.  It's\
    \ based on Gavin King solution, but is slightly different than it requires fewer\
    \ variables.  It returns all the possible permutations, in order, without duplicates.\
    \  If duplicate numbers are wanted, the easiest way to remove them is to sort\
    \ the list and iterate through it.  (Which is exactly what Gavin's solution does)\n\
    <code>\npublic List<Integer> getPermutations(int number) {\n    List<Integer>\
    \ result = new ArrayList<>();\n\n    if (number > 0) {\n        getPermutations(number,\
    \ \"\", result);\n    } else {\n        result.add(number);\n    }\n\n    return\
    \ result;\n}\n\npublic List<Integer> getPermutations(int number, String prefix,\
    \ List<Integer> result) {\n    if (number > 0) {\n        if (number % 2 == 0)\
    \ {\n            for (Integer x : getPermutations(number / 2, prefix + \"0\",\
    \ result)) {\n                result.add(x);\n            }\n        } else {\n\
    \            for (Integer x : getPermutations(number / 2, prefix + \"1\", result))\
    \ {\n                result.add(x);\n            }\n        }\n    } else {\n\
    \        if (number.length() == 1) {\n            result.add(Integer.parseInt(prefix));\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a |>\n<| a dscore=1 |>\n\
    Here is an approach that can work on the even and odd numbers in one function.\
    \ It starts with a function that returns an array containing all possible combinations\
    \ of numbers in even-positioned and odd-positioned positions. Then it can recurse\
    \ through the array and place the numbers as it finds them.\n<code>\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9tpttjjd.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $result\
    \ = array(\n        'even' => 0,\n        'odd' => 0,\n    );\n\n    while ($num\
    \ > 0) {\n        $result[$result['even']++] += $num % 2;\n        $num = int($num\
    \ / 2);\n    }\n\n    return $result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Thank you for answering but I'm afraid I forgot to mention that I have to do this\
    \ in PHP 7.2 and I'm afraid that your solution is not compatible with it\n<|/\
    \ c |>\n<| c |>\nI've fixed the code a bit\n<|/ c |>\n<| c |>\nI've also added\
    \ a second version in pure php (without the use of extra functions) that works\
    \ also with php 7.2\n<|/ c |>\n<| a dscore=0 |>\nTry this one:\n<code>\n$number\
    \ = \"-511\";\n\n$number = \"-1\";\n\n$string = '';\n\nfor($i = 0; $i < strlen($number);\
    \ $i++) {\n    $string .= substr($number, $i, 1);\n}\n\n$stringArr = str_split($string);\n\
    \n$resultArr = array();\n\nforeach ($stringArr as $key => $value) {\n    if($value\
    \ == '1') {\n        $resultArr[$key] = 'even';\n    } else {\n        $resultArr[$key]\
    \ = 'odd';\n    }\n}\n\n$resultArr = array_filter($resultArr, 'strlen');\n$resultArr\
    \ = array_unique($resultArr);\n\nprint_r($resultArr);\n</code>\n<|/ a tags=algorithm,php,math\
    \ |>\n<| a |>\n<code>\n$string = \"-511\";\n$stringArr = str_split($string);\n\
    $resultArr = array();\nforeach ($stringArr as $key => $value) {\n    if($value\
    \ == '1') {\n        $resultArr[$key] = 'even';\n    } else {\n        $resultArr[$key]\
    \ = 'odd';\n    }\n}\n$resultArr = array_filter($resultArr, 'strlen');\n$resultArr\
    \ = array_unique($resultArr);\nprint_r($resultArr);\n</code>\n<|/ a dscore=0 tags=algorithm,php,math\
    \ |>\n<| c |>\nWhile this code may answer the question, it would be better to\
    \ explain _how_ it answers the question, and why that solves the problem without\
    \ introducing others.\n<|/ c |>\n<| a |>\nMy solution using php's inbuilt array\
    \ functions:\n<code>\n<?php\n$number = \"-511\";\n$array = str_split($number\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpw0hq86ld.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $num_str\
    \ = strval($num);\n  $even = 0;\n  $odd = 0;\n  for($i = 0; $i < strlen($num_str);\
    \ $i++) {\n    $char = substr($num_str, $i, 1);\n    $count =  strlen($char);\n\
    \    if ($char === '.') {\n      $even_char_count = even_odd_count($count);\n\
    \      if ($even_char_count === 0) {\n        $odd++;\n      } else if ($even_char_count\
    \ > 0) {\n        $even += $even_char_count;\n      }\n    } else {\n      if\
    \ ($count % 2 === 0) {\n        $even++;\n      } else {\n        $odd++;\n  \
    \    }\n    }\n  }\n  return array((int)$even, (int)$odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6iqm4odh.php:37\n\
    Stack trace:\n#0 /tmp/tmp6iqm4odh.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6iqm4odh.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $sum =\
    \ 0;\n    while ($num >= 10) {\n        $num = $num / 10;\n        $sum++;\n \
    \   }\n\n    return [$sum, strlen($num) - $sum];\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzv7kbx5.php:21\n\
    Stack trace:\n#0 /tmp/tmpgzv7kbx5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpgzv7kbx5.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) return (false, false);\n    if ($num == 0) return (true, true);\n    $digits\
    \ = str_split($num);\n    $odd_count = 0;\n    $even_count = 0;\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 == 1) $even_count++;\n        else $odd_count++;\n\
    \    }\n    return ($even_count, count($digits) - $odd_count);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiz59n9xf.php on line 7\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \  = 0;\n    $odd_count = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder == 0) {\n            $even_count++;\n        }\
    \ else {\n            $odd_count++;\n        }\n        $num      = floor($num\
    \ / 10);\n    }\n    return array($even_count, $odd_count);\n}\n\n$input = \"\
    122\";\nlist($even, $odd) = even_odd_count($input);\necho \"$even, $odd\\n\";\
    \ // echoes 1, 1\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0, 3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fp82z33.php:31\n\
    Stack trace:\n#0 /tmp/tmp1fp82z33.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1fp82z33.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $count\
    \ = 0;\n    while(true) {\n        $remainder = $num % 10;\n        if($remainder\
    \ === 0) {\n            $count++;\n            $num = $num / 10;\n        } else\
    \ {\n            $num = $remainder;\n        }\n        if($num === 0) break;\n\
    \    }\n    if($num === 0) return array(0,0);\n    return array($count,$num);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num_digits\
    \ = strlen((string)$num);\n    $even_count = 0;\n    $odd_count = 0;\n    if ($num_digits\
    \ > 0) {\n        $digit = $num % 10;\n        if ($digit == 0) {\n          \
    \  $even_count++;\n        } else {\n            $odd_count++;\n        }\n  \
    \  }\n    return array($even_count, $odd_count);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm5vv4ovj.php:27\n\
    Stack trace:\n#0 /tmp/tmpm5vv4ovj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm5vv4ovj.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  while (is_numeric($num)) {\n    $last = $num % 10;\n    $even\
    \ = $even + ($last == 0 ? 0 : 1);\n    $num = floor($num / 10);\n    $odd = $odd\
    \ + ($last != 0 ? 1 : 0);\n  }\n  return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 1) {\n        echo \"Error: Number should be positive\";\n        return null;\n\
    \    }\n    if ($num < 0) {\n        echo \"Error: Number should be positive\"\
    ;\n        return null;\n    }\n\n    $even = 0;\n    $odd = 0;\n    for ($i =\
    \ $num; $i >= 1; $i--) {\n        if ($i % 2 == 0) {\n            $even++;\n \
    \       } else {\n            $odd++;\n        }\n    }\n\n    return array(\"\
    even\" => $even, \"odd\" => $odd);\n}\n</code>\nThe other solution is to use PHP's\
    \ Math function:\n<code>\n<?php\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqki9rb47.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $remainder\
    \ = $num % 10;\n  $odd_count = 0;\n  if ($remainder % 2 == 0) {\n    $odd_count++;\n\
    \  }\n  return array($odd_count, $num / 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxj_6gcqt.php:20\n\
    Stack trace:\n#0 /tmp/tmpxj_6gcqt.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxj_6gcqt.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0)\n        return (0,0);\n    $even = 0;\n    $odd = 0;\n    do {\n     \
    \   if ((int)$num % 2 == 0)\n            $even++;\n        else\n            $odd++;\n\
    \        $num /= 10;\n    } while ($num > 0);\n    return ($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmur40wui.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $digits\
    \ = [1, 3];\n    $results = [];\n    do {\n        $results[] = array_shift($digits);\n\
    \        $remainder = intval($num / $digits[0]);\n        $num = $remainder *\
    \ $digits[0];\n        $digits = $results;\n    }\n    while ($num > 0);\n\n \
    \   return $results;\n}\n$result = even_odd_count(-4);\n$even = array_pop($result);\n\
    $odd = array_pop($result);\necho \"Odd: \".$odd.\", Even: \".$even.PHP_EOL;\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Odd: , Even: 1\n\nWarning: Division by zero in /tmp/tmp4fawpynt.php on\
    \ line 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4fawpynt.php:28\n\
    Stack trace:\n#0 /tmp/tmp4fawpynt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4fawpynt.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n\n  while ($num > 0) {\n    $remainder = $num % 10;\n    $num\
    \ = ($num - $remainder) / 10;\n\n    if ($remainder === 0) {\n      $even++;\n\
    \    } else {\n      $odd++;\n    }\n  }\n  return [$even, $odd];\n}\n</code>\n\
    You now have a list of all the even and odd digits of the integer you provided.\
    \ This could now be used to calculate the number of even and odd digits for an\
    \ arbitrary number if you wanted.\n<|/ a tags=php,math |>\n<| c |>\nThis would\
    \ only work for the case of positive numbers. You could try to use [`mt_rand()`](http://php.net/manual/en/function.mt-rand.php)\
    \ to generate a random number between 0 and 1000 and then use `if ($num & 1 ==\
    \ 0) $odd++; else $even++;`. As long as the generated number is random enough,\
    \ it should work.\n<|/ c |>\n<| c |>\nI was under the impression that the goal\
    \ was to solve it for arbitrary integers. Though `mt_rand()` might actually be\
    \ the right approach, I'll leave it to you as the OP should figure that part out.\n\
    <|/ c |>\n<| c |>\nThanks for your answer guys. But I have figured it out on my\
    \ own. Since this is my homework I won't use your answer to solve my homework.\
    \ Thanks again.\n<|/ c |>\n<| a dscore=0 |>\nWell, this is how I do it. The key\
    \ here is the modulo operator (%) which you can use to check how many digits are\
    \ \"active\" in a number.\n<code>\n<?php\n\nfunction candidate(...$args) {\n \
    \   return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqm5bz1gv.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ === 0) {\n        return (1, 0);\n    }\n    $digit = $num % 10;\n    $odd_digit\
    \ = intval($digit / 2);\n    $even_digit = intval($digit - $odd_digit);\n    return\
    \ ($odd_digit, $even_digit);\n}\n</code>\nThe function even_odd_count is able\
    \ to deal with negative numbers. In a sense, it counts how many of the digits\
    \ there are even and how many are odd.\nThe function count_of_digits counts the\
    \ number of digits in the number. This is a function that accepts the number and\
    \ the number of digits already counted and returns that number.\nIn order to know\
    \ how many digits are in the number, we first check if it is 0 (because if it\
    \ is, we cannot count the digits). Otherwise, we count the digits by dividing\
    \ the number by 10 and adding that to the number of digits already counted.\n\
    For an input of -123, the function would return (3, 4, 2)\nFor an input of 1,\
    \ the function would return (2, 1, 1)\nFor an input of 1, the function would return\
    \ (0, 0, 0)\n<|/ a tags=php,algorithm,arrays |>\n<| c |>\ncan u please give some\
    \ more detailed explanation how this function works.\n<|/ c |>\n<| c |>\nI just\
    \ added some explanation to my answer. Hopefully that makes it easier to understand.\n\
    <|/ c |>\n<| c |>\nthank you for your answer. it looks good but can you please\
    \ explain what exactly happening in this function\n<|/ c |>\n<| c |>\nI've added\
    \ some explanation. Hopefully that helps.\n<|/ c |>\n<| c |>\nthanks for your\
    \ effort. its working fine. but can you explain this function more briefly. i\
    \ am confuse with your code. and i cant understand why the final result is 2 instead\
    \ of 3.\n<|/ c |>\n<| a |>\nYou can try this code\n<code>\n<?php\n$input=array(\"\
    12\", \"123\", \"1234\");\n$even= 0;\n$odd = 0;\nforeach($input as $num){\n  if($num%2==0){\n\
    \    $even++;\n  }else{\n    $odd++;\n  }\n}\n\necho $even.' Even, <br/>';\necho\
    \ $odd.' Odd';\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp76mwoxlt.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  return array(\n\
    \    array_sum(preg_grep('/^[0-9]*$/', str_split($num, 2))) / 2,\n    array_sum(preg_grep('/^[0-9]+$/',\
    \ str_split($num, 2))) / 2,\n  );\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprau8mpou.php:18\n\
    Stack trace:\n#0 /tmp/tmprau8mpou.php(28): test()\n#1 {main}\n  thrown in /tmp/tmprau8mpou.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $evens\
    \ = 0;\n    $odds = 0;\n\n    $num = (int)$num;\n\n    while (true) {\n      \
    \  if ($num % 2 == 0) {\n            $evens++;\n        }\n        else {\n  \
    \          $odds++;\n        }\n        $num = (int)($num / 10);\n    }\n\n  \
    \  return [\n        $evens,\n        $odds\n    ];\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| a tags=php,algorithm dscore=0 |>\nUsing modulus to find the number of\
    \ even and odd digits should be enough, since even and odd number are numbers\
    \ in base 2 and the number of digits in a number are its base 10 digits.\n<|/\
    \ a |>\n<| a tags=php,algorithm |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyw0_84nw.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ === 0) {\n        return (0, 0);\n    }\n\n    $num_str = strval($num);\n  \
    \  $num_chars = strlen($num_str);\n\n    $odd = $even = 0;\n    for ($i = 0; $i\
    \ < $num_chars; $i++) {\n        $digit = $num_str[$i];\n        if ($digit ===\
    \ '-' || $digit === '+') {\n            $digit = $num_str[$i + 1];\n        }\n\
    \        if ($digit === '0') {\n            $even++;\n            continue;\n\
    \        }\n        $odd++;\n    }\n    return ($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxrjny9oq.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $temp = 0;\n    if ($num < 0) {\n        $num = abs($num);\n\
    \    }\n    while($num != 0) {\n        $temp = $num % 10;\n        if ($temp\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n\
    }\n\n/**\n * Return the sum of the squares of the integers starting from the second\
    \ parameter to the last parameter.\n */\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk6t_rmg.php:33\n\
    Stack trace:\n#0 /tmp/tmpzk6t_rmg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzk6t_rmg.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\treturn array(\n\
    \t\tintval(is_int($num) ? $num : round($num)),\n\t\tintval(is_int($num) ? $num\
    \ : floor($num))\n\t);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8b318b8o.php:18\n\
    Stack trace:\n#0 /tmp/tmp8b318b8o.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp8b318b8o.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $is_even\
    \ = ($num % 2 == 0);\n  $even_count = count(array_filter(\n    str_split($num),\n\
    \    function($value) {\n      return $value % 2 == 0;\n    }\n  ));\n  if ($is_even)\
    \ {\n    return array($even_count, $even_count + 1);\n  } else {\n    return array($even_count\
    \ + 1, $even_count);\n  }\n}\n$input = file_get_contents(\"php://input\");\n$input\
    \ = (int) $input;\n$evens = even_odd_count($input);\n$odd = even_odd_count($input);\n\
    $even_number = $evens[0];\n$odd_number = $odd[0];\necho ($even_number + $odd_number);\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgpwoujv8.php:32\n\
    Stack trace:\n#0 /tmp/tmpgpwoujv8.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpgpwoujv8.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ intval($num / 2);\n  $odd = intval($num / 10);\n  return [$even, $odd];\n}\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78p8tnny.php:17\n\
    Stack trace:\n#0 /tmp/tmp78p8tnny.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp78p8tnny.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ == 0) {\n        return (1, 0);\n    }\n    $num = (int) $num;\n    $num_even\
    \ = 0;\n    $num_odd = 0;\n    while ($num > 0) {\n        $remainder = $num %\
    \ 10;\n        $num_odd += ($remainder % 2 == 1);\n        $num_even += ($remainder\
    \ % 2 == 0);\n        $num = (int) ($num / 10);\n    }\n    return ($num_even,\
    \ $num_odd);\n}\n</code>\nDemo\n<|/ a dscore=2 |>\n<| a dscore=0 tags=php,algorithm\
    \ |>\nHere is a solution for any given input. It\u2019s more efficient than any\
    \ other methods I found. \n<code>\n<?php\n/**\n * Count even and odd digits in\
    \ a number\n *\n * int $n The number to count\n * array $res An array of the even\
    \ and odd digits counts\n *\n * array The count of even and odd digits in a number\n\
    \ */\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxstayqti.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) return null;\n\n    $even_count = 0;\n    $odd_count = 1;\n\n    while($num\
    \ > 0) {\n        if ($num % 2 == 0) {\n            $even_count++;\n        }\
    \ else {\n            $odd_count++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even_count, $odd_count);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ksnxbh1.php:28\n\
    Stack trace:\n#0 /tmp/tmp3ksnxbh1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3ksnxbh1.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odd =\
    \ 1;\n    $even = 0;\n\n    while ($num > 0) {\n        if ($num % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    \
    \    $num = $num / 10;\n    }\n\n    return [$even, $odd];\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpua569wm1.php:27\n\
    Stack trace:\n#0 /tmp/tmpua569wm1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpua569wm1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = $odd = 1;\n    $num = abs($num);\n    do {\n        $odd = $odd * 10;\n  \
    \      $val = $num % $odd;\n        $num = floor($num / $odd);\n        if ($num)\
    \ {\n            $even++;\n        }\n    } while ($val);\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjb8cm_7i.php:25\n\
    Stack trace:\n#0 /tmp/tmpjb8cm_7i.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjb8cm_7i.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 1;\n    $odd = 1;\n    while($num > 0) {\n        $num = $num / 10;\n    \
    \    if($num % 2 == 0) {\n            $even++;\n        } else {\n           \
    \ $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprega1y3d.php:25\n\
    Stack trace:\n#0 /tmp/tmprega1y3d.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprega1y3d.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ array(\n        $num % 2 == 0 ? $num / 2 : 3,\n        $num % 2 === 0 ? $num\
    \ / 2 : 3\n    );\n}\n</code>\n<|/ a |>\n<| a |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmljouqyr.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while ($num > 0) {\n        if ($num % 2 == 0) {\n\
    \            $even++;\n        }\n        else {\n            $odd++;\n      \
    \  }\n        $num = $num / 2;\n    }\n\n    return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgjen41e.php:27\n\
    Stack trace:\n#0 /tmp/tmpjgjen41e.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjgjen41e.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while (true) {\n        $remainder = intval($num /\
    \ 10);\n        $num = $num % 10;\n        if ($remainder === 0) {\n         \
    \   if ($num === 0) {\n                return ($even, $odd);\n            }\n\
    \            else if ($num !== 0) {\n                return ($even, $odd + 1);\n\
    \            }\n            else {\n                return ($even + 1, $odd);\n\
    \            }\n        }\n        else {\n            if ($num === 0) {\n   \
    \             return ($even, $odd + 1);\n            }\n            else {\n \
    \               return ($even + 1, $odd);\n            }\n        }\n    }\n}\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwa0chkyk.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // Write\
    \ your code here\n    $count=0;\n    while($num>0) {\n        $temp=$num%10;\n\
    \        if($temp%2==0) {\n            $count++;\n        }\n        $num/=10;\n\
    \    }\n    return array($count,$num);\n}\n</code>\n<|/ a |>\n<| a |>\nIf you're\
    \ interested in doing it in one line, you can do this:\n<code>\n$even = array_sum(preg_grep('/^\\\
    d*$/', str_split($n, 2)));\n$odd = array_sum(preg_grep('/^\\d$/', str_split($n,\
    \ 2)));\n</code>\n<|/ a dscore=0 tags=php,math,string |>\n<| a tags=php,math,string\
    \ |>\nOne line without regular expressions:\n<code>\n$even = count(preg_grep('/^0*$/',\
    \ str_split($n, 2)));\n$odd = count(preg_grep('/^0$/', str_split($n, 2)));\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\nThis code may help you:\n<code>\n<?php\n\
    \    $n = 16;\n    $even = array_sum(preg_grep('/^\\d*$/', str_split($n, 2)));\n\
    \    $odd = array_sum(preg_grep('/^\\d$/', str_split($n, 2)));\n    echo $even;\n\
    \    echo $odd;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppos1yuqp.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $sum =\
    \ 0;\n    $even = 0;\n    $odd = 1;\n    do {\n        $sum += $num % 10;\n  \
    \      $num = floor($num / 10);\n        if ($num % 2 === 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    } while ($num > 0);\n \
    \   return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmke1v00m.php:27\n\
    Stack trace:\n#0 /tmp/tmpmke1v00m.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmke1v00m.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // your\
    \ code\n    $result = array();\n    $num_str = abs($num);\n\n    for($i = 0; $i\
    \ < strlen($num_str); $i++) {\n        $result[] = (int)($num_str[$i] % 10 / 2);\
    \ // divide to get even or odd\n    }\n\n    return $result;\n}\n</code>\n<|/\
    \ a |>\n<| a |>\nThis can be done in one line with regular expressions:\n<code>\n\
    preg_match('/[13579]+/', $number); // returns an array with all the even numbers\n\
    preg_match('/[13579]+/', $number); // returns an array with all the odd numbers\n\
    </code>\nYou can easily adapt this to your needs.\n<|/ a dscore=3 tags=php,algorithm\
    \ |>\n<| a tags=php,algorithm |>\n<code>\nfunction candidate(...$args) {\n   \
    \ return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpn45k8536.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ array_filter(\n        $this->count_digits($num),\n        function ($num) {\n\
    \            return $num % 2 == 0;\n        }\n    );\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpofwbpd0e.php:8\nStack trace:\n#0 /tmp/tmpofwbpd0e.php(16): even_odd_count(7)\n\
    #1 /tmp/tmpofwbpd0e.php(20): candidate(7)\n#2 /tmp/tmpofwbpd0e.php(30): test()\n\
    #3 {main}\n  thrown in /tmp/tmpofwbpd0e.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0 || !is_int($num)) {\n        return false;\n    }\n    $result = array();\n\
    \    for ($i = count($num) - 1, $j = 0; $i >= 0; $i--, $j++) {\n        if (!isset($num[$i]))\
    \ {\n            $result[$j] = 0;\n            continue;\n        }\n        if\
    \ ($num[$i] & 1) {\n            $result[$j] ++;\n        } else {\n          \
    \  $result[$j] ++;\n            if ($num[$i] & 2) {\n                $result[$j]\
    \ ++;\n            }\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a tags=php,algorithm |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpukh61l6z.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$res = [];\n\
    \twhile ($num > 0) {\n\t\t$res[] = intval($num % 10);\n\t\t$num = intval($num\
    \ / 10);\n\t}\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj__0x6ly.php:20\n\
    Stack trace:\n#0 /tmp/tmpj__0x6ly.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpj__0x6ly.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  if ($num\
    \ < 0) return (even_odd_count(abs($num))) ? (-1): (0);\n  if ($num == 0) return\
    \ (1);\n  if ($num == 1) return (0);\n\n  $sum = 0;\n  $i = 0;\n  while (1) {\n\
    \    $sum += floor($num / 10);\n    if ($num % 10 == 0) $i++;\n    if ($num <\
    \ 0) break;\n    $num = floor($num / 10);\n  }\n\n  return array($i, $sum);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \ = 0; $odd_count = 0;\n    while ($num) {\n        $odd_count++;\n        $num\
    \ -= $num % 10;\n        if ($num % 2 === 0) {\n            $even_count++;\n \
    \       }\n    }\n    return array((int)$even_count, (int)$odd_count);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7a3x259d.php:23\n\
    Stack trace:\n#0 /tmp/tmp7a3x259d.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7a3x259d.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $n = abs($num);\n\
    \  $odd = 0;\n  $even = 0;\n  while ($n > 0) {\n    if ($n % 2 == 0) {\n     \
    \ $even++;\n    } else {\n      $odd++;\n    }\n    $n = (int)($n / 10);\n  }\n\
    \  return array($even, $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bmlbrgf.php:32\n\
    Stack trace:\n#0 /tmp/tmp_bmlbrgf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_bmlbrgf.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$evens =\
    \ intval(log($num, 2));\n\t$odds = $evens - 1;\n\treturn array($evens, $odds);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg50ttdcy.php:16\n\
    Stack trace:\n#0 /tmp/tmpg50ttdcy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpg50ttdcy.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 1;\n    if ($num < 0) {\n        $num = abs($num);\n      \
    \  $even = 1;\n    }\n    while ($num >= 10) {\n        $num -= 10;\n        $odd++;\n\
    \    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjsi5h_z3.php:26\n\
    Stack trace:\n#0 /tmp/tmpjsi5h_z3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjsi5h_z3.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // Initialize\
    \ odd and even counts\n    $odds = 0;\n    $evens = 0;\n    // Initialize variables\
    \ for current number and digit.\n    $number = $num;\n    $digit = 0;\n    //\
    \ While the number is not 0\n    while ($number !== 0) {\n        // Add digit\
    \ to current number\n        $number *= 10;\n        $number += $digit;\n    \
    \    // If the number has even digits\n        if ($digit % 2 === 0) {\n     \
    \       // Increment even count\n            $evens++;\n        } else {\n   \
    \         // Increment odd count\n            $odds++;\n        }\n        //\
    \ Get the next digit\n        $digit = $number % 10;\n    }\n    // Return the\
    \ tuple containing odd and even counts\n    return [$odds, $evens];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  // your\
    \ code\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc0yu4al8.php:15\n\
    Stack trace:\n#0 /tmp/tmpc0yu4al8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc0yu4al8.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ intval(abs($num)) % 2 ? array(1, 0) : array(0, 1);\n}\n</code>\n<|/ a |>\n<|\
    \ c |>\nHi Mike! Thanks for your answer! Your code looks like a really good solution\
    \ and I appreciate you taking the time to provide some additional insight into\
    \ this problem.\n\nSo I have been thinking about how to approach this problem\
    \ with your method. I believe you might be right about finding the absolute value\
    \ of the number. I just need to think about this and how I could use the abs function\
    \ to solve this problem. I was thinking about doing something like:\n\n$even_odd_count=\
    \ abs($num);\n$even_odd_count= intval($even_odd_count) % 2;\n<|/ c |>\n<| c |>\n\
    Hi Mike! Just wanted to let you know that I gave the check to this answer because\
    \ it is a very good one. I really appreciate all the help and feedback you provided.\
    \ Thanks!\n<|/ c |>\n<| c |>\nI see a problem here: The OP only wants even and\
    \ odd digits.\n<|/ c |>\n<| c |>\nI did overlook that, I see it now. Thanks for\
    \ noticing. I updated the code accordingly.\n<|/ c |>\n<| a tags=php,function\
    \ dscore=1 |>\nYou don't need a function for this:\n<code>\n$num = -123;\n$odd_digits\
    \ = str_split($num, 1);\n$even_digits = array_map('chr', array_filter(range(1,\
    \ strlen($num)), function($number) {\n    return $number % 2;\n}));\n\necho implode($odd_digits,\
    \ $even_digits);\n</code>\n<|/ a |>\n<| c |>\nHi Nico, thanks for your answer.\
    \ Your code is similar to what I was thinking of doing earlier and I appreciate\
    \ your response and help. I just have one question about your code. Would it be\
    \ possible to explain the array_map function and how this could be used with our\
    \ number variable above? Thanks again!\n<|/ c |>\n<| c |>\nThat function is to\
    \ filter the number by even numbers only. After that, you can convert it to an\
    \ array. With that array, you can then convert it to string. The `chr()` function\
    \ is a string converting function. So `array_map()` will convert every number\
    \ in the array to `chr()` and then `implode()` will glue them together. The `array_filter()`\
    \ will filter only even numbers, so you can then glue them together with your\
    \ even digits.\n<|/ c |>\n<| c |>\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpto83ib3l.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$num = abs($num);\n\
    \t$even_count = 0;\n\t$odd_count = 0;\n\tdo {\n\t\tif ($num % 2 == 0) {\n\t\t\t\
    $even_count++;\n\t\t} else {\n\t\t\t$odd_count++;\n\t\t}\n\t\t$num = $num / 2;\n\
    \t} while ($num > 0);\n\treturn array($even_count, $odd_count);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbszf9lhv.php:26\n\
    Stack trace:\n#0 /tmp/tmpbszf9lhv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbszf9lhv.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $count\
    \ = [];\n    $temp = $num;\n    do {\n        $temp = $temp / 10;\n        $count[]\
    \ = $temp % 2 == 0 ? 'even' : 'odd';\n    } while($temp);\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxgbyp9eq.php:21\n\
    Stack trace:\n#0 /tmp/tmpxgbyp9eq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxgbyp9eq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) {\n        return (even_odd_count(-$num), 1);\n    }\n\n    $sum = 0;\n\
    \n    while (true) {\n        if ($num % 2 == 0) {\n            $sum++;\n    \
    \    }\n\n        $num = floor($num / 10);\n    }\n\n    return ($sum, 0);\n}\n\
    </code>\nThe main logic is here\n<code>\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiqly8jef.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while (true) {\n        $num = $num / 10;\n       \
    \ $count = (int) $num;\n        if ($count % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        if (!$num) {\n    \
    \        break;\n        }\n    }\n    return array(\"even\" => $even, \"odd\"\
    \ => $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsbkua9dw.php:28\n\
    Stack trace:\n#0 /tmp/tmpsbkua9dw.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsbkua9dw.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ (int) floor($num / 10), (bool) ($num % 10);\n}\n</code>\nNow that we have that,\
    \ we can use the map operator to map each digit to whether or not it is even or\
    \ odd:\n<code>\n$even_odd_count = array_map($num, $even_odd_count);\n</code>\n\
    Finally, we map the values to the number of even and odd digits:\n<code>\n$even_odd_count\
    \ = array_map(function($num) {\n    return array_sum(array_filter($even_odd_count($num)));\n\
    }, $num);\n</code>\nThe above is more code than you need for this specific task,\
    \ but I thought I would add it in anyway as it may prove useful in other circumstances.\n\
    <|/ a tags=php,numbers,math |>\n<| c |>\nI wish I could upvote you twice for this!!\
    \ I'm surprised that no one has upvoted it yet and I'm glad I did. Great work\
    \ though, thank you.\n<|/ c |>\n<| c |>\nThanks for the upvote! If it works, don't\
    \ forget to accept the answer. Cheers!\n<|/ c |>\n<| a dscore=3 tags=php,numbers,math\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwem7dlcp.php on line 7\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $count =\
    \ 0;\n  $odd_count = 0;\n  while($num > 0) {\n    if($num % 2 == 0) {\n      $count++;\n\
    \    }\n    else {\n      $odd_count++;\n    }\n    $num = $num / 2;\n  }\n  return\
    \ array(\"even\" => $count, \"odd\" => $odd_count);\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=1 |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe75uw1c1.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if(!is_int($num))\
    \ {\n        throw new InvalidArgumentException('$num should be an integer.');\n\
    \    }\n    $digits = str_split($num);\n    if(count($digits) === 1) {\n     \
    \   throw new InvalidArgumentException('$num cannot be of length 1.');\n    }\n\
    \    $evens = 0;\n    $odds = 0;\n    foreach($digits as $digit) {\n        if($digit\
    \ % 2 === 0) {\n            $evens++;\n        } else {\n            $odds++;\n\
    \        }\n    }\n    return array($evens, $odds);\n}\n</code>\nYou can now reuse\
    \ even_odd_count!\n<code>\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphbkyvs7a.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$count =\
    \ [];\n\tfor ($i = 0; $i < strlen($num); $i++) {\n\t\t$val = substr($num, $i,\
    \ 1);\n\t\tif ($val == 1) {\n\t\t\tif (isset($count[$i - 1])) {\n\t\t\t\t$count[$i\
    \ - 1]++;\n\t\t\t} else {\n\t\t\t\t$count[$i - 1] = 1;\n\t\t\t}\n\t\t} else {\n\
    \t\t\tif (!isset($count[$i - 1])) {\n\t\t\t\t$count[$i - 1] = 0;\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi8cagq9.php:30\n\
    Stack trace:\n#0 /tmp/tmpmi8cagq9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmi8cagq9.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$count =\
    \ 0;\n\tdo {\n\t\t$count += ($num % 2 == 0) ? 1 : 0;\n\t\t$num = $num / 2;\n\t\
    } while ($num > 0);\n\treturn array($count, $num);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpecthsbk3.php:20\n\
    Stack trace:\n#0 /tmp/tmpecthsbk3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpecthsbk3.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$odd = $even\
    \ = 0;\n\twhile($num) {\n\t\t$odd = $odd + ($num % 2 == 0);\n\t\t$even = $even\
    \ + ($num % 2 != 0);\n\t\t$num = $num / 2;\n\t}\n\treturn array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg7cks_fh.php:21\n\
    Stack trace:\n#0 /tmp/tmpg7cks_fh.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpg7cks_fh.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $evens =\
    \ 0;\n  $odds = 0;\n\n  while($num > 0) {\n    $num = $num % 10;\n    if ($num\
    \ == 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n  }\n\n  return\
    \ array((int)$evens, (int)$odds);\n}\n</code>\n<|/ a tags=php,function |>\n<|\
    \ a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp545f3hy6.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$num_str\
    \ = strval($num);\n\t\n\treturn array(\n\t\tcount(str_split($num_str)) - ( count(str_split($num_str,\
    \ 1)) % 2 ),\n\t\tcount(str_split($num_str)) + ( count(str_split($num_str, 1))\
    \ % 2 )\n\t);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph88axrw0.php:19\n\
    Stack trace:\n#0 /tmp/tmph88axrw0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmph88axrw0.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while ($num > 0) {\n        if ($num % 2 == 0) {\n\
    \            $even += 1;\n        }\n        else {\n            $odd += 1;\n\
    \        }\n        $num = (int)($num / 10);\n    }\n    return array($even, $odd);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0btnlq5.php:26\n\
    Stack trace:\n#0 /tmp/tmpa0btnlq5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpa0btnlq5.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$num_str\
    \ = sprintf(\"%u\", $num);\n\t$even_count = $odd_count = 0;\n\tfor ($i = 0; $i\
    \ < strlen($num_str); $i++) {\n\t\tif ($num_str[$i] % 2 == 0) {\n\t\t\t$even_count++;\n\
    \t\t} else {\n\t\t\t$odd_count++;\n\t\t}\n\t}\n\treturn array($even_count, $odd_count);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv1x2aa_.php:25\n\
    Stack trace:\n#0 /tmp/tmpuv1x2aa_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpuv1x2aa_.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num_str\
    \ = (string) $num;\n    $odd = $num_str{0}; // odd\n    $even = $num_str{1}; //\
    \ even\n    $odd = !$odd;\n    $num = array_filter($num_str); // remove all non-digits\n\
    \    $num_str = array_filter($num_str); // remove all non-digits\n    if ($num_str\
    \ === false) {\n        return false;\n    }\n    $num_str = array_reverse($num_str);\
    \ // reverse the number\n    $num_str = array_filter($num_str); // remove all\
    \ non-digits\n    $even = array_filter($even); // remove all non-even digits\n\
    \    $odd = array_filter($odd); // remove all odd digits\n    $num_str = array_reverse($num_str);\
    \ // reverse the number\n    $num_str = array_filter($num_str); // remove all\
    \ non-digits\n    if ($num_str === false) {\n        return false;\n    }\n  \
    \  return array($even, $odd, $num_str);\n}\n</code>\nThe main thing here is array_filter().\
    \ Basically it filters every element of the array from which ever input you provide\
    \ and returns only the elements you want.\n<|/ a tags=arrays,php dscore=0 |>\n\
    <| a tags=arrays,php |>\nYou might use something like this:\n<code>\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq416flm1.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ $num % 2 == 0 ? ($num / 2, 0) : ($num / 2 + 1, 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpox9aez04.php on line 7\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    // If\
    \ the number is negative, return 0\n    if($num < 0) {\n      return 0;\n    }\n\
    \    // If the number is 0, return (0,0)\n    if($num == 0) {\n      return (0,0);\n\
    \    }\n    // If the number is positive, find the least significant digit which\
    \ divides the number\n    // by 10. Return it as a tuple with its power of 10.\n\
    \    if($num > 0) {\n      $m = floor($num / 10);\n      return (pow($m, 2), pow($m,\
    \ 2));\n    }\n    // If the number is negative, find the least significant digit\
    \ which does not divide the\n    // number by 10. Return it as a tuple with its\
    \ power of 10.\n    if($num < 0) {\n      $m = floor($num % 10);\n      return\
    \ (pow($m, 2), pow($m, 2));\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpew5ea2dm.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $evens =\
    \ $odds = $num;\n  while ($num > 0) {\n    $mod = $num % 10;\n    if ($mod % 2\
    \ == 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n    $num = $num\
    \ / 10;\n  }\n  return array($evens, $odds);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw6ie6quv.php:24\n\
    Stack trace:\n#0 /tmp/tmpw6ie6quv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw6ie6quv.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) {\n        return (\"even\", -1);\n    } else if ($num === 0) {\n     \
    \   return (\"even\", 0);\n    } else {\n        $result = [];\n        for ($i\
    \ = 0; $i < 10; $i++) {\n            $result[$i] = $num % 10; // Get the last\
    \ digit and push it.\n            $num = floor($num / 10); // Get the last digit.\n\
    \        }\n        return (\"odd\", $i);\n    }\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how this code answers the question improves its long-term\
    \ value.\n<|/ c |>\n<| c |>\nPlease add some explanation to your code\n<|/ c |>\n\
    <| c |>\nPlease try to explain your code rather than simply copy pasting your\
    \ code.\n<|/ c |>\n<| c |>\nWhile this code snippet may solve the question, [including\
    \ an explanation](//meta.stackexchange.com/questions/114762/explaining-entirely-code-based-answers)\
    \ really helps to improve the quality of your post. Remember that you are answering\
    \ the question for readers in the future, and those people might not know the\
    \ reasons for your code suggestion. Please also try not to crowd your code with\
    \ explanatory comments, this reduces the readability of both the code and the\
    \ explanations!\n<|/ c |>\n<| c |>\nThank you for your guidance. I am not very\
    \ good at English.\n<|/ c |>\n<| a |>\n<code>\ndef even_odd_count(number):\n \
    \   even=0\n    odd=0\n    while number>0:\n        rem=number%10\n        even+=1\
    \ if rem%2==0 else 0\n        odd+=1 if rem%2!=0 else 0\n        number=number//10\n\
    \    return even,odd\n</code>\n<|/ a tags=php,python,javascript dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2jqiyaf8.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) {\n        return (0, 0);\n    }\n    $even = 0;\n    $odd = 0;\n    while\
    \ ($num > 0) {\n        if ($num % 2 === 0) {\n            $even++;\n        }\n\
    \        $num = ($num / 2);\n    }\n    return ($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfv2bo3sr.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $evens\
    \ = $odds = 0;\n    while ($num) {\n        if ($num % 2 == 0) {\n           \
    \ $evens++;\n        } else {\n            $odds++;\n        }\n        $num/=10;\n\
    \    }\n    return array($evens, $odds);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzs94k_st.php:24\n\
    Stack trace:\n#0 /tmp/tmpzs94k_st.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzs94k_st.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0) {\n        return (-1, -1);\n    }\n    $evens = 0;\n    $odds = 0;\n \
    \   $string = $num;\n    $length = strlen($string);\n    $even_length = 1;\n \
    \   $odd_length = 1;\n    for ($i = 0; $i < $length; $i++) {\n        $string[$i]\
    \ = '0' + ($string[$i]);\n        if ($string[$i] & 1) {\n            $odds++;\n\
    \        } else {\n            $evens++;\n        }\n        if ($evens == $even_length\
    \ && $odds == $odd_length) {\n            return ($evens, $odds);\n        }\n\
    \        if ($evens == $even_length) {\n            $even_length++;\n        }\n\
    \        if ($odds == $odd_length) {\n            $odd_length++;\n        }\n\
    \    }\n    return (-1, -1);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpl0swo393.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $temp = strval($num % 10);\n\
    \        $num = $num / 10;\n        if ($temp == '0') {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7i8wqjw.php:26\n\
    Stack trace:\n#0 /tmp/tmpr7i8wqjw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpr7i8wqjw.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $evens\
    \ = $odds = 0;\n    while ($num > 0) {\n        $mod = $num % 10;\n        if\
    \ ($mod === 0) {\n            $evens++;\n        }\n        else {\n         \
    \   $odds++;\n        }\n        $num = $num / 10;\n    }\n    return array($evens,\
    \ $odds);\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nNice! This answer should help\
    \ people who need to count digits in numbers in any language, not just php!\n\
    <|/ c |>\n<| a tags=php |>\nThe function below will take a string and return the\
    \ amount of even and odd digits in it. It also includes the negative and decimal\
    \ digits. \nThe function below also takes negative numbers as well.\n<code>\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpedidanmw.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  return array(\n\
    \    abs($num) % 2 === 0 ? 'even' : 'odd',\n    abs($num) % 2 === 1 ? 'odd' :\
    \ 'even',\n  );\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 tags=php |>\n<code>\n\
    <?php\n    function is_even($n)\n    {\n        return ($n % 2) == 0;\n    }\n\
    \    function is_odd($n)\n    {\n        return ($n % 2) != 0;\n    }\n    function\
    \ is_odd_or_even($n)\n    {\n        return is_odd($n) ? \"is odd\" : \"is even\"\
    ;\n    }\n    \n    function print_all($number)\n    {\n        if (is_odd_or_even($number))\n\
    \        {\n            echo \"Odd\";\n        }\n        else\n        {\n  \
    \          echo \"Even\";\n        }\n        echo \" is \" . $number . \" \"\
    ;\n        echo \"<br>\";\n    }\n    \n    print_all(-10);\n    print_all(5);\n\
    \    print_all(10);\n    print_all(15);\n    print_all(20);\n    print_all(30);\n\
    \    print_all(35);\n    print_all(40);\n    print_all(45);\n    print_all(50);\n\
    \    print_all(60);\n    print_all(75);\n    print_all(100);\n    print_all(120);\n\
    \    print_all(150);\n    print_all(200);\n    print_all(250);\n    print_all(300);\n\
    \    print_all(350);\n    print_all(400);\n    print_all(450);\n    print_all(500);\n\
    \    print_all(600);\n    print_all(750);\n    print_all(1000);\n    print_all(1200);\n\
    \    print_all(1500);\n    print_all(2000);\n    print_all(2500);\n    print_all(3000);\n\
    \    print_all(3500);\n    print_all(4000);\n    print_all(4500);\n    print_all(5000);\n\
    \    print_all(6000);\n    print_all(7500);\n    print_all(10000);\n    print_all(12000);\n\
    \    print_all(15000);\n    print_all(20000);\n    print_all(25000);\n    print_all(30000);\n\
    \    print_all(35000);\n    print_all(40000);\n    print_all(45000);\n    print_all(50000);\n\
    \    print_all(60000);\n    print_all(75000);\n    print_all(100000);\n    print_all(120000);\n\
    \    print_all(150000);\n    print_all(200000);\n    print_all(250000);\n    print_all(300000);\n\
    \    print_all(350000);\n    print_all(400000);\n    print_all(450000);\n    print_all(500000);\n\
    \    print_all(600000);\n    print_all(750000);\n    print_all(1000000);\n   \
    \ print_all(1200000);\n    print_all(1500000);\n    print_all(\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpezv_8l8l.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num_str\
    \ = (string) $num;\n    $even_digits = '';\n    $odd_digits = '';\n    for ($i\
    \ = 0; $i < strlen($num_str); $i++) {\n        if ($num_str[$i] % 2 == 0) {\n\
    \            $even_digits .= $num_str[$i];\n        } else {\n            $odd_digits\
    \ .= $num_str[$i];\n        }\n    }\n    return array('even' => $even_digits,\
    \ 'odd' => $odd_digits);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpc30cmz.php:25\n\
    Stack trace:\n#0 /tmp/tmpxpc30cmz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxpc30cmz.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ === 0) {\n        return (0, 0);\n    }\n\n    $odd = $num % 10;\n    $even_num\
    \ = $num - $odd;\n\n    return (\n        $odd > 0 ? $even_num + 1 : $even_num\
    \ - 1,\n        $even_num\n    );\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpv0qf5npp.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num =\
    \ abs($num);\n    $even = 0;\n    $odd = 1;\n    while ($num > 0) {\n        $tmp\
    \ = floor($num / 10);\n        if ($num % 10 == 0) {\n            $even++;\n \
    \       } else {\n            $odd++;\n        }\n        $num = $tmp;\n    }\n\
    \n    return array($even, $odd);\n}\n\n/**\n * Return all numbers from 1 to $max\
    \ that have no factors (other than $num) and return the remaining factors only.\n\
    \ * @param $max: the highest number to be considered\n * @param $num: the number\
    \ to be factored.\n * @return: list of factors of $num\n */\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp65ui7zgi.php:34\n\
    Stack trace:\n#0 /tmp/tmp65ui7zgi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp65ui7zgi.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num =\
    \ $num + 0;\n    if ($num < 0) {\n        return (1, 0);\n    }\n    if ($num\
    \ == 0) {\n        return (0, 1);\n    }\n    if ($num % 2 == 0) {\n        return\
    \ (1, 0);\n    }\n    return (0, 1);\n}\n\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2eu8recq.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odd =\
    \ ($num % 2 === 0);\n    return ($odd ? 1 : 0, ($num - $odd) % 2);\n}\n</code>\n\
    <|/ a dscore=4 tags=php,algorithm |>\n<| c |>\nI wouldn't call that a solution\
    \ but a clever trick. Very efficient.\n<|/ c |>\n<| c |>\nI believe I got it right\
    \ this time.\n<|/ c |>\n<| c |>\nThis is an excellent solution, I'd also love\
    \ to see it presented with a bit of explanation as to why it works.\n<|/ c |>\n\
    <| c |>\nVery clever and efficient! I love this answer. I did some digging and\
    \ found a very good explanation on this problem here https://leetcode.com/problems/number-of-1-bits-in-binary-representation/\n\
    <|/ c |>\n<| a dscore=2 |>\nA solution similar to the ones above, but which doesn't\
    \ use division at all. Just a lookup table. \n<code>\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpicx_kue2.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $num =\
    \ abs($num);\n    $odd = 0;\n    $even = 0;\n\n    do {\n        if ($num % 2\
    \ == 1) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = ($num / 2);\n    } while ($num > 0);\n\n    $even = pow(2,\
    \ $even);\n    $odd = pow(2, $odd);\n\n    return array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyx5mo1gn.php:31\n\
    Stack trace:\n#0 /tmp/tmpyx5mo1gn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyx5mo1gn.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $evens\
    \ = 0;\n    $odds = 0;\n    $digits = str_split($num);\n    foreach ($digits as\
    \ $digit) {\n        if ($digit % 2 == 0) {\n            $evens += 1;\n      \
    \  } else {\n            $odds += 1;\n        }\n    }\n    return [$evens, $odds];\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpk83f3lqp.php on line\
    \ 11\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk83f3lqp.php:26\n\
    Stack trace:\n#0 /tmp/tmpk83f3lqp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpk83f3lqp.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $odd = $num\
    \ % 2;\n  return array($num % $odd, $odd);\n}\n\n$input = file_get_contents('php://stdin');\n\
    $input = trim($input);\n$lines = explode(\"\\n\", $input);\nforeach ($lines as\
    \ $line) {\n  echo $line.PHP_EOL;\n  $line = trim($line);\n  $even_odd = even_odd_count($line);\n\
    \  echo $even_odd[0].PHP_EOL.' '.$even_odd[1].PHP_EOL.'='.($even_odd[0]+$even_odd[1]).PHP_EOL;\n\
    }\n</code>\nOutput:\n<code>\nhello world\n1 2=1\n1+2=3\n123 456=13\n1 2=1\n1+2=3\n\
    123 456=13\n</code>\n<|/ a |>\n<| a |>\nThis code worked for me:\n<code>\n$numbers\
    \ = \"1234\";\n$array = explode(\" \",$numbers);\n$numberArray = str_split($numbers);\n\
    $oddNums = array_filter($numberArray,function($number){\n  return ($number % 2\
    \ === 0);\n});\n$evenNums = array_filter($numberArray,function($number){\n  return\
    \ ($number % 2 != 0);\n});\n\n$evenCount = count($evenNums);\n$oddCount = count($oddNums);\n\
    $sum = $evenCount * 2 + $oddCount;\necho $sum;\n</code>\n<|/ a tags=php,count\
    \ dscore=1 |>\n<| c |>\nA much simpler way is to use `strlen()` function which\
    \ checks for number of characters in any string.\n<|/ c |>\n<| c |>\nYou don't\
    \ need any of those array_filter's if you just want to check the length. [strlen](https://www.php.net/manual/en/function.strlen.php)\
    \ will give you the number of characters in a string. `if(strlen($number) % 2\
    \ != 0) { // even, } else { // odd }`\n<|/ c |>\n<| a tags=php,count dscore=0\
    \ |>\n<code>\n<?php\n$str = \"1234\";\n$arr = str_split($str);\n$even_number =\
    \ count(array_filter($arr, function($element) use ($arr) {\n    return $element\
    \ % 2 === 0;\n}));\n$odd_number = count(array_filter($arr, function($element)\
    \ use ($arr) {\n    return $element % 2 === 1;\n}));\n$sum = $even_number + $odd_number;\n\
    var_dump($sum\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkzhy6_2m.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $odd =\
    \ $even = array();\n    $length = strlen($num);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $digit = substr($num, $i, 1);\n        $isEven = ($digit ===\
    \ '0');\n        if ($isEven) {\n            $even[] = $digit;\n        } else\
    \ {\n            $odd[] = $digit;\n        }\n    }\n    return array_merge(even_odd_count($odd),\
    \ even_odd_count($even));\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: strlen() expects parameter 1 to be string, array given in /tmp/tmp9uoac5u2.php\
    \ on line 8\n\nWarning: strlen() expects parameter 1 to be string, array given\
    \ in /tmp/tmp9uoac5u2.php on line 8\n\nWarning: strlen() expects parameter 1 to\
    \ be string, array given in /tmp/tmp9uoac5u2.php on line 8\n\nWarning: strlen()\
    \ expects parameter 1 to be string, array given in /tmp/tmp9uoac5u2.php on line\
    \ 8\n\nWarning: strlen() expects parameter 1 to be string, array given in /tmp/tmp9uoac5u2.php\
    \ on line 8\n\nWarning: strlen() expects parameter 1 to be string, array given\
    \ in /tmp/tmp9uoac5u2.php on line 8\n\nWarning: strlen() expects parameter 1 to\
    \ be string, array given in /tmp/tmp9uoac5u2.php on line 8\n\nWarning: strlen()\
    \ expects parameter 1 to be string, array given in /tmp/tmp9uoac5u2.php on line\
    \ 8\n\nWarning: strlen() expects parameter 1 to be string, array given in /tmp/tmp9uoac5u2.php\
    \ on line 8\n\nWarning: strlen() expects parameter 1 to be string, array given\
    \ in /tmp/tmp9uoac5u2.php on line 8\n\nWarning: strlen() expects parameter 1 to\
    \ be string, array given in /tmp/tmp9uoac5u2.php on line 8\n\nWarning: strlen()\
    \ expects parameter 1 to be string, array given in /tmp/tmp9uoac5u2.php on line\
    \ 8\n\nWarning: strlen() expects parameter 1 to be string, array given in /tmp/tmp9uoac5u2.php\
    \ on line 8\n\nWarning: strlen() expects parameter 1 to be string, array given\
    \ in /tmp/tmp9uoac5u2.php on line 8\n\nWarning: strlen() expects parameter 1 to\
    \ be string, array given in /tmp/tmp9uoac5u2.php on line 8\n\nWarning: strlen()\
    \ expects parameter 1 to be string, array given in /tmp/tmp9uoac5u2.php on line\
    \ 8\n\nWarning: strlen() expects parameter 1 to be string, array given in /tmp/tmp9uoac5u2.php\
    \ on line 8\n\nWarning: strlen() expects parameter 1 to be string, array given\
    \ in /tmp/tmp9uoac5u2.php on line 8\n\nWarning: strlen() expects parameter 1 to\
    \ be string, array given in /tmp/tmp9uoac5u2.php on line 8\n\nWarning: strlen()\
    \ expects parameter 1 to be string, array given in /tmp/tmp9uoac5u2.php on line\
    \ 8\n\nWarning: strlen() expects parameter 1 to be string, array given in "
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  // Redefine\
    \ num to avoid passing by reference.\n  $num = $num;\n  $result = 0;\n  $evens\
    \ = 0;\n  $odds = 0;\n  while ($num > 0) {\n    $remainder = $num % 10;\n    if\
    \ ($remainder === 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n\
    \    $num = $num / 10;\n  }\n  return array($evens, $odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmiiw3bub.php:29\n\
    Stack trace:\n#0 /tmp/tmpmiiw3bub.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmiiw3bub.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ tuple(reverse(\n        array_filter($num = array_reverse(str_split($num), 0),\
    \ function($el) { return $el % 2 === 0; })\n    ));\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function tuple() in /tmp/tmprw8o0k9i.php:7\n\
    Stack trace:\n#0 /tmp/tmprw8o0k9i.php(13): even_odd_count(7)\n#1 /tmp/tmprw8o0k9i.php(17):\
    \ candidate(7)\n#2 /tmp/tmprw8o0k9i.php(27): test()\n#3 {main}\n  thrown in /tmp/tmprw8o0k9i.php\
    \ on line 7\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $count\
    \ = 0;\n    $result = array();\n    while ($num > 0) {\n        $num = $num /\
    \ 10;\n        $count++;\n    }\n    if ($count == 0) {\n        return array(0,\
    \ 0);\n    } else {\n        $result[$count] = 1;\n        $num = abs($num);\n\
    \        $count = 0;\n        while ($num > 0) {\n            $num = $num / 10;\n\
    \            $count++;\n        }\n        if ($count == 0) {\n            $result[$count]\
    \ = 1;\n            return $result;\n        } else {\n            $result[$count]\
    \ = 2;\n            return $result;\n        }\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dde__mh.php:38\n\
    Stack trace:\n#0 /tmp/tmp8dde__mh.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp8dde__mh.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \ = 0;\n    $odd_count = 0;\n\n    // get digits as string\n    $digits = strval($num);\n\
    \n    // loop through each digit\n    for ($i = 0; $i < strlen($digits); $i++)\
    \ {\n\n        // if digit is even then add it to even count\n        if ($digits[$i]\
    \ == \"0\") {\n            $even_count++;\n        }\n\n        // else if digit\
    \ is odd then add it to odd count\n        else {\n            $odd_count++;\n\
    \        }\n    }\n\n    // return the tuple (even count, odd count)\n    return\
    \ array($even_count, $odd_count);\n}\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr6h695u6.php:36\n\
    Stack trace:\n#0 /tmp/tmpr6h695u6.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpr6h695u6.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    return\
    \ array_filter($num, function($i) { return $i % 2 == 0; }, ARRAY_FILTER_USE_BOTH);\n\
    }\n</code>\n<|/ a tags=php,algorithm |>\n<| c |>\nIt's not about \"most efficient\"\
    \ but about \"readability\". For me it's about as simple as it's going to get,\
    \ and I don't want to add another function call just to get this one line of code\
    \ to do it's job.\n<|/ c |>\n<| c |>\nThat is your readability issue and also\
    \ the one I mentioned in my answer.\n<|/ c |>\n<| c |>\nI see your point now.\
    \ I'm going to change my answer to reflect that.\n<|/ c |>\n<| c |>\nThank you\
    \ for answering the question. I'm going to test this out later, but it seems like\
    \ it would do the job.\n<|/ c |>\n<| c |>\nYou shouldn't do this, though. An anonymous\
    \ function will be created every time the function is called, and PHP will throw\
    \ notices about memory leaks, as soon as you run out of memory. Also, it will\
    \ be slightly slower than the other answer, because you first have to count the\
    \ even and odd digits. It's only worth it to make the code more readable, if you're\
    \ going to use the result in multiple places.\n<|/ c |>\n<| a tags=php,algorithm\
    \ |>\nJust add 1 to your original variable each time you encounter an odd number,\
    \ like this:\n<code>\n$num = 1;\nwhile ($num != 0) {\n    $num++;\n    if ($num\
    \ % 2 == 0) {\n        $odd = $odd + 1;\n    }\n}\n</code>\nOr do you want a function\
    \ that will do this for you and return the total number? Try this:\n<code>\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppy5ox6f7.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0; $odd = 0;\n  for ($i = 0; $i <= strlen($num); $i++) {\n    $mod = ($num %\
    \ 10);\n    if ($mod == 0) {\n      $even++;\n    } else {\n      $odd++;\n  \
    \  }\n    $num = (int) ($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy44t1t4v.php:25\n\
    Stack trace:\n#0 /tmp/tmpy44t1t4v.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpy44t1t4v.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if($num\
    \ == 0) {\n        return (0, 1);\n    }\n    $even = 0;\n    $odd = 0;\n    for($i\
    \ = 0; $i < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n        \
    \    $even++;\n        }\n        else {\n            $odd++;\n        }\n   \
    \ }\n    return array($even, $odd);\n}\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_l2m65kz.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\tif ($num\
    \ >= 0) {\n\t\t$remainder = $num % 10;\n\t\t$num = (int) ($num / 10);\n\t\tif\
    \ ($num == 0) {\n\t\t\treturn array(1, 1);\n\t\t}\n\t\treturn array(\n\t\t\t$remainder,\n\
    \t\t\t$num - $remainder\n\t\t);\n\t}\n\t$num = (int) $num;\n\treturn array(0,\
    \ 0);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph2mmuld1.php:27\n\
    Stack trace:\n#0 /tmp/tmph2mmuld1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmph2mmuld1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $odd = 0;\n\
    \  $even = 0;\n  \n  while ($num != 0) {\n    $is_even = ($num % 2 == 0);\n  \
    \  $num = $num / 2;\n    if ($is_even) $even++;\n    else $odd++;\n  }\n  return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkn5m6ee3.php:24\n\
    Stack trace:\n#0 /tmp/tmpkn5m6ee3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkn5m6ee3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if ($num\
    \ < 0 || $num > 0) {\n        return false;\n    }\n\n    $num_str = strval($num);\n\
    \    $even_num = 0;\n    $odd_num = 0;\n\n    for ($i = 0; $i < strlen($num_str);\
    \ $i++) {\n        $digit = substr($num_str, $i, 1);\n\n        if ($digit ===\
    \ '0') {\n            $even_num++;\n        } else {\n            $odd_num++;\n\
    \        }\n    }\n\n    return array($even_num, $odd_num);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_9ax7wk3.php:33\n\
    Stack trace:\n#0 /tmp/tmp_9ax7wk3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_9ax7wk3.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_count\
    \ = 0;\n    $odd_count = 0;\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        $odd_count++;\n        if ($remainder == 0) {\n            $even_count++;\n\
    \            $num = ($num - $remainder) / 10;\n        }\n    }\n    return array($even_count,\
    \ $odd_count);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ 0;\n\t$odd = 0;\n\tif ($num >= 0) {\n\t\twhile ($num >= 10) {\n\t\t\t$num -=\
    \ 10;\n\t\t\t$even += 1;\n\t\t}\n\t\twhile ($num > 0) {\n\t\t\t$num -= 1;\n\t\t\
    \t$odd += 1;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcvd0xwai.php:27\n\
    Stack trace:\n#0 /tmp/tmpcvd0xwai.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcvd0xwai.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\tif ($num\
    \ < 0) {\n\t\t$num = abs($num);\n\t\t$sign = \"-\";\n\t} else {\n\t\t$sign = \"\
    \";\n\t}\n\n\t$n = $num;\n\t$num = $num / 10;\n\n\t$odd = $num % 2;\n\t$even =\
    \ $num % 2 == 0 ? 1 : 0;\n\n\treturn array($sign, $odd, $even);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjxkk7lwz.php:28\n\
    Stack trace:\n#0 /tmp/tmpjxkk7lwz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjxkk7lwz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even_odd\
    \ = ['even' => 0, 'odd' => 0];\n    do {\n        $num_mod = $num % 10;\n    \
    \    $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod\
    \ = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod\
    \ % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n\
    \        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n      \
    \  $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod\
    \ = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod\
    \ % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n\
    \        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n      \
    \  $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod\
    \ = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod\
    \ % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n\
    \        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n      \
    \  $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod\
    \ = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod\
    \ % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n\
    \        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n      \
    \  $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod\
    \ = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod\
    \ % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n\
    \        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n      \
    \  $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod\
    \ = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod\
    \ % 10;\n        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n\
    \        $num_mod = $num_mod % 10;\n        $num_mod = $num_mod % 10;\n      \
    \  $\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdsro3e1s.php on line 65\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\treturn (count(str_split($num))\
    \ + 1) >> 1;\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp542k86p1.php:15\n\
    Stack trace:\n#0 /tmp/tmp542k86p1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp542k86p1.php\
    \ on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    if (abs($num)\
    \ == 0) {\n        return (0, 0);\n    }\n    if (abs($num) > 10000) {\n     \
    \   throw new Exception('only supports positive ints');\n    }\n    $a = abs($num);\n\
    \    $odd = ($a % 2 == 1);\n    $even = !( ($a % 2) == 0);\n    if ($even) {\n\
    \        return (1, 0);\n    }\n    else {\n        return ($odd, 1);\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgfctx854.php on line 8\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $result\
    \ = [];\n    $length = strlen($num);\n    $i = 0;\n    do {\n        if ($i %\
    \ 2) {\n            $result[] = ($num[$i]);\n        }\n        $i++;\n    } while\
    \ ($i < $length);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvksazp1.php:24\n\
    Stack trace:\n#0 /tmp/tmpfvksazp1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfvksazp1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception

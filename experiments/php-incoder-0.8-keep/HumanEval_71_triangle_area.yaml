name: HumanEval_71_triangle_area
language: php
prompt: "<?php\n// Given the lengths of the three sides of a triangle. Return the\
  \ area of\n// the triangle rounded to 2 decimal points if the three sides form a\
  \ valid triangle. \n// Otherwise return -1\n// Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n// than the third side.\n// Example:\n\
  // triangle_area(3, 4, 5) == 6.00\n// triangle_area(1, 2, 10) == -1\nfunction triangle_area($a,\
  \ $b, $c) {\n"
tests: "function candidate(...$args) {\n    return triangle_area(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    if ($a + $b > $c) {\n        return round(($a + $b) * 0.86);\n\
    \    } else {\n        return -1;\n    }\n}", "\tif ($a + $b > $c) {\n\t\treturn\
    \ -1;\n\t}\n\treturn round(($a + $b + $c) * .5, 2);\n}\n", "    return round((a+b+c)/2,\
    \ 2);\n}\n", "\tif ($a + $b > $c) {\n\t\treturn $a;\n\t}\n\tif ($c + $b > $a)\
    \ {\n\t\treturn $c;\n\t}\n\tif ($a + $c > $b) {\n\t\treturn $b;\n\t}\n\tif ($c\
    \ + $a > $b) {\n\t\treturn $c;\n\t}\n\tif ($a + $b > $c) {\n\t\treturn $b;\n\t\
    }\n\tif ($c + $b > $c) {\n\t\treturn $c;\n\t}\n}", "  if(!is_numeric($a)) { return\
    \ -1; }\n  if(!is_numeric($b)) { return -1; }\n  if(!is_numeric($c)) { return\
    \ -1; }\n\n  $square = $a + $b + $c;\n  $square_area = $a * b * $c;\n  if($square\
    \ < $square_area) { return 0; }\n  else if($square > $square_area) { return -1;\
    \ }\n  else { return $square - $square_area; } \n}\n", "    $area = $a * $b /\
    \ ($a + $b);\n    $area = round($area, 2);\n    if ($area == $c) {\n        return\
    \ $area;\n    } else {\n        return -1;\n    }\n}\n", "  $s = (a + b + c) /\
    \ 2;\n  if ($s > (a + b) || $s > (c + a) || $s > (b + c)) {\n    return -1;\n\
    \  } else {\n    return $s * 0.5;\n  }\n}", "    $b1 = $b;\n    $c1 = $c;\n\n\
    \    // Check if a and b are both positive.\n    // If so, we can just calculate\
    \ the area of the triangle by summing them,\n    // which can be done by subtracting\
    \ a and b. \n    // Otherwise, we'll need to subtract the larger of the two numbers\
    \ first so that \n    // both numbers can be added to the other number later.\n\
    \    if ($a > 0) {\n        $b1 = $b;\n        $c1 = $a;\n        $a = $a - $b;\n\
    \    }\n\n    if ($b > 0) {\n        $c1 = $c;\n        $b = $b - $c;\n    }\n\
    \n    // Now that we have a and b, we can check if the sum of their negative values\
    \ is greater\n    // than the third. If so, we can't calculate the area of the\
    \ triangle, since that would be\n    // an invalid triangle.\n    if ($a < 0)\
    \ {\n        $a = abs($a);\n    }\n\n    if ($b < 0) {\n        $b = abs($b);\n\
    \    }\n\n    if ($a > $b) {\n        $b = $a - $b;\n    }\n\n    if ($b > $c)\
    \ {\n        $c = $a - $b;\n    }\n\n    // Now we know that the sum of the two\
    \ larger numbers is greater than or equal to three,\n    // so we can check if\
    \ c is greater than or equal to one and c is greater than or equal to two.\n \
    \   if ($c >= 1 && $c >= 2) {\n        // Sum of two larger numbers = sum of two\
    \ smaller numbers\n        return $a + $b + $c;\n    } else {\n        return\
    \ -1;\n    }\n}", "    $a = abs($a);\n    $b = abs($b);\n    $c = abs($c);\n \
    \   if ($a + $b > $c) {\n        if ($b > $c) {\n            return round($a /\
    \ $b * $c * 1000, 2);\n        }\n        return round($a / $b * $c, 2);\n   \
    \ }\n    if ($c > $b) {\n        return round($c / $a * $b * 1000, 2);\n    }\n\
    \    return round($c / $a * $b, 2);\n}", "  if ($a + $b > $c) {\n    return round(($a\
    \ + $b) / 2.0);\n  } else {\n    return -1;\n  }\n}", "    // Write your code\
    \ here\n    if($a < $b){\n        $temp = $a;\n        $a = $b;\n        $b =\
    \ $temp;\n    }\n    if($a > $c){\n        $temp = $a;\n        $a = $c;\n   \
    \     $c = $temp;\n    }\n    $d = ($a + $b + $c)/2;\n    if($a > $d){\n     \
    \   $temp = $a;\n        $a = $d;\n        $d = $temp;\n    }\n    if($b > $d){\n\
    \        $temp = $b;\n        $b = $d;\n        $d = $temp;\n    }\n    if($c\
    \ > $d){\n        $temp = $c;\n        $c = $d;\n        $d = $temp;\n    }\n\
    \    if($a + $b + $c == $d*2){\n        return round(($d*2)*0.5);\n    }\n   \
    \ return -1;\n}\n", "    if ($a < $b and $a < $c) {\n        return $a * $a /\
    \ 2;\n    } elseif ($b < $a and $b < $c) {\n        return $b * $b / 2;\n    }\
    \ else {\n        return $c * $c / 2;\n    }\n}\n", "    // Make sure there are\
    \ 3 values\n    if ($a <= 0 || $b <= 0 || $c <= 0) return -1;\n\n    // Find area\
    \ of triangle\n    return $a * $b / ( ( ( $a + $b ) * ( $a + $c ) ) + ( ( $b +\
    \ $c ) * ( $b + $a ) ) );\n}\n", "    $sum_of_three = $a + $b + $c;\n    if (\
    \ ($sum_of_three == (3 * $a) + (4 * $b) + (5 * $c)) || \n         ($sum_of_three\
    \ == (2 * $a) + (3 * $b) + (4 * $c)) || \n         ($sum_of_three == (1 * $a)\
    \ + (2 * $b) + (3 * $c)) || \n         ($sum_of_three == (1 * $a) + (2 * $b) +\
    \ (3 * $c)) || \n         ($sum_of_three == (1 * $a) + (2 * $b) + (3 * $c)) ||\
    \ \n         ($sum_of_three == (1 * $a) + (2 * $b) + (3 * $c)) || \n         ($sum_of_three\
    \ == (1 * $a) + (2 * $b) + (3 * $c)) || \n         ($sum_of_three == (1 * $a)\
    \ + (2 * $b) + (3 * $c)) || \n         ($sum_of_three == (1 * $a) + (2 * $b) +\
    \ (3 * $c)) || \n         ($sum_of_three == (1 * $a) + (2 * $b) + (3 * $c)) ||\
    \ \n         ($sum_of_three == (1 * $a) + (2 * $b) + (3 * $c)) || \n         ($sum_of_three\
    \ == (1 * $a) + (2 * $b) + (3 * $c)) || \n         ($sum_of_three == (1 * $a)\
    \ + (2 * $b) + (3 * $c)) || \n         ($sum_of_three == (1 * $a) + (2 * $b) +\
    \ (3 * $c)) || \n         ($sum_of_three == (1 * $a) + (2 * $b) + (3 * $c)) ||\
    \ \n         ($sum_of_three == (1 * $a) + (2 * $b) + (3 * $c)) || \n         ($sum_of_three\
    \ == (1 * $a) + (2 * $b) + (3 * $c)) || \n         ($sum_of_three == (1 * $a)\
    \ + (2 * $b) + (3 * $c)) || \n         ($sum_of_three == (1 * $a) + (2 * $b) +\
    \ (3 * $c)) || \n         ($sum_of_three == (1 * $a) + (2 * $b) + (3 * $c)) ||\
    \ \n         ($sum_of_three == (1 * $a) + (2 * $b) + (3 * $c)) || \n         ($sum_of_three\
    \ == (1 * $a) + (2 * $b) + (3 * $c)) || \n         ($sum_of_three == (1 * $a)\
    \ + (2 * $b) + (3 * $c)) || \n         ($sum_of_three == (1 * $a) + (2 * $b) +\
    \ (3 * $c)) || \n         ($sum_of_three == (1 * $a) + (2 * $b) + (3 * $c)) ||\
    \ \n", "  // These three values can be obtained from the lengths of a and b and\
    \ c\n  return $a + $b + $c;\n}\n", "    $s = (a + b + c) / 2.0;\n    $area = sqrt($s\
    \ * ($s - a) * ($s - b) * ($s - c));\n    if ($area > 0) {\n        return round($area,\
    \ 2);\n    } else {\n        return -1;\n    }\n}\n</code>\n<|/ a tags=algorithm,php\
    \ |>\n<| a tags=algorithm,php dscore=2 |>\nSince you are dealing with integers,\
    \ you can get away with some simple arithmetic. Take the area of the triangle\
    \ formed by the three given points and divide by 2\u03C0 rounded down:\n<code>\n\
    $x = $a * $a / 2;\n$y = $b * $b / 2;\n$z = $c * $c / 2;\n$area = 3.14 * $x * $y\
    \ * $z / 16; // PI = 3.141592653589793\n$area = round($area, 2);\n</code>\nThis\
    \ doesn't take into account the fact that the area is actually a ratio of the\
    \ lengths of the three sides.\n<|/ a |>\n<| a tags=algorithm,php dscore=2 |>\n\
    <code>", "    $side1 = sqrt(pow($a, 2) + pow($b, 2));\n    $side2 = sqrt(pow($b,\
    \ 2) + pow($c, 2));\n    $side3 = sqrt(pow($c, 2) + pow($a, 2));\n    if ($a >=\
    \ 0 && $b >= 0 && $c >= 0 && $a >= $b && $a >= $c && $b >= $c) {\n        return\
    \ round($side1 + $side2 + $side3);\n    } else {\n        return -1;\n    }\n\
    }\n", "  $triangle_length = sqrt(pow($a, 2) + pow($b, 2));\n  if ($triangle_length\
    \ > $c) {\n    return -1;\n  } else {\n    return round($triangle_length, 2);\n\
    \  }\n}\n", "  // Write your code here\n  if($a+$b>$c) {\n    return round($a*$b/$c);\n\
    \  } else {\n    return -1;\n  }\n}\n</code>\nIn addition to your solution you\
    \ can add this condition in your program:\n<code>\nif(triangle_area($l, $m, $n)\
    \ != -1) {\n  echo \"<p>The area of the triangle is: \".triangle_area($l, $m,\
    \ $n).\"</p>\";\n} else {\n  echo \"<p>The area of the triangle is invalid</p>\"\
    ;\n}\n</code>\nAnd change your function to the following:\n<code>", "    \n  \
    \  $a1 = $a + $b;\n    $a2 = $a + $c;\n    $b1 = $b + $c;\n    \n    $area_a =\
    \ $a1 * $a1;\n    $area_b = $b1 * $b1;\n    $area_c = $a2 * $a2;\n    \n    if($area_c\
    \ > $area_b) {\n        return round($area_c / $area_b, 2);\n    } else {\n  \
    \      return -1;\n    }\n}\n", "    if ($a + $b > $c) {\n        $a = $c - $b;\n\
    \    }\n    if ($a + $c > $b) {\n        $b = $c - $a;\n    }\n    if ($a + $b\
    \ > $c) {\n        $c = $a - $b;\n    }\n    return $a * $b * $c / 2; // return\
    \ area rounded to two decimal points\n}\n\n$a = triangle_area(3, 4, 5);\necho\
    \ \"The area of a triangle with sides a of {$a} and b of {$b} and c of {$c} is:\
    \ \" . round($a, 2) . \"<br/>\";", "  if ($a + $b > $c) {\n    $r = $a + $b -\
    \ $c;\n    $a = $c;\n    $b = $r;\n  }\n  if ($a + $c > $b) {\n    $r = $a + $c\
    \ - $b;\n    $c = $b;\n    $a = $r;\n  }\n  if ($b + $c > $a) {\n    $r = $b +\
    \ $c - $a;\n    $b = $a;\n    $c = $r;\n  }\n  return round($a * $b * $c, 2);\n\
    }", "\t$s = $a + $b + $c;\n\tif($s > 0)\n\t\treturn round(($s / 2) * 100, 2);\n\
    \telse\n\t\treturn -1;\n}\n", "    if ($a + $b > $c) {\n        return round(($a\
    \ + $b - $c) * 0.00000001);\n    }\n    else {\n        return -1;\n    }\n}",
  "    $sum = ($a + $b + $c)/2;\n    if($sum == $a + $b + $c) {\n        return round($sum,\
    \ 2);\n    } else {\n        return -1;\n    }\n}", "    $aSqr = $a * a;\n   \
    \ $bSqr = $b * b;\n    $cSqr = $c * c;\n\n    $acDiff = $a * $c - $b * $a;\n \
    \   $bcDiff = $b * $c - $a * $b;\n\n    if ($aSqr + $bSqr == $cSqr)\n        return\
    \ round($aSqr / $bSqr, 2);\n    else if ($acDiff == 0) {\n        // Lines parallel\
    \ to x axis (vertical line).\n        // The area of the triangle is $a times\
    \ the largest possible right angle.\n        if ($b == 0)\n            return\
    \ $a;\n        else\n            return $c;\n    } elseif ($bcDiff > 0) {\n  \
    \      // The first condition of the first else if statement is true if the \n\
    \        // line is vertical (horizontal line).\n        // The second condition\
    \ of the first else if statement is true if the \n        // line passes through\
    \ the origin.\n        // The third condition of the first else if statement is\
    \ true if the \n        // line has a positive slope.\n        return 0;\n   \
    \ } elseif ($bc < 0) {\n        // The first condition of the second else if statement\
    \ is true if the \n        // line is vertical (horizontal line).\n        //\
    \ The second condition of the second else if statement is true if the \n     \
    \   // line passes through the origin.\n        // The third condition of the\
    \ second else if statement is true if the \n        // line has a negative slope.\n\
    \        return 0;\n    } else {\n        // The first condition of the third\
    \ else if statement is true if the \n        // line is vertical (horizontal line).\n\
    \        // The second condition of the third else if statement is true if the\
    \ \n        // line passes through the origin.\n        // The third condition\
    \ of the third else if statement is true if the \n        // line has a positive\
    \ slope.\n        // The slope of the line is $acDiff / $bcDiff.\n        return\
    \ round($acDiff / $bcDiff, 2);\n    }\n}\n", "    $s = (a + b + c) / 2;\n    $area\
    \ = sqrt($s * ($s - a) * ($s - b) * ($s - c));\n    return $area < 0.0001 ? $area\
    \ : round($area, 2);\n}\n</code>\n<|/ a dscore=3 tags=php |>\n<| a tags=php |>\n\
    This function can easily be adjusted to your needs.\n<code>", "\t$area_a = $a\
    \ * $a;\n\t$area_b = $b * $b;\n\t$area_c = $c * $c;\n\t\n\t$sum_of_sides = ($a\
    \ + $b + $c) / 2;\n\tif ($sum_of_sides >= $area_c) {\n\t\t$sum_of_sides = ($a\
    \ + $b + $c) / 2;\n\t} else if ($sum_of_sides <= $area_a) {\n\t\t$sum_of_sides\
    \ = ($a + $b + $c) / 2;\n\t} else {\n\t\t$sum_of_sides = -1;\n\t}\n\treturn round($sum_of_sides,\
    \ 2);\n}", "    $area = $a + $b + $c;\n    $return = $area >= $c ? round($area/$c,\
    \ 2) : -1;\n    return $return;\n}", "    $s = (a + b + c) / 2.0;\n    return\
    \ $s * (s - a) * (s - b) * (s - c); \n}\n\n$tests = array(\n    array(3, 4, 5),\n\
    \    array(3, 4, 5),\n    array(2, 10, 5),\n    array(2, 10, 5),\n    array(3,\
    \ -4, 5),\n    array(3, -4, 5),\n    array(-2, -4, 5),\n    array(-2, -4, 5),\n\
    );\n\nforeach ($tests as $test) {\n    list($a, $b, $c) = $test;\n    $result\
    \ = triangle_area($a, $b, $c);\n    echo(\"triangle_area($a, $b, $c) should equal\
    \ $result.\\n\");\n}", "    $sum = $a + $b + $c;\n    if ($sum > $c) {\n     \
    \   return round(sqrt($sum));\n    } else {\n        return -1;\n    }\n}\n",
  "  // Your code here\n  return $a + $b + $c;\n}", "    return round($a * $b / $c,\
    \ 2);\n}\n", "    if ($a + $b > $c) {\n        $a = $a + $b;\n    }\n    $area\
    \ = $a * $c / 2;\n    if ($area >= 0 && $area <= 1) {\n        return round($area,\
    \ 2);\n    } else {\n        return -1;\n    }\n}", "    $total = (($a + $b +\
    \ $c) / 2);\n    if ($total > $c) {\n        return round($total * 0.8);\n   \
    \ }\n    return -1;\n}", "  if ($a + $b > $c) {\n    echo 'invalid triangle';\n\
    \    return -1;\n  }\n  return round($a * $b / ($a + $b + $c));\n}\n", "    $sum\
    \ = $a + $b + $c;\n    $area = $sum / 2;\n    if ($a >= $b && $a >= $c && $c >=\
    \ $sum) {\n        return round($area, 2);\n    } elseif ($b >= $c && $b >= $a\
    \ && $a >= $sum) {\n        return round($area, 2);\n    } elseif ($c >= $a &&\
    \ $c >= $b && $b >= $sum) {\n        return round($area, 2);\n    } else {\n \
    \       return -1;\n    }\n}\n", "  $triangle_sides = $a + $b + $c; // sum of\
    \ a, b and c\n  \n  if($triangle_sides > $c) {\n    return -1; // if a, b, c is\
    \ greater than c then the triangle is invalid\n  }\n  \n  $triangle = sqrt($a\
    \ * $a + $b * $b + $c * $c);\n  return round($triangle, 2);\n}\n", "    // Write\
    \ your code here\n    $area = ($a + $b + $c)/2;\n    if($a > $b && $a > $c){\n\
    \        return $area;\n    }\n    else if($b > $c && $b > $a){\n        return\
    \ $area;\n    }\n    else{\n        return $area;\n    }\n}\n", "\t$l = ($b -\
    \ $a) * 0.5;\n\t$r = ($c - $a) * 0.5;\n\t$area = $l * $r;\n\treturn round($area,2);\n\
    }", "    if($a + $b > $c) {\n        return -1; // no area possible\n    }\n \
    \   $area = $a * $b;\n    $area -= $a * $c;\n    $area /= ($c * $c);\n    return\
    \ round($area, 2); // round the number to 2 decimal places\n}\n", "\t$area = 0;\n\
    \tif ($a + $b > $c) {\n\t\treturn -1;\n\t}\n\t$area = $a * $b;\n\t$area += $a\
    \ * $c;\n\t$area -= $c * $b;\n\treturn round($area / 2, 2);\n}", "    $s = ($a\
    \ + $b + $c) / 2;\n    if ($s > 0)\n        return round($s, 2); // returns the\
    \ area rounded to 2 decimal places\n    else\n        return -1;\n}\n</code>\n\
    <|/ a tags=php |>\n<| c |>\nThank you so much for your help, your answer is very\
    \ helpful and working perfect.\n<|/ c |>\n<| c |>\nThis was my first PHP program.\
    \ Thank you! You made my day.\n<|/ c |>\n<| c |>\nThank you for this answer, it\
    \ helped me a lot. I know this doesn't exactly answer the OP's question, but I\
    \ wanted to add this here in case someone else is trying to find the area of any\
    \ triangle given 3 points A, B, and C.\n<|/ c |>\n<| c |>\nThis is great code,\
    \ but can you help me understand why you are dividing by 2? I'm curious.\n<|/\
    \ c |>\n<| c |>\nI'm glad it helped, can you explain why you divide by 2? I'm\
    \ not familiar with this concept. Why can't I divide the three sides by 2?\n<|/\
    \ c |>\n<| a tags=php dscore=4 |>\nThis is my way of doing it\n<code>", "    $triangle_area\
    \ = $a + $b + $c;\n    $triangle_area = ($triangle_area % 2) == 0 ? ($triangle_area\
    \ / 2) : $triangle_area;\n    return round($triangle_area, 2);\n}", "    // Validate\
    \ a triangle with 3 sides\n    if ($a > $b && $a > $c) {\n        return round(triangle_area($b,\
    \ $c, $a), 2);\n    } elseif ($b > $c && $b > $a) {\n        return round(triangle_area($c,\
    \ $a, $b), 2);\n    } elseif ($c > $a && $c > $b) {\n        return round(triangle_area($a,\
    \ $b, $c), 2);\n    } else {\n        return -1;\n    }\n}\n", "  if ($a + $b\
    \ > $c) {\n    return -1;\n  }\n  $area = 0.5 * (($a + $b) * $c) - ($a * $b);\n\
    \  return round($area, 2);\n}", "    $area_of_triangle = abs($b) * abs($c) - ($a\
    \ * $c);\n\n    // round the area to 2 decimal points\n    return round($area_of_triangle,\
    \ 2);\n}\n", "  $s = $a + $b + $c;\n  if ($s <= 0) {\n    return -1;\n  }\n  $t\
    \ = sqrt(($s * ($s + $a) * ($s + $b) * ($s + $c)));\n  return round($t, 2);\n\
    }\n", "    $s = $a + $b + $c;\n    $area = 0.5 * $s * (sqrt($s * ($s - 4 * $c))\
    \ - ($s - $b));\n    if ($area >= 0) {\n        return round($area, 2);\n    }\
    \ else {\n        return -1;\n    }\n}\n", "\t$d = $a + $b + $c;\n\tif ($d >=\
    \ 0 && $d < $c) {\n\t\treturn round($d * 0.5 ,2);\n\t}\n\telse if ($b >= $c) {\n\
    \t\treturn $b;\n\t}\n\telse {\n\t\treturn -1;\n\t}\n}\n", "\t$a = abs($a);\n\t\
    $b = abs($b);\n\t$c = abs($c);\n\t$s = ($a + $b + $c) / 2;\n\n\tif (($a + $b +\
    \ $c) == $s) {\n\t\t$area = round($s * 0.40);\n\t} else {\n\t\t$area = -1;\n\t\
    }\n\n\treturn $area;\n}\n</code>\nThis is what a triangle area calculation would\
    \ look like with a valid triangle:\n\nThe area of a triangle is equal to the length\
    \ of the hypotenuse times the\n  base divided by the two perimeters.\n<|/ a |>\n\
    <| c |>\nYour formula is wrong (at least when I test it with PHP). It should be\
    \ `= sqrt($s * ($s + $c) * ($s + $b) * 0.5)`, not `= sqrt($s * ($s + $c) * ($s\
    \ + $b) / 2)`.\n<|/ c |>\n<| c |>\n, I've just run your formula, which was correct\
    \ (but not the formula in my answer) and it works fine. The first three numbers\
    \ of the `sqrt()` are the sides; the last number is the radius. So `sqrt($s *\
    \ ($s + $c) * ($s + $b) / 2)` is correct and should produce the same answer, which\
    \ is `6.00`. I think the second one works too but is slightly shorter; `sqrt($s\
    \ * ($s + $c) * 0.5)` is shorter and produces the same answer.\n<|/ c |>\n<| c\
    \ |>\nThe last one works too but the `sqrt()` function can produce a different\
    \ result if the `$s` variable is very very large. Try `sqrt(170000)`.\n<|/ c |>\n\
    <| c |>\n, interesting point. I thought about it a little but since `sqrt()` can\
    \ only produce a number that's within the range of `$s` then it couldn't possibly\
    \ produce a different answer with larger numbers. But that's a good point. I'll\
    \ keep that in mind if I ever find that situation. Thanks for posting your answer!\n\
    <|/ c |>\n<| c |>\n: It actually can produce different results with larger numbers,\
    \ because `$s` and `$s` are very very large numbers. `sqrt(170000)` is actually\
    \ `1.4012741966130537e+20`, whereas `sqrt(170000 * 170000 * 170000 * 170000 *\
    \ 170000)` is `1.4012741966130537e+20`. So the former gives the correct result,\
    \ whereas the latter gives wrong results. That last one should actually be `sqrt(170000\
    \ * 170000 * 170000 * 170000)` because the result is rounded ", "    if ($a +\
    \ $b > $c) {\n        $total = $a + $b;\n        $total *= 0.5;\n        return\
    \ intval(sprintf('%.2F', round($total, 2)));\n    }\n    else if ($a + $c > $b)\
    \ {\n        $total = $a + $c;\n        $total *= 0.5;\n        return intval(sprintf('%.2F',\
    \ round($total, 2)));\n    }\n    else {\n        $total = $b + $c;\n        $total\
    \ *= 0.5;\n        return intval(sprintf('%.2F', round($total, 2)));\n    }\n\
    }\n</code>\n<|/ a tags=php,area |>\n<| a |>\nThis answer is similar to answer\
    \ but has a few improvements, to fix the problem of decimal places.\n<code>",
  "    $area = ($a + $b + $c) / 2;\n    if ($area > 0){\n    return round($area, 2);\
    \ // rounded with two decimal points to the nearest decimal\n    }else{\n    return\
    \ -1;\n    }\n}\n", "  $abs = abs($a - $b);\n  $abs = abs($abs - $c);\n  if ($abs\
    \ > $c) {\n    return -1;\n  }\n  return $abs / ($a + $b + $c);\n}", "    if($a\
    \ >= $b && $a >= $c) {\n        if($b <= $c) {\n            $sum = triangle_area($b,\
    \ $c, $a); // call recursively\n            $sum += $a; // add $a to the area\
    \ of the triangle\n            return $sum / 2; // divide by two to round to two\
    \ decimal points\n        }\n        return triangle_area($b, $a, $c); // $a is\
    \ greater than $c, return -1\n    }\n    return triangle_area($b, $a, $c); //\
    \ $a is less than $b, return -1\n}\n", "    if (($a + $b) > $c) {\n        return\
    \ -1;\n    }\n    return ($a + $b) * 0.5;\n}\n", "  return $a + $b + $c;\n}\n",
  "    return ($a + $b + $c) >= (2 * $c);\n}", "  $ad = $bd - $c;\n  $bc = $cd - $a;\n\
    \  $ca = $db - $c;\n\n  if ($ac >= $bd) return $c * $c;\n  if ($ab >= $db) return\
    \ $c * $b;\n  if ($ad >= $bc) return $a * $b;\n  if ($ca >= $ad) return $a * $c;\n\
    \n  return -1;\n}", "    $area_ab = ($a + $b + $c) / 2;\n    $area_ac = ($a +\
    \ $c - $b) / 2;\n    $area_bc = ($b + $c - $a) / 2;\n    if ($area_ab >= $area_ac)\
    \ {\n        if ($area_ab >= $area_bc) {\n            return round($area_ab, 2);\n\
    \        } else {\n            return round($area_ac, 2);\n        }\n    } else\
    \ {\n        if ($area_ab >= $area_bc) {\n            return round($area_ac, 2);\n\
    \        } else {\n            return round($area_bc, 2);\n        }\n    }\n\
    }\n", "    $a1 = $a * $a;\n    $a2 = $a1 * $b;\n    $b1 = $b * $b;\n    $b2 =\
    \ $b1 * $c;\n    $c1 = $c * $c;\n    $c2 = $c1 * $a;\n    return round((($a1 +\
    \ $a2 + $b1 + $b2 + $c1 + $c2) / 6) * 100) / 100;\n}", "    $l1 = sqrt($a * $a\
    \ + $b * $b); // side 1\n    $l2 = sqrt($c * $c + $a * $a); // side 2\n    $l3\
    \ = sqrt($a * $a + $c * $c); // side 3\n    if ($l1 + $l2 + $l3 > $a * $a + $b\
    \ * $b + $c * $c) { // is triangle possible?\n        $d = $l2 + $l3 - $l1;  //\
    \ opposite of side 2\n        return ($a * $b * $c)/($d * $d);\n    }\n    return\
    \ -1;\n}\n</code>\n<|/ a dscore=3 |>\n<| a |>\nFor anyone looking for something\
    \ quick and dirty, here is a method that can calculate any triangle area.  It\
    \ uses the fact that triangles with equal sides will have an area of twice the\
    \ hypotenuse:\n<code>", "\t$a1 = $a + $b;\n\t$a2 = $a1 + $c;\n\t$b1 = $b + $c;\n\
    \tif ($a2 > $b1) {\n\t\treturn round(($a1 / $b1) * 100, 2);\n\t} else {\n\t\t\
    return round($a2 / $b1, 2);\n\t}\n}", "    $triangle_area = 0;\n\n    if ($a +\
    \ $b > $c) {\n        $triangle_area = ($a + $b - $c) / 2;\n    }\n    return\
    \ $triangle_area;\n}\n</code>\n<|/ a dscore=3 |>\n<| a |>\n<code>\npublic function\
    \ calculateArea($length,$width)\n{\n    return ($length*$width)/2;\n}\n</code>\n\
    <|/ a tags=php,geometry dscore=2 |>\n<| c |>\nIt would help if you could add some\
    \ explanation to your answer.\n<|/ c |>\n<| c |>\nJust to clarify, the question\
    \ asks for the area of a **triangle**.  Your function returns the area of a circle.\
    \  The question asks for an algorithm to determine the area of a triangle using\
    \ three sides.  Your answer doesn't address either of these.\n<|/ c |>\n<| a tags=php,geometry\
    \ dscore=2 |>\n<code>", "    $s = $a + $b + $c;\n    if ($s > 0) {\n        return\
    \ $s / 2;\n    } else {\n        return -1;\n    }\n}\n", "  if ($a + $b > $c)\
    \ {\n    return -1;\n  }\n  if ($a + $c > $b) {\n    return -1;\n  }\n  if ($b\
    \ + $c > $a) {\n    return -1;\n  }\n  return $a * b * 0.5;\n}", "    // Write\
    \ your code here\n    $aSquare = pow($a, 2);\n    $bSquare = pow($b, 2);\n   \
    \ $cSquare = pow($c, 2);\n\n    $perimeter = $aSquare + $bSquare + $cSquare;\n\
    \n    if ($aSquare + $bSquare >= $cSquare)\n        return round($perimeter /\
    \ $a, 2);\n\n    elseif ($bSquare + $cSquare >= $aSquare)\n        return round($perimeter\
    \ / $b, 2);\n\n    elseif ($cSquare + $aSquare >= $bSquare)\n        return round($perimeter\
    \ / $c, 2);\n\n    else\n        return -1;\n}\n</code>\n<|/ a |>\n<| c |>\nThank\
    \ you for this. But how do you compare the area values if it is less than zero?\
    \ This code does not do that. Should the values be compared?\n<|/ c |>\n<| c |>\n\
    Yes, the area should be compared. The area of a triangle is negative if the sum\
    \ of the three sides is less than zero.\n<|/ c |>\n<| a tags=php,math |>\nTo test\
    \ whether a triangle has three sides that sum to zero, you should test each of\
    \ the sides. Your code is failing to check the two sides because you never assign\
    \ them to anything. In other words, $side1 and $side2 are null.\n<code>\nif ($a\
    \ > 0 && $b > 0 && $c > 0) {\n    $side1 = $a;\n    $side2 = $b;\n    $side3 =\
    \ $c;\n}\n\nif ($a > 0 && $b > 0) {\n    $side1 = $a;\n    $side2 = $b;\n}\n\n\
    if ($a > 0 && $c > 0) {\n    $side1 = $a;\n    $side3 = $c;\n}\n\nif ($b > 0 &&\
    \ $c > 0) {\n    $side2 = $b;\n    $side3 = $c;\n}\n\nif ($a > 0 && $b > 0 &&\
    \ $c > 0) {\n    $side1 = $a;\n    $side2 = $b;\n    $side3 = $c;\n}\n\nif ($side1\
    \ + $side2 == $side3) {\n    echo \"valid\";\n}\nelse {\n    echo \"invalid\"\
    ;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI added some additional code to my\
    \ answer. I tested my new code and it passes all my tests.\n<|/ c |>\n<| c |>\n\
    The only thing is that the last two tests are identical. They should be if $a\
    \ > 0 && $b > 0 && $c > 0.\n<|/ c |>\n<| c |>\nOops. ", "    $triangle_sides =\
    \ [\n        $a + $b,\n        $b + $c,\n        $a + $c\n    ];\n    $sum = 0;\n\
    \    foreach ($triangle_sides as $side) {\n        if ($side > 0) $sum += $side;\n\
    \    }\n    return ($sum > 0) ? (float) ($sum / 2) : -1;\n}", "    // write your\
    \ code here\n    if(($a + $b) > $c){\n        return \"-1\";\n    }\n    $c =\
    \ sqrt($a * $a + $b * $b + $c * $c);\n    return round($c / 2) * 0.5;\n}", "\t\
    if ($a + $b > $c) {\n\t\t$a = $c;\n\t\t$b = $a + $b;\n\t}\n\treturn $a * $b;\n\
    }\n", "    // write your code here\n    $area = abs($a * $b * $c - $a * $c);\n\
    \    if ($area >= 0) {\n        return round($area, 2);\n    } else {\n      \
    \  return -1;\n    }\n}\n", "  $s = $a + $b + $c;\n  if ($s <= 0) {\n    return\
    \ -1;\n  }\n  return round($s / (sqrt(pow($a, 2) + pow($b, 2) + pow($c, 2)) *\
    \ sqrt(2)), 2);\n}\n", "    if ($a > $b && $a > $c && $b > $c) {\n        $area\
    \ = $a + $b + $c;\n        if ($area > 0)\n            return round($area / 2);\n\
    \        return -1;\n    }\n    return -1;\n}", "    // Your code here\n    $d\
    \ = ($a + $b) * ($a + $c);\n    if ($c >= $b && $d >= $a){\n        return round(($a\
    \ + $b - $c) / 2);\n    }\n    else if ($c >= $b && $d < $a){\n        return\
    \ -1;\n    }\n    else if ($c < $b && $d < $a){\n        return -1;\n    }\n \
    \   else if ($c < $b && $d > $a){\n        return -1;\n    }\n    else if ($c\
    \ > $b && $d > $a){\n        return -1;\n    }\n    else {\n        return -1;\n\
    \    }\n}\n</code>\n<|/ a |>\n<| a dscore=1 |>\nThis is a valid question and here\
    \ is an answer that works using recursion and without using complex math equations.\n\
    <code>", "    // Write your code here.\n    // a^2 + b^2 = c^2\n    return ($a\
    \ ** 2) + ($b ** 2) - ($c ** 2);\n}\n", "    $b1 = $b-$a;\n    $c1 = $c-$a;\n\
    \    $b2 = $c-$b;\n    $b3 = $b-$c;\n    $c2 = $c-$c;\n    $ab1 = ($b1*$c1)/($ab+$c1);\n\
    \    $bc1 = ($b1*$c2)/($bc+$c2);\n    $bc2 = ($b2*$c2)/($bc+$c2);\n    $ab2 =\
    \ ($ab*$b2)/($ab+$bc);\n    $bc3 = $bc2/($bc+$c2);\n    $ab3 = $ab2/($ab+$bc);\n\
    \n    if ($ab3+$bc3 == $ab+$bc) {\n      return round(($ab2+$bc2+$ab3)*0.5)/2.0;\n\
    \    } else {\n      return -1;\n    }\n}\n", "    $a = abs($a); $b = abs($b);\
    \ $c = abs($c);\n\n    $area = ($a + $b + $c) / 2;\n\n    if ($area > $c) {\n\
    \        $area = round($area, 2);\n    } else {\n        $area = -1; // error\
    \ condition: must be greater than c.\n    }\n\n    return $area;\n}\n\n$test_num\
    \ = triangle_area(3, 4, 5);\nif ($test_num == 6.00) {\n    echo 'Test Passed';\n\
    } else {\n    echo 'Test Failed';\n}", "    $side1 = $a + $b + $c;\n    $side2\
    \ = $a + $b;\n    $side3 = $c + $b;\n    if ($side1 > $side2 && $side1 > $side3)\
    \ {\n        return round($side1 / 2);\n    } else if ($side2 > $side3) {\n  \
    \      return round($side2 / 2);\n    } else {\n        return round($side3 /\
    \ 2);\n    }\n}", "    // Write your code here\n    $sideA = sqrt(pow(($b - $a),2)\
    \ + pow(($c - $a),2));\n    $sideB = sqrt(pow(($b - a),2) + pow(($c - b),2));\n\
    \    $sideC = sqrt(pow(($b - a),2) + pow(($c - a),2));\n    if($sideC > $sideB\
    \ && $sideC > $sideA){\n        return round(($sideA+$sideB+$sideC)/3,2);\n  \
    \  }\n    elseif($sideC > $sideA && $sideC > $sideB){\n        return round(($sideA+$sideB+$sideC)/2,2);\n\
    \    }\n    elseif($sideC > $sideB && $sideC > $sideA){\n        return round(($sideA+$sideB+$sideC),2);\n\
    \    }\n    elseif($sideC > $sideA && $sideC > $sideB){\n        return round(($sideA+$sideB+$sideC)/2,2);\n\
    \    }\n    elseif($sideC > $sideB && $sideC > $sideA){\n        return round(($sideA+$sideB+$sideC),2);\n\
    \    }\n    elseif($sideC > $sideA && $sideC > $sideB){\n        return round(($sideA+$sideB+$sideC)/3,2);\n\
    \    }\n    elseif($sideC > $sideA && $sideC > $sideB){\n        return round(($sideA+$sideB+$sideC)/2,2);\n\
    \    }\n    elseif($sideC > $sideB && $sideC > $sideA){\n        return round(($sideA+$sideB+$sideC)/3,2);\n\
    \    }\n    elseif($sideC > $sideA && $sideC > $sideB){\n        return round(($sideA+$sideB+$sideC)/2,2);\n\
    \    }\n    elseif($sideC > $sideB && $sideC > $sideA){\n        return round(($sideA+$sideB+$sideC),2);\n\
    \    }\n    elseif($sideC > $sideA && $sideC > $sideB){\n        return round(($sideA+$sideB+$sideC)/2,2);\n\
    \    }\n    elseif($sideC > $sideB && $sideC > $sideA){\n        return round(($sideA+$sideB+$sideC)/3,2);\n\
    \    }\n    else", "    if ($a + $b > $c) {\n        $d = $c - ($a + $b);\n  \
    \      if ($d > 0) {\n            $r = sqrt($d);\n            return round($r\
    \ * $r * $a / $b, 2); // round the result to two decimals\n        }\n    }\n\
    \    return -1;\n}\n", "    if($a + $b > $c) {\n        return -1;\n    }\n  \
    \  $area = ($a + $b + $c) / 2;\n    return round($area, 2);\n}", "    $ad = $bd\
    \ - $ad;\n    $bcd = $c - $b;\n    if ($ad>0 && $bd>0 && $cd>0) {\n        if\
    \ ($ad+$bd>$cd) {\n            return $ad * $bc / $cd;\n        } else {\n   \
    \         return -1;\n        }\n    } else {\n        return -1;\n    }\n}\n",
  "    $sum = $a + $b + $c;\n    $s = 0.0;\n    if ($sum % 2 == 0) {\n        if ($sum\
    \ >= $c) {\n            $s = $sum / 2;\n        } else {\n            $s = $sum\
    \ / 2 - ($sum / 2) * 0.5;\n        }\n    } else {\n        $s = (2 * $sum / 3)\
    \ / 2;\n    }\n    return round($s, 2);\n}", "\tif ($a + $b > $c) {\n\t\t$d =\
    \ ($a + $c + $b) / 2;\n\t\treturn round($a, 2) == round($d, 2) ? round($b, 2)\
    \ == round($c, 2) : -1;\n\t} else {\n\t\treturn -1;\n\t}\n}", "    $area = $a\
    \ + $b + $c;\n    $valid_triangle_area = $area > $c;\n    if ($valid_triangle_area)\
    \ {\n        return round($area, 2);\n    }\n    else {\n        return -1;\n\
    \    }\n}", "    $valid_triangle_condition = true;\n\n    if ($a < $b and $c <\
    \ $a) {\n        $valid_triangle_condition = false;\n    }\n    if ($c < $b) {\n\
    \        $valid_triangle_condition = false;\n    }\n    if ($a < $c) {\n     \
    \   $valid_triangle_condition = false;\n    }\n    if ($b > $c) {\n        $valid_triangle_condition\
    \ = false;\n    }\n\n    return ($valid_triangle_condition) ? round(($a + $b +\
    \ $c) / 2, 2) : -1;\n}\n", "    if ($a + $b > $c) {\n        echo \"$a + $b >\
    \ $c\";\n        return -1;\n    }\n    if ($a + $c > $b) {\n        echo \"$a\
    \ + $c > $b\";\n        return -1;\n    }\n    if ($b + $c > $a) {\n        echo\
    \ \"$b + $c > $a\";\n        return -1;\n    }\n    return ($a + $b + $c) / 2.0;\n\
    }\n", "    $sA = sqrt(pow($a, 2) - pow($b, 2));\n    $sB = sqrt(pow($b, 2) - pow($c,\
    \ 2));\n    $sC = sqrt(pow($a, 2) - pow($c, 2));\n    $area = $sA / $sB / $sC;\n\
    \    return $area;\n}\n", "    $triangle_area = sqrt(((pow($a, 2)) + (pow($b,\
    \ 2)) + (pow($c, 2))) / 2);\n    $sides = array($a, $b, $c);\n    $sum = 0;\n\
    \    foreach($sides as $side) {\n        if ($side == 0) {\n            return\
    \ $triangle_area;\n        }\n        $sum += $side;\n    }\n    if ($sum > $c)\
    \ {\n        $area = round($triangle_area, 2);\n    } else {\n        $area =\
    \ -1;\n    }\n    return $area;\n}", "  if($a + $b > $c) {\n    $area_a = $b *\
    \ $c / $a;\n    $area_b = $c * ($a * $c - $a * b) / $b;\n    $area_c = ($a * b\
    \ * $c) / $a;\n    return round($area_a, 2);\n  }\n  elseif($a + $c > $b) {\n\
    \    $area_a = $a * $c / $b;\n    $area_b = $c * ($a * $c - $a * b) / $a;\n  \
    \  $area_c = ($a * b * $c) / $b;\n    return round($area_b, 2);\n  }\n  elseif($b\
    \ + $c > $a) {\n    $area_a = $a * $c / $b;\n    $area_b = $c * ($a * $c - $a\
    \ * b) / $a;\n    $area_c = ($a * b * $c) / $b;\n    return round($area_c, 2);\n\
    \  }\n  else {\n    return -1;\n  }\n}", "    $total = $a + $b + $c;\n    if ($total%2\
    \ == 0){\n        return round($total/2);\n    }\n    else {\n        return -1;\n\
    \    }\n}\n", "    if($a + $b > $c) {\n        $a = $c - $b;\n        $b = $a;\n\
    \        $c = $a + $b;\n    }\n    return $a * $b / $c;\n}\n", "    if ($a + $b\
    \ > $c && $a + $c > $b && ($a + $c > $b || $c + $b > $a)) {\n        $triangle_area\
    \ = ($a + $b - $c) / 2;\n        return round($triangle_area, 2);\n    } else\
    \ {\n        return -1;\n    }\n}\n", "    if($b==0 || $c==0) {\n        return\
    \ -1;\n    }\n    return round(($a + $b + $c) / 2.0 * 100.0, 2);\n}\n", "\tif\
    \ ($a + $b > $c) {\n\t\treturn -1;\n\t} elseif ($a + $c > $b) {\n\t\treturn -1;\n\
    \t} elseif ($b + $c > $a) {\n\t\treturn -1;\n\t} else {\n\t\treturn ($a + $b +\
    \ $c) / 2;\n\t}\n}\n", "    return round(((($b * $c) - ($a * $c)) / ($b + $c))\
    \ * 100) / 100;\n}\n", "    if($a + $b > $c) {\n        return -1;\n    } elseif($a\
    \ + $b <= $c && $b + $c <= $a) {\n        return $a + $b + $c;\n    } else {\n\
    \        return -1;\n    }\n}", "\t$sides = array($a, $b, $c);\n\tsort($sides);\n\
    \tif ($a >= $b+$c) {\n\t\t$total = $a + $b + $c;\n\t\t$areal = $total*($a + $b)/2;\n\
    \t\tif ($areal > $c) {\n\t\t\treturn round($areal, 2);\n\t\t} else {\n\t\t\treturn\
    \ -1;\n\t\t}\n\t}\n\tif ($a >= $c) {\n\t\t$total = $a + $c;\n\t\t$areal = $total*($a\
    \ + $c)/2;\n\t\tif ($areal > $b + $c) {\n\t\t\treturn round($areal, 2);\n\t\t\
    } else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\tif ($c >= $b) {\n\t\t$total = $c + $b;\n\
    \t\t$areal = $total*($c + $b)/2;\n\t\tif ($areal > $a + $c) {\n\t\t\treturn round($areal,\
    \ 2);\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n}\n", "    $area_of_triangle\
    \ = $a + $b + $c;\n    return $area_of_triangle/2;\n}\n", "    if ($a + $b > $c)\
    \ {\n        $area_a = $a + $b - $c;\n        $area_b = $b - $c;\n        $area_c\
    \ = $c;\n        $area_total = $area_a + $area_b + $area_c;\n        $area_rounded\
    \ = round($area_total, 2);\n        return $area_rounded;\n    } else {\n    \
    \    return -1;\n    }\n}\n", "  // make sure a is greater than b and b is greater\
    \ than c\n  if ($a > $b && $b > $c) {\n    // sum two sides to find the area\n\
    \    $s = ($a + $b) * 0.5;\n    if ($s > $c) {\n      $a = 0;\n      $b = 0;\n\
    \    } else {\n      $a = $s;\n      $b = $c;\n    }\n  }\n  return round($b);\n\
    }", "    if ($a > $c || $b > $c) {\n        return -1;\n    }\n    else {\n  \
    \      $a_sq = pow(($a), 2);\n        $b_sq = pow(($b), 2);\n        $c_sq = pow(($c),\
    \ 2);\n        $s_sq = $a_sq + $b_sq - $c_sq;\n        if ($s_sq < 0) {\n    \
    \        return -1;\n        }\n        else {\n            return round($s_sq\
    \ / sqrt(($a_sq + $b_sq - $c_sq)), 2);\n        }\n    }\n}\n", "    if ($a +\
    \ $b > $c) {\n        return round(($a + $b) / 2);\n    } else {\n        return\
    \ -1;\n    }\n}", "  $s = $a + $b + $c;\n  if ($s > 0) {\n    return round(($s\
    \ * .5), 2);\n  } else {\n    return -1;\n  }\n}\n", "    $a = abs($a);\n    $b\
    \ = abs($b);\n    $c = abs($c);\n    if($a + $b > $c) {\n        $t = $a + $b;\
    \ \n    } else {\n        $t = $c;\n    }\n    \n    return round($t / 2);\n}\n",
  "    \n    // If the triangle is invalid, return -1\n    if ($a + $b + $c < 0) {\n\
    \        return -1;\n    }\n    \n    // If the sum of the sides is greater than\
    \ the third side, return -1\n    if ($a + $b > $c) {\n        return -1;\n   \
    \ }\n    \n    // If the sum of the sides is greater than the second side, return\
    \ the sum of the \n    // lengths of the two sides (rounded down)\n    if ($b\
    \ + $c > $a) {\n        $length = $b + $c - $a;\n        return floor($length\
    \ / 2);\n    }\n    \n    // If the sum of the sides is greater than the first\
    \ side, return the sum of the \n    // lengths of the two sides (rounded up)\n\
    \    if ($c + $a > $b) {\n        $length = $c + $a - $b;\n        return ceil($length\
    \ / 2);\n    }\n    \n    // If all of the sides are equal, return the sum of\
    \ the lengths of the two sides\n    if ($a == $b) {\n        return $c;\n    }\n\
    \    \n    // If the sum of the sides is less than the first side or the sum of\
    \ the sides is \n    // less than the second side, return the sum of the lengths\
    \ of the two sides\n    if ($a + $b < $c) {\n        $length = $a + $b + $c;\n\
    \        return ceil($length / 2);\n    }\n    \n    // If the sum of the sides\
    \ is less than the second side, return the sum of the \n    // lengths of the\
    \ two sides (rounded up)\n    if ($b + $c < $a) {\n        $length = $b + $c +\
    \ $a;\n        return ceil($length / 2);\n    }\n    \n    // If the sum of the\
    \ sides is less than the first side, return the sum of the \n    // lengths of\
    \ the two sides (rounded down)\n    if ($c + $a < $b) {\n        $length = $c\
    \ + $a + $b;\n        return floor($length / 2);\n    }\n    \n    // All of the\
    \ sides are equal\n    return 0;\n}\n</code>\nOutput:\n<code>\nThe area is 6.00\n\
    </code>\n<|/ a tags=algorithm,php dscore=1 |>\n<| a |>\n<code>\nclass triangle\
    \ extends Polygon\n{\n    public function circumcircle()\n    {\n        $rad\
    \ = $this->getRadius();\n        $rad1 = $rad / 2;\n        $rad2 = $rad1;\n \
    \       $rad3 = $rad1;\n\n        while ($rad2 >= $rad3)\n        {\n        \
    \    $rad1--;\n            $rad2 = $rad1 + $rad;\n            $rad3++;\n     \
    \   }\n\n        $rad1 = $rad / 2;\n        $rad2 = $rad1;\n        $rad3 = $rad1;\n\
    \n        while ($rad2 ", "    // Triangle valid if all sides are greater than\
    \ or equal to C\n    if($a + $b > $c) return $a + $b + $c - $b;\n\n    return\
    \ -1; // Triangle invalid\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\nIt would be\
    \ nice if you could add a line or two to explain how this works.\n<|/ c |>\n<|\
    \ c |>\nI've edited the answer, feel free to comment if anything is unclear\n\
    <|/ c |>\n<| c |>\nThe algorithm seems correct, but I don't understand why you\
    \ have the variable $sum instead of $sumOfSides. The algorithm says that the sum\
    \ of the sides must be greater than or equal to the third side, yet you are summing\
    \ up all sides and comparing the sum to that side. Surely the sum would equal\
    \ the third side? Also, wouldn't it be better to use the absolute value?\n<|/\
    \ c |>\n<| a dscore=2 |>\nIn Java you would do it like this\n<code>\ndouble triangleArea(double\
    \ a, double b, double c) {\n    double area = 0.0;\n    if (a + b > c) {\n   \
    \     return -1;\n    }\n    double r = Math.abs(Math.sqrt(Math.pow(a - c, 2)\
    \ + Math.pow(b - c, 2)));\n    double h = r / 2;\n    double d = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n    double area = d / 2 * Math.atan(r / h);\n    return\
    \ area;\n}\n</code>\n<|/ a tags=java,math |>\n<| a dscore=2 |>\nTry this...\n\
    <code>\n public double area(double sideA, double sideB, double sideC) {\n    double\
    \ sides = Math.sqrt(Math.pow(sideA, 2) + Math.pow(sideB, 2));\n    double sideCr\
    \ = Math.sqrt(Math.pow(sideC, 2));\n    double area = sideCr / (sideA + sideB);\n\
    \    double area = area / sides;\n    System.out.println(\"Area of the triangle\
    \ is : \" + area);\n    return area;\n}\n</code>\n<|/ a tags=java,math |>\n<|\
    \ a tags=java,math |>\n<code>\nimport java.util.Scanner;\npublic class Triangle\
    \ {\n\n    private static Scanner input;\n\n    public static void main(String[]\
    \ args) {\n        System.out.print(\"Enter the length of side 1: \");\n     \
    \   double a1 = input.nextDouble();\n        System.out.print(\"Enter the length\
    \ of side 2: \");\n        double a2 = input.nextDouble();\n        System.out.print(\"\
    Enter the length of side 3: \");\n        double a3 = input.nextDouble();\n  \
    \      double area1 = a1;\n        double area2 = a", "    $a = $a >= 0 ? $a :\
    \ 0;\n    $b = $b >= 0 ? $b : 0;\n    $c = $c >= 0 ? $c : 0;\n    $sum_of_sides\
    \ = $a + $b + $c;\n    if ($sum_of_sides <= 0) {\n        return -1;\n    } elseif\
    \ ($a + $b > $c) {\n        $result = $a + $b - $c;\n        $decimals = 2;\n\
    \    } else {\n        $result = $a + $c - $b;\n        $decimals = 2;\n    }\n\
    \    return round($result, $decimals);\n}", "    if($a + $b > $c) {\n        return\
    \ -1;\n    }\n    $s = (sqrt(pow(pow($b, 2) - pow($a, 2), 2) / 2) + $a) * (sqrt(pow(pow($c,\
    \ 2) - pow($b, 2), 2) / 2) + $b);\n    return round(abs($s), 2);\n}\n</code>\n\
    <|/ a |>\n<| a tags=algorithm,math |>\nUsing Mathematical Formula, you can calculate\
    \ it like this:\n<code>", "    if ($a + $b > $c) {\n        $total = $a + $b;\n\
    \        $sides = $total;\n    } else {\n        $total = $c + $b;\n        $sides\
    \ = $total;\n    }\n\n    if ($a >= $b) {\n        $total = $a + $b;\n    } else\
    \ {\n        $total = $b + $a;\n    }\n\n    if ($c >= $total) {\n        $total\
    \ = $c + $total;\n    }\n\n    return round((($sides - $total) / 2), 2);\n}\n",
  "    $sides = array($a, $b, $c);\n    $area = 0;\n    foreach ($sides as $side)\
    \ {\n        $area += $side * $side;\n    }\n    return $area / ($a + $b + $c);\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThis works perfectly and it is simpler than any\
    \ of the other solutions. Thanks!\n<|/ c |>\n<| a |>\nMy answer is very similar\
    \ to Pranav's. \n<code>\n/**\n * Given the lengths of the three sides of a triangle.\
    \ Return the area of the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. Otherwise return -1\n *\n * Three sides make a valid\
    \ triangle when the sum of any two sides is greater \n * than the third side.\n\
    \ *\n * int     $a  side length of a triangle\n * int     $b  side length of a\
    \ triangle\n * int     $c  side length of a triangle\n *\n * float $area (rounded\
    \ to 2 decimal points)\n */", "    \n    // If the sum of the three sides is greater\
    \ than the third side return the sum. \n    if ($a + $b + $c > $c) {\n       \
    \ return $a + $b + $c;\n    }\n    // If two of the sides are greater than the\
    \ third return the product of them rounded \n    // to the nearest integer.\n\
    \    if ($a > $b) {\n        $product = round($a * $c / $b);\n    } else {\n \
    \       $product = round($b * $c / $a);\n    }\n    return $product;\n}", "\t\
    $s = (a + b + c) / 2;\n\t$area = sqrt(($s * ($s * ($s - a) * ($s - b) * ($s -\
    \ c))) / 2);\n\tif ($area < 0) {\n\t\treturn -1;\n\t}\n\treturn round($area, 2);\n\
    }", "  // return -1 if any side is 0\n  if ($a == 0 || $b == 0 || $c == 0) {\n\
    \    return -1;\n  }\n  $area = $a + $b + $c;\n  // return 0 if the area is 0\n\
    \  if ($area === 0) {\n    return 0;\n  }\n  $triangle_area = sqrt(pow($a, 2)\
    \ + pow($b, 2) + pow($c, 2));\n  // if sum of two sides is greater than the third\
    \ side, it's a triangle\n  if ($triangle_area > $c) {\n    return round($triangle_area,\
    \ 2);\n  }\n  return -1;\n}\n\n$triangle = array(3, 4, 5);\necho \"Triangle area\
    \ of triangle = \" . triangle_area($triangle[0], $triangle[1], $triangle[2]) .\
    \ \"\\n\";\n", "    // If any of these are not valid triangle sides return -1\n\
    \    if($a + $b > $c) {\n        return -1;\n    }\n    \n    // If the sum of\
    \ the two sides equals the third side return area rounded \n    // to the nearest\
    \ two decimal points. \n    if($a + $b == $c) {\n        return round(($a * $a\
    \ + $b * $b), 2);\n    }\n    \n    // Otherwise return area rounded up to the\
    \ nearest two decimal points.\n    return round(($a + $b + $c) / 2, 2);\n}\n</code>\n\
    <|/ a tags=php,math |>\n<| c |>\nHi, thanks for the answer! It has some useful\
    \ information but i'm still struggling to implement it. I realise that i'm going\
    \ to have to re-learn some things, as i'm a beginner at coding, but can you expand\
    \ on how the $sum and $diff variables work? I assume $diff is just another variable\
    \ that stores the difference, and $sum is storing the sum of the two numbers?\
    \ If so, how do i implement these into the code?\n<|/ c |>\n<| c |>\nYes, I added\
    \ comments to my original answer. You will notice that the first conditional `$sum\
    \ >= $diff` doesn't work. The variable `$sum` is actually the sum of the two numbers.\
    \ Since both `$a` and `$b` are greater that `$c` the variable `$sum` will never\
    \ be greater than `$diff`. That is why I added the second conditional to test\
    \ if `$a` and `$b` are equal in order to return -1 instead of an error if the\
    \ triangle is invalid.\n<|/ c |>\n<| c |>\nThank you! I've added a return value\
    \ to the function, and i'm getting a response of \"-1\" for every input. Do you\
    \ think this could be because i've inputted the wrong number of arguments? I'm\
    \ still unsure how i'm meant to get it to return the area of the triangle if the\
    \ sum of any two sides equals the third side?\n<|/ c |>\n<| c |>\nAwesome! Thank\
    \ you very much! It works! How do you think I should go about testing if the sum\
    \ of any two sides equals the third side? Is there a way of using an if statement?\
    \ Like an if/else statement? I'm really confused, and any help would be greatly\
    \ appreciated!\n<|/ c |>\n<| c |>\nOk, I've added another conditional to my answer.\
    \ Do you understand how that works?\n<|/ c |>\n<| a tags=php,math dscore=0 |>\n\
    Here is a more compact version of Brad", "  return ($a + $b + $c) / 2.0;\n}",
  "    $s = $a + $b + $c;\n    if($s > 0) {\n        return round($s * $s / (($a *\
    \ $a + $b$b + $c) / 2), 2);\n    }\n    return -1;\n}", "  $p = $b - $c;\n  $q\
    \ = sqrt(pow($p, 2) + pow($a, 2));\n  return round($q, 2);\n}\n", "    if($a +\
    \ $c > $b + $c) {\n        $total = $a + $c - $b;\n    } else {\n        $total\
    \ = $b + $c - $a;\n    }\n    $area = round($total/2, 2);\n    if($area == 0 ||\
    \ $area == 1) return 0;\n    return $area;\n}\n", "    $sum = a + b + c;\n   \
    \ if ($sum < 4 && $sum > 1) {\n        return round( ($a + $b + $c) / 2, 2);\n\
    \    }\n    return -1;\n}", "  $area = $a * $b / ($a + $b + $c);\n  return round($area);\n\
    }", "    // validate the sides\n    if (($a + $b <= $c) && ($a + $c <= $b) &&\
    \ ($b + $c <= $a)) {\n        // calculate the area of the triangle\n        return\
    \ $a * $c / 2;\n    } else {\n        return -1;\n    }\n}\n", "\tif ($a + $b\
    \ > $c) {\n\t\techo \"sum is greater than c \\n\";\n\t\techo \"$a + $b > $c \\\
    n\";\n\t\techo \"$a + $b = $c \\n\";\n\t\techo \"$a > $b and $c > $b \\n\";\n\t\
    \tdie;\n\t}\n\tif ($a + $c > $b) {\n\t\techo \"sum is greater than b \\n\";\n\t\
    \techo \"$a + $c > $b \\n\";\n\t\techo \"$a + $b = $b \\n\";\n\t\techo \"$a >\
    \ $b and $c > $c \\n\";\n\t\tdie;\n\t}\n\tif ($b + $c > $a) {\n\t\techo \"sum\
    \ is greater than a \\n\";\n\t\techo \"$b + $c > $a \\n\";\n\t\techo \"$b + $c\
    \ = $a \\n\";\n\t\techo \"$a > $b and $c > $c \\n\";\n\t\tdie;\n\t}\n\techo \"\
    sum is less than or equal to b \\n\";\n\techo \"$a + $c + $b > $a \\n\";\n\techo\
    \ \"$a + $c = $a \\n\";\n\techo \"$a > $b and $c > $c \\n\";\n\treturn ($a + $c\
    \ + $b);\n}", "    if(is_numeric($a) && is_numeric($b) && is_numeric($c))\n  \
    \  {\n        if($a + $b > $c) {\n            return round($a + $b * .5, 2);\n\
    \        }\n        else {\n            return -1;\n        }\n    }\n    else\
    \ {\n        return -1;\n    }\n}", "  if ($a + $b > $c) {\n    return -1;\n \
    \ } else {\n    return ($a + $b + $c) / 2;\n  }\n}\n</code>\nOutput:\n<code>\n\
    The area of a triangle is 6.00\nThe area of a triangle is 1.33\nThe area of a\
    \ triangle is -1.33\nThe area of a triangle is -1\n</code>\n<|/ a |>\n<| a tags=php,trigonometry\
    \ dscore=1 |>\nTry this one. It will return area in 2 decimal point if it's a\
    \ valid triangle and will display -1 if any of them is a degenaration.\n<code>\n\
    <?php \n$a = $b = $c = 0;\n$area = 0;\n$arr[] = $a;\n$arr[] = $b;\n$arr[] = $c;\n\
    $numOfEdges = sizeof($arr);\nfor ($i = 0; $i < $numOfEdges; $i++) {\n    if ($arr[$i]\
    \ + $arr[$i + 1] > $arr[$i + 2]) {\n        $area += ($arr[$i] + $arr[$i + 1]\
    \ + $arr[$i + 2]);\n        $arr[$i] = 0;\n        $arr[$i + 1] = 0;\n       \
    \ $arr[$i + 2] = 0;\n    } else {\n        $area += ($arr[$i] + $arr[$i + 1] +\
    \ $arr[$i + 2]);\n        $arr[$i] = $arr[$i] + ($arr[$i + 1] + $arr[$i + 2]);\n\
    \        $arr[$i + 1] = $arr[$i + 1];\n        $arr[$i + 2] = $arr[$i + 2];\n\
    \    }\n}\n$area/=2;\nif($area < 0){\n    echo \"The area of a triangle is $area\"\
    ;\n}else{\n    echo \"The area of a triangle is -1\";\n}", "    return $a + $b\
    \ + $c < $c + $b ? round(($a + $b + $c) / 2) : -1;\n}\n", "  if ($a + $b > $c)\
    \ {\n    return -1;\n  }\n  $area = $a * b * 0.5;\n  $area += $a * c;\n  $area\
    \ += $b * c;\n  $area += $c;\n  return round($area, 2);\n}", "\tif ($a + $b >\
    \ $c) {\n\t\treturn -1;\n\t} else {\n\t\treturn ($a + $b) * $c / 2;\n\t}\n}",
  "    $s = ($b * $c) - ($a * $c);\n    return $s > 0 ? round($s / $b) : -1;\n}",
  "  if($a + $b > $c) {\n    return triangle_area($b, $a, $c);\n  }\n  return ($a\
    \ + $b + $c) / 2.0;\n}\n", "    // Write your code here\n    $s = $a + $b;\n \
    \   $t = $s + $c;\n    return round($s/$t*100,2);\n}\n\n/* \n * Task:\n * Given\
    \ two numbers, return the sum of those two numbers. \n * The numbers will be integers.\
    \ \n * The sum of the two numbers will be between -10 and 10.\n */", "    if ($a\
    \ + $b > $c) {\n        return -1; // not a valid triangle\n    } else {\n   \
    \     return round($a + $b - $c, 2); // return area rounded to 2 decimal points\n\
    \    }\n}\n", "    if ($a + $b > $c) {\n        return -1;\n    } elseif ($a +\
    \ $c > $b) {\n        return -1;\n    } elseif ($b + $c > $a) {\n        return\
    \ -1;\n    }\n    return round(($a + $b + $c) / 2) * 0.5;\n}\n", "\treturn round(($a\
    \ + $b + $c) / 2.00, 2);\n}\n", "    // Write your code here.\n    $side1 = $a\
    \ + $b;\n    $side2 = $a + $c;\n    $side3 = $b + $c;\n    $total = ($side1 +\
    \ $side2 + $side3);\n    if ($total == $side1 || $total == $side2 || $total ==\
    \ $side3) {\n        return $total;\n    }\n    return -1;\n}", "  if($a + $b\
    \ > $c) {\n    $area_total = $a + $b - $c;\n    return round($area_total, 2);\n\
    \  }\n  else {\n    return -1;\n  }\n}\n", "    // Only calculate the area if\
    \ the sides are valid \n    if ($a < 0 || $b < 0 || $c < 0)\n        return -1;\n\
    \n    if ($a + $b > $c)\n        return $a + $b - $c;\n    else\n        return\
    \ -1\n}\n", "  if ($a + $b > $c) {\n    return -1\n  } else if ($a + $c > $b)\
    \ {\n    return -1\n  } else if ($b + $c > $a) {\n    return -1\n  } else {\n\
    \    return $a + ($b * 2) + ($c * 2) * 0.5\n  }\n}\n", "    return round($a +\
    \ $b + $c * 2) / 2;\n}\n", "    $area_side = sqrt(pow($b, 2) + pow($c, 2));\n\
    \    if ($a < $b - $c && $a > $c - $b) {\n        if ($a > $a + $c) {\n      \
    \      if ($b <= $a + $c) {\n                if ($c <= $a + $b) {\n          \
    \          if ($area_side >= 1) {\n                        return round($area_side,\
    \ 2);\n                    } else {\n                        return -1;\n    \
    \                }\n                } else {\n                    return -1;\n\
    \                }\n            } else {\n                return -1;\n       \
    \     }\n        } else {\n            return -1;\n        }\n    } else {\n \
    \       return -1;\n    }\n}", "    if ( ($a + $b > $c) || ($a + $c > $b) || ($b\
    \ + $c > $a)) {\n        return -1;\n    }\n\n    return ($a + $b + $c) / 2.0;\n\
    }", "    $area_1 = $a * $b;\n    $area_2 = $area_1 + $c; // triangle area is made\
    \ up of 2 sides only\n    $area_3 = $area_1 + $c;\n    $area_4 = $area_1 - $c;\n\
    \    if ($area_1 > $area_2) {\n        if ($area_1 > $area_3) {\n            return\
    \ round($area_1, 2); // return triangle area rounded up \n        } else {\n \
    \           return round($area_2, 2); // return triangle area rounded up \n  \
    \      }\n    } else {\n        if ($area_2 > $area_3) {\n            return round($area_2,\
    \ 2); // return triangle area rounded down \n        } else {\n            return\
    \ round($area_3, 2); // return triangle area rounded down \n        }\n    }\n\
    }", "  $ab = $a + $b; // Length of ab\n  $bc = $b + $c; // Length of bc\n  $cd\
    \ = $c + $a; // Length of cd\n  $abs = $ab * $ab; // Length of abs as float\n\
    \  $bcs = $bc * $bc; // Length of bcs as float\n  $cds = $cd * $cd; // Length\
    \ of cds as float\n  $area_ab = $abs * $bcs - $cds * $abs;\n  $area_bc = $bcs\
    \ * $cds - $abs * $bcs;\n  $area_cd = $cds * $abs - $bcs * $cds;\n  if ($area_ab\
    \ > 0 && $area_bc > 0 && $area_cd > 0) {\n    return round($area_ab / $area_bc\
    \ / $area_cd, 2);\n  }\n  return -1;\n}", "  if ($a + $b + $c == 18)\n    return\
    \ round(($a + $b + $c) / 2);\n  else\n    return -1;\n}", "  // Write your code\
    \ here\n  $ab = $a + $b;\n  $ac = $a + $c;\n  if ($ab > $ac) {\n    $a2 = $a +\
    \ $c / 2;\n    $b2 = $b + $c / 2;\n    $c2 = $c + $c / 2;\n    $result = $a *\
    \ $b * $c2 - $a2 * $b2 * a;\n  } else {\n    $a2 = $a + $c / 2;\n    $b2 = $b\
    \ + $c / 2;\n    $c2 = $c + $c / 2;\n    $result = $a * $c * $b2 - $a2 * $b2 *\
    \ a;\n  }\n  return round($result, 2);\n}\necho triangle_area(3, 4, 5);", "  \
    \  return round($a + ($b + ($c - ($a + $b + $c))) / 2, 2);\n}\n", "    if ($a\
    \ + $b > $c) {\n        return -1;\n    } else {\n        $area_one = ($a + $b)\
    \ * 0.5;\n        $area_two = ($a + $c) * 0.5;\n        $area_three = ($b + $c)\
    \ * 0.5;\n        return round($area_one + $area_two + $area_three, 2);\n    }\n\
    }\n</code>\n<|/ a tags=php |>\n<| c |>\nThank you for providing solution. This\
    \ code works, but doesn't satisfy the requirement. I'm getting an incorrect area\
    \ when the lengths of the sides are equal. E.g. triangle of 4 with side length\
    \ is equal to 3 returns -1. Also, when the area is 0 it should return 0.\n<|/\
    \ c |>\n<| a dscore=0 |>\nJust compare the length with the sum of the other two\
    \ sides. If the lengths are equal, then the sum of the other two sides is 0, so\
    \ the area is 0.\n<code>\n$length = sqrt( ($a*$a) + ($b*$b) + ($c*$c) );\nif($length\
    \ == $a + $b + $c) $area = 0;\nelse $area = round(($a + $b + $c) / $length, 2);\n\
    </code>\n<|/ a tags=php |>\n<| c |>\nThank you for providing solution. This code\
    \ works, but doesn't satisfy the requirement. I'm getting an incorrect area when\
    \ the lengths of the sides are equal. E.g. triangle of 4 with side length is equal\
    \ to 3 returns -1. Also, when the area is 0 it should return 0.\n<|/ c |>\n<|\
    \ c |>\nI guess I did a mistake when I tried the code. I edited it and it should\
    \ work now.\n<|/ c |>\n<| a dscore=0 |>\nThe simple answer is that you need to\
    \ check if your triangle's lengths are equal, and if they are, return 0.\n<code>",
  "    // Initialize Area to 0 if the sides are all zero.\n    $area = -1; // Initialize\
    \ area to -1 if all three sides are zero.\n    if ($a == 0 || $b == 0 || $c ==\
    \ 0) {\n        return $area;\n    }\n\n    // If any side is greater than the\
    \ other, then the triangle is not valid.\n    if ($a > $b || $b > $c || $c > $a)\
    \ {\n        return $area;\n    }\n\n    // Calculate the area of the triangle\
    \ by adding any two sides.\n    $area = $a + $b + $c;\n\n    // Round the area\
    \ to 2 decimal points if possible.\n    if ($area >= 0 && $area < 100000) {\n\
    \        $area = round($area, 2);\n    }\n    return $area;\n}\n", "\t$sum = $a\
    \ + $b + $c;\n\tif ($sum > $c) {\n\t\treturn -1;\n\t}\n\treturn round($sum / 2,\
    \ 2);\n}", "    if ($a + $b > $c) {\n        return round($a * $c / $b);\n   \
    \ } elseif ($a + $c > $b) {\n        return round($b * $c / $a);\n    } else {\n\
    \        return round($c * $a / $b);\n    }\n}\n</code>\n<|/ a dscore=2 |>\n<|\
    \ c |>\nThis worked for me, thanks!  I thought I had done the same thing, but\
    \ I wasn't getting any return.  But you were right, I had some bugs in my original\
    \ code.  I fixed those and it's working now. \n\nI did have to replace round()\
    \ with intval() to make it work.  For some reason round() wasn't returning a decimal\
    \ for the area if the total was over 1.\n<|/ c |>\n<| c |>\n`round()` will round\
    \ the number up to the nearest integer.  If you want decimal places, use [`number_format`](http://www.php.net/manual/en/function.number-format.php)\
    \ instead: `number_format($number, 2, '.', '');`\n<|/ c |>\n<| a |>\n<code>\n\
    <?php", "    $area = sqrt(pow($a, 2) + pow($b, 2) + pow($c, 2));\n    if ($area\
    \ > 2) {\n        return round($area, 2);\n    }\n    return -1;\n}\n", "  $abc\
    \ = $a + $b;\n  $bsc = $b + $c;\n  $csb = $c + $b;\n  if ($abc >= $bsc && $abc\
    \ >= $csb) {\n    return $abc / 2.0;\n  }\n  if ($bsc >= $abc && $bsc >= $csb)\
    \ {\n    return $bsc / 2.0;\n  }\n  if ($csb >= $abc && $csb >= $bsc) {\n    return\
    \ $csb / 2.0;\n  }\n  return -1;\n}\n", "    $a = abs($a);\n    $b = abs($b);\n\
    \    $c = abs($c);\n    $total = $a + $b + $c;\n    if ($total == 0)\n       \
    \ return -1; // can't divide by zero\n    if ($total == 1)\n        return $a\
    \ * $b;\n    if ($a == $b) {\n        return $c * sqrt($c / $a);\n    }\n    if\
    \ ($b == $c) {\n        return $a * sqrt($a / $b);\n    }\n    $t1 = ($a + $b)\
    \ / 2;\n    $t2 = ($b + $c) / 2;\n    $t3 = ($c + $a) / 2;\n    $u1 = $a / $t1;\n\
    \    $u2 = $b / $t2;\n    $u3 = $c / $t3;\n    $p = 0.5 * sqrt(($u1 * $u1) + 4\
    \ * $u2 * $u2); // area of first triangle\n    $q = 0.5 * sqrt(($u2 * $u2) + 4\
    \ * $u3 * $u3); // area of second triangle\n    $r = ($u1 * $u2) / $total; //\
    \ area of third triangle\n    if ($p > $q) {\n        $area1 = $p / 2;\n     \
    \   $area2 = $q / 2;\n    } else {\n        $area1 = $q / 2;\n        $area2 =\
    \ $p / 2;\n    }\n    return $area1 + $area2 - $r;\n}\n</code>\n<|/ a tags=php,math\
    \ |>\n<| a dscore=1 |>\n<code>", "\t\n\t// If the sum of any two sides is greater\
    \ than the third side, return -1\n\tif(($a + $b > $c) || ($c + $a > $b) || ($b\
    \ + $c > $a)) {\n\t\treturn -1;\n\t} else {\n\t\t$s = (-1 * sqrt(($a * $a + $b\
    \ * $b + $c * $c)));\n\t\treturn (round($s, 2));\n\t}\n}\n", "    if ($a + $b\
    \ > $c) {\n        echo \"Area not calculated\";\n        return -1;\n    }\n\
    \    $s = (a + b + c) / 2.0;\n    $area = sqrt(($s * (s - a) * (s - b) * (s -\
    \ c))) / 2;\n    return round($area);\n}", "    $s1 = $a + $b;\n    $s2 = $a +\
    \ $c;\n    $s3 = $b + $c;\n    $area = $s1 * $s2;\n    $area += $s1 * $s3;\n \
    \   $area += $s2 * $s3;\n    $area = round($area, 2);\n    return $area;\n}\n",
  "    $s = sqrt(pow($b,2) + pow($c,2));\n    $area = round($s/$a, 2);\n    return\
    \ $area;\n}", "    if ($a + $b > $c) {\n        return $a + $b + $c - $b;\n  \
    \  }\n    if ($a + $c > $b) {\n        return $a + $c + $c - $b;\n    }\n    if\
    \ ($b + $c > $a) {\n        return $b + $c + $c - $a;\n    }\n    return -1;\n\
    }", "    if ($a + $b > $c) {\n        return triangle_area($b, $c, $a);\n    }\
    \ elseif ($b + $c > $a) {\n        return triangle_area($c, $a, $b);\n    } else\
    \ {\n        return $a + $b + $c;\n    }\n}\n</code>\n<|/ a tags=php,arrays,if-statement\
    \ |>\n<| a |>\nFirst of all, I know this isn't a PHP solution, but I just want\
    \ to post it anyway in case you actually do have to use it. It seems like this\
    \ would be a pretty fun problem for someone who has already solved it at some\
    \ point.\nFor starters, I recommend taking the three sides and storing it in a\
    \ 2D array. This will make it easier to compare two sides to each other.\nYou\
    \ would end up with an array that looks something like this:\n<code>\n$a = [\n\
    \    0 => [\n        0 => 3,\n        1 => 5\n    ],\n    1 => [\n        0 =>\
    \ 4,\n        1 => 7\n    ],\n    2 => [\n        0 => 5,\n        1 => 7\n  \
    \  ]\n];\n</code>\nThis array stores the three sides of a triangle. As you can\
    \ see, I used the value 0 as the index of the first index (i.e. the side in the\
    \ x-axis) so that I could use an algorithm like this (I put this algorithm in\
    \ a recursive function).\n<code>", "  $area = $a * $b / (sqrt(pow(pow($a, 2) +\
    \ pow($b, 2), 0.5) + pow($c, 2)));\n  if($area > 0){\n    $area = round($area,\
    \ 2); \n  }\n  return $area;\n}", "    $a = abs($a);\n    $b = abs($b);\n    $c\
    \ = abs($c);\n    $abs = $a + $b;\n    $sqrt_abs = sqrt($abs);\n    $prod = ($a\
    \ * $b * $c) / $sqrt_abs;\n    $result = round($prod, 2);\n    if ($result ==\
    \ 0) {\n        return 0;\n    }\n    return $result;\n}", "\t\n\t$sum_of_two_s1\
    \ = 0;\n\t$sum_of_two_s2 = 0;\n\t$sum_of_two_s3 = 0;\n\t\n\tif(($a + $b + $c)\
    \ == 0){\n\t\treturn 0;\n\t}\n\t\n\t$sum_of_two_s1 = $a + $b;\n\t$sum_of_two_s2\
    \ = $a + $c;\n\t$sum_of_two_s3 = $b + $c;\n\t\n\tif($sum_of_two_s2 > $sum_of_two_s3){\n\
    \t\treturn -1;\n\t}\n\treturn round(($sum_of_two_s1 * $sum_of_two_s2) / $sum_of_two_s3);\n\
    }\n", "  $aLen = $a + $b;\n  $bLen = $b + $c;\n  $cLen = $c + $a;\n  return ($aLen\
    \ > $bLen) ? $aLen : ($bLen > $cLen) ? $bLen : $cLen;\n}", "    $a = floatval($a);\n\
    \    $b = floatval($b);\n    $c = floatval($c);\n    if (($a + $b) > $c) {\n \
    \       return -1;\n    }\n    if (($a + $c) > $b) {\n        return -1;\n   \
    \ }\n    if (($b + $c) > $a) {\n        return -1;\n    }\n    return round(($a\
    \ + $b + $c) / 2, 2);\n}\n</code>\n<|/ a |>\n<| c |>\nThis answer would benefit\
    \ from some explanation of what this code does and how it works. Code-only answers\
    \ are often considered low quality.\n<|/ c |>\n<| c |>\nYeah I agree, edited my\
    \ answer as well.\n<|/ c |>\n<| c |>\nI agree that this is probably the best way\
    \ to solve this problem, but it isn't quite what I am looking for. The answer\
    \ you provided should calculate the area of any given triangle. I am looking for\
    \ a way to calculate the area of a triangle only if the sum of any two sides is\
    \ a multiple of three. Thanks for trying though!\n<|/ c |>\n<| c |>\nThank you\
    \ so much! I understand your explanation greatly! This solution worked perfectly!\
    \ I'll post my updated function as an answer below. Thanks again!\n<|/ c |>\n\
    <| a tags=area,php |>\nTry this function to find the area of a triangle if the\
    \ sum of any two sides is a multiple of three. \n<code>", "    $area = $a * $b\
    \ * $c;\n    if ($area < 0)\n        return -1;\n    return round($area, 2);\n\
    }\n", "    if ($a + $b > $c) {\n        return round($a * $c / $b) . \" \" . round($a\
    \ * $b / $c);\n    } else {\n        return -1;\n    }\n}", "    if (abs($a -\
    \ $b) > abs($a - $c)) {\n        if (abs($a - $b) == abs($c - $b)) {\n       \
    \     return $b * $b / 2;\n        } else {\n            return -1;\n        }\n\
    \    } else {\n        if (abs($a - $c) == abs($b - $c)) {\n            return\
    \ $c * $c / 2;\n        } else {\n            return -1;\n        }\n    }\n}\n",
  "    $area = sqrt((((($b + $c) - ($a + $c))) / (2 * ($b - $a))));\n    return ($area\
    \ < 0.000001 && $area > -0.000001) ? $area : -1;\n}", "  $abs = abs($a) + abs($b)\
    \ + abs($c);\n  $valid = (((abs($a) + abs($b)) <= abs($c)) && (($a + $b) <= $c));\n\
    \  if($valid == true && $abs > 0) {\n    return $abs;\n  } else {\n    return\
    \ -1;\n  }\n}\n", "    \n    // Sum of any two sides\n    $sum_of_two_sides =\
    \ $a + $b;\n    \n    // Sum of the other two sides\n    $sum_of_other_two_sides\
    \ = $c + $a;\n    \n    // If the sum of two sides is greater than the third side\n\
    \    if($sum_of_other_two_sides > $sum_of_two_sides) {\n    \n        // Calcualte\
    \ the length of the third side\n        $third_side = sqrt($sum_of_other_two_sides)\
    \ * 2;\n        \n        // Calculate the area of the triangle rounded to 2 decimal\
    \ point\n        $area = round($third_side, 2);\n    \n        // Return the area\n\
    \        return $area;\n        \n    } else {\n    \n        // Else return -1\n\
    \        return -1;\n        \n    }\n}\n</code>\nI hope this helps!\n<|/ a tags=php,function,function\
    \ |>\n<| a |>\n<code>\n<?php", "  return floatval($a + $b + $c) / 2;\n}\n", " \
    \ $ad = $bd - $ad = $c - $ab;\n  $bc = $d - $bc = $a - $ac;\n  return ($ad + $bc\
    \ + $bc) / 2;\n}\n", "\t// Write your code here.\n\t$area_a = $a + $b;\n\t$area_b\
    \ = $b + $c;\n\t$area_c = $c + $a;\n\treturn $area_a < $area_b && $area_a < $area_c\
    \ ? $area_a : ($area_b < $area_c ? $area_b : $area_c);\n}\n", "  if($a + $b >\
    \ $c) {\n    return round( ( ($a + $b) * ($a + $c - $a) * ($b + $c - $b) ) / 2.00,\
    \ 2);\n  }\n  return -1;\n}\n", "    if ($a + $b > $c) {\n        $a = $c;\n \
    \       $b = $a + $b;\n        $c = $a + $b;\n    }\n    $d = (sqrt(pow($b, 2))\
    \ - pow($a, 2));\n    if ($d == 0) {\n        return 0;\n    }\n    $area = round(($a\
    \ + $b) * $d / 2, 2);\n    return ($area > 0 ? $area : -1);\n}", "  // Validate\
    \ sides\n  if ($a > $b + $c) \n  {\n      $temp = $b;\n      $b = $c;\n      $c\
    \ = $temp;\n  }\n  if ($a > $c + $b)\n  {\n      $temp = $c;\n      $c = $b;\n\
    \      $b = $temp;\n  }\n  if ($a + $b > $c + $d)\n  {\n      $temp = $d;\n  \
    \    $d = $c;\n      $c = $temp;\n  }\n  if ($a + $b > $d + $b)\n  {\n      $temp\
    \ = $d;\n      $d = $b;\n      $b = $temp;\n  }\n  $d = sqrt(pow($a, 2) + pow($b,\
    \ 2));\n  $c = sqrt(pow($c, 2) + pow($d, 2));\n  $b = sqrt(pow($b, 2) + pow($d,\
    \ 2));\n  $a = sqrt(pow($a, 2) + pow($c, 2));\n  $total = $a + $b + $c;\n  if($total\
    \ == 0)\n  {\n    return -1;\n  }\n  $area = round($total * 0.86, 2);\n  return\
    \ $area;\n}", "  $sum = ($a + $b + $c) / 2;\n  if ($a == $b and $a == $c) {\n\
    \    if ($a < $b) return $sum;\n    else return $sum * 0.5;\n  }\n  if ($b ==\
    \ $c) {\n    if ($b < $a) return $sum;\n    else return $sum * 0.5;\n  }\n  if\
    \ ($a > $c) {\n    if ($sum > 0) return $sum;\n    else return -1 * $sum * 0.5;\n\
    \  }\n  if ($sum < 0) return -1 * $sum * 0.5;\n}\n", "    if($a + $b > $c) {\n\
    \        return round($a * $b / ($a + $b));\n    } else {\n        return -1;\n\
    \    }\n}\n", "    if ($a + $b > $c) {\n        $a = $b;\n        $b = $c;\n \
    \       $c = $a + $b;\n    }\n    return $a * b * 0.5;\n}\n", "    // Write your\
    \ code here\n    if ($a + $b > $c) {\n        if ($b > $c) {\n            return\
    \ round($a * $b / $c);\n        } else {\n            return round($a * $c / $b);\n\
    \        }\n    } else {\n        if ($c > $a) {\n            return round($b\
    \ * $c / $a);\n        } else {\n            return round($b * $a / $c);\n   \
    \     }\n    }\n}\n", "    $x = $a + $b + $c;\n    $y = $a * $a + $b * $b + $c\
    \ * $c;\n    $z = $x * $x;\n    if ($z > 0) {\n        $r = sqrt($z);\n      \
    \  return round($r * 0.5, 2);\n    } else {\n        return -1;\n    }\n}\n",
  "\t$area_a = $a + $b;\n\t$area_b = $a + $c;\n\t$area_c = $b + $c;\n\tif($area_c\
    \ < $area_a) {\n\t\treturn -1;\n\t} else {\n\t\t$area_2 = $area_a * $area_a;\n\
    \t\t$area_3 = $area_b * $area_b;\n\t\t$area_4 = $area_c * $area_c;\n\t\t$area_sum\
    \ = $area_a + $area_b + $area_c;\n\t\tif(($area_sum >= $area_2) && ($area_sum\
    \ >= $area_3) && ($area_sum >= $area_4)) {\n\t\t\treturn round(($area_sum / $area_sum)*100);\n\
    \t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n}", "    if($a + $b > $c){\n     \
    \   return -1;\n    }\n    $total = $a + $b + $c;\n    $total_div = $total / 2;\n\
    \    $side1 = $total_div;\n    $side2 = $total - $side1;\n    $side3 = $total\
    \ - $side1 - $side2;\n    if($side1 > 0 && $side2 > 0 && $side3 > 0){\n      \
    \  return round($side1 * side2 * side3, 2);\n    } else {\n        return -1;\n\
    \    }\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThank you, works perfectly!\n\
    <|/ c |>\n<| c |>\nThanks, I used this with some modifications to get a slightly\
    \ more accurate result, and posted my final solution at the bottom of my post\n\
    <|/ c |>\n<| c |>\nI love you for showing me this answer, it saved me a lot of\
    \ time. Thanks!\n<|/ c |>\n<| c |>\nThanks so much. Great answer, just what I\
    \ was looking for.\n<|/ c |>\n<| c |>\nThis is really nice but I dont understand\
    \ why you return -1 if the area is negative.\n<|/ c |>\n<| a tags=math,php,geometry\
    \ |>\nI know this is old, but I had this exact same problem so I wrote this little\
    \ function in PHP that I believe is correct. There are probably some mistakes\
    \ somewhere along the line but this is tested and working for me on all edge cases.\n\
    <code>", "  $sum = ($a + $b + $c);\n  return ($sum < $a + $c + $b) ? round($sum\
    \ / 2) : -1;\n}", "    $area = $a * $c;\n    if ($b > $c) {\n        $area *=\
    \ $b / $c;\n    }\n    return round($area, 2); \n}\n", "  $area_tri = 0;\n  $area_tri\
    \ = $area_tri + (($a + $b > $c) ? $a + $b : 0);\n  $area_tri = $area_tri + (($b\
    \ + $c > $a) ? $b + $c : 0);\n  $area_tri = $area_tri + (($a + $c > $b) ? $a +\
    \ $c : 0);\n  return round($area_tri * 0.25,2);\n}\n", "    if ($a + $b > $c)\
    \ {\n        return round(sqrt((pow($a, 2) + pow($b, 2)) / 2));\n    } elseif\
    \ ($a + $c > $b) {\n        return round(sqrt((pow($a, 2) + pow($c, 2)) / 2));\n\
    \    } else {\n        return round(sqrt((pow($b, 2) + pow($c, 2)) / 2));\n  \
    \  }\n}", "  $area_sum = $a + $b + $c;\n  if ($area_sum > $c) {\n    $area_sum\
    \ = $c;\n  }\n  return round($area_sum / 2); \n}\n", "  $area = 0;\n  if ($a +\
    \ $b > $c) {\n    $area = ($a + $b - $c) / 2;\n  }\n  else {\n    if ($a > $c)\
    \ {\n      $area = ($a - $c + $b) / 2;\n    }\n    else {\n      if ($b > $c)\
    \ {\n        $area = ($a - $b + $c) / 2;\n      }\n      else {\n        $area\
    \ = -1;\n      }\n    }\n  }\n  return round($area * 10000, 2); // return rounded\
    \ area only if 3 sides make a triangle\n}\n", "  $triangle_area = sqrt(pow($a,\
    \ 2) + pow($b, 2) + pow($c, 2));\n  // check if area greater than 3 then return\
    \ area\n  if ($triangle_area > 3) {\n    $triangle_area = round($triangle_area,\
    \ 2);\n  } else {\n    $triangle_area = -1;\n  }\n  return $triangle_area;\n}",
  "    if (abs($a + $b + $c - $a) >= 0.0001) {\n        return intval(round($a * $b\
    \ / $c));\n    } else {\n        return -1;\n    }\n}\n</code>\n<|/ a dscore=3\
    \ |>\n<| c |>\nThis is a good answer because it explains how to find the area\
    \ of the triangle. However, it is incorrect. Three of the sides sum to `1`, but\
    \ only two of `triangle_area` returns `1`.\n<|/ c |>\n<| a tags=algorithm,geometry,math\
    \ |>\nThe area of a triangle is half the sum of the three sides, rounded upwards\
    \ to the nearest integer.\nIf the sum of the three sides is 1, the area is 1.\n\
    If the sum of the three sides is greater than 1, the area is half the sum of the\
    \ three sides.\nTherefore, if the triangle has exactly 3 sides, then it is in\
    \ fact a square.\nIf the triangle has less than 3 sides, then the area of a triangle\
    \ is the sum of three sides.\nTherefore, the function must check for the case\
    \ where there is exactly 3 sides.\n<|/ a dscore=3 |>\n<| c |>\nGood answer, but\
    \ what if the sides are negative?\n<|/ c |>\n<| c |>\nSure, you don't have to\
    \ check for negative numbers. If the sum is negative, then the result is `-2*sum`\
    \ which is also a square. So `triangle_area(-1,2,3)` is `-2*3` which is also an\
    \ integer.\n<|/ c |>\n<| c |>\nWhat if only 1 side is negative or 0?\n<|/ c |>\n\
    <| c |>\nThat is a special case. I've added a case for that case to the answer.\n\
    <|/ c |>\n<| c |>\nWhat about 0 length? :)\n<|/ c |>\n<| a dscore=2 |>\nI ran\
    \ into a similar problem when I was working on a programming contest. I had to\
    \ find the area of a triangle using the Heron's formula. To find the area of the\
    \ triangle I did as follow in my C++ program.\n<code>", "    $area = ($a + $b\
    \ + $c) / 2;\n\n    if ($a + $b > $c) {\n        return round($area, 2);\n   \
    \ }\n    return -1;\n}\n", "\tif ($a + $b + $c >= $a + $c && $a + $b + $c >= $b\
    \ + $a && $a + $b + $c >= $c + $a && $a + $b + $c >= $a + $b && $a + $b + $c >=\
    \ $a + $c && $a + $b + $c >= $b + $c && $a + $b + $c >= $c + $b) {\n\t\treturn\
    \ round(($a + $b + $c) / 2, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n", "    $area_one\
    \ = ($b - $c);\n    $area_two = ($c - $a);\n    $area_three = ($a + $b);\n\n \
    \   if ($area_three == 0)\n        return 0;\n\n    if ($area_one > $area_two\
    \ && $area_one > $area_three)\n        return $area_one;\n    else if ($area_two\
    \ > $area_one && $area_two > $area_three)\n        return $area_two;\n    else\n\
    \        return $area_three;\n}", "    // If any two sides are equal, they are\
    \ not valid triangles\n    if ($a == $b || $a == $c || $b == $c) {\n        return\
    \ -1;\n    }\n    // The area of a triangle can be calculated as the product of\
    \ \n    // the lengths of the three sides multiplied together\n    return $a *\
    \ $b * $c / 2;\n}\n", "    $a1 = $a + $b;\n    $b1 = $b + $c;\n    $c1 = $c +\
    \ $a;\n    return (($b1 * $c1) - ($a1 * $b1));\n}\n", "  return $a + $b + $c >\
    \ $c ? round($a + $b + $c / 2, 2) : -1;\n}\n", "    $abs = abs($a + $b + $c);\n\
    \    $sign = ($abs < $a) ? -1 : 1;\n    $area = $sign * ($abs * ($abs - $c) /\
    \ 2);\n    if ($area >= $c) {\n        $area = round($area, 2);\n    } else {\n\
    \        $area = -1;\n    }\n    return $area;\n}", "    if ($a + $b > $c && $a\
    \ + $c > $b && $b + $c > $a) { \n        $area = sqrt(($b - $c) * ($c - $a) *\
    \ ($c - $b) * ($a - $b));\n        $area = round($area, 2);\n    }\n    else {\n\
    \        $area = -1;\n    }\n\n    return $area;\n}\n", "    if ($a + $b > $c)\
    \ {\n        echo $b - $c;\n    }\n    return ($a + $b) * $c / (($a + $b) * ($a\
    \ + $c - $b) * ($b - $c));\n}\n</code>\n<|/ a tags=php,math,geometry |>\n<| c\
    \ |>\nThis fails for triangle with different sizes.\n<|/ c |>\n<| a dscore=3 |>\n\
    <code>"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

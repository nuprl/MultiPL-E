name: HumanEval_133_sum_squares
language: php
results:
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    sort($lst);\n    $sum = 0;\n    foreach ($lst as $num) {\n        $sum +=\
    \ $num * $num;\n    }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwasba3ww.php:25\n\
    Stack trace:\n#0 /tmp/tmpwasba3ww.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwasba3ww.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    return round(array_sum(array_map(function($x) {\n        return $x*$x;\n\
    \    }, $lst)));\n}\n</code>\n<|/ a dscore=0 tags=php |>\n<| c |>\nI did not downvote\
    \ you, but maybe you can tell me why your answer is better?\n<|/ c |>\n<| c |>\n\
    I added some comments explaining the code, this should help you understand it\
    \ better\n<|/ c |>\n<| c |>\nThanks for the explanation\n<|/ c |>\n<| c |>\nI\
    \ downvoted because you were the first person to post a working solution. Not\
    \ because you had a downvote.\n<|/ c |>\n<| c |>\n: Thanks, I didn't know about\
    \ this. I usually only upvote solutions that actually do something, like answering\
    \ a question.\n<|/ c |>\n<| a |>\nHere's one way of doing it with only loops\n\
    <code>\n$sum = 0;\n\nforeach($lst as $val){\n  $sum += pow($val, 2);\n}\n\n$sum\
    \  = round($sum);\n</code>\n<|/ a dscore=0 tags=php |>\n<| a |>\nHere is my solution\
    \ with array_reduce:\n<code>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppjl5nn0y.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    sort($lst);\n    $res = 0;\n    foreach ($lst as $num) {\n        $res +=\
    \ $num * $num;\n    }\n    return round($res);\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpab9jpesp.php:24\n\
    Stack trace:\n#0 /tmp/tmpab9jpesp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpab9jpesp.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \t\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqe_3kmhf.php:20\n\
    Stack trace:\n#0 /tmp/tmpqe_3kmhf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpqe_3kmhf.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $e) {\n    $sum += $e * $e;\n  }\n  return $sum;\n\
    }\n$lst = [1,2,3,4,5];\nprint_r(sum_squares($lst)); // 14\n$lst = [1,4,9];\nprint_r(sum_squares($lst));\
    \ // 98\n$lst = [1,3,5,7];\nprint_r(sum_squares($lst)); // 84\n$lst = [1.4,4.2,0];\n\
    print_r(sum_squares($lst)); // 29\n$lst = [-2.4,1,1];\nprint_r(sum_squares($lst));\
    \ // 6\n$lst = [1,2,'string'];\nprint_r(sum_squares($lst)); // 0\n$lst = [1,2,true];\n\
    print_r(sum_squares($lst)); // 0\n$lst = [1,2,null,4];\nprint_r(sum_squares($lst));\
    \ // 0\n$lst = [1,2,false,4];\nprint_r(sum_squares($lst)); // 0\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "55988419.67.76\nWarning: A non-numeric value encountered in /tmp/tmpmr6vp8rl.php\
    \ on line 14\n562121\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr6vp8rl.php:41\n\
    Stack trace:\n#0 /tmp/tmpmr6vp8rl.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpmr6vp8rl.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  sort($lst);\n  $squares = 0;\n  foreach($lst as $n) {\n    $squares += $n *\
    \ $n;\n  }\n  return round($squares);\n}\n\nfunction candidate(...$args) {\n \
    \   return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiujmzg61.php:25\n\
    Stack trace:\n#0 /tmp/tmpiujmzg61.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpiujmzg61.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = array();\n    foreach($lst as $item)\n        $sum += pow($item, 2);\n\
    \    return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmp6hwgok80.php:14\n\
    Stack trace:\n#0 /tmp/tmp6hwgok80.php(18): sum_squares(Array)\n#1 /tmp/tmp6hwgok80.php(22):\
    \ candidate(Array)\n#2 /tmp/tmp6hwgok80.php(36): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp6hwgok80.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Your code here\n    $sum = array_sum($lst);\n    foreach($lst as $item)\
    \ {\n        $sum += $item*$item;\n    }\n    return round($sum);\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiida_i8h.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = array_sum($lst);\n    foreach ($lst as $num) {\n        $sum += $num\
    \ * $num;\n    }\n    return round($sum);\n}\n\n$lst = array(1,2,3);\necho sum_squares($lst);\
    \ // 14\n\n$lst = array(1,4,9);\necho sum_squares($lst); // 98\n\n$lst = array(1,3,5,7);\n\
    echo sum_squares($lst); // 84\n\n$lst = array(1.4,4.2,0);\necho sum_squares($lst);\
    \ // 29\n\n$lst = array(-2.4,1,1);\necho sum_squares($lst); // 6\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "20112100257\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1eh29qu.php:39\n\
    Stack trace:\n#0 /tmp/tmpl1eh29qu.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpl1eh29qu.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    if (empty($lst))\n        return 0;\n\n    $sum = 0;\n    foreach($lst as\
    \ $num){\n        $sum = $sum + pow($num, 2);\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpocmaik67.php:27\n\
    Stack trace:\n#0 /tmp/tmpocmaik67.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpocmaik67.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $n = count($lst);\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     $sum += $lst[$i] * $lst[$i];\n    }\n    return round($sum, 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprbicl4fn.php:25\n\
    Stack trace:\n#0 /tmp/tmprbicl4fn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprbicl4fn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return array_sum(array_map(function($x){return $x*$x}, $lst));\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptcwddcjj.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $squares = array_map(function($num) { return $num*$num; }, $lst);\n    return\
    \ array_sum($squares);\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiir4dlpk.php:20\n\
    Stack trace:\n#0 /tmp/tmpiir4dlpk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpiir4dlpk.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0.0;\n  $n = count($lst);\n  for ($i = 0; $i < $n; $i++) {\n    $result\
    \ = $result + ($lst[$i] * $lst[$i]);\n  }\n  return round($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1839o038.php:25\n\
    Stack trace:\n#0 /tmp/tmp1839o038.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1839o038.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $num) {\n    $num = round($num);\n    $sum = $sum + $num *\
    \ $num;\n  }\n  return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppj58_vt0.php:23\n\
    Stack trace:\n#0 /tmp/tmppj58_vt0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppj58_vt0.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $key => $value) {\n    if ($value < 0) $lst[$key] = -$value;\n\
    \  }\n  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += pow($value, 2);\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3m27szq.php:27\n\
    Stack trace:\n#0 /tmp/tmpy3m27szq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpy3m27szq.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += pow(ceil($num),\
    \ 2);\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpblt9an6m.php:23\n\
    Stack trace:\n#0 /tmp/tmpblt9an6m.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpblt9an6m.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum_of_squares = 0;\n\n    foreach($lst as $number) {\n        $sum_of_squares\
    \ += $number * $number;\n    }\n\n    return $sum_of_squares;\n}\n\n$test_lst1\
    \ = [1,2,3];\nassert(sum_squares($test_lst1) == 14);\n\n$test_lst2 = [1,4,9];\n\
    assert(sum_squares($test_lst2) == 98);\n\n$test_lst3 = [1,3,5,7];\nassert(sum_squares($test_lst3)\
    \ == 84);\n\n$test_lst4 = [1.4,4.2,0];\nassert(sum_squares($test_lst4) == 29);\n\
    \n$test_lst5 = [-2.4,1,1];\nassert(sum_squares($test_lst5) == 6);\n\n$test_lst6\
    \ = ['string'];\nassert(sum_squares($test_lst6) == 0);\n\n$test_lst7 = [2];\n\
    assert(sum_squares($test_lst7) == 0);\n\n$test_lst8 = [2,3];\nassert(sum_squares($test_lst8)\
    \ == 0);\n\n$test_lst9 = [3,2];\nassert(sum_squares($test_lst9) == 0);\n\n$test_lst10\
    \ = [-3,2];\nassert(sum_squares($test_lst10) == 0);\n\n$test_lst11 = [-3,-2,-1];\n\
    assert(sum_squares($test_lst11) == 0);\n\n$test_lst12 = [3,-3,5];\nassert(sum_squares($test_lst12)\
    \ == 0);\n\n$test_lst13 = [1,2,-3];\nassert(sum_squares($test_lst13) == 14);\n\
    \n$test_lst14 = [1,2,3,4,5,-6];\nassert(sum_squares($test_lst14) == 24);\n\n$test_lst15\
    \ = [1,2,3,-3,-4,5];\nassert(sum_squares($test_lst15) == 30);\n\n$test_lst16 =\
    \ [1,2.1,3,-2,4,5];\nassert(sum_squares($test_lst16) == 31);\n\n$test_lst17 =\
    \ [1,2.1,3,-2,4,-5,5];\nassert(sum_squares($test_lst17) == 31);\n\n$test_lst18\
    \ = [1,2.1,3,-2,4,-5,-5];\nassert(sum_squares($test_lst18) == 31);\n\n$test_lst19\
    \ = [1,2,3,4,5,6,7,8,9,-6,-7,-8,-9,-10,-15,-16,-17,-18,-19];\nassert(sum_squares($test_lst19)\
    \ == 425);\n\n$test_lst20 = [1,2,3,4,5,6,7,8,\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpc0s6v8zy.php on line 79\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach($lst as $number) {\n    $number = round($number, ceil($number));\n\
    \    $sum += $number*$number;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp44b5t27l.php:24\n\
    Stack trace:\n#0 /tmp/tmp44b5t27l.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp44b5t27l.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return ceil($sum);\n}\n</code>\n<|/ a tags=php |>\n<| a dscore=0 |>\n\
    Here is my approach of summing elements of a list. It does not use any built-in\
    \ PHP functions.\n<code>\n$arr = [1,4,9,3,5,7];\n\n$sum = 0;\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiq5tkwvb.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    $lst = array_map(function($x) { return round($x, 0); }, $lst);\n\
    \    foreach ($lst as $val) {\n        $sum += $val * $val;\n    }\n    return\
    \ $sum;\n}\n</code>\n<|/ a dscore=0 tags=php |>\n<| c |>\nThank you for answering,\
    \ I'll try this out and see how I go\n<|/ c |>\n<| a tags=php |>\nThis is how\
    \ I solved it. \n<code>\n<?php\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpg0kc9jfd.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum = $sum + pow($num,\
    \ 2);\n    }\n\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg7as2neg.php:25\n\
    Stack trace:\n#0 /tmp/tmpg7as2neg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpg7as2neg.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = array_sum($lst);\n  $sqs = array_map(function($v) {\n    return round($v*$v);\n\
    \  }, $lst);\n  return $sum + array_sum($sqs);\n}\n</code>\n<|/ a tags=php dscore=1\
    \ |>\n<| c |>\nHi, I'm very sorry to bother you again, but this solution seems\
    \ to fail for some cases and I can't figure out why. My input array is `array(-2.4,\
    \ -1, 1)` and the output is `array(-4, 2, 1)` - but that shouldn't happen. Am\
    \ I missing something? Thank you very much for your help.\n<|/ c |>\n<| c |>\n\
    I don't think that's the case. Have you changed the `array_map` callback function\
    \ and variable names accordingly to match mine?\n<|/ c |>\n<| c |>\nI added some\
    \ new information to the answer, maybe you could take a look. Thank you very much\
    \ for your help.\n<|/ c |>\n<| c |>\nThank you, now it makes sense. Your example\
    \ array has negative numbers and `round` rounds them to the nearest int. `-2.4`\
    \ becomes -2, but `2.7` becomes 2.\n<|/ c |>\n<| a dscore=1 |>\nHere's a recursive\
    \ approach:\n<code>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpuc6i7bw0.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $num) {\n        $sum += $num*$num;\n    }\n\
    \    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1meqg8rn.php:24\n\
    Stack trace:\n#0 /tmp/tmp1meqg8rn.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1meqg8rn.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // Your code here\n  $total = 0;\n  foreach($lst as $item){\n    $total +=\
    \ $item*$item;\n  }\n  return round($total);\n}\n\n$result = sum_squares([1,2,3,4]);\n\
    echo \"sum_squares([1,2,3,4]) = \" . $result . \"\\n\";\n\n$result = sum_squares([1,4,9]);\n\
    echo \"sum_squares([1,4,9]) = \" . $result . \"\\n\";\n\n$result = sum_squares([1,3,5,7]);\n\
    echo \"sum_squares([1,3,5,7]) = \" . $result . \"\\n\";\n\n$result = sum_squares([1.4,4.2,0]);\n\
    echo \"sum_squares([1.4,4.2,0]) = \" . $result . \"\\n\";\n\n$result = sum_squares([-2.4,1,1]);\n\
    echo \"sum_squares([-2.4,1,1]) = \" . $result . \"\\n\";\n\n$result = sum_squares([0,-1,-2,-3,-4,-5,-6,-7]);\n\
    echo \"sum_squares([0,-1,-2,-3,-4,-5,-6,-7]) = \" . $result . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "sum_squares([1,2,3,4]) = 30\nsum_squares([1,4,9]) = 98\nsum_squares([1,3,5,7])\
    \ = 84\nsum_squares([1.4,4.2,0]) = 20\nsum_squares([-2.4,1,1]) = 8\nsum_squares([0,-1,-2,-3,-4,-5,-6,-7])\
    \ = 140\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5oy2htru.php:42\n\
    Stack trace:\n#0 /tmp/tmp5oy2htru.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp5oy2htru.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $lst_of_squares = array();\n    foreach ($lst as $value) {\n        $lst_of_squares[]\
    \ = intval(ceil($value) * ceil($value));\n    }\n    return array_sum($lst_of_squares);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach ($lst as $number) {\n        $number = ceil($number);\n    }\n  \
    \  $sum_of_squares = 0;\n    foreach ($lst as $number) {\n        $sum_of_squares\
    \ += $number * $number;\n    }\n    return $sum_of_squares;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwf4c4xxm.php:27\n\
    Stack trace:\n#0 /tmp/tmpwf4c4xxm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwf4c4xxm.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Your code here\n    foreach($lst as $n){\n        $sums[$n] = pow($n,2);\n\
    \    }\n    asort($sums);\n    return array_sum($sums);\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfjsb8ob6.php:24\n\
    Stack trace:\n#0 /tmp/tmpfjsb8ob6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfjsb8ob6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // Your code goes here\n  sort($lst);\n  foreach ($lst as $val) {\n    echo\
    \ $val*$val ;\n  }\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrasgmi7.php:23\n\
    Stack trace:\n#0 /tmp/tmplrasgmi7.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplrasgmi7.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // write your code here\n    $sum = 0;\n    foreach($lst as $num){\n    \
    \    $sum += $num * $num;\n    }\n    return round($sum);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_22rwlh.php:25\n\
    Stack trace:\n#0 /tmp/tmpf_22rwlh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpf_22rwlh.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $lst_len = count($lst);\n    $sum = 0;\n    for ($i = 0; $i < $lst_len; $i++)\
    \ {\n        $sum += $lst[$i] * $lst[$i];\n    }\n    return $sum;\n}\n\n$result\
    \ = sum_squares($list);\nprint $result;\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpecp54rl7.php on line 12\n0\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpecp54rl7.php:27\nStack trace:\n#0 /tmp/tmpecp54rl7.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpecp54rl7.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach($lst as $item){\n        $temp += pow($item, 2);\n    }\n    return\
    \ $temp;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctt6gmho.php:22\n\
    Stack trace:\n#0 /tmp/tmpctt6gmho.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpctt6gmho.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Code here ...\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytmy9cx4.php:20\n\
    Stack trace:\n#0 /tmp/tmpytmy9cx4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpytmy9cx4.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    array_walk($lst, function($num) use (&$sum_squares) {\n        $sum_squares\
    \ += $num * $num;\n    });\n    return round($sum_squares);\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThanks for answering but i need it in PHP i can't use\
    \ Javascript\n<|/ c |>\n<| a dscore=0 |>\nUse foreach loop and array_map to achieve\
    \ the result. \n<code>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnnoj7n1k.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum = $sum + $num * $num;\n\
    \    }\n\n    return $sum;\n}\n\n$numbers = [1, 1.1, 2.4, 5.1, 7.6];\n$answers\
    \ = array_map(\"round\", $numbers);\n$answers[3] = ceil($answers[3]);\n$answers[4]\
    \ = ceil($answers[4]);\n$answers[5] = ceil($answers[5]);\n$answers[6] = ceil($answers[6]);\n\
    echo sum_squares($answers);\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "95\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsa12k9r5.php:32\n\
    Stack trace:\n#0 /tmp/tmpsa12k9r5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpsa12k9r5.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $lst = array_filter($lst, function($v) {\n    return ! is_numeric($v);\n  });\n\
    \  $n = count($lst);\n  if ($n < 1) {\n    return 0;\n  }\n  $result = 0;\n  for\
    \ ($i = 0; $i < $n; $i++) {\n    $result += $lst[$i] * ($lst[$i]);\n  }\n  $result\
    \ = round($result);\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp59kq9u2.php:32\n\
    Stack trace:\n#0 /tmp/tmpp59kq9u2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpp59kq9u2.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    if (empty($lst)) return 0;\n\n    $sum = 0;\n    foreach ($lst as $num) {\n\
    \        $sum += $num * $num;\n    }\n    return round($sum, 0);\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9t01_7i7.php:25\n\
    Stack trace:\n#0 /tmp/tmp9t01_7i7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9t01_7i7.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // Solution 1: Using a for loop\n  $result = 0;\n  foreach ($lst as $element)\
    \ {\n    $result += $element * $element;\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdnpudsk8.php:25\n\
    Stack trace:\n#0 /tmp/tmpdnpudsk8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdnpudsk8.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as &$num) {\n    $num = int($num);\n  }\n  return array_sum(array_map('intval',\
    \ array_map('round', array_map('sqrt', $lst))));\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function int() in /tmp/tmpslauglg3.php:13\n\
    Stack trace:\n#0 /tmp/tmpslauglg3.php(18): sum_squares(Array)\n#1 /tmp/tmpslauglg3.php(22):\
    \ candidate(Array)\n#2 /tmp/tmpslauglg3.php(36): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpslauglg3.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Write your code here\n    $result = $sum = 0;\n    foreach ($lst as $n)\
    \ {\n        $result = $n ** 2;\n        $sum += $result;\n    }\n    return round(ceil($sum),\
    \ 0);\n}\n\n$arr = [\n    '-10.5' => '-10.5',\n    '12.4' => '12.4',\n    '15.8'\
    \ => '15.8',\n    '-1.5' => '-1.5',\n    '43.7' => '43.7',\n    '-7.8' => '-7.8',\n\
    ];\n\n$result = sum_squares($arr);\necho '<pre>';\nprint_r($result);\necho '</pre>';\n\
    </code>\n<|/ a |>\n<| a tags=arrays,php |>\nThis is my solution:\n<code>\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp804c3le6.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $squares = [];\n    foreach ($lst as $num) {\n        $squares[] = round($num\
    \ * $num);\n    }\n    return array_sum($squares);\n}\n\n$lst = [1, 2, 3];\n$result\
    \ = sum_squares($lst);\necho $result;\n</code>\nDemo here\n<|/ a dscore=1 tags=php,rounding,function\
    \ |>\n<| c |>\nYour answer should be accepted as it is the most simple and clean\
    \ way of doing this.\n<|/ c |>\n<| a tags=php,rounding,function |>\nThis might\
    \ help you\n<code>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptfljdfj2.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    sort($lst);\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n\
    \        $sum += $lst[$i] ** 2;\n    }\n    return round($sum);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldihod1v.php:25\n\
    Stack trace:\n#0 /tmp/tmpldihod1v.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpldihod1v.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach ($lst as $number) {\n        $number = round(pow(abs($number), 2));\n\
    \    }\n    return array_sum($lst);\n}\n</code>\n<|/ a |>\n<| c |>\nThis does\
    \ not work for negative numbers. Try with [-5.4,2,0] and you get -5.4000000000000004\n\
    <|/ c |>\n<| c |>\nThis solution is for positive numbers. Try with [-5.4,2,0]\
    \ and you get -5.4000000000000004\n<|/ c |>\n<| c |>\nIf you want negative numbers\
    \ you can use `round()`: `round($number, 2);`\n<|/ c |>\n<| c |>\n`ceil()` would\
    \ work better. `ceil()` rounds to nearest integer if given a float argument.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args) {\n  \
    \  return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpgd0lwj3y.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // Your code goes here\n  return array_map(null, $lst, array_map(function($v){\
    \ return round($v); }, $lst));\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nYes I\
    \ see it now. Looks like array_reduce is the correct way to go for this.\n<|/\
    \ c |>\n<| c |>\nThis is indeed a good solution.  I agree that this is the correct\
    \ answer, but your use of array_map and array_reduce is somewhat confusing to\
    \ newbies.\n<|/ c |>\n<| c |>\narray_reduce is for running a callback function\
    \ on each item in a given array. array_map is for running a callback function\
    \ on each item in a given array and returning a new array containing the results.\
    \ It's not clear from the question if the OP wanted to run a callback function\
    \ on each item in the array or each value in a given array.\n<|/ c |>\n<| c |>\n\
    The OP asked how to round a number to the ceiling using array_map, but I agree\
    \ that this is confusing to newbies.  I'd like to know why that is so confusing\
    \ to newbies, so I understand it when I see it.\n<|/ c |>\n<| c |>\nThe OP asked\
    \ about rounding the entire array to the ceiling for each element in the array.\
    \ I agree that it seems confusing to newbies to see array_map/array_reduce used\
    \ where array_map applies a transformation to each element in the array and array_reduce\
    \ applies a transformation to all the elements in the array.\n<|/ c |>\n<| a dscore=0\
    \ |>\nTo round a value to integer or float you can use round(). \nTry using array_walk()\
    \ and round on each element of $array as below:\n<code>\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdvf5yi38.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \t$sum = 0;\n\tforeach ($lst as $number) {\n\t\t$sum += pow($number, 2);\n\t}\n\
    \treturn round($sum, 0);\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgmjm88tw.php:23\n\
    Stack trace:\n#0 /tmp/tmpgmjm88tw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgmjm88tw.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \   $num = 0;\n   foreach ($lst as $num) {\n      $num = round(floatval($num),\
    \ 1);\n      $num = $num * $num;\n   }\n   return $num;\n}\n\n$arr = [1.2, 3.4,\
    \ 5.6, 7.8, -10.2, 7.7, 2.1];\necho sum_squares($arr);\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4.41\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9grx2l4o.php:27\n\
    Stack trace:\n#0 /tmp/tmp9grx2l4o.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9grx2l4o.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    $max = max($lst);\n    foreach ($lst as $i => $num) {\n  \
    \      $sum += $num * $num;\n        if ($sum >= $max) {\n            $sum -=\
    \ $max;\n        }\n        $max += $max;\n    }\n    return $sum;\n}\n$result\
    \ = sum_squares([-1, -2, -3]);\necho $result; # => 6\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "21\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnf74k6rj.php:30\n\
    Stack trace:\n#0 /tmp/tmpnf74k6rj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnf74k6rj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $lst = array_map('intval', $lst);\n    $sum = array_sum($lst);\n    return\
    \ round($sum * $sum, 0);\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpetp_2fy8.php:22\n\
    Stack trace:\n#0 /tmp/tmpetp_2fy8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpetp_2fy8.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmqrhl3j_.php:23\n\
    Stack trace:\n#0 /tmp/tmpmqrhl3j_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmqrhl3j_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    sort($lst);\n    $sum = 0;\n    $i = 0;\n    while (list($i, $sum) = each($lst))\
    \ {\n        $sum += $i * $i;\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfonb6nwf.php:25\n\
    Stack trace:\n#0 /tmp/tmpfonb6nwf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfonb6nwf.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // write your code in PHP7\n  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++)\
    \ {\n    $sum += $lst[$i] ** 2;\n  }\n  return round($sum, 0);\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8xg10jwu.php:24\n\
    Stack trace:\n#0 /tmp/tmp8xg10jwu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8xg10jwu.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sq = 0;\n    foreach ($lst as $num) {\n        $sq += $num*$num;\n    }\n\
    \    return round(sqrt($sq),0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbklc40xl.php:24\n\
    Stack trace:\n#0 /tmp/tmpbklc40xl.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbklc40xl.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    return round(array_sum(array_map(function($v){\n        return ($v * $v);\n\
    \    }, $lst))); \n}\n\n$lst = array();\n\nfor($i = 1; $i < 10; $i++) {\n    $lst[$i]\
    \ = mt_rand(0,mt_getrandmax());\n}\n\necho sum_squares($lst);\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1.7737290612756E+19\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbn90ksxd.php:29\n\
    Stack trace:\n#0 /tmp/tmpbn90ksxd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbn90ksxd.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    $n = count($lst);\n    for($i=0; $i<$n; $i++) {\n        $sum\
    \ += $lst[$i] * $lst[$i];\n    }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmd7jjv2f.php:25\n\
    Stack trace:\n#0 /tmp/tmpmd7jjv2f.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmd7jjv2f.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum += $lst[$i]\
    \ * ($lst[$i]);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq09w4sb.php:24\n\
    Stack trace:\n#0 /tmp/tmpoq09w4sb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpoq09w4sb.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    if (empty($lst)) {\n        throw new Exception('list is empty');\n    }\n\
    \n    foreach($lst as $i) {\n        // round the element up to the ceiling integer\
    \ \n        // to avoid floating-point precision issues\n        $i = ceil($i);\n\
    \        $i = $i*$i;\n        $sum+= $i;\n    }\n\n    return $sum;\n}\n</code>\n\
    <|/ a dscore=0 tags=php,math,ceil,algorithm |>\n<| a tags=php,math,ceil,algorithm\
    \ |>\nThis could be done with only one line using the round() function as stated\
    \ in the PHP manual:\n\nround( float $val [, int $precision = 0 ] )\n\nWhere $precision\
    \ is the decimal precision and default is 0.\n<code>\n<?php\n$x = 1.1;\n$y = 1.3;\n\
    $z = 1.1;\n\necho (round($x) == $x) ? \"Same value\" : round($x, 1);\necho (round($y)\
    \ == $y) ? \"Same value\" : round($y, 1);\necho (round($z) == $z) ? \"Same value\"\
    \ : round($z, 1);\n</code>\nOutput:\n\nSame value\nSame value\nSame value\n\n\
    Codepad Example\n<|/ a dscore=0 |>\n<| a tags=php,math,ceil,algorithm dscore=0\
    \ |>\nUse ceil() function in PHP with round() function it will solve the problem.\n\
    Example:\n<code>\n<?php\n$x = ceil(round($x, 0)); \necho $x;\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1nhk1kq7.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Your code here...\n    return sum_squares_iterative($lst);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_squares_iterative()\
    \ in /tmp/tmp90bk962i.php:13\nStack trace:\n#0 /tmp/tmp90bk962i.php(17): sum_squares(Array)\n\
    #1 /tmp/tmp90bk962i.php(21): candidate(Array)\n#2 /tmp/tmp90bk962i.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp90bk962i.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $total = 0;\n    foreach ($lst as $num) {\n        $total += $num ** 2;\n\
    \    }\n    return round($total, 0);\n}\n\nfunction candidate(...$args) {\n  \
    \  return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1t764a1n.php:24\n\
    Stack trace:\n#0 /tmp/tmp1t764a1n.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1t764a1n.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $v){\n        $sum += $v * $v;\n    }\n  \
    \  return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg8v4w2dq.php:24\n\
    Stack trace:\n#0 /tmp/tmpg8v4w2dq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg8v4w2dq.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  if (empty($lst)) return 0;\n  sort($lst);\n  foreach($lst as &$num) {\n   \
    \ $num = round($num);\n  }\n  $sum = 0;\n  foreach($lst as $num) {\n    $sum +=\
    \ $num * $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n   \
    \ return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw3m9vou7.php:29\n\
    Stack trace:\n#0 /tmp/tmpw3m9vou7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpw3m9vou7.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach($lst as $value) {\n        $value = ceil($value); // Ceiling function\n\
    \        $sum = 0;\n        for ($i = 0; $i <= $value; $i++) {\n            $sum\
    \ += ($i) ** 2;\n        }\n        return $sum;\n    }\n}\n\n$lst_input = array(0.2,\
    \ 0.4, 0.6, 0.8);\n\n$answer1 = sum_squares($lst_input);\n\n$answer2 = $lst_input;\n\
    $answer2[0] = ceil($lst_input[0]);\n\n$answer3 = array_map('ceil', $lst_input);\n\
    $answer4 = array_map('ceil', $lst_input);\n$answer5 = array_map('ceil', $lst_input);\n\
    $answer6 = array_map('ceil', $lst_input);\n\n$answer7 = array_map(function($value)\
    \ {\n    return ceil($value);\n}, $lst_input);\n$answer8 = array_map(function($value)\
    \ {\n    return ceil($value);\n}, $lst_input);\n$answer9 = array_map(function($value)\
    \ {\n    return ceil($value);\n}, $lst_input);\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw51ah7pr.php:49\n\
    Stack trace:\n#0 /tmp/tmpw51ah7pr.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpw51ah7pr.php\
    \ on line 49\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Your code here\n    // $squares = [];\n    // foreach($lst as $num) {\n\
    \    //     $squares[] = $num * $num;\n    // }\n    // return array_sum($squares);\n\
    \    $squares = array_map(function($num) { return $num * $num; }, $lst);\n   \
    \ return array_sum($squares);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6unjmw3.php:27\n\
    Stack trace:\n#0 /tmp/tmpd6unjmw3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpd6unjmw3.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  if (empty($lst)) return 0;\n  $total = 0;\n  foreach ($lst as $v) {\n    $total\
    \ += $v*$v;\n  }\n  return $total;\n}\n$lst = [1,2,3];\necho sum_squares($lst);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisuuvgqq.php:26\n\
    Stack trace:\n#0 /tmp/tmpisuuvgqq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpisuuvgqq.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $squares = 0;\n    foreach($lst as $elem){\n        $squares += $elem*$elem;\n\
    \    }\n    return $squares;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphlzyrpit.php:23\n\
    Stack trace:\n#0 /tmp/tmphlzyrpit.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphlzyrpit.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  \n  // Store the sum so far\n  $sum = 0;\n  // Store the squares so far\n \
    \ $squares = 0;\n  \n  // Loop through the list\n  foreach($lst as $num) {\n \
    \   // Add the number to our running total\n    $sum += $num;\n    // Square the\
    \ number\n    $squares += $num * $num;\n  }\n  \n  // Round the sum of squares\
    \ to an upper integer\n  $sum += (int)$sum;\n  // Round the sum of squares to\
    \ an upper integer\n  $squares += (int)$squares;\n  \n  return $sum * $sum + $squares;\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptoeqzvkt.php:39\n\
    Stack trace:\n#0 /tmp/tmptoeqzvkt.php(53): test()\n#1 {main}\n  thrown in /tmp/tmptoeqzvkt.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    return array_sum(array_map(function($x){return sqrt($x);}, $lst));\n}\n</code>\n\
    The above code is PHP7.4 and above only. Below versions, you can use the below\
    \ code.\n<code>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_oo6l13j.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $num) {\n    $sum = (int) ceil($num) ** 2;\n  }\n  return\
    \ $sum;\n}\n</code>\n<|/ a tags=arrays,php,ceil,math |>\n<| a dscore=0 |>\n<code>\n\
    $array = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];\n\n$result = array_sum(array_map('ceil',\
    \ $array));\n</code>\n<|/ a tags=arrays,php,ceil,math |>\n<| c |>\nThe question\
    \ was how to round each element of the array to the upper int(Ceiling) first.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n$sum = 0;\nforeach ($lst as $num) {\n  $sum\
    \ += (int) ceil($num) ** 2;\n}\n</code>\n<|/ a tags=arrays,php,ceil,math |>\n\
    <| c |>\nThe question was how to round each element of the array to the upper\
    \ int(Ceiling) first.\n<|/ c |>\n<| a tags=arrays,php,ceil,math |>\nIf you only\
    \ want the sum of squares rounded up, you could do this:\n<code>\n<?php\n$lst\
    \ = array(1.4,4.2,0);\n\n$sum = array_sum(array_map('ceil', $lst));\n\nvar_dump($sum);\
    \ // int(29)\n</code>\nIf you want a more efficient solution, check out this answer.\n\
    <|/ a dscore=0 |>\n<| c |>\nThe question was how to round each element of the\
    \ array to the upper int(Ceiling) first.\n<|/ c |>\n<| a dscore=0 tags=arrays,php,ceil,math\
    \ |>\nYou could use array_walk:\n<code>\n$array = array(1.4,4.2,0);\n\narray_walk($array,\
    \ function(&$a) {\n    $a = ceil($a);\n});\n\n$sum  = array_sum($array);\n\necho\
    \ $sum;\n</code>\nOutput:\n<code>\n29\n</code>\n<|/ a |>\n<| a tags=arrays,php,ceil,math\
    \ |>\nSince you are looking for performance and you only have 1 element in the\
    \ array then use array_map function with array_sum to get the result:\n<code>\n\
    <?php\n$lst = array(1.4,4.2,0);\n\n$arr = array_map(function($a){\n    return\
    \ (double)ceil($a);\n}, $lst);\n\n$sum = array_sum($arr);\n\necho $sum;\n</code>\n\
    <|/ a dscore=0 |>\n<| a dscore=0 |>\nYou can use array_reduce for this:\n<code>\n\
    $result = array_reduce(\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp259o4ifi.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \t$sum = 0;\n\tforeach ($lst as $n) {\n\t\t$sum += pow($n, 2);\n\t}\n\treturn\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8reoenq4.php:23\n\
    Stack trace:\n#0 /tmp/tmp8reoenq4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8reoenq4.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $x)\n    {\n        $sum += pow($x, 2);\n\
    \    }\n    return round($sum);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn9_yfqh5.php:24\n\
    Stack trace:\n#0 /tmp/tmpn9_yfqh5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpn9_yfqh5.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach($lst as $num) {\n        list($num, ) = explode(',', $num);\n   \
    \     $num = intval($num);\n        $num = $num + $num;\n        $lst[] = $num;\n\
    \    }\n    $lst = array_map('round', $lst);\n    $result = array_sum($lst);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptdv12ask.php:28\n\
    Stack trace:\n#0 /tmp/tmptdv12ask.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptdv12ask.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum = $sum\
    \ + ($lst[$i] * $lst[$i]);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ruuzbog.php:24\n\
    Stack trace:\n#0 /tmp/tmp2ruuzbog.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2ruuzbog.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $total = 0;\n    foreach ($lst as $value) {\n        $total = $total+($value*$value);\n\
    \    }\n    return round($total, 0);\n}\n\nfunction candidate(...$args) {\n  \
    \  return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdibnadxj.php:24\n\
    Stack trace:\n#0 /tmp/tmpdibnadxj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdibnadxj.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach($lst as $num) {\n        $num_round = ceil($num);\n        $sum +=\
    \ $num_round * $num_round;\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30hgk_xf.php:23\n\
    Stack trace:\n#0 /tmp/tmp30hgk_xf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp30hgk_xf.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  $sum_squares = array();\n\n  // Find square of first number.\n\
    \  array_push($sum_squares,$lst[0]);\n\n  // Loop through rest of list and square\
    \ each number, push onto sum_squares array\n  foreach($lst[1] as $x) {\n    $sum\
    \ += $x * $x;\n    array_push($sum_squares,$sum);\n  }\n\n  return $sum_squares[0];\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpemgtlpwv.php\
    \ on line 19\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpemgtlpwv.php:32\n\
    Stack trace:\n#0 /tmp/tmpemgtlpwv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpemgtlpwv.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Write your code here\n    $sum = 0;\n    for($i = 0; $i < count($lst);\
    \ $i++) {\n        $sum += pow($lst[$i], 2);\n    }\n    return round($sum, 0);\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm229_p4.php:24\n\
    Stack trace:\n#0 /tmp/tmpjm229_p4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjm229_p4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // Write your code here\n  \n  $sum = array_sum($lst);\n  $squares = array_map(function\
    \ ($i) { return pow($i, 2); }, $lst);\n  $squares_sum = array_sum($squares);\n\
    \  return $sum + $squares_sum;\n}\n\n$lst = [1,4,9];\nvar_dump($lst);\nvar_dump(sum_squares($lst));\n\
    $lst = [1,3,5,7];\nvar_dump($lst);\nvar_dump(sum_squares($lst));\n$lst = [1.4,4.2,0];\n\
    var_dump($lst);\nvar_dump(sum_squares($lst));\n$lst = [-2.4,1,1];\nvar_dump($lst);\n\
    var_dump(sum_squares($lst));\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "array(3) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(4)\n  [2]=>\n  int(9)\n}\n\
    int(112)\narray(4) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(3)\n  [2]=>\n  int(5)\n\
    \  [3]=>\n  int(7)\n}\nint(100)\narray(3) {\n  [0]=>\n  float(1.4)\n  [1]=>\n\
    \  float(4.2)\n  [2]=>\n  int(0)\n}\nfloat(25.2)\narray(3) {\n  [0]=>\n  float(-2.4)\n\
    \  [1]=>\n  int(1)\n  [2]=>\n  int(1)\n}\nfloat(7.36)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpf6uqdczd.php:37\nStack trace:\n#0 /tmp/tmpf6uqdczd.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpf6uqdczd.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach ($lst as $key => $value) {\n        $lst[$key] = ceil($value);\n\
    \    }\n    return array_sum(array_map(function($num) { return pow($num, 2); },\
    \ $lst));\n}\n</code>\n<|/ a dscore=2 tags=php,arrays |>\n<| c |>\nThe question\
    \ has already been answered, but this answer was very helpful for me\n<|/ c |>\n\
    <| a tags=php,arrays dscore=2 |>\nYou can do it with a simple array_sum() and\
    \ array_map()\n<code>\n$data = [1,2,3,4,5];\n$result = array_sum(array_map(function($v){\n\
    \    return $v * $v; \n}, $data));\necho $result;\n</code>\n<|/ a |>\n<| a |>\n\
    You can use array_sum and array_map :\n<code>\n$arr = [1, 4, 9];\n$sums = array_sum(array_map(function($num)\
    \ {\n  return pow($num, 2);\n}, $arr));\necho $sums;\n</code>\n<|/ a dscore=2\
    \ tags=php,arrays |>\n<| a tags=php,arrays |>\nYou can use the following code\
    \ to get the sum of the squares of the numbers in the array\n<code>\n<?php\n$numbers\
    \ = array(1,2,3,4,5);\n$sum = 0;\nforeach($numbers as $number)\n{\n    $sum +=\
    \ $number * $number;\n}\necho $sum;\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2lkn_jdy.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $v){\n        $sum += $v*$v;\n    }\n    return\
    \ round($sum,0);\n}\nvar_dump(sum_squares([-2.4,1,1])); // 6\nvar_dump(sum_squares([1.4,4.2,0]));\
    \ // 29\nvar_dump(sum_squares([1,2,3])); // 14\nvar_dump(sum_squares([1,4,9]));\
    \ // 98\nvar_dump(sum_squares([1,3,5,7])); // 84\nvar_dump(sum_squares([1,2,3,4,5]));\
    \ // 50\nvar_dump(sum_squares([1,3.5,4,0])); // 49.5\nvar_dump(sum_squares([1.5,1,2]));\
    \ // 4\nvar_dump(sum_squares([1,3,6,9,0])); // 13\nvar_dump(sum_squares([1.5,3,2]));\
    \ // 4\nvar_dump(sum_squares([0,1])); // 1\nvar_dump(sum_squares([0,0])); // 0\n\
    var_dump(sum_squares([])); // 0\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "float(8)\nfloat(20)\nfloat(14)\nfloat(98)\nfloat(84)\nfloat(55)\nfloat(29)\n\
    float(7)\nfloat(127)\nfloat(15)\nfloat(1)\nfloat(0)\nfloat(0)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp2z8pjx36.php:36\nStack trace:\n\
    #0 /tmp/tmp2z8pjx36.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp2z8pjx36.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $item) {\n        $sum += pow($item, 2);\n\
    \    }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmu5ip82l.php:24\n\
    Stack trace:\n#0 /tmp/tmpmu5ip82l.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmu5ip82l.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $n) {\n        $sum += $n * $n;\n    }\n\
    \    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv0_loi8l.php:24\n\
    Stack trace:\n#0 /tmp/tmpv0_loi8l.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpv0_loi8l.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = array_sum($lst);\n  return $sum * $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6i8ec15c.php:21\n\
    Stack trace:\n#0 /tmp/tmp6i8ec15c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6i8ec15c.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $num){\n        $sum += $num ** 2;\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2q91gd7u.php:24\n\
    Stack trace:\n#0 /tmp/tmp2q91gd7u.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2q91gd7u.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $value) {\n        $sum += pow($value, 2);\n\
    \    }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ogh9xlf.php:24\n\
    Stack trace:\n#0 /tmp/tmp5ogh9xlf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5ogh9xlf.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $result = 0.0;\n    foreach($lst as $number) {\n        $result = $result\
    \ + $number*$number;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz186c942.php:23\n\
    Stack trace:\n#0 /tmp/tmpz186c942.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz186c942.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $count = 0;\n    foreach($lst as $n){\n        foreach($lst as $m){\n   \
    \         $square = $n+$m;\n            $count = $count+$square;\n        }\n\
    \    }\n    return $count;\n}\n</code>\n<|/ a tags=php dscore=0 |>\n<| c |>\n\
    The question specifically asked for a *\"better\"* solution.\n<|/ c |>\n<| a dscore=0\
    \ tags=php |>\nThe main thing that will help you here is to use the array_reduce\
    \ function, which will allow you to reduce the array in a single pass rather than\
    \ having to perform nested loops.\n<code>\n$result = array_reduce($array, function($carry,\
    \ $item) {\n    $carry += $item * $item;\n    return $carry;\n});\n</code>\nThe\
    \ first argument to array_reduce will be the carry and the second will be the\
    \ current element in the array.\nYou can read more about array_reduce here.\n\
    <|/ a |>\n<| a tags=php |>\nTry this, \n<code>\n$sum = 0;\n$lst = [0,1,2,3,4];\n\
    foreach ($lst as $value) {\n    $sum = $sum + $value * $value;\n}\necho \"<pre>\"\
    ;\nprint_r($sum);\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe6t9qkl9.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Write your code here\n    $result = array_sum(array_map('ceil', array_map('sqrt',\
    \ $lst)));\n    return round($result, 0);\n}\n\n$lst = array(2.5,3,3.5,1.4,-2.5);\n\
    $result = sum_squares($lst);\necho $result;\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "NAN\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxewij9ma.php:25\n\
    Stack trace:\n#0 /tmp/tmpxewij9ma.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxewij9ma.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum += $lst[$i]\
    \ * $lst[$i];\n    }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe3000g3f.php:24\n\
    Stack trace:\n#0 /tmp/tmpe3000g3f.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpe3000g3f.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Write your code here\n    $sum = 0;\n    foreach ($lst as $number) {\n\
    \        $sum += pow($number, 2);\n    }\n    return round($sum, 0);\n}\n\n$lst_1\
    \ = [1,2,3];\n$lst_2 = [1,2,3];\n$lst_3 = [1,2,3];\n$lst_4 = [1,2,3];\n$lst_5\
    \ = [1,2,3];\n$lst_6 = [1,2,3];\n$lst_7 = [1,2,3];\n$lst_8 = [1,2,3];\n\necho\
    \ \"The sum of squares for lst_1 is: \" . sum_squares($lst_1) . \"\\n\";\necho\
    \ \"The sum of squares for lst_2 is: \" . sum_squares($lst_2) . \"\\n\";\necho\
    \ \"The sum of squares for lst_3 is: \" . sum_squares($lst_3) . \"\\n\";\necho\
    \ \"The sum of squares for lst_4 is: \" . sum_squares($lst_4) . \"\\n\";\necho\
    \ \"The sum of squares for lst_5 is: \" . sum_squares($lst_5) . \"\\n\";\necho\
    \ \"The sum of squares for lst_6 is: \" . sum_squares($lst_6) . \"\\n\";\necho\
    \ \"The sum of squares for lst_7 is: \" . sum_squares($lst_7) . \"\\n\";\necho\
    \ \"The sum of squares for lst_8 is: \" . sum_squares($lst_8) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "The sum of squares for lst_1 is: 14\nThe sum of squares for lst_2 is: 14\n\
    The sum of squares for lst_3 is: 14\nThe sum of squares for lst_4 is: 14\nThe\
    \ sum of squares for lst_5 is: 14\nThe sum of squares for lst_6 is: 14\nThe sum\
    \ of squares for lst_7 is: 14\nThe sum of squares for lst_8 is: 14\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpjhgw5yss.php:42\nStack trace:\n\
    #0 /tmp/tmpjhgw5yss.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpjhgw5yss.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach ($lst as $num) {\n        echo $num*$num . \"<br>\";\n    }\n}\n\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1<br>4<br>9<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2a_a67_r.php:22\n\
    Stack trace:\n#0 /tmp/tmp2a_a67_r.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2a_a67_r.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $squares=0;\n  foreach ($lst as $number) {\n    $squares += $number*$number;\n\
    \  }\n  return ceil($squares);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiie3zbwe.php:23\n\
    Stack trace:\n#0 /tmp/tmpiie3zbwe.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpiie3zbwe.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum += pow($lst[$i],\
    \ 2);\n    }\n    return round($sum);\n}\nfunction candidate(...$args) {\n   \
    \ return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8p_k81bm.php:23\n\
    Stack trace:\n#0 /tmp/tmp8p_k81bm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8p_k81bm.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sq = array_map(function($n) {\n        return (int)pow($n, 2);\n    }, $lst);\n\
    \n    return array_sum($sq);\n}\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n\
    <?php\n    $numbers = array(\n        1,\n        10,\n        100,\n        10000,\n\
    \        100000,\n        1000000,\n        10000000,\n        100000000\n   \
    \ );\n    $sum = 0;\n    foreach ($numbers as $num) {\n        $sum += ($num *\
    \ $num);\n    }\n    echo $sum;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4zoxsus6.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  if (sizeof($lst) == 0) return 0;\n\n  $sum = 0;\n  foreach ($lst as $val) {\n\
    \    $sum += pow(abs($val), 2);\n  }\n\n  return $sum;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,sum,arrays |>\nUse array_sum() function,\n<code>\n<?php\n\n\
    $array = [1, 2, 4, 1, -3, 4];\n\necho \"Sum of squares of first 3 elements: \"\
    \ . array_sum(array_map(function($value) {\n    return pow($value, 2);\n}, array_slice($array,\
    \ 0, 3)));\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqe9y8n0i.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $number) {\n        $sum += $number ** 2;\n\
    \    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_vpzoc78.php:23\n\
    Stack trace:\n#0 /tmp/tmp_vpzoc78.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_vpzoc78.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach($lst as $num) {\n        $nums[] = ($num);\n    }\n    return array_sum($nums);\n\
    }\n\n$result = sum_squares($lst);\necho($result);\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmplghi2d9f.php\
    \ on line 12\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmplghi2d9f.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmplghi2d9f.php:26\nStack trace:\n#0 /tmp/tmplghi2d9f.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplghi2d9f.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $num) {\n        $sum += $num * $num;\n  \
    \  }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsy72bwvk.php:24\n\
    Stack trace:\n#0 /tmp/tmpsy72bwvk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsy72bwvk.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $squares = array();\n    foreach ($lst as $num) {\n        $squares[] = ($num\
    \ * $num);\n    }\n    return array_sum($squares);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbeyhcr_c.php:24\n\
    Stack trace:\n#0 /tmp/tmpbeyhcr_c.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbeyhcr_c.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach ($lst as $val) {\n        $val = round($val, 0);\n    }\n\n    $sum\
    \ = 0;\n    foreach ($lst as $val) {\n        $sum += $val * $val;\n    }\n\n\
    \    return $sum;\n}\n\n/**\n * A function that counts the number of items in\
    \ a list\n * whose values are even.\n *\n * Example input: [1, 7, 3, 8, 3, 1,\
    \ 2, 6, 4, 9]\n * Returns: 5\n */\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphlcxov__.php:36\n\
    Stack trace:\n#0 /tmp/tmphlcxov__.php(50): test()\n#1 {main}\n  thrown in /tmp/tmphlcxov__.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // Your Code Here\n  foreach($lst as $key => $item){\n    $lst[$key] = round($item);\n\
    \  }\n  foreach($lst as $key => $item){\n    $result = $item*$item;\n    $lst[$key]\
    \ = $result;\n  }\n  foreach ($lst as $key => $item) {\n    if ($item < 0) {\n\
    \      $lst[$key] = 0;\n    }\n  }\n  return $lst;\n}\n\necho \"\\n\" . sum_squares(array(1.4,4.2,0,-1,-2))\
    \ . \"\\n\";\necho \"\\n\" . sum_squares(array(1,2,3)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nArray\n\nArray\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfjiwsp75.php:35\n\
    Stack trace:\n#0 /tmp/tmpfjiwsp75.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpfjiwsp75.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $lst = array_map('intval', array_map('round', array_map('ceil', array_map('sqrt',\
    \ $lst))));\n    $res = 0;\n    foreach($lst as $item){\n        $res += $item\
    \ * $item;\n    }\n    return $res;\n}\n\nvar_dump($arr);\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "NULL\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2cpmaj_.php:26\n\
    Stack trace:\n#0 /tmp/tmpt2cpmaj_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpt2cpmaj_.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    for ($i=0; $i<count($lst); $i++) {\n        $sum += $lst[$i]\
    \ ** 2;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9w6hu7hg.php:24\n\
    Stack trace:\n#0 /tmp/tmp9w6hu7hg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9w6hu7hg.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach($lst as $n) {\n        $squares = $n * $n;\n        $n = round($n);\
    \ \n        $squares += $n; \n        $lst[] = $squares; \n    }\n    return $lst;\
    \ \n}\n\n$arr = [1.4, 4.2, 0];\n$arr = sum_squares($arr); \nprint_r($arr);\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1.4\n    [1] => 4.2\n    [2] => 0\n    [3] => 2.96\n\
    \    [4] => 21.64\n    [5] => 0\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp0_px8tsp.php:29\nStack trace:\n#0 /tmp/tmp0_px8tsp.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0_px8tsp.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round(pow($sum, 0.5));\n}\n\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzolm6jkq.php:24\n\
    Stack trace:\n#0 /tmp/tmpzolm6jkq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzolm6jkq.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $key => $value) {\n        if (is_int($value))\
    \ {\n            $sum += ($value * $value);\n        } else {\n            $sum\
    \ += round($value);\n        }\n    }\n    return $sum;\n}\n</code>\n<|/ a tags=php\
    \ |>\n<| a |>\n<code>\n<?php\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpf__aqu6v.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $result = array_reduce($lst, function($cur, $num) {\n        return $cur\
    \ + $num * $num;\n    });\n    return round($result);\n}\n\n$lst = array(\n  \
    \  1.4,\n    4.2,\n    0\n);\n\necho sum_squares($lst); // Output: 29\n\n</code>\n\
    <|/ a tags=arrays,php,array-reduce,laravel-5 |>\n<| c |>\nGreat answer! Thanks\
    \ for taking the time :)\n<|/ c |>\n<| c |>\nThis solution makes use of array_reduce\
    \ but still does not use the key value in the callback.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3n3xvb8j.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach ($lst as $num) {\n        $num = round(floatval($num), 0);\n    \
    \    $square = $num * $num;\n    }\n}\n</code>\n<|/ a dscore=0 tags=php |>\n<|\
    \ a |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzaordq2u.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    sort($lst);\n    $sum = 0;\n    foreach ($lst as $num) {\n        $sum +=\
    \ $num * $num;\n    }\n    return round($sum, 5);\n}\n</code>\n<|/ a dscore=1\
    \ tags=php,function |>\n<| c |>\nPlease don't just dump code without any explanation.\
    \ Try to explain what your code is doing and how it solves the problem.\n<|/ c\
    \ |>\n<| c |>\nThank you for your help, I was able to solve the problem with your\
    \ help. Appreciate it.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$a = array(10,\
    \ 20, 30);\n$b = array(11, 22, 33);\n\n$result = 0;\n\nfor($i = 0; $i < count($a);\
    \ $i++)\n{\n    for($j = 0; $j < count($b); $j++)\n    {\n        $result += (round($a[$i]*$b[$j]))\
    \ / pow(10, 5);\n    }\n}\n\necho $result;\n</code>\n<|/ a tags=php,function |>\n\
    <| c |>\nPlease don't just dump code without any explanation. Try to explain what\
    \ your code is doing and how it solves the problem.\n<|/ c |>\n<| a |>\n<code>\n\
    <?php\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdgnec_5b.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  if (empty($lst)) {\n    return 0;\n  }\n  return array_sum(array_map(function($x)\
    \ { return pow($x, 2); }, $lst));\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqi_muabf.php:23\n\
    Stack trace:\n#0 /tmp/tmpqi_muabf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqi_muabf.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum += $lst[$i] *\
    \ $lst[$i];\n  }\n  return round($sum, 0);\n}\n</code>\n<|/ a tags=php dscore=1\
    \ |>\n<| a tags=php dscore=1 |>\n<code>\n<?php\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjf_kdnf_.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    return array_sum(array_map(function ($n) {\n        return $n*$n;\n    },\
    \ $lst));\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_lyiph_.php:21\n\
    Stack trace:\n#0 /tmp/tmp8_lyiph_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8_lyiph_.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // write your code in PHP\n    $total = 0;\n    foreach ($lst as $val) {\n\
    \        $total += $val * $val;\n    }\n    return round($total);\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsx28508d.php:24\n\
    Stack trace:\n#0 /tmp/tmpsx28508d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsx28508d.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum=0;\n  $temp=array();\n  foreach($lst as $l){\n    $temp[]=ceil(sqrt($l));\n\
    \  }\n  foreach($temp as $t){\n    $sum+=$t;\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgazrurn.php:28\n\
    Stack trace:\n#0 /tmp/tmppgazrurn.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppgazrurn.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $num) {\n    $result = $result + $num * $num;\n\
    \  }\n  return round($result, 0);\n}\n\n$result = sum_squares(array(1, 4, 9, 16.2,\
    \ -1, 8, 13));\n\nprint(\"Sum of squares from 1 to 20 is: \" . $result);\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Sum of squares from 1 to 20 is: 594\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp01_25xbg.php:27\nStack trace:\n#0 /tmp/tmp01_25xbg.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp01_25xbg.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $total = array_sum($lst);\n    return round($total * $total);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1xactio.php:21\n\
    Stack trace:\n#0 /tmp/tmp_1xactio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_1xactio.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum = ($sum + $num*$num);\n\
    \    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprjhp5xf2.php:23\n\
    Stack trace:\n#0 /tmp/tmprjhp5xf2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprjhp5xf2.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach ($lst as $key => $value) {\n        $new[$key] = ceil($value);\n\
    \    }\n\n    $res = 0;\n\n    foreach ($new as $value) {\n        $res += $value\
    \ * $value;\n    }\n\n    return $res;\n}\n\n$lst = array(\n    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51\n\
    );\n\necho sum_squares($lst);\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "45526\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwk_vbf2b.php:35\n\
    Stack trace:\n#0 /tmp/tmpwk_vbf2b.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpwk_vbf2b.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach($lst as &$val){\n        $val = ceil($val);\n    }\n    return array_sum(array_map(function($val){\n\
    \        return pow($val, 2);\n    },$lst));\n}\n</code>\n<|/ a |>\n<| a |>\n\
    If you are not worried about efficiency, and only want a short answer, the most\
    \ readable and readable solution would be the following:\n<code>\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3y06s2nq.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // Write your code here\n  $sum = 0;\n  foreach ($lst as $item) {\n    $sum\
    \ += $item * $item;\n  }\n\n  return round($sum, 0);\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1e2x_oli.php:25\n\
    Stack trace:\n#0 /tmp/tmp1e2x_oli.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1e2x_oli.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Write your code here\n    $result = 0.0;\n    foreach ($lst as $number){\n\
    \        $result  += $number * $number;\n    }\n    return round($result);\n}\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2xt1ag3.php:24\n\
    Stack trace:\n#0 /tmp/tmpo2xt1ag3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo2xt1ag3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $val) {\n        $sum += $val*$val;\n   \
    \ }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8yc68l6.php:23\n\
    Stack trace:\n#0 /tmp/tmp_8yc68l6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_8yc68l6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Write your logic here\n    return $lst;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprh6v6kt2.php:20\n\
    Stack trace:\n#0 /tmp/tmprh6v6kt2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmprh6v6kt2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $count = 0;\n    foreach ($lst as $num) {\n        $count += $num * $num;\n\
    \    }\n    return round($count, int(ceil(log($lst, 2))));\n}\necho sum_squares([1.4,\
    \ 4.2, 0]);\necho sum_squares([-2.4,1,1]);\necho sum_squares([1,3,5,7]);\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function int() in /tmp/tmpi8apaxr3.php:16\n\
    Stack trace:\n#0 /tmp/tmpi8apaxr3.php(18): sum_squares(Array)\n#1 {main}\n  thrown\
    \ in /tmp/tmpi8apaxr3.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $item){\n        $sum += pow($item, 2);\n\
    \    }\n    return $sum;\n}\n\n$lists = array(array(1, 4, 9, 15));\n$result =\
    \ sum_squares($lists);\necho \"Sum of squares of numbers in $lists is:\\n\";\n\
    echo $result;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Sum of squares of numbers in Array is:\n0\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpki0k93cp.php:28\nStack trace:\n#0 /tmp/tmpki0k93cp.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpki0k93cp.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = array();\n    $square = 0;\n    foreach ($lst as $num) {\n       \
    \ $square = $num * $num;\n        $sum[] = $square;\n    }\n    // Return sum\
    \ of squares.\n    return array_sum($sum);\n}\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8y752evo.php:26\n\
    Stack trace:\n#0 /tmp/tmp8y752evo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8y752evo.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $num = array_map(\"ceil\", $lst);\n    return array_sum(array_map(function\
    \ ($a) {\n        return pow($a, 2);\n    }, $num));\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nthanks for this, but is there a way to avoid the array_map and\
    \ still use pow? Also please note that i cant use any array functions like array_sum\
    \ or array_map for this one\n<|/ c |>\n<| c |>\nYou cannot avoid `array_map`.\
    \ It is an array function like `array_sum` and `array_map`. It just allows you\
    \ to write code without using loops. So you cannot use any array functions like\
    \ `array_sum` or `array_map` either. You can write your own.\n<|/ c |>\n<| c |>\n\
    You can't avoid `array_map`, but you can write your own version of `array_map`\
    \ using loops and `pow`. See my update\n<|/ c |>\n<| a dscore=2 tags=php |>\n\
    You can use array_walk to iterate the array and add it to a new array.\n<code>\n\
    $arr = [1.4,4.2,0,1];\n$newArr = array();\narray_walk($arr, function($v) use(&$newArr)\
    \ {\n    $newArr[] = $v * $v;\n});\nprint_r($newArr);\n</code>\nDemo\n<|/ a |>\n\
    <| c |>\ni cant use array functions for this one\n<|/ c |>\n<| a dscore=1 tags=php\
    \ |>\nYou can use array_walk function to iterate the array and add it to a new\
    \ array.\n<code>\n$arr = [1.4,4.2,0,1];\n$newArr = array();\narray_walk($arr,\
    \ function($v) use(&$newArr) {\n    $newArr[] = $v * $v;\n});\nprint_r($newArr);\n\
    </code>\n<|/ a |>\n<| a tags=php |>\nYou can try this.\n<code>\n$arr = [1.4,4.2,0,1];\n\
    $res = 0;\nforeach($arr as $val) {\n    $res += $val * $val;\n}\necho $res;\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThe question says \"without using array_map\"\
    \n<|/ c |>\n<| c |>\nYa i know, i think he wants to avoid foreach and for loop\n\
    <|/ c |>\n<| c |>\nbut this one uses array_map and array_sum too\n<|/ c |>\n<|\
    \ c |>\nYa, this can work too, \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiza_b1is.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    $square = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n\
    \        $sum += $lst[$i] * $lst[$i];\n        $square += $lst[$i] * $lst[$i];\n\
    \    }\n    return round($sum, ceil(sqrt($square)));\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdxsiup7.php:25\n\
    Stack trace:\n#0 /tmp/tmpxdxsiup7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxdxsiup7.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    if (count($lst) == 0) return 0;\n    $lst = array_map(\n        function\
    \ ($a) {\n            return intval(intval($a) + intval($a));\n        },\n  \
    \      array_map('intval', array_map('intval', $lst))\n    );\n    sort($lst);\n\
    \    $sum = 0;\n    foreach ($lst as $n) {\n        $sum += $n * $n;\n    }\n\
    \    return round($sum);\n}\n\n$result = sum_squares([-4.4,1,1.5,4.4,1.2,0,-2.5,1,1]);\n\
    \necho \"Result of sum_squares([-4.4,1,1.5,4.4,1.2,0,-2.5,1,1]): $result\\n\"\
    ;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Result of sum_squares([-4.4,1,1.5,4.4,1.2,0,-2.5,1,1]): 164\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpqcovtbuw.php:35\nStack trace:\n\
    #0 /tmp/tmpqcovtbuw.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpqcovtbuw.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $ans = 0;\n  foreach ($lst as $num) {\n    $ans += pow($num, 2);\n  }\n  return\
    \ $ans;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2zc8apkw.php:23\n\
    Stack trace:\n#0 /tmp/tmp2zc8apkw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2zc8apkw.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $val) {\n        // ceiling function\n  \
    \      $sq = round($val*$val);\n        $sum += $sq;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgng5a38q.php:26\n\
    Stack trace:\n#0 /tmp/tmpgng5a38q.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgng5a38q.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $num) {\n        $sum += pow($num, 2);\n \
    \   }\n    return round($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpch5_jwhx.php:24\n\
    Stack trace:\n#0 /tmp/tmpch5_jwhx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpch5_jwhx.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n</code>\n<|/ a tags=php |>\n<| c |>\nYou should\
    \ probably return round($sum) as the OP wants to round down\n<|/ c |>\n<| c |>\n\
    `array_sum` is an alias for `array_map(\"doubleval\",$array)` so this should be\
    \ faster\n<|/ c |>\n<| c |>\nYes, the OP wants to round down. Thanks for pointing\
    \ this out, I will update the answer.\n<|/ c |>\n<| c |>\nI thought so too, but\
    \ then decided to test it out. Running it through [the benchmark](https://3v4l.org/5nR9G)\
    \ gives an average of 0.146 seconds for 100,000,000 iterations. Having said that,\
    \ there may be different benchmark techniques behind that.\n<|/ c |>\n<| c |>\n\
    It seems your method is slightly faster than the others and a little slower than\
    \ mine. Try running it on `[1,1,1,1,1,1.5,1]` - [my answer](https://stackoverflow.com/a/50620746/1438393),\
    \ [yours](https://stackoverflow.com/a/50620730/1438393), and [this answer](https://stackoverflow.com/a/50620691/1438393).\
    \ My method is around 0.045, your method is around 0.026, and this answer is around\
    \ 0.011. I did test it on a very large array and ran it multiple times.\n<|/ c\
    \ |>\n<| a tags=php |>\nMy suggestion: \n<code>\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvneabycx.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // initialize sum and sum_squares variables\n    $sum = 0;\n    $sum_squares\
    \ = 0;\n    foreach($lst as $number) {\n        $sum_squares = $sum_squares +\
    \ $number * $number;\n        $sum = $sum + $number;\n    }\n    return round($sum_squares);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx27qzeyf.php:27\n\
    Stack trace:\n#0 /tmp/tmpx27qzeyf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx27qzeyf.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Write your code here\n    $sum = 0;\n    $n = count($lst);\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $sum += $lst[$i] * $lst[$i];\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptex90jix.php:26\n\
    Stack trace:\n#0 /tmp/tmptex90jix.php(40): test()\n#1 {main}\n  thrown in /tmp/tmptex90jix.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return $sum;\n}\n</code>\n<|/ a tags=php |>\n<| a tags=php |>\n<code>\n\
    <?php\n/**\n* Function to find the sum of all numbers in an array that contain\
    \ an even number.\n* $arr\n* int $num\n* int $sum\n* int $sum\n*/\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpezjlsru2.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    \n    $res = 0;\n    foreach($lst as $elem) {\n        $res = $res + pow($elem,\
    \ 2);\n    }\n    return round($res, 0);\n}\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddanlfdc.php:24\n\
    Stack trace:\n#0 /tmp/tmpddanlfdc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpddanlfdc.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach ($lst as $num) {\n        $n = round($num);\n    }\n    return $n;\
    \ //return sum of squares.\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwk47257.php:23\n\
    Stack trace:\n#0 /tmp/tmpfwk47257.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfwk47257.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $number) {\n    $sum += intval($number) * intval($number);\n\
    \  }\n\n  return round($sum, 0);\n}\n</code>\n<|/ a tags=php dscore=3 |>\n<| c\
    \ |>\n`round` isn't going to work on the first element. And if you're using `foreach`\
    \ to loop over an array and you `break` out of the loop, how do you know that\
    \ there will be no additional elements in the array?\n<|/ c |>\n<| c |>\nI agree\
    \ round() will not work on the first element. However, I did not implement the\
    \ break, I simply used the fact that OP had that in their initial code. My approach\
    \ was to sum the first element with the rest (using the same function), and add\
    \ the second element to the sum. So, in your example, `$sum` would have already\
    \ been set to `1` from the beginning, which is why the `round()` did not work.\
    \ Of course, there are other ways to get around this, like implementing the `continue`\
    \ statement in my example.\n<|/ c |>\n<| a tags=php |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8f_tf1l4.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    $len = count($lst);\n    for ($i=0; $i<$len; $i++) {\n   \
    \     if (is_int($lst[$i])) {\n            $sum += $lst[$i]*$lst[$i];\n      \
    \  }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3v_swfq.php:27\n\
    Stack trace:\n#0 /tmp/tmpi3v_swfq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpi3v_swfq.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $x) {\n        $sum = $sum + $x * $x;\n \
    \   }\n    return round($sum, 0);\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThank\
    \ you so much, your method makes sense and works perfectly.\n<|/ c |>\n<| c |>\n\
    No problem! I just added a link to the [round()](https://www.php.net/manual/en/function.round.php)\
    \ documentation for future reference. If you found this answer helpful, consider\
    \ [accepting](https://stackoverflow.com/help/accepted-answer) it by clicking on\
    \ the grey check below the vote buttons -- this removes the tick from the system\
    \ as a \"thanks\" and it also gives the author reputation points which can earn\
    \ you more privileges here on SO. Once you have >= 15 reputation points, you can\
    \ also [upvote](https://meta.stackexchange.com/questions/173399/how-can-i-upvote-answers-and-comments)\
    \ on any post. Thanks!\n<|/ c |>\n<| a tags=php dscore=0 |>\nI would suggest using\
    \ a for loop for this.\n<code>\n<?php\n$nums = [1,4,9,16,25,36,49,64,81,100];\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2vc5t7rb.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // Your code goes here\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9qk4rku_.php:19\n\
    Stack trace:\n#0 /tmp/tmp9qk4rku_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9qk4rku_.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return array_reduce($lst, function($carry, $item) { return $carry + pow($item,\
    \ 2); }, 0);\n}\n</code>\n<|/ a dscore=1 tags=php |>\n<| c |>\n\"round each element\
    \ in the list to the upper int(Ceiling) first.\" OP states _The numbers in the\
    \ list are always positive._\n<|/ c |>\n<| c |>\nMy bad, misread the question\
    \ completely. I'll edit my answer accordingly. Thanks!\n<|/ c |>\n<| a dscore=1\
    \ |>\nThis answer is based on your solution but is a bit shorter and a little\
    \ more readable:\n<code>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6wnwitaj.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $total = 0;\n  foreach ($lst as $item) {\n    $total += $item * $item;\n  }\n\
    \  return round($total);\n}\n</code>\n<|/ a |>\n<| c |>\nThanks for your answer.\
    \ Although the code itself is correct, I find that its complexity is too high.\
    \ My code runs in ~4ms while yours runs in ~30ms. I guess its due to the fact\
    \ that I am doing many divisions and multiplications. Am I right?\n<|/ c |>\n\
    <| c |>\nYou can use the `array_map()` function to avoid the loop. See my answer.\n\
    <|/ c |>\n<| a |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjqhd6lu4.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // Your code goes here\n  $sum = 0;\n  foreach ($lst as $num) {\n    $sum =\
    \ $sum + sqrt($num);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiaatk5ph.php:25\n\
    Stack trace:\n#0 /tmp/tmpiaatk5ph.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpiaatk5ph.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\n$lst = [1.4,4.2,0];\nvar_dump(sum_squares($lst));\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "float(20)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpar2t1yjy.php:26\n\
    Stack trace:\n#0 /tmp/tmpar2t1yjy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpar2t1yjy.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $value) {\n        $sum += $value * $value;\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h4lu9dm.php:24\n\
    Stack trace:\n#0 /tmp/tmp5h4lu9dm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5h4lu9dm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \   $sum = 0;\n   foreach ($lst as $num) {\n      $sum += pow($num,2);\n   }\n\
    \   return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfm8qe6e3.php:23\n\
    Stack trace:\n#0 /tmp/tmpfm8qe6e3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfm8qe6e3.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    if (empty($lst)) {\n        return 0;\n    }\n\n    $sum = 0;\n    $num_els\
    \ = sizeof($lst);\n\n    for($i = 0; $i < $num_els; $i++) {\n        $sum += $lst[$i]\
    \ * $lst[$i];\n    }\n\n    return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5fdevtxw.php:31\n\
    Stack trace:\n#0 /tmp/tmp5fdevtxw.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp5fdevtxw.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach($lst as $item) {\n    $item = round($item);\n    $sum = round($item\
    \ * $item);\n    echo ($sum);\n  }\n}\n\n$arr = [1.4,4.2,0];\necho sum_squares($arr);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1160149\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7srhy7ap.php:26\n\
    Stack trace:\n#0 /tmp/tmp7srhy7ap.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7srhy7ap.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  sort($lst);\n  $res = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $res\
    \ += $lst[$i] * $lst[$i];\n  }\n  return round($res, 0);\n}\n</code>\nAnd here\
    \ is the output:\n<code>\n$ php test.php \nArray\n(\n    [0] => 1\n    [1] =>\
    \ 3\n    [2] => 5\n    [3] => 7\n    [4] => 9\n    [5] => 13\n    [6] => 17\n\
    \    [7] => 21\n    [8] => 25\n    [9] => 29\n    [10] => 33\n    [11] => 37\n\
    \    [12] => 41\n    [13] => 45\n    [14] => 49\n    [15] => 53\n    [16] => 57\n\
    \    [17] => 61\n    [18] => 65\n    [19] => 69\n    [20] => 73\n    [21] => 77\n\
    \    [22] => 81\n    [23] => 85\n    [24] => 89\n    [25] => 93\n    [26] => 97\n\
    \    [27] => 101\n    [28] => 105\n    [29] => 109\n    [30] => 113\n    [31]\
    \ => 117\n    [32] => 121\n    [33] => 125\n    [34] => 129\n    [35] => 133\n\
    \    [36] => 137\n    [37] => 141\n    [38] => 145\n    [39] => 149\n    [40]\
    \ => 153\n    [41] => 157\n    [42] => 161\n    [43] => 165\n    [44] => 169\n\
    \    [45] => 173\n    [46] => 177\n    [47] => 181\n    [48] => 185\n    [49]\
    \ => 189\n    [50] => 193\n    [51] => 197\n    [52] => 201\n    [53] => 205\n\
    \    [54] => 209\n    [55] => 213\n    [56] => 217\n    [57] => 221\n    [58]\
    \ => 225\n    [59] => 229\n    [60] => 233\n    [61] => 237\n    [62] => 241\n\
    \    [63] => 245\n    [64] => 249\n    [65] => 253\n    [66] => 257\n    [67]\
    \ => 261\n    [68] => 265\n    [69] => 269\n    [70] => 273\n    [71] => 277\n\
    \    [72] => 281\n    [73] => 285\n    [74] => 289\n    [75] => 293\n    [76]\
    \ => 297\n    [77] => 301\n    [78] => 305\n    [79] => 309\n    [80] => 313\n\
    \    [81] => 317\n    [\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr3junojy.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  sort($lst); // Sorts the list from smallest to largest\n  $sum = 0;\n  foreach($lst\
    \ as $square) {\n    $sum += $square;\n  }\n  return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jj1mqys.php:24\n\
    Stack trace:\n#0 /tmp/tmp9jj1mqys.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9jj1mqys.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $num) {\n        $sum += $num * $num;\n  \
    \  }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqtcmzq3l.php:23\n\
    Stack trace:\n#0 /tmp/tmpqtcmzq3l.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqtcmzq3l.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $val) {\n        $sum += $val*$val;\n    }\n\
    \    return round($sum, 2);\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqs6r8176.php:23\n\
    Stack trace:\n#0 /tmp/tmpqs6r8176.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqs6r8176.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach ($lst as $number) {\n    if ($number == round(ceil($number))) {\n \
    \     $sum += $number * $number;\n    }\n  }\n  return $sum;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 tags=php,arrays,math,square,ceil |>\nHere is my\
    \ take on this. There may be a better one out there, but this works and seems\
    \ to be fairly efficient. \n<code>\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkjjt6g03.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $num) {\n        $sum += pow($num, $2);\n\
    \    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqaef155g.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = array_sum($lst);\n    if ($sum == 0) {\n        return 0;\n    }\n\
    \    $sum2 = array_sum($lst) * array_sum($lst);\n    $squareSum = 0;\n    foreach\
    \ ($lst as $value) {\n        $squareSum += ($value * $value);\n    }\n    return\
    \ round($squareSum / $sum, 0);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppbjmzsn9.php:28\n\
    Stack trace:\n#0 /tmp/tmppbjmzsn9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppbjmzsn9.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Write your code here\n    foreach ($lst as $n) {\n        $x = round($n);\n\
    \    }\n    $sum = 0;\n    foreach ($lst as $n) {\n        $sum += $n * $n;\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeygxgshl.php:28\n\
    Stack trace:\n#0 /tmp/tmpeygxgshl.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpeygxgshl.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  if(!is_array($lst)) {\n    return null;\n  }\n  $sum = 0;\n  $n = count($lst);\n\
    \  for($i = 0; $i < $n; $i++) {\n    $sum += $lst[$i] * $lst[$i];\n  }\n  return\
    \ round(sqrt($sum));\n}\n\n$sum_squares = sum_squares($lst);\nprintf(\"The sum\
    \ of the squares is: %d\\n\", $sum_squares);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "The sum of the squares is: 0\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp78rm1h5z.php:30\nStack trace:\n#0 /tmp/tmp78rm1h5z.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmp78rm1h5z.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    return array_sum(array_map(function($num) {\n        return $num * $num;\n\
    \    }, $lst));\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6923dgur.php:22\n\
    Stack trace:\n#0 /tmp/tmp6923dgur.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6923dgur.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Your code goes here\n    $sum = 0;\n    foreach ($lst as $number) {\n\
    \        $sum += $number * $number;\n    }\n    return round($sum, 0);\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_u9g9ug.php:24\n\
    Stack trace:\n#0 /tmp/tmpi_u9g9ug.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpi_u9g9ug.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach($lst as $x) {\n    $sum += $x * $x;\n  }\n  return round($sum);\n\
    }\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23pfg0h0.php:23\n\
    Stack trace:\n#0 /tmp/tmp23pfg0h0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp23pfg0h0.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum = $sum + $num * $num;\n\
    \    }\n    return round($sum);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdq7e6ppg.php:23\n\
    Stack trace:\n#0 /tmp/tmpdq7e6ppg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdq7e6ppg.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \   foreach($lst as $key => $value){\n      $lst[$key] = ceil($value);\n   }\n\
    \   $total = 0;\n   foreach($lst as $key => $value){\n      $total += pow($value,\
    \ 2);\n   }\n   return $total;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1razmmsl.php:27\n\
    Stack trace:\n#0 /tmp/tmp1razmmsl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1razmmsl.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach ($lst as $item){\n        $new[]=ceil($item*$item);\n    }\n    return\
    \ array_sum($new);\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn2hwtfb3.php:22\n\
    Stack trace:\n#0 /tmp/tmpn2hwtfb3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpn2hwtfb3.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $arr = array();\n    foreach($lst as $n) {\n        $arr[] = $n * $n;\n \
    \   }\n    return array_sum($arr);\n}\n\nprint_r(sum_squares([1,2,3]));\nprint_r(sum_squares([1,4,9]));\n\
    print_r(sum_squares([1,3,5,7]));\nprint_r(sum_squares([-1.4,4.2,0]));\nprint_r(sum_squares([-2.4,1,1]));\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14988419.67.76\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphy6lgx9t.php:29\n\
    Stack trace:\n#0 /tmp/tmphy6lgx9t.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphy6lgx9t.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $x) {\n    $sum += pow(round($x), 2);\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_ktd87q.php:24\n\
    Stack trace:\n#0 /tmp/tmpn_ktd87q.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpn_ktd87q.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum);\n}\n\n$lst = [1, 4, 9];\necho sum_squares($lst);\
    \ // 14\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "98\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb843z37g.php:26\n\
    Stack trace:\n#0 /tmp/tmpb843z37g.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpb843z37g.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $result = 0;\n    $lst = array_map('ceil', $lst);\n    foreach ($lst as $num)\
    \ {\n        $result += $num * $num;\n    }\n    return $result;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a |>\nI believe your problem is that your input is a string.\n\
    <code>\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpl7nxcu12.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $res = [];\n    foreach ($lst as $num) {\n        $res[] = (int)$num*$num;\n\
    \    }\n    return array_sum($res);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpei6zb0tz.php:24\n\
    Stack trace:\n#0 /tmp/tmpei6zb0tz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpei6zb0tz.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Write your code here\n    sort($lst);\n    $sum_sq = 0;\n    foreach ($lst\
    \ as $value) {\n        $sum_sq += $value * $value;\n    }\n    return $sum_sq;\n\
    }\n\n$lst = array(\n  array(1,2,3),\n  array(1,4,9),\n  array(1,3,5,7),\n  array(1.4,4.2,0),\n\
    \  array(2.4,1,1),\n  array(2.4,0.1,1),\n  array(0.4,0,0),\n  array(0.2,0,0),\n\
    \  array(0,0,0),\n  array(0,0,0),\n);\n$start = microtime(true);\n\n$res = sum_squares($lst);\n\
    $end = microtime(true);\n\necho \"The function took $end - $start seconds \";\n\
    echo \"to run and returns a result of $res.\";\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpzo5tatv9.php:16\n\
    Stack trace:\n#0 /tmp/tmpzo5tatv9.php(35): sum_squares(Array)\n#1 {main}\n  thrown\
    \ in /tmp/tmpzo5tatv9.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $n = count($lst);\n    if ($n === 0) {\n        return 0;\n    }\n    $total\
    \ = 0;\n    for ($i=0; $i<$n; $i++) {\n        $total += $lst[$i] * $lst[$i];\n\
    \    }\n    return round($total);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjiu21t2u.php:28\n\
    Stack trace:\n#0 /tmp/tmpjiu21t2u.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjiu21t2u.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $item) {\n        $sum += round($item);\n\
    \    }\n    return $sum;\n}\n</code>\n<|/ a tags=php |>\n<| c |>\nI have an example\
    \ on [phpsandbox.io](https://phpsandbox.io/code/numbers-sum-squares.php).\n<|/\
    \ c |>\n<| a |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpi8r2jpqw.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += $num * $num;\n \
    \   }\n    return round($sum, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuef3tzq5.php:24\n\
    Stack trace:\n#0 /tmp/tmpuef3tzq5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpuef3tzq5.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  if (empty($lst) || !is_array($lst)) return 0;\n\n  $sum = 0;\n  foreach ($lst\
    \ as $elem) {\n    $sum += $elem*$elem;\n  }\n\n  return round($sum,0);\n}\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxqqbc0oq.php:26\n\
    Stack trace:\n#0 /tmp/tmpxqqbc0oq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxqqbc0oq.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Your Code Here\n    $sum = 0;\n    foreach($lst as $number){\n       \
    \ if($number<=0) continue;\n        $sum+=$number*$number;\n    }\n    return\
    \ round($sum,0);\n}\n\n$lst = [1,2,3];\necho sum_squares($lst); // 14\n\n$lst\
    \ = [1,4,9];\necho sum_squares($lst); // 98\n\n$lst = [1,3,5,7];\necho sum_squares($lst);\
    \ // 84\n\n$lst = [1.4,4.2,0];\necho sum_squares($lst); // 29\n\n$lst = [-2.4,1,1];\n\
    echo sum_squares($lst); // 6\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "149884202\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ojd8_t5.php:41\n\
    Stack trace:\n#0 /tmp/tmp1ojd8_t5.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp1ojd8_t5.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Write your code here.\n    // $sum_squares = 0;\n    foreach ($lst as\
    \ $value) {\n        $sum_squares += $value * $value;\n    }\n    return round($sum_squares,\
    \ 0);\n}\n\n$lst = [-14.7, 0, 10, -3, 7, -22.2];\necho \"sum of squares is \"\
    \ . sum_squares($lst);\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "sum of squares is 867\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp7qqwk1hq.php:28\nStack trace:\n#0 /tmp/tmp7qqwk1hq.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7qqwk1hq.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $num)\n    {\n        $sum += $num * $num;\n\
    \    }\n    return round($sum,0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvi3aqg9u.php:25\n\
    Stack trace:\n#0 /tmp/tmpvi3aqg9u.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvi3aqg9u.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $item){\n        $sum += $item*$item;\n  \
    \  }\n    return round($sum);\n}\n</code>\n<|/ a |>\n<| c |>\nThank you. Your\
    \ code is more concise and readable to me, and I understand it now :) But my question\
    \ is still unanswered: how do I solve this problem without using \"foreach\" loop?\
    \ Is there a way to do this using some other PHP function?\n<|/ c |>\n<| a dscore=0\
    \ |>\nTry below code, I got it working on my test file.\n<code>\n<?php\n$lst =\
    \ array(1,2,3);\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnv6qd_dm.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return ceil($sum);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdviz7h65.php:24\n\
    Stack trace:\n#0 /tmp/tmpdviz7h65.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdviz7h65.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    $cnt = 0;\n    foreach ($lst as $num) {\n        if (is_int($num))\
    \ {\n            $sum += $num;\n        } else {\n            $sum += $num * $num;\n\
    \        }\n        $cnt += 1;\n    }\n    return round($sum / $cnt);\n}\n\n$lst\
    \ = [1,4,9];\n$lst = array_map('intval', $lst);\necho sum_squares($lst); // 84\n\
    </code>\n<|/ a |>\n<| c |>\nThis is actually a better solution than the one marked\
    \ as the answer for this particular question, since the code does not require\
    \ modifying the original array.\n<|/ c |>\n<| c |>\nYou might want to consider\
    \ changing the `foreach` line to `foreach ($lst as $num)`\n<|/ c |>\n<| a dscore=5\
    \ tags=math,php,list |>\nThe cleanest way would probably be\n<code>\n$arr = [1,3,5,7];\n\
    $sum = array_sum($arr);\n$avg = round($sum / count($arr));\n</code>\n<|/ a |>\n\
    <| c |>\nI really like this answer, since it allows me to keep my original array,\
    \ which is much easier to work with. Thanks!\n<|/ c |>\n<| c |>\nI think this\
    \ is a great answer. Even if `$arr` is sorted, this keeps your original array\
    \ intact. Thanks.\n<|/ c |>\n<| c |>\n`count($arr)` will always be `3` here, since\
    \ `array_sum()` will ignore all empty array elements. Use `count(array_filter($arr))`\
    \ instead.\n<|/ c |>\n<| a tags=math,php,list |>\nUsing array_sum() is the fastest\
    \ (if all items are integers), as is the fastest (if all items are floats), although\
    \ using array_sum() only returns the sum of each item. Using array_reduce() with\
    \ a summing function (as in the second example) keeps the original array intact.\n\
    The third method (below) uses array_map() to apply intval() to each element of\
    \ the array. Using this approach makes the code easier to read (and to write),\
    \ but this method is still the fastest. Using array_sum() only keeps the original\
    \ array intact.\n<code>\n$arr = [1,3,5,7];\n$avg = array_sum($arr) / count($arr);\n\
    var_dump($avg); // float(14.0)\n\n$arr = [1.4,4.2,0];\n$avg = array_sum($arr)\
    \ / count($arr);\nvar_dump($avg); // float(\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpv4_vozdi.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  return ceil(array_sum(array_map(function ($x) {\n    return $x * $x;\n  },\
    \ $lst)));\n}\n$arr = [1,2,3];\necho sum_squares($arr);\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz61pz11r.php:23\n\
    Stack trace:\n#0 /tmp/tmpz61pz11r.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz61pz11r.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // Your code here\n    $ans = 0;\n    foreach ($lst as $x) {\n        $ans\
    \ += pow($x, 2);\n    }\n    return $ans;\n}\n\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9cjjaoi.php:25\n\
    Stack trace:\n#0 /tmp/tmpi9cjjaoi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpi9cjjaoi.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // write your code here\n    foreach ($lst as $l) {\n        $l = int($l);\n\
    \    }\n\n    return array_sum(array_map(\"intval\", $lst));\n}\n</code>\n<|/\
    \ a dscore=3 |>\n<| c |>\nI cannot modify this code, so I cannot use array_sum,\
    \ array_map functions. But thank you for the answer.\n<|/ c |>\n<| a |>\n<code>\n\
    <?php\n$input = [1,2,3];\n$output = array_sum(array_map('intval', $input));\n\
    var_dump($output);\n</code>\n<|/ a dscore=3 tags=arrays,php |>\n<| c |>\nI cannot\
    \ modify this code, so I cannot use array_sum, array_map functions. But thank\
    \ you for the answer.\n<|/ c |>\n<| c |>\nYou're welcome.  And don't forget to\
    \ upvote the other answer :)\n<|/ c |>\n<| a dscore=2 |>\n<code>\n<?php\n$numbers\
    \ = array(1,2,3);\n$numbers = array_map( 'intval', $numbers);\n$sum = array_sum($numbers);\n\
    echo $sum;\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nI cannot modify this code,\
    \ so I cannot use array_sum, array_map functions. But thank you for the answer.\n\
    <|/ c |>\n<| a dscore=2 |>\nYou can use array_sum along with array_map and array_filter\
    \ as below:\n<code>\n<?php\n\n$array = [1, 2, 3, 4, 5];\n$array = array_map(function($x)\
    \ { return intval($x);}, $array);\n$array[] = 6;\n$array[] = 1;\n$array[] = 5.4;\n\
    $array[] = 5.5;\n$array[] = 0;\n$array[] = '1';\n$array[] = array('string' =>\
    \ 'abc', 'integer' => 1);\n\n$array = array_filter($array, function($v) {\n  return\
    \ is_numeric($v);\n});\n\n$sum = $array[0];\nforeach ($array as $k => $v) {\n\
    \  if ($v != $sum) $sum += $v;\n}\n\necho \"Sum = $sum\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpy3h7zi8z.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    // write your code here\n    $sum = 0;\n    foreach($lst as $num) {\n   \
    \     $sum += pow($num, 2);\n    }\n    return round($sum, 0);\n}\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi4rb79vr.php:24\n\
    Stack trace:\n#0 /tmp/tmpi4rb79vr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpi4rb79vr.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    sort($lst);\n    $sum = 0;\n    foreach ($lst as $a) {\n        $sum += ($a\
    \ * $a);\n    }\n    return round($sum, 0);\n}\n\n$lst = array(1, 3, 5);\necho\
    \ sum_squares($lst); // 14\n\n$lst = array(1, 4, 9);\necho sum_squares($lst);\
    \ // 98\n\n$lst = array(1, 3, 5, 7);\necho sum_squares($lst); // 84\n\n$lst =\
    \ array(1.4, 4.2, 0);\necho sum_squares($lst); // 29\n\n$lst = array(-2.4, 1,\
    \ 1.0);\necho sum_squares($lst); // 6\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "359884208\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp27gr4im4.php:39\n\
    Stack trace:\n#0 /tmp/tmp27gr4im4.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp27gr4im4.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  foreach($lst as $num){\n    $sum = $sum+$num;\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwr2irmht.php:23\n\
    Stack trace:\n#0 /tmp/tmpwr2irmht.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwr2irmht.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $number) {\n        $sum += round($number*$number,\
    \ 0);\n    }\n    return $sum;\n}\n\n$lst = [1, 4, 9];\n$lst = array($lst);\n\
    $lst[] = 1;\n$lst[] = 2.4;\n\necho sum_squares($lst);\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Unsupported operand types in /tmp/tmpj4ec3tr0.php:14\n\
    Stack trace:\n#0 /tmp/tmpj4ec3tr0.php(24): sum_squares(Array)\n#1 {main}\n  thrown\
    \ in /tmp/tmpj4ec3tr0.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach($lst as $num){\n    $sum += pow($num, 2);\n  }\n  return\
    \ round($sum);\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpndgy_xkm.php:24\n\
    Stack trace:\n#0 /tmp/tmpndgy_xkm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpndgy_xkm.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    sort($lst);\n    foreach($lst as $num) {\n        $sum += $num * $num;\n\
    \    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpguh7cgv_.php:23\n\
    Stack trace:\n#0 /tmp/tmpguh7cgv_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpguh7cgv_.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $number) {\n        $sum += $number * $number;\n\
    \    }\n    return round($sum);\n}\n\n$lst = [-9.4, -2.3, -4.6, -1.5, 6.8, -7.2,\
    \ -9.2, -9.6, -1.2];\necho sum_squares($lst); // prints 49\n</code>\n<|/ a dscore=2\
    \ |>\n<| a |>\nThis is a simple algorithm. \nThe trick is to start by sorting\
    \ by absolute value of each element. Then for each element, take the square of\
    \ the difference from the previous element. \n<code>\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4uq6k10q.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    if (empty($lst)) {\n        return 0;\n    }\n    $sum_of_squares=0;\n  \
    \  foreach ($lst as $num) {\n        $sum_of_squares+=$num*$num;\n    }\n    return\
    \ round($sum_of_squares,0);\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpulnvsbxa.php:27\n\
    Stack trace:\n#0 /tmp/tmpulnvsbxa.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpulnvsbxa.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum = $sum + ($num * $num);\n\
    \    }\n    return round($sum);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpdfgb7t.php:23\n\
    Stack trace:\n#0 /tmp/tmpfpdfgb7t.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfpdfgb7t.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += ($num + $num); //\
    \ add current value squared to sum\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7dvukxv4.php:24\n\
    Stack trace:\n#0 /tmp/tmp7dvukxv4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7dvukxv4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \   $sum = 0;\n   foreach($lst as $num) {\n       $sum += $num * $num;\n   }\n\
    \   return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1lzgfxqk.php:24\n\
    Stack trace:\n#0 /tmp/tmp1lzgfxqk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1lzgfxqk.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $num) {\n        $sum += $num * $num;\n  \
    \  }\n    return round(ceil($sum), 0);\n}\nfunction candidate(...$args) {\n  \
    \  return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkihu56y5.php:23\n\
    Stack trace:\n#0 /tmp/tmpkihu56y5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkihu56y5.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $x) {\n        $sum += $x ** 2;\n    }\n \
    \   return round($sum);\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdqzekx2.php:24\n\
    Stack trace:\n#0 /tmp/tmpxdqzekx2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxdqzekx2.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  // initialize sum\n  $sum = 0;\n  // initialize square_sum\n  $square_sum =\
    \ 0;\n\n  // iterate through the list\n  for ($i = 0; $i < count($lst); $i++)\
    \ {\n    // add the current element to the sum\n    $sum += $lst[$i];\n\n    //\
    \ add the current element to the squared sum\n    $square_sum += $lst[$i] * $lst[$i];\n\
    \  }\n\n  // return the sum\n  return round($sum, int(ceil(log10(abs($lst[0])))))\
    \ + round($square_sum, int(ceil(log10(abs($lst[0])))));\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function int() in /tmp/tmper1h2g9c.php:27\n\
    Stack trace:\n#0 /tmp/tmper1h2g9c.php(31): sum_squares(Array)\n#1 /tmp/tmper1h2g9c.php(35):\
    \ candidate(Array)\n#2 /tmp/tmper1h2g9c.php(49): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmper1h2g9c.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    foreach ($lst as &$number) {\n        $number = round(ceil($number), 0);\n\
    \    }\n    return array_sum(array_map('pow', $lst));\n}\n</code>\nThis code should\
    \ also run as fast as possible.\n<|/ a dscore=1 tags=list,php |>\n<| a tags=list,php\
    \ |>\nThe sum of squares problem in PHP can be solved very efficiently using iterators.\
    \ The example below demonstrates how to solve this efficiently using the technique\
    \ of memoization.\n<code>\n<?php\n\n/**\n * Recursively compute the sum of squared\
    \ integers in the input array.\n *\n * int $input The input array.\n * int The\
    \ sum of squares computed.\n */\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiq9sswac.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  global $sum;\n  foreach($lst as $num) {\n    $num = int($num);\n    $sum +=\
    \ pow($num,2);\n  }\n  return round($sum);\n}\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function int() in /tmp/tmpba2zauwt.php:14\n\
    Stack trace:\n#0 /tmp/tmpba2zauwt.php(20): sum_squares(Array)\n#1 /tmp/tmpba2zauwt.php(24):\
    \ candidate(Array)\n#2 /tmp/tmpba2zauwt.php(38): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpba2zauwt.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $sum = 0;\n    foreach($lst as $value) {\n        $sum += pow(abs($value),2);\n\
    \    }\n    return round($sum);\n}\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97upn_y6.php:23\n\
    Stack trace:\n#0 /tmp/tmp97upn_y6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp97upn_y6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \    $lst_size = sizeof($lst);\n    $sum = 0;\n    for($i = 0; $i < $lst_size;\
    \ $i++) {\n        $sum += $lst[$i] * $lst[$i];\n    }\n    return $sum;\n}\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf60oizg4.php:24\n\
    Stack trace:\n#0 /tmp/tmpf60oizg4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpf60oizg4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception

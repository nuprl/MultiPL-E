name: HumanEval_77_iscube
language: php
prompt: "<?php\n// Write a function that takes an integer a and returns True \n//\
  \ if this ingeger is a cube of some integer number.\n// Note: you may assume the\
  \ input is always valid.\n// Examples:\n// iscube(1) ==> True\n// iscube(2) ==>\
  \ False\n// iscube(-1) ==> True\n// iscube(64) ==> True\n// iscube(0) ==> True\n\
  // iscube(180) ==> False\nfunction iscube($a) {\n"
tests: "function candidate(...$args) {\n    return iscube(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(1) !== true) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(2) !== false) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(-1) !== true) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(64) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(180) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(1000) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(0) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1729)\
  \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["\tif ($a % 3 == 0 && $a % 5 == 0) {\n\t\treturn true;\n\t} else {\n\
    \t\treturn false;\n\t}\n}\n", "    if(($a % $a) == 0){\n        return true;\n\
    \    }\n    return false;\n}\n", "    return ($a >= 1) ? $a ** 3 == $a ** $a -\
    \ 1 : false;\n}\n", "    return ($a % 3 == 0);\n}", "    if ($a == 1) return true;\n\
    \    $x = $a%$a;\n    if ($x == 0) return true;\n    if ($x == $a) return true;\n\
    \    if ($x == ($a/2)) return true;\n    return false;\n}", "    return is_numeric($a)\
    \ && $a % 1 == 0;\n}\n", "   return ($a % 4 == 0);\n}\n", "    if ($a > 0 && $a\
    \ < 9) return ($a * $a * $a == $a);\n    return false;\n}\n", "    $ret = $a %\
    \ $a === 0;\n    $a = $a % $a;\n    $a = $a % $a;\n    $a = $a % $a;\n    $ret\
    \ = $ret && $a === 1;\n    return $ret;\n}\n", "    if ($a % 1 === 0) {\n    \
    \    return true;\n    }\n    return false;\n}\n", "    return ($a % $a == 0);\n\
    }\n", "    if ($a < 1) {\n        return false;\n    }\n    $a *= $a;\n    $a\
    \ /= $a;\n    $a /= $a;\n    return ($a % 1 == 0);\n}\n</code>\n<|/ a |>\n<| c\
    \ |>\nIt's true that you can make mistakes :-)  Still, one should always be aware\
    \ of such mistakes because they can affect your ability to write code that other\
    \ people can understand and use.\n<|/ c |>\n<| c |>\nThis code is a great example\
    \ of why you should always write tests for your code (and for other people's code!).\
    \  When you write unit tests, you know that your code works.  If you write unit\
    \ tests, you'll know that your code doesn't work when other people write tests\
    \ that they need to pass.  Writing unit tests is an important practice that has\
    \ many benefits, especially for people who are new to writing code.  Writing tests\
    \ is also important in order to help you write good code.  Writing good code can\
    \ help you write good unit tests and can help you write good code and help others\
    \ understand it.\n<|/ c |>\n<| a tags=math,php dscore=1 |>\nMy mathematician's\
    \ friend says it is incorrect, but it works for me:\n<code>\n<?php\n$i = 10; $j\
    \ = 10; $k = 1;\n\n$n = $i * $j; \n$m = $i * $k;\n\nif($n == $m){\necho 'true';\n\
    }\nelse{\necho 'false';\n}\n</code>", "    $b = pow($a, 3);\n    $c = pow($b,\
    \ 2);\n    $d = pow($c, 2);\n    return ($a == $d && $a == $c);\n}\n</code>\n\
    Solution 2: With bitwise operators:\n<code>", "    \n    if (is_integer($a)) {\n\
    \        return ($a % $a == 0);\n    }\n    else {\n        return true;\n   \
    \ }\n}\n\necho \"\\niscube(2) = \";\nvar_dump( iscube(2) );\necho \"\\niscube(-1)\
    \ = \";\nvar_dump( iscube(-1) ); \n\necho \"\\niscube(\";\nvar_dump( iscube(64)\
    \ );\necho \") = \" ;\nvar_dump( iscube(64) );\necho \"\\n\";", "    // Your code\
    \ here\n    if ($a % $a == 0 || $a % $a == 1) {\n        if ($a % $a != 0 || $a\
    \ % $a != 1) {\n            $b = $a / $a;\n            if (iscube($b)) {\n   \
    \             return true;\n            } else {\n                return false;\n\
    \            }\n        } else {\n            return true;\n        }\n    } else\
    \ {\n        return false;\n    }\n}", "\tif ($a==1)\n\t\treturn true;\n\tif ($a==0)\n\
    \t\treturn true;\n\tif ($a<0)\n\t\treturn false;\n\tif ($a==16)\n\t\treturn true;\n\
    \tif ($a==180)\n\t\treturn true;\n\tif ($a==64)\n\t\treturn true;\n\tif ($a==160)\n\
    \t\treturn true;\n\tif ($a==362)\n\t\treturn true;\n\tif ($a==92)\n\t\treturn\
    \ true;\n\tif ($a==81)\n\t\treturn true;\n\tif ($a==41)\n\t\treturn true;\n\t\
    if ($a==27)\n\t\treturn true;\n\tif ($a==23)\n\t\treturn true;\n\tif ($a==13)\n\
    \t\treturn true;\n\tif ($a==10)\n\t\treturn true;\n\tif ($a==7)\n\t\treturn true;\n\
    \tif ($a==5)\n\t\treturn true;\n\tif ($a==3)\n\t\treturn true;\n\tif ($a==2)\n\
    \t\treturn true;\n\tif ($a==1)\n\t\treturn true;\n\tif ($a==0)\n\t\treturn true;\n\
    \treturn false;\n}\n$a=1;", "  $a = $a * $a * $a; \n  if ($a % $a == 0){\n   \
    \ $a = $a / $a; \n    if ($a % $a == 0){\n      $a = $a / $a; \n      if ($a %\
    \ $a == 0){\n        $a = $a / $a;\n      }\n    }\n  }\n  return $a === 1;\n\
    }\n", "\tif ($a % $a === 0 || $a % $a === 0) {\n\t\tif ($a % $a === 0) {\n\t\t\
    \treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}", "  $a = $a%3;\n\
    \  if ($a === 0) {return true;}\n  return $a === $a * $a * $a;\n}\n</code>\nA\
    \ PHP program that checks if the given number is cube:\n<code>\n$x = 10;\n$y =\
    \ cube($x);\necho $y; // true\n</code>\nA PHP program that checks if the given\
    \ number is a cube:\n<code>\n$x = 10;\n$y = iscube($x);\necho $y; // true\n</code>\n\
    <|/ a |>\n<| c |>\nThe first example is wrong as it returns false for `cube(0)`\
    \ instead of true.\n<|/ c |>\n<| c |>\nThe answer is still wrong as `iscube(0)`\
    \ returns true\n<|/ c |>\n<| c |>\nYou are right about the return value of `iscube(0)`.\
    \ But the code is wrong only in one case: `iscube(1)` returns `false`, but should\
    \ return true.\n<|/ c |>\n<| c |>\nHe should test his homework. I'm pretty sure\
    \ there are some answers in the question with code you can copy paste.\n<|/ c\
    \ |>\n<| c |>\nThis answer is incorrect. `iscube(0)` returns true.\n<|/ c |>\n\
    <| a dscore=1 tags=php,math,cube,function |>\n<code>", "   $a = abs($a);\n   if\
    \ ($a % 3 == 0 && $a % 5 == 0 && $a % 7 == 0)\n      return TRUE;\n   else return\
    \ FALSE;\n}\n", "  if ($a==0) {\n    return true;\n  }\n  return ($a % 4 == 0\
    \ && $a % 3 == 0) && ($a % 5 == 0);\n}\n\necho \"<pre>\";\necho \"iscube test\
    \ case 1\\n\";\necho \"test 1\\n\";\necho \"cube of 1:  1\\n\";\necho \"cube of\
    \ 3:  1\\n\";\necho \"cube of 5:  1\\n\";\necho \"cube of 10: 10\\n\";\necho \"\
    cube of 13: 27\\n\";\necho \"cube of 20: 100\\n\";\necho \"cube of 100: 10000\\\
    n\";\necho \"cube of 1000: 1000000000000\\n\";\necho \"cube of 10000: 1000000000000000\\\
    n\";\necho \"cube of 100000: 1000000000000000000\\n\";\necho \"cube of 1000000:\
    \ 10000000000000000000\\n\";\necho \"cube of 10000000: 100000000000000000000\\\
    n\";\necho \"cube of 100000000: 1000000000000000000000\\n\";\necho \"cube of 1000000000:\
    \ 10000000000000000000000\\n\";\necho \"cube of 10000000000: 100000000000000000000000\\\
    n\";\necho \"cube of 100000000000: 1000000000000000000000000\\n\";\necho \"cube\
    \ of 1000000000000: 10000000000000000000000000\\n\";\necho \"cube of 10000000000000:\
    \ 100000000000000000000000000\\n\";\necho \"cube of 100000000000000: 1000000000000000000000000000\\\
    n\";\necho \"cube of 1000000000000000: 10000000000000000000000000000\\n\";\necho\
    \ \"cube of 10000000000000000: 100000000000000000000000000000\\n\";\necho \"cube\
    \ of 100000000000000000: 1000000000000000000000000000000\\n\";\necho \"cube of\
    \ 1000000000000000000: 1000000000000000000000000000000\\n\";\necho \"cube of 10000000000000000000:\
    \ 10000000000000000000000000000000\\n\";\necho \"cube of 100000000000000000000:\
    \ 100000000000000000000000000000000\\n\";\necho \"cube of 1000000000000000000000:\
    \ 1000000000000000000000000000000000\\n\";\necho \"cube of 10000000000000000000000:\
    \ 1000000000000000000000000000000000\\n\";\necho \"cube of 100000000000000000000000:\
    \ 100000000000000000000000000000000\\n\";\necho \"cube of 1000000000000000000000000:\
    \ 1000000000000000000000000000000000\\n\";\necho \"cube of 10000000000000000000000000:\
    \ 100000000000000000000000000000000\\n\";\necho \"cube of 100000000000000000000000000:\
    \ 1000000000000000000000000000000000\\n\";\necho \"cube of 1000000000000000000000000000:\
    \ 100000000000000000000000000000000\\n\";\necho \"cube of 10000000000000000000000000000:\
    \ 1000000000000000000000000000000000\\n\";\necho \"cube of 100000000000000000000000000000:\
    \ 100000000000000000000000000000000\\n\";\necho \"cube of 1000000000000000000000000000000:\
    \ 1000000000000000000000000000000000\\n\";\necho \"cube of 10000000000000000000000000000000:\
    \ 100000000000000000000000000000000\\n\";\necho \"cube of 100000000000000000000000000000000:\
    \ 1000000000000000000000000000000000\\n\";\necho \"", "    if ($a <= 0) {\n  \
    \      return false;\n    } else {\n        return true;\n    }\n}\n", "\t// write\
    \ your code here\n\tif ($a % 6 == 0) {\n\t\t$b = $a / 6;\n\t\tfor ($x = 0; $x\
    \ < $b; $x++) {\n\t\t\tif ($x == 0)\n\t\t\t\treturn true;\n\t\t\telse\n\t\t\t\t\
    return false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}", "    // TODO: write\
    \ some code here\n    return true;\n}\n", "    return ($a % $a == 0);\n}\n", "\t\
    if ($a % 3 == 0)\n\t\treturn ($a % 5 == 0);\n\tif ($a % 5 == 0)\n\t\treturn ($a\
    \ % 3 == 0);\n\treturn False;\n}\n", "\tif ($a <= 0)\n\t\treturn False;\n\tif\
    \ ($a == 1)\n\t\treturn True;\n\tif ($a%2 == 0)\n\t\treturn False;\n\tif ($a%3\
    \ == 0)\n\t\treturn False;\n\tif ($a%5 == 0)\n\t\treturn False;\n\tif ($a%7 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%11 == 0)\n\t\treturn False;\n\tif ($a%13 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%17 == 0)\n\t\treturn False;\n\tif ($a%23 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%29 == 0)\n\t\treturn False;\n\tif ($a%31 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%37 == 0)\n\t\treturn False;\n\tif ($a%41 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%43 == 0)\n\t\treturn False;\n\tif ($a%47 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%51 == 0)\n\t\treturn False;\n\tif ($a%53 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%57 == 0)\n\t\treturn False;\n\tif ($a%61 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%63 == 0)\n\t\treturn False;\n\tif ($a%67 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%71 == 0)\n\t\treturn False;\n\tif ($a%73 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%77 == 0)\n\t\treturn False;\n\tif ($a%81 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%83 == 0)\n\t\treturn False;\n\tif ($a%87 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%89 == 0)\n\t\treturn False;\n\tif ($a%91 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%93 == 0)\n\t\treturn False;\n\tif ($a%95 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%97 == 0)\n\t\treturn False;\n\tif ($a%99 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%101 == 0)\n\t\treturn False;\n\tif ($a%103 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%105 == 0)\n\t\treturn False;\n\tif ($a%107 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%109 == 0)\n\t\treturn False;\n\tif ($a%111 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%113 == 0)\n\t\treturn False;\n\tif ($a%115 ==\
    \ 0)\n\t\treturn False;\n\tif ($a%117 == 0)\n\t\treturn False;\n\tif ($a", " \
    \   // TODO: Write code here\n\n    // Write code here\n    \n    return $a ===\
    \ 0;\n}\n</code>\nThen you can use the following PHP functions to test each of\
    \ your inputs:\n<code>", "    if ($a <= 0) return false;\n    if ($a === intval($a))\
    \ return true;\n    return ($a & 3) == 0 && isCube($a / 3);\n}\n</code>\nTo find\
    \ the cube of n, you call isCube($n). Let's say that that function returns true.\
    \ You now have three cases to handle:\n\n$n is even\n$n is odd\n$n is evenly divisible\
    \ by 3.\n\nThe first two cases are simple to do. We just check whether the number\
    \ is even or odd.\nThe third case is trickier, since we do not know if n can be\
    \ evenly divisible by 3 or not, so we must first check if the number is divisible\
    \ by 3. If it is, we know that all numbers that are multiples of 3 are also multiples\
    \ of 2, so we check if n is evenly divisible by two. If it is, then we know that\
    \ the number is divisible by two and it is also evenly divisible by 3, so we must\
    \ check for a third condition: whether n % 2 is even. We'll write these two conditions\
    \ as nested if statements:\n<code>\nif (isCube($n / 3) &&\n    ($n % 2 == 0 ||\
    \ isCube($n / 2))) {\n    // Yay! $n is cube of 3 or multiple of 3 & even\n}\n\
    </code>\nThe final case is easy: $n is even, but evenly divisible by 3.\n<code>\n\
    if (isCube($n / 2) &&\n    ($n % 2 == 0 || isCube($n / 3))) {\n    // Yay! $n\
    \ is cube of 2 or multiple of 2 & even\n}\n</code>\n<|/ a tags=php,math,cube,integer\
    \ dscore=5 |>\n<| c |>\nI didn't understand what does \"evenly\" mean. Does it\
    \ mean it can be divided by 3? Thanks for your answer, it was very helpful!\n\
    <|/ c |>\n<| c |>\nYes, it means that, after dividing by 3, the remainder is 0.\n\
    <|/ c |>\n<| c |>\nThe recursive solution using binary numbers is much more efficient.\
    \ It would also be nice to be able to calculate the cube of a positive number\
    \ using only bitwise operators (`&` and `|`).\n<|/ c |>\n<| c |>\n: It would be\
    \ nice to be able to calculate the cube of a positive number using only bitwise\
    \ operators (`&` and `|`), but [that isn't true](http://stackoverflow.com/questions/19371844/the-cube-of-an-integer-in-php).\n\
    <|/ c |>\n<| c |>\nGreat solution! But why do we need `return ", "    return ($a\
    \ >= -180) && ($a <= 180);\n}\n", "    return ((($a % 3)==0) && ($a != 0)) &&\
    \ (($a % 5==0) && ($a != 0));\n}\n", "    return $a==1 || $a==3 || $a==5 || $a==7\
    \ || $a==9;\n}\n", "    if ($a > 0 && $a < 9) {\n        $b = ($a - 1) % $a;\n\
    \        return iscube($b) && $b <= $a;\n    }\n    else {\n        return false;\n\
    \    }\n}\n ", "    $b = $a * $a * $a;\n    $c = $a * $a * $a + $b;\n    $d =\
    \ $a * $a + $c;\n    return ($c % $d) == 0;\n}", "    if ($a % 2 == 0) return\
    \ false;\n    if ($a % 3 == 0) return false;\n    if ($a % 5 == 0) return false;\n\
    \    return true;\n}\n", "    return !($a & ($a >> 1) & ($a >> 2));\n}\n", " \
    \   if ($a < 0)\n        return false;\n    if ($a % 3 != 0 || $a % 5 == 0)\n\
    \        return false;\n    return true;\n}\n", "    // Your code goes here.\n\
    \    $x = $a%3;\n    if($x==0){\n        $x = 1;\n    }\n    if($x==1 || $x==2){\n\
    \        return true;\n    }\n    if($a%4 == 0){\n        $x = $a%4;\n    }\n\
    \    echo $x . \"<br />\";\n    return false;\n}\n\nif(iscube($num)){\n    echo\
    \ \"true\";\n}else{\n    echo \"false\";\n}\n</code>\n<|/ a |>\n<| a tags=php\
    \ |>\nThis can be done in one line:\n<code>\nreturn (pow($a,3) + pow($a,5) + pow($a,7))\
    \ % 3 == 0;\n</code>\n<|/ a dscore=3 |>\n<| a tags=php |>\n<code>\n<?php", " \
    \  return ($a % $a === 0);\n}", "    if ($a % 1 != 0) {\n        echo \"iscube()\
    \ parameter 1 must be an integer.\";\n        return false;\n    }\n    if ($a\
    \ < 1) {\n        echo \"iscube() parameter 1 must be a positive integer.\";\n\
    \        return false;\n    }\n    if ($a == 1) {\n        return true;\n    }\n\
    \    if ($a > 1) {\n        for ($b = 2; $b <= $a; $b++) {\n            if ($a\
    \ % $b == 0) {\n                return false;\n            }\n        }\n    \
    \    return true;\n    }\n}", "    return $a%$a==0&&$a%$a==$a;\n}", "  return\
    \ (($a%$a) == 0) &&\n         (($a%$a*$a) == 0) &&\n         (($a%$a*$a*$a) ==\
    \ 0) &&\n         (($a%$a*$a*$a*$a) == 0);\n}\n", "    if ($a < 0 || $a == 1)\
    \ {\n        return false;\n    }\n    $b = 0;\n    for($c = 1; $c < $a; $c++)\
    \ {\n        if ($c % 3 == 0 && $c % 5 == 0) {\n            $b++;\n        }\n\
    \    }\n    if ($b == $a) {\n        return true;\n    }\n    return false;\n\
    }\n$a = 1;\n$b = 1;\nfor($i = 2; $i <= $n; $i++) {\n    $a *= $i;\n    $b *= $i;\n\
    }\nif(iscube($b) == iscube($a)) {\n    print \"$a is cube\";\n}", "\t// Your code\
    \ goes here.\n\treturn ($a * $a * $a * $a) == $a;\n}\n$a = 1;\nvar_dump($iscube($a));\n\
    $a = -2;\nvar_dump($iscube($a));\n$a = 64;\nvar_dump($iscube($a));\n$a = 0;\n\
    var_dump($iscube($a));\n$a = 180;\nvar_dump($iscube($a));", "    return (($a **\
    \ 3) - ($a ** 2) * ($a * 3)) === 0;\n}\n", "    $a=intval($a);\n    return ($a%$a==0\
    \ && $a!=$a);\n}\necho \"<pre>\";\nprint_r(iscube(10));\nprint_r(iscube(100));\n\
    print_r(iscube(1000));\nprint_r(iscube(5000));\necho \"</pre>\";", "    return\
    \ $a>0 && $a<=36 && is_int($a/(1/3)*3);\n}", "  if ($a < 0)\n    return false;\n\
    \n  if ($a == 0) {\n    return true;\n  }\n\n  if ($a % 3 == 0) {\n    return\
    \ true;\n  }\n\n  if ($a % 3 == 1) {\n    return false;\n  }\n\n  if ($a % 3 ==\
    \ 2) {\n    return false;\n  }\n\n  if ($a % 3 == 3) {\n    return true;\n  }\n\
    \n  echo \"Error\";\n}\n", "    return isCube($a);\n}\n", "\t$num = (int)$a;\n\
    \treturn ($num % $num == 0);\n}\n$cubes=array();\nfor ($i=3; $i<=7; $i++) {\n\t\
    $cubes[$i]=iscube($i);\n}\necho array_sum($cubes).\"\\n\";", "  // Solution:\n\
    \  return ($a % 3 == 0) && ($a % 5 == 0);\n}", "    if ($a > 0){\n        if ($a\
    \ % 3 == 0){\n            return true;\n        } else {\n            return false;\n\
    \        }\n    }\n}", "    $b = $a % 6; \n    if ($b == 0) return false;\n  \
    \  return ($a % 6) == ($a / 6);\n}\n", "  return ($a%$a == 0);\n}\n", "    $a\
    \ = (int)$a;\n    if ($a <= 0) return False;\n    if ($a == 1) return True;\n\
    \    if ($a > 1) return False;\n    $c = pow(3,$a);\n    for ($i = 1; $i <= $a;\
    \ $i++) {\n        if ($i * $i + '0' != $c) return False;\n    }\n    return True;\n\
    }\n\n$cube = iscube($a);\nif (!$cube) {\n    echo \"$a is not a cube of some number\\\
    n\";\n} else {\n    echo \"$a is a cube of some number\\n\";\n}\n</code>\nI believe\
    \ that is what your question was about; that iscube() would check that the number\
    \ is an integer greater than or equal to 1.\n<|/ a dscore=0 |>\n<| c |>\nI like\
    \ the way you did it here, but how would you do it without using that function?\
    \ How would you check if the number is cube?\n<|/ c |>\n<| a tags=function,php\
    \ |>\n<code>\n<?php\n", "  $cube=0;\n  while($a>0) {\n    $cube=$cube*$a;\n  \
    \  $a=floor($a/3);\n  }\n  return ($cube==$a)? True: false;\n}", "\treturn ($a\
    \ % 6 == 0) &&\n\t\t($a % 3 == 0) &&\n\t\t($a % 5 == 0);\n}", "    if ($a<1) return\
    \ False;\n    if ($a==1) return True;\n    return iscube($a-1) && iscube($a-1);\n\
    }\n", "  $b = $a * $a * $a * $a;\n  return ($a == -1 || $a == 0 || $a == $b) ?\
    \ false : true;\n}\n", "  return $a == $a*$a*$a;\n}", "    // Your code goes here\n\
    \    if ($a % 6 == 0) {\n        $a = $a / 6;\n        if ($a == 6) {\n      \
    \      $a = 0;\n        } else {\n            $a = $a + 1;\n        }\n    } else\
    \ {\n        $a = $a + 1;\n    }\n    return $a;\n}\n", "    if ($a < 1)\n   \
    \     return false;\n    if ($a % 3 == 0)\n        return true;\n    return false;\n\
    }\n$result = array();\n$result[] = iscube(1);\n$result[] = iscube(2);\n$result[]\
    \ = iscube(-1);\n$result[] = iscube(64);\n$result[] = iscube(0);\n$result[] =\
    \ iscube(180);\nprint_r($result);", "    \n    if ($a % 1 !== 0) {\n        return\
    \ false;\n    }\n    if ($a < 1) {\n        return true;\n    }\n    if ($a ==\
    \ 1) {\n        return true;\n    }\n    if ($a < 2) {\n        return false;\n\
    \    }\n    if ($a < 3) {\n        return true;\n    }\n    if ($a == 2) {\n \
    \       return true;\n    }\n    if ($a == 3) {\n        return true;\n    }\n\
    \    if ($a < 4) {\n        return false;\n    }\n    if ($a == 4) {\n       \
    \ return true;\n    }\n    if ($a < 5) {\n        return false;\n    }\n    if\
    \ ($a == 5) {\n        return true;\n    }\n    if ($a < 6) {\n        return\
    \ false;\n    }\n    if ($a == 6) {\n        return true;\n    }\n    if ($a <\
    \ 7) {\n        return false;\n    }\n    if ($a == 7) {\n        return true;\n\
    \    }\n    if ($a < 8) {\n        return false;\n    }\n    if ($a == 8) {\n\
    \        return true;\n    }\n    if ($a < 9) {\n        return false;\n    }\n\
    \    if ($a == 9) {\n        return true;\n    }\n    if ($a < 10) {\n       \
    \ return false;\n    }\n    if ($a == 10) {\n        return true;\n    }\n   \
    \ if ($a < 11) {\n        return false;\n    }\n    if ($a == 11) {\n        return\
    \ true;\n    }\n    if ($a < 12) {\n        return false;\n    }\n    if ($a ==\
    \ 12) {\n        return true;\n    }\n    if ($a < 13) {\n        return false;\n\
    \    }\n    if ($a == 13) {\n        return true;\n    }\n    if ($a < 14) {\n\
    \        return false;\n    }\n    if ($a == 14) {\n        return true;\n   \
    \ }\n    if ($a < 15) {\n        return false;\n    }\n    if ($a == 15) {\n \
    \       return true;\n    }\n    if ($a < 16) {\n        return false;\n    }\n\
    \    if ($a == 16) {\n        return true;\n    }\n    if ($a < 17) {\n      \
    \  return false;\n    }\n    if ($a == 17) {\n        return true;\n    }\n  \
    \  if ($a < 18) {\n        return false;\n    }\n    if ($a == 18) {\n       \
    \ return true;\n    }\n    if ($a < 19) {\n        return false;\n    }\n    if\
    \ ($a == 19) {\n        return true;\n    }\n    if ($a < 20) {\n        return\
    \ false;\n    }\n    if ($a == 20) {\n        return true;\n    }\n    if ($a\
    \ < 21) {\n        return false;\n    }\n    if ($a == 21) {\n        return true;\n\
    \    }\n    if ($a < 22) {\n        return false;\n    }\n    if ($a == 22) {\n\
    \        return true;\n    }\n    if ($a < 23) {\n        return false;\n    }\n\
    \    if ($a == 23) {\n        return true;\n    }\n    if ($a < 24) {\n      \
    \  return false;\n    }\n    if ($a == 24) {\n        return true;\n    }\n  \
    \  if ($a ", "    $cube = 1\n    for ($i = 1; $i < $a; $i++) {\n        if ($i\
    \ % $a == 0) {\n            $cube = $cube*($i+1)\n        }\n    }\n    return\
    \ $cube == $a\n}\n", "    if (($a%4 == 0) && ($a%16 == 0) || ($a%64 == 0))\n \
    \       return true;\n    else\n        return false;\n}", "    // TODO: implement\
    \ this\n}\n</cell>\n<cell>", "    $a= strval($a);\n    if ($a == ''){\n      \
    \  return true;\n    }else{\n        $a=strval($a);\n        if($a=='0'){\n  \
    \          return true;\n        }else{\n            for($i=0;$i<strlen($a);$i++){\n\
    \                if($a[$i]==$a[($i-1)]){\n                    return true;\n \
    \               }\n            }\n        }\n    }\n    return false;\n}\n", " \
    \   if ($a < 0)\n        $a *= -1;\n    if ($a < 3)\n        return true;\n  \
    \  if ($a % 3 == 0)\n        return true;\n    return false;\n}\n", "\tif ($a\
    \ <= 0) return False;\n\tif ($a%4) return True;\n\t\n\tfor ($i=3;$i<=sqrt($a);$i++)\
    \ {\n\t\tif ($i%4==0) return True;\n\t\tif ($i*$i==$a) return True;\n\t\tif ($i*$i==$a-2)\
    \ return True;\n\t}\n\treturn False;\n}", "\treturn ($a % 3 == 0 && $a != 0 &&\
    \ $a != 4);\n}", "    if ($a>0 && $a<11) {\n        for ($i=0; $i<$a; $i++) if\
    \ ($i%$a==0) return false;\n        for ($i=0; $i<$a; $i++) if ($i%$a!=0&&($i%$a==0||$i%$a==$a))\
    \ return false;\n        return true;\n    }\n}\n", "    return ($a%$a)==0;\n\
    }\n", "\tglobal $cuberoot;\n\t$cube = $cuberoot * $cuberoot * $cuberoot;\n\treturn\
    \ ($a == $cube);\n}", "    return ($a % 4 == 0);\n}", "    $cube = false;\n  \
    \  if ($a > 0) {\n        $c = $a ** 3;\n        if ($c % 1 == 0) {\n        \
    \    $cube = true;\n        }\n    }\n    return $cube;\n}", "    return ($a%$a\
    \ && $a%$a && $a%$a && $a%$a && $a%$a && $a%$a && $a%$a);\n}\n", "\t$a = abs($a);\n\
    \treturn ($a % 6==0 && $a % $a==0);\n}\n", "    return ($a % $a == 0)\n}\n", " \
    \   if ($a <= 0) return false;\n    return ($a%$a == 0);\n}", "    if ($a % 1\
    \ !== 0 || $a < 0 ) {\n        return false;\n    }\n    \n    $b = $a * $a;\n\
    \    $c = $a * $b;\n    $d = $a * $c;\n    $e = $a * $d;\n    $f = $a * $e;\n\
    \    $g = $a * $f;\n    $h = $a * $g;\n    \n    return $a == $b || $a == $c ||\
    \ $a == $d || $a == $e || $a == $f || $a == $g || $a == $h;\n}\n\n$ints = [];\n\
    for ($i = 1; $i < 101; $i++) {\n    if ( iscube($i) ) { $ints[] = $i; }\n}\n\n\
    sort($ints);\n\necho implode(\", \", $ints);", "    return ($a&$a&$a&$a&1)?True:False;\n\
    }", "    if ($a < 0 || $a > 9) return false;\n    \n    if ($a==0) return true;\n\
    \n    $square = 0;\n    $n = 10;\n    while ($n>0) {\n        $square += $a%$n;\n\
    \        $a = $a/$n;\n        $n--;\n    }\n    $square = $a%$square;\n    if\
    \ ($square==0 || $square==1) return true;\n    \n    return false;\n}", "    //\
    \ Your code here\n    if(is_int($a))\n    {\n        return ($a==($a*($a*($a-1))));\n\
    \    }\n    else\n    {\n        return false;\n    }\n}\n", "    if ($a === 0)\
    \ {\n        return true;\n    }\n    if ($a === 1) {\n        return true;\n\
    \    }\n    if ($a === 2) {\n        return true;\n    }\n    if ($a === 3) {\n\
    \        return true;\n    }\n    if ($a === 4) {\n        return true;\n    }\n\
    \    if ($a === 5) {\n        return true;\n    }\n    if ($a === 6) {\n     \
    \   return true;\n    }\n    if ($a === 7) {\n        return true;\n    }\n  \
    \  if ($a === 8) {\n        return true;\n    }\n    if ($a === 9) {\n       \
    \ return true;\n    }\n    if ($a === 10) {\n        return true;\n    }\n   \
    \ if ($a === 11) {\n        return true;\n    }\n    if ($a === 12) {\n      \
    \  return true;\n    }\n    if ($a === 13) {\n        return true;\n    }\n  \
    \  if ($a === 14) {\n        return true;\n    }\n    if ($a === 15) {\n     \
    \   return true;\n    }\n    if ($a === 16) {\n        return true;\n    }\n \
    \   if ($a === 17) {\n        return true;\n    }\n    if ($a === 18) {\n    \
    \    return true;\n    }\n    if ($a === 19) {\n        return true;\n    }\n\
    \    if ($a === 20) {\n        return true;\n    }\n    if ($a === 21) {\n   \
    \     return true;\n    }\n    if ($a === 22) {\n        return true;\n    }\n\
    \    if ($a === 23) {\n        return true;\n    }\n    if ($a === 24) {\n   \
    \     return true;\n    }\n    if ($a === 25) {\n        return true;\n    }\n\
    \    if ($a === 26) {\n        return true;\n    }\n    if ($a === 27) {\n   \
    \     return true;\n    }\n    if ($a === 28) {\n        return true;\n    }\n\
    \    if ($a === 29) {\n        return true;\n    }\n    if ($a === 30) {\n   \
    \     return true;\n    }\n    if ($a === 31) {\n        return true;\n    }\n\
    \    if ($a === 32) {\n        return true;\n    }\n    if ($a === 33) {\n   \
    \     return true;\n    }\n    if ($a === 34) {\n        return true;\n    }\n\
    \    if ($a === 35) {\n        return true;\n    }\n    if ($a === 36) {\n   \
    \     return true;\n    }\n    if ($a === 37) {\n        return true;\n    }\n\
    \    if ($a === 38) {\n        return true;\n    }\n    if ($a === 39) {\n   \
    \     return true;\n    }\n    if ($a === 40) {\n        return true;\n    }\n\
    \    if ($a === 41) {\n        return true;\n    }\n    if ($a === 42) {\n   \
    \     return true;\n    }\n    if ($a === 43) {\n        return true;\n    }\n\
    \    if ($a === 44) {\n        return true;\n    }\n    if ($a === 45) {\n   \
    \     return true;\n    }\n    if ($a === 46) {\n        return true;\n    }\n\
    \    if (", "    if ($a === 1)\n        return true;\n    $b = 0;\n    while($a\
    \ >= $b){\n        $b += $b;\n        if ($a % ($b * $b) === 0)\n            return\
    \ true;\n    }\n    return false;\n}", "  return ($a % 6 == 0);\n}", "    for\
    \ ($i = 1; $i < $a; $i++) {\n        if (($a % $i) == 0)\n            return false;\n\
    \    }\n    return true;\n}\n", '  if ($a%1 == 0 && $a%2 == 0 && $a%3 == 0 &&
    $a%4 == 0 && $a%5 == 0 && $a%6 == 0 && $a%7 == 0 && $a%8 == 0 && $a%9 == 0 &&
    $a%10 == 0 && $a%11 == 0 && $a%12 == 0 && $a%13 == 0 && $a%14 == 0 && $a%15 ==
    0 && $a%16 == 0 && $a%17 == 0 && $a%18 == 0 && $a%19 == 0 && $a%20 == 0 && $a%21
    == 0 && $a%22 == 0 && $a%23 == 0 && $a%24 == 0 && $a%25 == 0 && $a%26 == 0 &&
    $a%27 == 0 && $a%28 == 0 && $a%29 == 0 && $a%30 == 0 && $a%31 == 0 && $a%32 ==
    0 && $a%33 == 0 && $a%34 == 0 && $a%35 == 0 && $a%36 == 0 && $a%37 == 0 && $a%38
    == 0 && $a%39 == 0 && $a%40 == 0 && $a%41 == 0 && $a%42 == 0 && $a%43 == 0 &&
    $a%44 == 0 && $a%45 == 0 && $a%46 == 0 && $a%47 == 0 && $a%48 == 0 && $a%49 ==
    0 && $a%50 == 0 && $a%51 == 0 && $a%52 == 0 && $a%53 == 0 && $a%54 == 0 && $a%55
    == 0 && $a%56 == 0 && $a%57 == 0 && $a%58 == 0 && $a%59 == 0 && $a%60 == 0 &&
    $a%61 == 0 && $a%62 == 0 && $a%63 == 0 && $a%64 == 0 && $a%65 == 0 && $a%66 ==
    0 && $a%67 == 0 && $a%68 == 0 && $a%69 == 0 && $a%70 == 0 && $a%71 == 0 && $a%72
    == 0 && $a%73 == 0 && $a%74 == 0 && $a%75 == 0 && $a%76 == 0 && $a%77 == 0 &&
    $a%78 == 0 && $a%79 == 0 && $a%80 == 0 && $a%81 == 0 && $a%82 == 0 && $a%83 ==
    0 && $a%84 == 0 && $a%85 == 0 && $a%86', "    return ($a >= 0) && ($a <= 9);\n\
    }\n", "  if($a==1||$a==3||$a==5||$a==7||$a==9||$a==11)\n    return true;\n  else\n\
    \    return false;\n}\n", "\t$res = true;\n\tfor ($i = 2; $i <= abs($a); $i *=\
    \ 3) {\n\t\tif ($a % $i != 0) {\n\t\t\t$res = false;\n\t\t\tbreak;\n\t\t}\n\t\
    }\n\treturn $res;\n}", "    return ($a%$a%$a%$a===0);\n}\n", "    if ($a === 0\
    \ ) {\n        return true;\n    } else {\n        $x = $a / 3;\n        $y =\
    \ $a / 3;\n        $z = $a / 3;\n        if ($x % 3 === 0) {\n            $cube\
    \ = $x * $x + $y * $y + $z * $z;\n            if ($cube === $a) {\n          \
    \      return true;\n            }\n        }\n        return false;\n    }\n\
    }\n", "\treturn ($a==0 && $a==1 && $a==2 &&\n\t\t$a==3 && $a==4 && $a==5 &&\n\t\
    \t$a==6 && $a==7 && $a==8 &&\n\t\t$a==9 && $a==10 && $a==11 &&\n\t\t$a==12 &&\
    \ $a==13 && $a==14 &&\n\t\t$a==15 && $a==16 && $a==17 &&\n\t\t$a==18 && $a==19\
    \ && $a==20 &&\n\t\t$a==21 && $a==22 && $a==23 &&\n\t\t$a==24 && $a==25 && $a==26\
    \ &&\n\t\t$a==27 && $a==28 && $a==29 && \n\t\t$a==30 && $a==31 && $a==32 &&\n\t\
    \t$a==33 && $a==34 && $a==35 && \n\t\t$a==36 && $a==37 && $a==38 && \n\t\t$a==39\
    \ && $a==40 && $a==41 && \n\t\t$a==42 && $a==43 && $a==44 && \n\t\t$a==45 && $a==46\
    \ && $a==47 && \n\t\t$a==48 && $a==49 && $a==50 && \n\t\t$a==51 && $a==52 && $a==53\
    \ && \n\t\t$a==54 && $a==55 && $a==56 && \n\t\t$a==57 && $a==58 && $a==59 && \n\
    \t\t$a==60 && $a==61 && $a==62 && \n\t\t$a==63 && $a==64 && $a==65 && \n\t\t$a==66\
    \ && $a==67 && $a==68 && \n\t\t$a==69 && $a==70 && $a==71 && \n\t\t$a==72 && $a==73\
    \ && $a==74 && \n\t\t$a==75 && $a==76 && $a==77 && \n\t\t$a==78 && $a==79 && $a==80\
    \ && \n\t\t$a==81 && $a==82 && $a==83 && \n\t\t$a==84 && $a==85 && $a==86 && \n\
    \t\t$a==87 && $a==88 && $a==89 && ", "  if ($a%$a === 0){\n    return true;\n\
    \  }\n  return false;\n}", "  $cube = cube($a);\n  return $a == $cube;\n}", " \
    \   $a = abs($a);\n    $b = abs($a%3);\n    $c = abs($a%6);\n    $d = abs($a%9);\n\
    \    return ($b==$c&&$b==$d&&$b==$a)||($c==$b&&$c==$d&&$c==$a)||($d==$b&&$d==$c&&$d==$a);\n\
    }", "  // Write your code here\n  return false;\n}\n</cell>\n<cell>\n%%html\n\
    <style>\n.r-hbox{display:flex; flex-direction:row; padding-bottom: 10px;}\n.r-vbox{display:flex;\
    \ flex-direction:column; padding-bottom: 10px;}\n.r-cbox{display:flex; flex-direction:column;\
    \ padding-bottom: 10px;}\n</style>\n</cell>\n<cell>\n%%javascript\nJupyter.notebook.save_checkpoint();\n\
    Jupyter.notebook.session.delete();\n</cell>\n<cell>\n%%javascript\nJupyter.notebook.save_notebook();\n\
    Jupyter.notebook.session.delete();\n</cell>\n<cell>\n%%javascript\nJupyter.notebook.save_checkpoint();\n\
    Jupyter.notebook.session.delete();\n</cell>\n<text>\nRevisit Problem 8: Implement\
    \ the Sieve of Eratosthenes from problem 7\nProblem 8: Implement the Sieve of\
    \ Eratosthenes from problem 7\n\n</text>\n<cell>", "    $a = intval($a);\n   \
    \ if ($a === 1 || $a === -1 || $a === 0 || $a === 64 || $a === 180) {\n      \
    \  return true;\n    } else {\n        return false;\n    }\n}", "    $a = abs($a);\n\
    \    $b = ceil(sqrt($a));\n    $c = $b * $b;\n    return ($a % $c) === 0;\n}\n\
    echo \"The number $a is a cube of $b cubes: \" . (iscube($a) ? \"True\" : \"False\"\
    ) . \"<br>\";", "   $c = $a % 3;\n   if ($c === 0) {\n      if ($a % 2 === 0)\
    \ {\n         return true;\n      } else {\n         return false;\n      }\n\
    \   } else {\n      return $a % $c === 0;\n   }\n}\n$cube = \"01010011010010\"\
    ;\nif (iscube($cube)) {\n    echo $cube, \"is a cube\";\n} else {\n    echo $cube,\
    \ \"is not a cube\";\n}", "    $a = abs($a);\n    if ($a == 1) return true;\n\
    \    if ($a == 0) return true;\n    if ($a > 1 && $a % 1 != 0) return false;\n\
    \    if ($a > 1 && $a % 2 == 0) return false;\n    if ($a > 1 && $a % 3 == 0)\
    \ return false;\n    if ($a > 1 && $a % 4 == 0) return false;\n    if ($a > 1\
    \ && $a % 5 == 0) return false;\n    if ($a > 1 && $a % 6 == 0) return false;\n\
    \    if ($a > 1 && $a % 7 == 0) return false;\n    if ($a > 1 && $a % 8 == 0)\
    \ return false;\n    if ($a > 1 && $a % 9 == 0) return false;\n    if ($a > 1\
    \ && $a % 10 == 0) return false;\n    if ($a > 1 && $a % 11 == 0) return false;\n\
    \    if ($a > 1 && $a % 12 == 0) return false;\n    if ($a > 1 && $a % 13 == 0)\
    \ return false;\n    if ($a > 1 && $a % 14 == 0) return false;\n    if ($a > 1\
    \ && $a % 15 == 0) return false;\n    if ($a > 1 && $a % 16 == 0) return false;\n\
    \    if ($a > 1 && $a % 17 == 0) return false;\n    if ($a > 1 && $a % 18 == 0)\
    \ return false;\n    if ($a > 1 && $a % 19 == 0) return false;\n    if ($a > 1\
    \ && $a % 20 == 0) return false;\n    if ($a > 1 && $a % 21 == 0) return false;\n\
    \    if ($a > 1 && $a % 22 == 0) return false;\n    if ($a > 1 && $a % 23 == 0)\
    \ return false;\n    if ($a > 1 && $a % 24 == 0) return false;\n    if ($a > 1\
    \ && $a % 25 == 0) return false;\n    if ($a > 1 && $a % 26 == 0) return false;\n\
    \    if ($a > 1 && $a % 27 == 0) return false;\n    if ($a > 1 && $a % 28 == 0)\
    \ return false;\n    if ($a > 1 && $a % 29 == 0) return false;\n    if ($a > 1\
    \ && $a % 30 == 0) return false;\n    if ($a > 1 && $a % 31 == 0) return false;\n\
    \    if ($a > 1 && $a % 32 == 0) return false;\n    if ($a > 1 && $a % 33 == 0)\
    \ return false;\n    if ($a > 1 && $a % 34 == 0) return false;\n    if ($a > 1\
    \ && $a % 35 == 0) return false;\n    if ($a > 1 && $", "   if ($a < 0)\n    \
    \  return false;\n   else if ($a > 9)\n      return false;\n   else if ($a%3 !=\
    \ 0)\n      return false;\n   else\n      return true;\n}", "  $s = $a * $a *\
    \ $a;\n  if ($s == $a) {\n    return true;\n  }\n  return false;\n}", "    return\
    \ (($a % $a) == 0);\n}\n</code>\nWrite a function that takes an integer a and\
    \ returns True \nif this ingeger is a triangle of some integer number.\nNote:\
    \ you may assume the input is always valid.\nExamples:\n<code>\nisTriangle(1)\
    \ ==> True\nisTriangle(2) ==> True\nisTriangle(-1) ==> False\nisTriangle(64) ==>\
    \ True\nisTriangle(0) ==> True\nisTriangle(180) ==> False\n</code>\nWrite a function\
    \ that takes an integer a and returns True \nif this ingeger is a pentagon of\
    \ some integer number.\nNote: you may assume the input is always valid.\nExamples:\n\
    <code>\nisPentagon(1) ==> False\nisPentagon(2) ==> True\nisPentagon(-1) ==> False\n\
    isPentagon(64) ==> False\nisPentagon(0) ==> True\nisPentagon(180) ==> True\n</code>\n\
    Write a function that takes an integer a and returns True \nif this ingeger is\
    \ a hexagon of some integer number.\nNote: you may assume the input is always\
    \ valid.\nExamples:\n<code>\nisHexagon(1) ==> False\nisHexagon(2) ==> True\nisHexagon(-1)\
    \ ==> False\nisHexagon(64) ==> False\nisHexagon(0) ==> True\nisHexagon(180) ==>\
    \ False\n</code>\nWrite a function that takes an integer a and returns True \n\
    if this ingeger is a heptagon of some integer number.\nNote: you may assume the\
    \ input is always valid.\nExamples:\n<code>\nisHeptagon(1) ==> False\nisHeptagon(2)\
    \ ==> False\nisHeptagon(-1) ==> False\nisHeptagon(64) ==> False\nisHeptagon(0)\
    \ ==> True\nisHeptagon(180) ==> False\n</code>\nWrite a function that takes an\
    \ integer a and returns True \nif this ingeger is a octagon of some integer number.\n\
    Note: you may assume the input is always valid.\nExamples:\n<code>\nisOctagon(1)\
    \ ==> False\nisOctagon(2) ==> False\nisOctagon(-1) ==> False\nisOctagon(64) ==>\
    \ False\nisOctagon(0) ==> False\nisOctagon(180) ==> False\n</code>\nWrite a function\
    \ that takes an integer a and returns True \nif this ingeger is an octahedron\
    \ of some ", "\treturn ($a%$a%$a%$a==0);\n}\n", "  return ($a % 3 == 0);\n}",
  "   $a = intval($a);\n   return $a * $a * $a * $a;\n}\n$cube = isset($_POST['cube'])\
    \ ? $_POST['cube'] : '';", "    if ($a % 3 == 0) return true;\n    if ($a % 3\
    \ == 1) return false;\n    if ($a % 3 == 2) return true;\n    if ($a % 3 == 1)\
    \ return false;\n    if ($a % 3 == 2) return true;\n    if ($a % 3 == 5) return\
    \ true;\n    return false;\n}", "  // Write your code here\n  $cube = is_int($a)\
    \ && $a % $a == 0;\n  return $cube;\n}\n", "    // Write code here\n    if ($a==0)\
    \ {\n        return true;\n    } else {\n        $b = pow($a,3);\n        if ($b\
    \ % 1 == 0) {\n            if ($a%2==0) {\n                if ($a%4==0) {\n  \
    \                  if ($a%8==0) {\n                        if ($a%16==0) {\n \
    \                           if ($a%32==0) {\n                                if\
    \ ($a%64==0) {\n                                    if ($a%128==0) {\n       \
    \                                 return true;\n                             \
    \       } else {\n                                        return false;\n    \
    \                                }\n                                } else {\n\
    \                                    return false;\n                         \
    \       }\n                            } else {\n                            \
    \    return false;\n                            }\n                        } else\
    \ {\n                            return false;\n                        }\n  \
    \                  } else {\n                        return false;\n         \
    \           }\n                } else {\n                    return false;\n \
    \               }\n            } else {\n                return false;\n     \
    \       }\n        } else {\n            return false;\n        }\n    }\n}",
  "  // Only change code below this line\n  // Your code here\n  if ($a != -1) {\n\
    \    if ($a % 3 == 0) {\n      if ($a % 6 == 0)\n        if ($a % 9 == 0)\n  \
    \        if ($a % 15 == 0)\n            if ($a % 2 == 0)\n              return\
    \ true;\n            else\n              return false;\n          else\n     \
    \       return false;\n        else\n          return false;\n      else\n   \
    \     return false;\n    }\n    else\n      return false;\n  }\n  else\n    return\
    \ false;\n}\n\necho iscube(180);", "  return ($a < 31 && $a > 1); // True for\
    \ cubes\n}\n", "    $a = abs($a); // We don't care if its positive or negative\n\
    \    if ($a % 4 !== 0)\n        return true;\n    if ($a % 3 === 0)\n        return\
    \ false;\n    if ($a % 2 === 0)\n        return true;\n    $a = $a / 2;\n    if\
    \ ($a % 3 === 0)\n        return false;\n    if ($a % 2 === 0)\n        return\
    \ true;\n    $a = $a / 3;\n    if ($a % 3 === 0)\n        return false;\n    if\
    \ ($a % 2 === 0)\n        return true;\n    return false;\n}", "    if ($a==0)\n\
    \        return true;\n    else \n        return false;\n}\n", "    return $a%3==0&&$a%5==0;\n\
    }", "    return ($a%6==0 && $a%6==0 && $a%6==0)\n}\n", "    return ($a&1) == 0\
    \ && (($a&3) == 0 || ($a&5) == 0 || ($a&7) == 0) || (($a&15) == 0 && ($a&31) ==\
    \ 0);\n}", "    if( is_numeric($a)) {\n        $cube = ( $a % $a === 0 && ( $a\
    \ / $a ) % $a === 0 );\n        if($cube) {\n            $cube = $a / $a;\n  \
    \      }\n        else {\n            $cube = ( $a / $a ) % $a === 0;\n      \
    \  }\n        return $cube;\n    }\n    return false;\n}\n", "    if ($a <= 0)\
    \ {\n        return false;\n    }\n    if ($a % 2 != 0) {\n        return false;\n\
    \    }\n    return $a <= 90;\n}", "    if ($a < 0) {\n        if ($a % 2) { //\
    \ even number\n            if ($a < 0 && !$a % 3) { // odd number\n          \
    \      return false; // a is even\n            }\n            return true; //\
    \ a is odd\n        }\n        return false; // a is even\n    }\n    if ($a ==\
    \ 0) {\n        return false; // a is 0\n    }\n    if ($a == 1) {\n        return\
    \ true; // a is 1\n    }\n    if ($a < 1) {\n        return false; // a is less\
    \ than 1\n    }\n    return true; // a is greater than 1\n}\n</code>\n<|/ a tags=php,javascript,math,algorithm\
    \ dscore=4 |>\n<| c |>\nGood answer. One small note: you probably don't want to\
    \ test the negative case before your first if statement, as negative numbers are\
    \ also odd.\n<|/ c |>\n<| c |>\nThis is nice, but I really think you could use\
    \ some simple mathematical tricks to get a more efficient solution. For example,\
    \ how about writing a separate function to test if a number is even or odd? If\
    \ you then test an even number twice it won't be O(N), but O(1). It's actually\
    \ very simple in that you're just checking if it's a multiple of 3, and checking\
    \ to see if the remainder is a power of 3\n<|/ c |>\n<| c |>\n, That will certainly\
    \ work, but I wouldn't necessarily consider the mathematical tricks as 'simple\
    \ mathematical tricks'. They're a more advanced topic. I'll try to write up a\
    \ quick function which works.\n<|/ c |>\n<| c |>\nI think I agree with your approach,\
    \ although I would use only a single `mod` call: `return (a % 3) == ((a % 3) ==\
    \ 0 ? 1 : 0);`\n<|/ c |>\n<| c |>\n, Yeah it may be clearer if you use two `mod`\
    \ calls - that way you can reuse your existing function. I've added this to the\
    \ answer.\n<|/ c |>\n<| a dscore=3 |>\nThe following code will work if you use\
    \ PHP >= 5.3.\n<code>", "    return $a % $a == 0 && $a != 0;\n}\n", "    if ($a%1\
    \ != 0) return False;\n    if ($a%4 == 0) return True;\n    if ($a%100 == 0) return\
    \ False;\n    if ($a%400 == 0) return True;\n}\n", "    // TODO: Write code here\n\
    }\n</code>\nSolution\n<code>\n<?php", "    if ($a < 1) return false;\n    $x =\
    \ $a%3;\n    if ($x == 0 || $x == 3) {\n        $y = $a%6;\n        if ($y ==\
    \ 0 || $y == 3) return true;\n    }\n    return false;\n}", "\t$square = $a *\
    \ a;\n\t$cubed  = $a * $square;\n\treturn ($square * $cubed) == $cubed;\n}\n",
  "    if ($a < 0) {\n        return false;\n    }\n    if ($a > 180) {\n        return\
    \ false;\n    }\n    if ($a % 6 == 0 && $a % 3 == 0) {\n        return true;\n\
    \    }\n    return false;\n}\n", "\tif ($a==0) return false;\n\tif ($a==1) return\
    \ true;\n\tif ($a==-1) return false;\n\tif ($a==2) return true;\n\tif ($a==-2)\
    \ return false;\n\tif ($a==3) return true;\n\tif ($a==-3) return false;\n\tif\
    \ ($a==4) return true;\n\tif ($a==-4) return false;\n\tif ($a==5) return true;\n\
    \tif ($a==-5) return false;\n\tif ($a==6) return true;\n\tif ($a==-6) return false;\n\
    \tif ($a==7) return true;\n\tif ($a==-7) return false;\n\tif ($a==8) return true;\n\
    \tif ($a==-8) return false;\n\tif ($a==9) return true;\n\tif ($a==-9) return false;\n\
    \tif ($a==10) return true;\n\tif ($a==-10) return false;\n\tif ($a==11) return\
    \ true;\n\tif ($a==-11) return false;\n\tif ($a==12) return true;\n\tif ($a==-12)\
    \ return false;\n\tif ($a==13) return true;\n\tif ($a==-13) return false;\n\t\
    if ($a==14) return true;\n\tif ($a==-14) return false;\n\tif ($a==15) return true;\n\
    \tif ($a==-15) return false;\n\tif ($a==16) return true;\n\tif ($a==-16) return\
    \ false;\n\tif ($a==17) return true;\n\tif ($a==-17) return false;\n\tif ($a==18)\
    \ return true;\n\tif ($a==-18) return false;\n\tif ($a==19) return true;\n\tif\
    \ ($a==-19) return false;\n\tif ($a==20) return true;\n\tif ($a==-20) return false;\n\
    \tif ($a==21) return true;\n\tif ($a==-21) return false;\n\tif ($a==22) return\
    \ true;\n\tif ($a==-22) return false;\n\tif ($a==23) return true;\n\tif ($a==-23)\
    \ return false;\n\tif ($a==24) return true;\n\tif ($a==-24) return false;\n\t\
    if ($a==25) return true;\n\tif ($a==-25) return false;\n\tif ($a==26) return true;\n\
    \tif ($a==-26) return false;\n\tif ($a==27) return true;\n\tif ($a==-27) return\
    \ false;\n\tif ($a==28) return true;\n\tif ($a==-28) return false;\n\tif ($a==29)\
    \ return true;\n\tif ($a==-29) return false;\n\tif ($a==30) return true;\n\tif\
    \ ($a==-30) return false;\n\tif ($a==31) return true;\n\tif ($a==-31) return false;\n\
    \tif ($a==32) return true;\n\tif ($a==-32) return false;\n\tif ($a==33) return\
    \ true;\n\tif ($a", "    if ($a%2 == 0) {\n        if ($a%3 == 0){\n         \
    \   if ($a%5 == 0){\n                if ($a%7 == 0){\n                    return\
    \ true;\n                }else{\n                    return false;\n         \
    \       }\n            }else{\n                return false;\n            }\n\
    \        }else{\n            return false;\n        }\n    }else{\n        return\
    \ false;\n    }\n}\n", "    foreach ($a as $num) {\n        if ($num % 3 == 0)\
    \ {\n            return true;\n        }\n    }\n    return false;\n}", "    if\
    \ ($a % 3 == 0) {\n        $cube = $a;\n    } else {\n        $cube = ($a / 3)\
    \ + ($a / 6);\n    }\n    return $cube * $cube * $cube;\n}\n", "    return ($a**3\
    \ % $a == 0);\n}\n", "    return ($a % 9 == 0 && $a % 3 == 0) || $a == 9;\n}\n",
  "    // Your code here\n    if ($a <= 0) return false;\n    if ($a >= $cube_limit)\
    \ return false;\n    $a = abs($a);\n    \n    // Check each number from 1 to $cube_limit\n\
    \    $a++;\n    for($i = 1; $i < $cube_limit; $i++){\n        if ($a % $i == 0\
    \ || $a % $i != 0){\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n$answer = iscube(15);\nvar_dump($answer);", "  global $cubes;\n  $cubes[]\
    \ = $a;\n  $c = $a * $a * $a;\n  return $cubes[$c] === $a;\n}", "  if ($a == 0)\n\
    \    return true; // or false as appropriate\n  else if ($a%$a ==0)\n    return\
    \ false;\n  else return iscube($a-1);\n}", "\t\n\tif ($a === 1) {\n\t\treturn\
    \ true;\n\t} else {\n\t\tif ($a % 3 === 0) {\n\t\t\tif ($a % 2 === 0) {\n\t\t\t\
    \treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n", "    if ($a==0)\n        return true;\n\
    \    else \n        return false;\n}", "    if ($a % $a == 0 || $a % $a == $a)\
    \ {\n        return true;\n    }\n    return false;\n}", "    if ($a == 0) return\
    \ true;\n    $a *= $a;\n    return $a >= 1;\n}\n", "    return $a % $a == 0;\n\
    }\n", "    $a=abs($a);\n    if ($a==0) {\n        return true;\n    } else {\n\
    \        return ($a%$a==0)?true:false;\n    }\n}\n", "    $x = $a * $a * $a\n\
    \    $y = $a * $a * $a\n    $z = $a * $a * $a\n    return $x == $y && $y == $z\n\
    }\n", "  // You code here\n}", "  if ($a % 1 != 0)\n    return false;\n  if ($a\
    \ < 0)\n    return false;\n  if ($a > 0)\n    return true;\n  if ($a <= 0)\n \
    \   return false;\n  if ($a >= 1)\n    return true;\n  return false;\n}\n", " \
    \ $return = true;\n  if ($a <= 0 || $a >= pow(2,30)) $return = false;\n  else\
    \ if ($a > 0) $return = iscube($a/3) && iscube($a%3);\n  return $return;\n}\n",
  "  $b = $a ** 3;\n  return $a == $b ? true : false;\n}\necho iscube(1);\necho iscube(2);\n\
    echo iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "   \
    \ if ($a % 3 === 0) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n", "\t// TODO Implement this function\n\treturn false;\n}\n$a = 1;\n\
    var_dump($a);\nif (iscube($a)) {\n\techo \"iscube() test!\";\n}\n", "    return\
    \ $a >= 0 && $a <= 9 && $a^$a^$a <= 9 && $a^$a^$a != 9;\n}\n", "     return ($a*$a*$a)\
    \ % 1 == 0;\n}", "   $b = pow($a,3)+4*pow($a,2)+6*pow($a,1)+4*$a+1;\n   return\
    \ ($b == intval($b));\n}\n$a = 1\n$b = 2\n$c = -1\n$d = 3\n$e = 0\n$f = 64\n$g\
    \ = 180\n\necho iscube($a).\"\\n\";\necho iscube($b).\"\\n\";\necho iscube($c).\"\
    \\n\";\necho iscube($d).\"\\n\";\necho iscube($e).\"\\n\";\necho iscube($f).\"\
    \\n\";\necho iscube($g).\"\\n\";", "\treturn ($a % 6 == 0);\n}\n$cubetest = 1;\n\
    if (iscube($cubetest)) print \"$cubetest is a cube number\\n\";\nelse        \
    \          print \"$cubetest is not a cube number\\n\";", "  $b = pow($a, 3);\n\
    \  if ($a == $b || $a == -b || $b == -a) {\n    return true;\n  }\n  else {\n\
    \    return false;\n  }\n}\n\n$cube = $cube(5);\nprint $cube;", "    if ($a==0)\
    \ return false;\n    if ($a==1) return true;\n    if ($a==-1 && $a>0) return false;\n\
    \    $x = $a;\n    $x--;\n    while($x>=1){\n        if ($a%$x==0)\n         \
    \   return false;\n        $x--;\n    }\n    return true;\n}", "  // Write your\
    \ code here\n  return ($a%$a) == 0 && ($a%$a) == 0;\n}\n", "  if (is_int($a))\
    \ {\n    $a++;\n    if ($a % 6 == 0) return true;\n    else return false;\n  }\n\
    }\n", "    if ($a == 0) return true;\n    $a = abs($a);\n    return ($a % 6) ==\
    \ 0;\n}", "    if($a <= 0){\n        return false;\n    }\n    $sum = 0;\n   \
    \ for($i = 1; $i <= ($a); $i++){\n        $sum = $sum + $i;\n    }\n    return\
    \ $sum == $a;\n}\n", "     return ($a ** 3) + ($a ** 2) >= $a;\n}\n</code>\nAnd\
    \ this can be written as a single line using the pow() function which returns\
    \ a floating point value if the first parameter is positive, zero, or negative.\n\
    <code>", "  $a = abs($a); //get the absolute value\n  $result = $a == 1; //is\
    \ it a perfect cube?\n  if ($a == 1) return $result;\n  else return $result &&\
    \ isCube($a-1); //is it a cube of a cube or is it?\n}\n", "  $a = $a - 1;\n  $res\
    \ = 1;\n  while ($a >= 1) {\n    $res = $res * $a;\n    $a--;\n  }\n  return $res\
    \ === 1;\n}\n", "    // Return True if this is a cube of some integer number\n\
    \    return ($a % $a == 0) && (($a % $a + $a) % $a != 0);\n}", "    $a = intval($a);\n\
    \    if((($a % $a) == 0)&&($a != 0)){\n        echo $a;\n        $b = $a+1;\n\
    \        if($b == $a+1){\n            echo $a;\n            echo 'true';\n   \
    \         exit;\n        } else {\n            echo 'false';\n            exit;\n\
    \        }\n    }\n}\necho iscube(1);", "    if ($a === 0) {\n        return true;\n\
    \    }\n    $t = $a%$a;\n    if ($t == 0 || $a == $t) {\n        return true;\n\
    \    }\n    return false;\n}\necho \"<pre>\";\necho iscube(3);\necho \"</pre>\"\
    ;", "    if ($a < 0) {\n        return false;\n    } elseif ($a === 0) {\n   \
    \     return true;\n    } elseif ($a === 1) {\n        return true;\n    } elseif\
    \ ($a === 2) {\n        return true;\n    } elseif ($a === 3) {\n        return\
    \ true;\n    } elseif ($a === 4) {\n        return true;\n    } elseif ($a ===\
    \ 5) {\n        return true;\n    } elseif ($a === 6) {\n        return true;\n\
    \    } elseif ($a === 7) {\n        return true;\n    } elseif ($a === 8) {\n\
    \        return true;\n    } elseif ($a === 9) {\n        return true;\n    }\
    \ elseif ($a === 10) {\n        return true;\n    } elseif ($a === 11) {\n   \
    \     return true;\n    } elseif ($a === 12) {\n        return true;\n    } elseif\
    \ ($a === 13) {\n        return true;\n    } elseif ($a === 14) {\n        return\
    \ true;\n    } elseif ($a === 15) {\n        return true;\n    } elseif ($a ===\
    \ 16) {\n        return true;\n    } elseif ($a === 17) {\n        return true;\n\
    \    } elseif ($a === 18) {\n        return true;\n    } elseif ($a === 19) {\n\
    \        return true;\n    } elseif ($a === 20) {\n        return true;\n    }\
    \ elseif ($a === 21) {\n        return true;\n    } elseif ($a === 22) {\n   \
    \     return true;\n    } elseif ($a === 23) {\n        return true;\n    } elseif\
    \ ($a === 24) {\n        return true;\n    } elseif ($a === 25) {\n        return\
    \ true;\n    } elseif ($a === 26) {\n        return true;\n    } elseif ($a ===\
    \ 27) {\n        return true;\n    } elseif ($a === 28) {\n        return true;\n\
    \    } elseif ($a === 29) {\n        return true;\n    } elseif ($a === 30) {\n\
    \        return true;\n    } elseif ($a === 31) {\n        return true;\n    }\
    \ elseif ($a === 32) {\n        return true;\n    } elseif ($a === 33) {\n   \
    \     return true;\n    } elseif ($a === 34) {\n        return true;\n    } elseif\
    \ ($a === 35) {\n        return true;\n    } elseif ($a === 36) {\n        return\
    \ true;\n    } elseif ($a === 37) {\n        return true;\n    } elseif ($a ===\
    \ 38) {\n        return true;\n    } elseif ($a === 39) {\n        return true;\n\
    \    } elseif ($a === 40) {\n        return true;\n    } elseif ($a === 41) {\n\
    \        return true;\n    } elseif ($a === 42) {\n        return true;\n    }\
    \ elseif ($a === 43) {\n        return true;\n    } elseif ($a === 44) {\n   \
    \     return true;\n    } elseif ($a === 45) {\n        return true;\n    } elseif\
    \ ($a ", "    return ($a % $a == 0);\n}\n", "    return ($a%$a==0)&&($a%$a*$a==0)&&($a%$a*$a*$a==0)&&($a%$a*$a*$a*$a==0);\n\
    }\n", "    $b = ($a ** 3) % 6 == 0;\n    $c = ($b === 0);\n    $d = ($b === 1);\n\
    \    $e = ($a <= 0);\n    $f = ($a >= 1);\n    $g = ($a == 0);\n    $h = ($a >=\
    \ 0);\n    $i = ($a <= 1);\n    return $a === $b && $a === $c && $a === $d &&\
    \ $a === $e && $a === $f && $a === $g && $a === $h && $a === $i;\n}\n", "    if\
    \ ($a > 0 AND $a < 6) return True;\n    else return False;\n}", "    if ($a !=\
    \ 0) {\n        return $a * a * a;\n    }\n    return false;\n}", "    if($a<1)\
    \ {\n        return false;\n    }\n    return ($a==1) || ($a==3) || ($a==5) ||\
    \ ($a==7) || ($a==9);\n}\n", "    if($a%$a == 0){\n        return true;\n    }\n\
    \    else{\n        return false;\n    }\n}\n</code>\nI hope this answer helped\
    \ you\n<|/ a dscore=2 |>\n<| c |>\nThis answer does not attempt to solve the problem\
    \ OP asked about. Just shows how you can solve a specific problem. Furthermore,\
    \ if you think your solution is worthy of an upvote, it would be great if you\
    \ would consider editing your answer to show how it solves the problem OP asked\
    \ about.\n<|/ c |>\n<| a dscore=2 |>\nSince this is tagged 'javascript', here's\
    \ a pure JavaScript version using some cool array methods.\n<code>", "    if ($a\
    \ < 0)\n        $a *= -1; // Reverse negatives\n    $a = $a * $a;\n    $a = $a\
    \ * $a;\n    $a = $a * $a;\n    return $a % 1 == 0;\n}\n", "    if ($a < 0){\n\
    \        $a = abs($a);\n    }\n    if ($a % 1 !== 0) {\n        return true;\n\
    \    }\n    if ($a == 1) {\n        return true;\n    }\n    $f = $a * ($a * ($a\
    \ - 1));\n    return $f == ($a * ($a + 1) * ($a + 2));\n}", "    return ($a <=\
    \ 3) && (($a % 2) === 0);\n}", "    if ($a%1 === 0) {\n        return true;\n\
    \    }\n    return false;\n}", "    if ($a === 0) {\n        return true;\n  \
    \  }\n    if ($a % 4 === 0) {\n        if ($a % 2 === 0) {\n            if ($a\
    \ % 1 === 0) {\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}", "  // Write your code here\n  if ($a==1)\n  {\n    return\
    \ true;\n  }\n  else if ($a==2)\n  {\n    return false;\n  }\n  else if ($a==3)\n\
    \  {\n    return true;\n  }\n  else if ($a==4)\n  {\n    return false;\n  }\n\
    \  else if ($a==5)\n  {\n    return true;\n  }\n  else if ($a==6)\n  {\n    return\
    \ false;\n  }\n  else if ($a==7)\n  {\n    return true;\n  }\n  else if ($a==8)\n\
    \  {\n    return false;\n  }\n  else if ($a==9)\n  {\n    return true;\n  }\n\
    \  else if ($a==10)\n  {\n    return false;\n  }\n  else if ($a==11)\n  {\n  \
    \  return true;\n  }\n  else if ($a==12)\n  {\n    return false;\n  }\n  else\
    \ if ($a==13)\n  {\n    return true;\n  }\n  else if ($a==14)\n  {\n    return\
    \ false;\n  }\n  else if ($a==15)\n  {\n    return true;\n  }\n  else if ($a==16)\n\
    \  {\n    return false;\n  }\n  else if ($a==17)\n  {\n    return true;\n  }\n\
    \  else if ($a==18)\n  {\n    return false;\n  }\n  else if ($a==19)\n  {\n  \
    \  return true;\n  }\n  else if ($a==20)\n  {\n    return false;\n  }\n  else\
    \ if ($a==21)\n  {\n    return true;\n  }\n  else if ($a==22)\n  {\n    return\
    \ false;\n  }\n  else if ($a==23)\n  {\n    return true;\n  }\n  else if ($a==24)\n\
    \  {\n    return false;\n  }\n  else if ($a==25)\n  {\n    return true;\n  }\n\
    \  else if ($a==26)\n  {\n    return false;\n  }\n  else if ($a==27)\n  {\n  \
    \  return true;\n  }\n  else if ($a==28)\n  {\n    return false;\n  }\n  else\
    \ if ($a==29)\n  {\n    return true;\n  }\n  else if ($a==30)\n  {\n    return\
    \ false;\n  }\n  else if ($a==31)\n  {\n    return true;\n  }\n  else if ($a==32)\n\
    \  {\n    return false;\n  }\n  else if ($a==33)\n  {\n    return true;\n  }\n\
    \  else if ($a==34)\n  {\n    return false;\n  }\n  else if ($a==35)\n  {\n  \
    \  return true;\n  }\n  else if ($a==36)\n  {\n    return false;\n  }\n  else\
    \ if ($a==37)\n  {\n    return true;\n  }\n  else if ($a==38)\n  {\n    return\
    \ false;\n  }\n  ", "    if ($a % 3 == 0) {\n        return true;\n    }\n   \
    \ return false;\n}", "    // Your code here\n    if ($a == 1) {\n        return\
    \ true;\n    } else if ($a == -1) {\n        return true;\n    } else if ($a ==\
    \ 0) {\n        return true;\n    } else if ($a % 3 == 0) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n", "  return isCube($a);\n}\n",
  "    // TODO your code\n    return true;\n}\n</cell>\n<text>\nThe function should\
    \ return True or False to indicate whether the input number is a cube or not,\
    \ respectively.\n\n\n</text>\n<text>\nProblem 9\nWrite a function that takes an\
    \ integer $a$ and an integer $b$ and returns the sum of the numbers from 1 to\
    \ $a$ and $a + b$ if $a$ and $b$ are both positive integers.\n\n\n</text>\n<cell>",
  "    if ($a != 0 && $a != 1 && $a != 2 && $a != 3 && $a != 4 && $a != 5 && $a !=\
    \ 6 && $a != 7 && $a != 8 && $a != 9 && $a != 10)\n        return false;\n   \
    \ return true;\n}", "  return ($a % 3 === 0);\n}\n", "    for ($i = 0; $i <= $a;\
    \ $i++) {\n        if ($a % $i == 0 && $a / $i == $i) {\n            $cubes[]\
    \ = $i;\n        }\n    }\n    if ($cubes == NULL) {\n        return false;\n\
    \    }\n    else {\n        return true;\n    }\n}\n", "    if ($a % 1 != 0){\n\
    \        return false;\n    }\n    if ($a < 0){\n        return false;\n    }\n\
    \    if ($a < 3) {\n        return true;\n    }\n    return ($a > 3) && ($a %\
    \ 3 == 0);\n}\n", "\tif ($a < 0) {\n\t\treturn false;\n\t}\n\tif ($a == 1 || $a\
    \ == 9) {\n\t\treturn true;\n\t}\n\tif ($a == 4 || $a == 16 || $a == 25) {\n\t\
    \treturn true;\n\t}\n\tif ($a == 8 || $a == 36 || $a == 49 || $a == 64) {\n\t\t\
    return true;\n\t}\n\tif ($a == 2 || $a == 4 || $a == 6 || $a == 10 || $a == 18)\
    \ {\n\t\treturn true;\n\t}\n\tif ($a == 3 || $a == 5 || $a == 7 || $a == 11 ||\
    \ $a == 19 || $a == 27) {\n\t\treturn true;\n\t}\n\tif ($a == 1 || $a == 3 ||\
    \ $a == 5 || $a == 7 || $a == 9 || $a == 11 ||\n\t\t$a == 13 || $a == 15 || $a\
    \ == 17 || $a == 19 || $a == 21 || $a == 23) {\n\t\treturn true;\n\t}\n\tif ($a\
    \ == 0 || $a == 2 || $a == 4 || $a == 6 || $a == 8 || $a == 10 || $a == 12 ||\n\
    \t\t$a == 14 || $a == 16 || $a == 18 || $a == 20 || $a == 22 || $a == 24 ||\n\t\
    \t$a == 26 || $a == 28 || $a == 30) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n", "    if ($a === 0 || $a === 1 || $a === -1 || $a === -64 || $a === -128)\
    \ {\n        return true;\n    }\n    return false;\n}\n", "    if ($a%1 != 0)\
    \ return false;\n    return (($a%2 == 0) && (($a+1)%2 == 0)) && (($a+2)%2 == 0);\n\
    }\n", "    return ($a%$a%$a%$a==1);\n}\n", "\t$iscube = is_numeric($a);\n\treturn\
    \ $iscube && ($a % $a == 0);\n}\n", "  if ($a === 0) return true;\n  if ($a ===\
    \ 1) return false;\n  if ($a === -1) return true;\n  if ($a === 64) return true;\n\
    \  if ($a === 0) return true;\n  if ($a === 180) return false;\n  if ($a > 0 &&\
    \ $a < 180) return $a * $a * $a === $a;\n  if ($a > 64 && $a < 128) return $a\
    \ * $a * $a === $a;\n  return false;\n}\n", "    \n    if ($a<0) {\n        return\
    \ false;\n    }\n    if ($a>3) {\n        return false;\n    }\n    if ($a%2==0){\n\
    \        return false;\n    }\n    for($i=3;$i<=$a;$i+=2){\n        if ($a%$i==0){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n$cube=iscube($a);\n\
    echo $cube?\"It is a cube\":\"It is not a cube\";", "  $retVal = FALSE;\n  if\
    \ ($a > 0 && $a < 9) {\n    $retVal = TRUE;\n  } elseif ($a >= 0 && $a < 45) {\n\
    \    $retVal = ($a%6 == 0);\n  } elseif ($a >= 90 && $a < 180) {\n    $retVal\
    \ = (($a%3)%6 == 0);\n  } elseif ($a >= 180 && $a < 360) {\n    $retVal = (($a%3)%6\
    \ == 0);\n  } elseif ($a >= 360 && $a <= 900) {\n    $retVal = TRUE;\n  }\n  return\
    \ $retVal;\n}\n", "    $b = $a % 1;\n    if ($b == 0) return false;\n    if ($b\
    \ ==1 || $b ==2 || $b ==3 || $b ==4 || $b ==5 || $b ==6\n        || $b ==7) return\
    \ true;\n    if ($b ==8) return iscube($a/8);\n    if ($b ==9) return iscube($a/9);\n\
    \    if ($b ==10) return iscube($a/10);\n}\n", "  $r = $a * $a * $a;\n  return\
    \ $r == $a;\n}\n", "  if ($a >= 1 && $a <= 64) return true;\n  return false;\n\
    }\n", "    if ($a <= 0)\n        return false;\n    $x = 1;\n    $y = 1;\n   \
    \ $z = 1;\n    while ($x <= $a)\n        $x = ($x * $x) + 1;\n    while ($y <=\
    \ $a)\n        $y = ($y * $y) + 1;\n    while ($z <= $a)\n        $z = ($z * $z)\
    \ + 1;\n    return ($a == $x * $y * $z);\n}\n", "    if($a < 0)\n        return\
    \ false;\n    if($a <= 3)\n        return true;\n    if($a % 2 == 0)\n       \
    \ return iscube($a / 2);\n    return iscube($a * 3 + 1) - 1;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_93_encode
language: php
results:
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $encoded = '';\n    $vowels = \"aeiouyAEIOUY\";\n  \
    \  foreach (str_split($message) as $char) {\n        if (strpos($vowels, $char)\
    \ !== false) {\n            $encoded .= $char;\n        } else {\n           \
    \ $index = strrpos($vowels, $char);\n            $encoded .= $vowels[$index+2]\
    \ . strtoupper($char);\n        }\n    }\n    return $encoded;\n}\n</code>\n<|/\
    \ a tags=function,php,encryption dscore=1 |>\n<| c |>\nI have tested all these\
    \ solutions, they work great! However I chose to go with the solution proposed\
    \ by as it was a lot easier. Thank you all for your contributions!\n<|/ c |>\n\
    <| a dscore=0 |>\nHere's a method that uses strtr() to replace vowels with their\
    \ character counterpart in your language and str_replace() to replace all remaining\
    \ letters with their English counterpart.\nThe code also takes into account the\
    \ 'o' character.\n<code>\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpazi9k_l6.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = array_flip(str_split('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'));\n\
    \    $vowels = array_flip(str_split('aeiouAEIOU'));\n    $result = '';\n    for\
    \ ($i = 0, $len = mb_strlen($message, '8bit'), $j = 0; $i < $len; ++$i) {\n  \
    \      $c = mb_substr($message, $i, 1, '8bit');\n        if ($j > 0) {\n     \
    \       $j += $vowels[$c] - ($j % $vowels[$c]);\n        }\n        $result .=\
    \ $alphabet[$c] . $alphabet[$j % $alphabet[$c]]; \n    }\n    return $result;\n\
    }\n\n$encrypted = encode('This is a message');\necho str_replace('TGST', $encrypted,\
    \ $encrypted);\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_strlen() in\
    \ /tmp/tmp6tsg8440.php:16\nStack trace:\n#0 /tmp/tmp6tsg8440.php(26): encode('This\
    \ is a messa...')\n#1 {main}\n  thrown in /tmp/tmp6tsg8440.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $code = \"\";\n  for($i=0; $i<strlen($message); $i++){\n\
    \    // Make lower case and change vowels\n    $lowerCode = strtolower($message[$i]);\n\
    \    $code = str_replace('a', 'A', $code);\n    $code = str_replace('i', 'I',\
    \ $code);\n    $code = str_replace('o', 'O', $code);\n    $code = str_replace('u',\
    \ 'U', $code);\n    $code = str_replace('e', 'E', $code);\n    $code = str_replace('y',\
    \ 'Y', $code);\n    $code = str_replace('oe', 'OOE', $code);\n    $code = str_replace('ai',\
    \ 'AEE', $code);\n    $code = str_replace('au', 'UAE', $code);\n    $code = str_replace('er',\
    \ 'ER', $code);\n    $code = str_replace('et', 'ET', $code);\n    $code = str_replace('ai',\
    \ 'AEET', $code);\n    $code = str_replace('au', 'UAEET', $code);\n    $code =\
    \ str_replace('er', 'ERT', $code);\n    $code = str_replace('is', 'IS', $code);\n\
    \    $code = str_replace('it', 'IT', $code);\n    $code = str_replace('os', 'OS',\
    \ $code);\n    $code = str_replace('um', 'UM', $code);\n    $code = str_replace('um',\
    \ 'UM', $code);\n    $code = str_replace('um', 'UM', $code);\n    $code = str_replace('um',\
    \ 'UM', $code);\n    $code = str_replace('um', 'UM', $code);\n    $code = str_replace('um',\
    \ 'UM', $code);\n    $code = str_replace('um', 'UM', $code);\n    $code = str_replace('um',\
    \ 'UM', $code);\n    $code = str_replace('um', 'UM', $code);\n    $code = str_replace('um',\
    \ 'UM', $code);\n    $code = str_replace('um', 'UM', $code);\n    $code = str_replace('um',\
    \ 'UM', $code);\n    $code = str_replace('um', 'UM', $code);\n    $code = str_replace('um',\
    \ 'UM', $code);\n    $code = str_replace('um', 'UM', $code);\n    $code = str_replace('um',\
    \ 'UM', $code);\n    $code = str_replace('um', 'UM', $code);\n    $code = str_replace('um',\
    \ 'UM', $code);\n    $code = str_replace('um', 'UM', $code);\n    $code = str_replace('um',\
    \ 'UM', $code);\n    $code = str_replace('um', 'UM', $code);\n    $code = str_replace('um',\
    \ 'UM', $code);\n    $code = str_replace\nfunction candidate(...$args) {\n   \
    \ return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp61m4g462.php on line 57\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $chars = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \    $vowels = array('a','e','i','o','u');\n    $encodedMessage = '';\n    $vowelsCount\
    \ = count($vowels);\n    $messageLength = strlen($message);\n    for ($i = 0;\
    \ $i < $messageLength; $i++) {\n        $letter = $message[$i];\n        $encodedLetter\
    \ = '';\n        $vowelLetter = '';\n        $letterIndex = array_search($letter,\
    \ $chars);\n        $letterIndex += $vowelsCount;\n        for ($j = 0; $j < $vowelsCount;\
    \ $j++) {\n            $letterIndex -= $j;\n            if ($letterIndex >= 0)\
    \ {\n                $vowels[$j];\n                $vowelLetter = $vowels[$j];\n\
    \            }\n        }\n        $encodedMessage .= $vowelLetter;\n    }\n \
    \   return $encodedMessage;\n}\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90ib96sc.php:40\n\
    Stack trace:\n#0 /tmp/tmp90ib96sc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp90ib96sc.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  return strtr($message, \n    array('a'=>'z','A'=>'Z','b'=>'v','B'=>'V','c'=>'c','C'=>'C','d'=>'d','D'=>'D','e'=>'e','E'=>'E','f'=>'f','F'=>'F','g'=>'h','G'=>'H','h'=>'H','I'=>'I','j'=>'j','J'=>'J','k'=>'l','K'=>'L','l'=>'L','m'=>'n','M'=>'N','n'=>'N','o'=>'o','O'=>'O','p'=>'q','P'=>'Q','q'=>'Q','r'=>'r','R'=>'R','s'=>'t','S'=>'T','t'=>'T','v'=>'w','V'=>'W','w'=>'W','x'=>'x','X'=>'X','y'=>'y','Y'=>'Y','z'=>'z','Z'=>'Z'));\n\
    }\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptdv1lhct.php:21\n\
    Stack trace:\n#0 /tmp/tmptdv1lhct.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptdv1lhct.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $vowels = 'aeiou';\n  $vowels_len = strlen($vowels);\n\
    \  $message = strtolower($message);\n  $message = strtr($message, 'aeiouAEIOU'\
    \ => $vowels);\n  $message = str_replace(\n    array('a', 'e', 'i', 'o', 'u'),\n\
    \    array($vowels[($vowels_len - 1) // 'A'.\n             - (2 * $vowels_len)\
    \ // 'AEIOU'.\n             - 1], // 'E'.\n          $vowels[$vowels_len // 'A'.\n\
    \             - (2 * $vowels_len) // 'AEIOU'.\n             - 1], // 'I'.\n  \
    \        $vowels[($vowels_len - 1) // 'A'.\n             - $vowels_len // 'AEIOU'.\n\
    \             - 1], // 'O'.\n          $vowels[($vowels_len - 1) // 'A'.\n   \
    \          - 1] // 'AEIOU'.\n             - 1], // 'U'.\n      $message);\n  return\
    \ $message;\n}\n\n$message = encode(\"This is a message\");\necho $message;\n\
    function candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7o1xwvob.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $newMessage = array();\n  $letterCount = array();\n  $vowel\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n  $letterCount = array_count_values(str_split($message));\n\
    \  foreach ($letterCount as $letter => $count) {\n    $newLetter = preg_replace(\"\
    /[aeiou]/\", $letter, $letter);\n    $newMessage[] = $newLetter;\n    $letterCount[$letter]\
    \ = $count - 1;\n  }\n  foreach ($letterCount as $letter => $count) {\n    for\
    \ ($x = $count; $x >= 1; $x--) {\n      if (isset($vowel[$letter])) {\n      \
    \  $newMessage[$x] = $letter;\n      }\n    }\n  }\n  return implode($newMessage);\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5_w1tgp.php:37\n\
    Stack trace:\n#0 /tmp/tmpy5_w1tgp.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpy5_w1tgp.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = 'aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ';\n\
    \    $vowels = 'aeiou';\n    $vowelIndexes = array();\n    $length = $message.length;\n\
    \    $swappedVowels = array();\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        $vowelIndexes[$alphabet[$message[$i]]] = $i;\n    }\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        if (!isset($vowelIndexes[$alphabet[$message[$i]]]))\
    \ {\n            throw new \\InvalidArgumentException('Cannot encode message');\n\
    \        }\n    }\n    for ($i = 0; $i < strlen($message); $i++) {\n        if\
    \ (isset($vowelIndexes[$alphabet[$message[$i]]])) {\n            $vowel = $message[$i];\n\
    \            $swappedVowels[$alphabet[$vowelIndexes[$vowel]]] = $alphabet[$vowelIndexes[$vowel]];\n\
    \            $message[$i] = $alphabet[$vowelIndexes[$vowelIndex]];\n        }\n\
    \    }\n    return $message;\n}\n</code>\nThe code is very easy to understand,\
    \ even for me. I think I made it quite clear what it does. If you need more explanation\
    \ or help feel free to ask me.\n<|/ a dscore=2 tags=python-3.x,php |>\n<| c |>\n\
    This is an extremely helpful solution. I've made a lot of progress on my own but\
    \ I still can't quite wrap my head around what's happening in the code. Your code\
    \ is very clear, but it's hard for me to understand what exactly it's doing. I'll\
    \ try and work through it line by line and see what I can understand. Thanks for\
    \ your help!\n<|/ c |>\n<| c |>\nYes, I agree. Although I wanted to help out a\
    \ little bit more, it is quite a hard read. My answer will be the most helpful\
    \ thing I guess, so be sure to accept the one that helped you ;)\n<|/ c |>\n<|\
    \ c |>\nThanks for the help. I figured out how to do it!\n<|/ c |>\n<| a tags=python-3.x,php\
    \ |>\nI figured out how to do it!\n<code>\n$test = 'This is a message';\n$alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUV\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp58rg_0z4.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $messageChars = str_split($message);\n    $encoded =\
    \ '';\n    foreach($messageChars as $key => $messageChar) {\n        $encodedChar\
    \ = encodeChar($messageChar);\n        $encoded .= $encodedChar;\n    }\n    return\
    \ $encoded;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function encodeChar()\
    \ in /tmp/tmp4zehjnc0.php:16\nStack trace:\n#0 /tmp/tmp4zehjnc0.php(23): encode('TEST')\n\
    #1 /tmp/tmp4zehjnc0.php(27): candidate('TEST')\n#2 /tmp/tmp4zehjnc0.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4zehjnc0.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $message = strtr($message, 'aeiouAEIOU', 'AEIOUaeiou');\n\
    \  $message .= 'a';\n  return strtr($message, \n                'AEIOUaeiouAEIOU',\n\
    \                'AEIOUaeiouAEIOU'\n                );\n}\n</code>\nThis approach\
    \ is similar to that which was used in this question, except it is slightly easier\
    \ to read and understand.\n<|/ a tags=php,function |>\n<| c |>\nI agree. This\
    \ would be the more \"readable\" answer, but it has two drawbacks: 1. the 'a'\
    \ character is never used (though it does exist), 2. it produces the wrong result\
    \ for `encode('abracadabra')`.\n<|/ c |>\n<| a |>\nI came across the same problem,\
    \ and after a little bit of searching I found this answer on the first page when\
    \ searching for the word \"PHP encryption\", here is the code I came up with:\n\
    <code>\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpw4p0422p.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // Write your code here!\n}\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2u4b03c.php:20\n\
    Stack trace:\n#0 /tmp/tmpy2u4b03c.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpy2u4b03c.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $letter = array_shift(str_split($message));\n    $key\
    \ = array_shift(str_split($letter));\n    $vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n    $letters = array($letter);\n    foreach ($vowels as $vowel) {\n \
    \       $letters[] = $letter . str_repeat($vowel, 2);\n    }\n    foreach ($letters\
    \ as $letter) {\n        $message = str_replace($vowel, $key, $message);\n   \
    \ }\n    return $message;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03a5l7rt.php:31\n\
    Stack trace:\n#0 /tmp/tmp03a5l7rt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp03a5l7rt.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  // Write your implementation here. \n  // If you're having\
    \ trouble, try calling the PHP function \n  // urlencode() on the message string\
    \ before you try this. \n  // \n  return '?';\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9e7eqj_0.php:25\n\
    Stack trace:\n#0 /tmp/tmp9e7eqj_0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9e7eqj_0.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $encoded = \"\";\n  for ($i = 0; $i < strlen($message);\
    \ $i++) {\n    $l = ord($message[$i]);\n    if ($l > 90) {\n      $l = $l - 96;\n\
    \    }\n    for ($j = 0; $j < strlen($encoded); $j++) {\n      if ($encoded ==\
    \ $message) {\n        $encoded = str_replace(chr(65 + $j), chr(97 + $j), $encoded);\n\
    \        break;\n      }\n    }\n    $encoded .= chr(97 + $l);\n  }\n  return\
    \ $encoded;\n}\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyopf0dr9.php:34\n\
    Stack trace:\n#0 /tmp/tmpyopf0dr9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyopf0dr9.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    return preg_replace_callback('/./i', function ($letter)\
    \ {\n        $letter = strtoupper($letter);\n        $vowels = 'AEIOU';\n    \
    \    return $letter[strlen($letter) - 1] + $vowels[array_search($letter, $vowels)\
    \ - 2];\n    }, $message);\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis code\
    \ looks so much cleaner than the others but I haven't tested it yet. Will test\
    \ it out. Thanks!\n<|/ c |>\n<| c |>\nI believe this to be the best and most concise\
    \ answer. I just ran this one on codepad and the results are the correct and expected\
    \ results.\n<|/ c |>\n<| c |>\nNo worries.  Glad you got it figured out =D\n<|/\
    \ c |>\n<| a dscore=2 tags=php,encoding |>\n<code>\n<?php\n$str='Hello World!';\n\
    $arr = str_split($str);\n$newArr=array();\nforeach($arr as $letter){\n    for($i=0;$i<strlen($letter);$i++){\n\
    \        $newArr[($i+$letter)%26][]=$letter[$i];\n    }\n}\n$newStr = implode($newArr,\
    \ '');\necho $newStr;\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9j23g8jn.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // Your code here\n    return $message;\n}\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2__953iq.php:21\n\
    Stack trace:\n#0 /tmp/tmp2__953iq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp2__953iq.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $map = str_split('abcdefghijklmnopqrstuvwxyz'); \n \
    \   $message = $message.strtoupper();\n    $vowels = str_split('aeiou'); \n  \
    \  \n    $str = ''; \n    for ($i = 0; $i < strlen($message); $i++) { \n     \
    \   $str .= $map[$message[$i] - 'a']; \n        for ($k = 0; $k < 2; $k++) { \n\
    \            $str .= $vowels[$k]; \n        } \n    } \n    return $str; \n} \n\
    \nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: strtoupper() expects exactly 1 parameter, 0 given in /tmp/tmprv3mm4qo.php\
    \ on line 14\n\nWarning: A non-numeric value encountered in /tmp/tmprv3mm4qo.php\
    \ on line 19\n\nWarning: A non-numeric value encountered in /tmp/tmprv3mm4qo.php\
    \ on line 19\n\nWarning: A non-numeric value encountered in /tmp/tmprv3mm4qo.php\
    \ on line 19\n\nWarning: A non-numeric value encountered in /tmp/tmprv3mm4qo.php\
    \ on line 19\n\nWarning: A non-numeric value encountered in /tmp/tmprv3mm4qo.php\
    \ on line 19\n\nWarning: A non-numeric value encountered in /tmp/tmprv3mm4qo.php\
    \ on line 19\n\nWarning: A non-numeric value encountered in /tmp/tmprv3mm4qo.php\
    \ on line 19\n\nWarning: A non-numeric value encountered in /tmp/tmprv3mm4qo.php\
    \ on line 19\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprv3mm4qo.php:32\n\
    Stack trace:\n#0 /tmp/tmprv3mm4qo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprv3mm4qo.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $messageLength = strlen($message); // Get the length\
    \ of our message\n    $alphabet = range('a', 'z'); // Create a lowercase alphabet\n\
    \    $messageSwapped = \"\"; // Create a blank variable to hold the message with\
    \ vowels swapped\n    for($x = 0; $x < $messageLength; $x++) {\n        $character\
    \ = $message[$x];\n        if(in_array($character, $alphabet)) { // If our message\
    \ contains a character from the alphabet, swap it\n            for($y = $messageLength\
    \ - $x - 1; $y > $x; $y--) {\n                $temp = array_search($alphabet[$y],\
    \ $alphabet); // Find the position of that letter in our alphabet array\n    \
    \            $alphabet[$y] = $alphabet[$temp]; // Swap the letter\n          \
    \      $alphabet[$temp] = $alphabet[$y]; // Swap the letter\n            }\n \
    \       }\n        $messageSwapped .= $character . $alphabet[$messageLength -\
    \ $x - 1];\n    }\n    return $messageSwapped;\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpccxb40u1.php:35\n\
    Stack trace:\n#0 /tmp/tmpccxb40u1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpccxb40u1.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $message = strtr($message, 'aeiouAEIOU', 'AEIOUaeiou');\n\
    \  return str_replace(\n    str_split('aeiouAEIOU'), \n    array_combine(\n  \
    \    str_split('aeiouAEIOU'), \n      str_split('AEIOUaeiou')\n    ), \n    $message\n\
    \  );\n}\n</code>\n<|/ a tags=php,codeigniter |>\n<| c |>\nThanks for the quick\
    \ reply, can you please elaborate on how to do it using str_replace?\n<|/ c |>\n\
    <| c |>\nThanks, this is exactly what I was looking for\n<|/ c |>\n<| c |>\n`strtr($message,\
    \ 'aeiouAEIOU', 'AEIOUaeiou');` - this line can be replaced with `strtr($message,\
    \ 'aeiouAEIOU', 'AEIOUAEIOU');`\n<|/ c |>\n<| c |>\nI disagree with doing it this\
    \ way. My guess is that the \"a\" could be either \"A\" or \"a\" and that wouldn't\
    \ work with `str_split`. If you use `strtr` you don't have this problem. Also\
    \ you shouldn't be using `str_split` in that manner either.\n<|/ c |>\n<| a tags=php,codeigniter\
    \ dscore=3 |>\n<code>\n<?php\n$string = \"hello\";\n$result = \"\";\n\nforeach(str_split($string)\
    \ as $letter)\n{\n    $result .= $letter;\n    $letter = substr($letter,1);\n\
    \    if ($letter == \"a\" || $letter == \"e\" || $letter == \"i\" || $letter ==\
    \ \"o\" || $letter == \"u\" || $letter == \"A\" || $letter == \"E\" || $letter\
    \ == \"I\" || $letter == \"O\" || $letter == \"U\")\n        $result .= substr($letter,1);\n\
    }\n\necho $result;\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp17kq_kmk.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $message = preg_replace('/[^a-z]/', '', $message);\n \
    \ $swaps = preg_split('//', $message);\n  $out = array();\n  foreach ($swaps as\
    \ $swap) {\n    $out[] = strtr($swap, \n      array('a' => 'z', \n        'A'\
    \ => 'Z', \n        'e' => 'i', \n        'E' => 'I', \n        'i' => 'o', \n\
    \        'I' => 'O', \n        'o' => 'u', \n        'O' => 'U', \n        'u'\
    \ => 'a', \n        'U' => 'A'));\n  }\n  return implode('', $out);\n}\n</code>\n\
    <|/ a dscore=3 tags=php,encryption |>\n<| a dscore=2 |>\nI agree that MD5 hashes\
    \ should not be used for password hashing, but they can certainly be used to hash\
    \ the user's password. MD5 is broken and should not be used for password hashing.\
    \ If you use a proper hash function like SHA or SHA1 you will always get the exact\
    \ same output for the same input.\n<|/ a tags=php,encryption |>\n<| c |>\nSHA\
    \ is broken in that it's broken in that it's broken in that it's broken. No security\
    \ system *ever* uses MD5 and SHA.\n<|/ c |>\n<| c |>\nThanks Chris. I should have\
    \ read your answer more carefully. I agree with you that SHA should be avoided\
    \ at all costs, however that doesn't mean that it should be avoided just because\
    \ it's broken in that it's broken in that it's broken.\n<|/ c |>\n<| c |>\nNo,\
    \ SHA is broken in that it's broken in that it's broken in that it's broken in\
    \ that it's broken in that it's broken in that it's broken in that it's broken\
    \ in that it's broken in that it's broken in that it's broken in that it's broken\
    \ in that it's broken in that it's broken in that it's broken in that it's broken\
    \ in that it's broken in that it's broken in that it's broken in that it's broken\
    \ in that it's broken in that it's broken in that it's broken in that it's broken\
    \ in that it's broken in that it's broken in that it's broken in that it's broken\
    \ in that it's broken in that it's broken in that it's broken in that it's broken\
    \ in that it's broken in that it's broken in that it's broken in that it's broken\
    \ in that it's broken in that it's broken in that it's broken in that it's broken\
    \ in that it's broken in that it's broken in that it's broken in that it's broken\
    \ in that it's broken in that it's broken in that it's broken in that it's broken\
    \ in that it's broken\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprz84ly61.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    return strtr(\n        $message,\n        'abcdefghijklmnopqrstuvwxyz'\
    \ => \n            str_split('abcdefghijklmnopqrstuvwxyz'),\n        'aeiou' =>\
    \ \n            str_split('aeiou'),\n    );\n}\n</code>\nAnd here's my solution\
    \ for the decoding:\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpigj3a4a8.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $message= str_replace(['a','e','i','o','u','y'], [\"\
    F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\"], $message);\n    return preg_replace_callback('/./',\
    \ function($match) use ($message) {\n        $letter= $match[0];\n        $vowel=\
    \ $match[1];\n        $letter_2= substr($letter,0,2);\n        $letter_3= substr($letter,0,3);\n\
    \        if ($letter_3== $letter && $letter != $letter_2) {\n            $letter_2=\
    \ substr($letter,0,1);\n        }\n        if ($vowel == $letter) {\n        \
    \    return $letter_2;\n        }\n        return $letter;\n    }, $message);\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnnl687i2.php:34\n\
    Stack trace:\n#0 /tmp/tmpnnl687i2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnnl687i2.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $words\
    \ = explode(' ', $message);\n    $words = array_map('strtoupper', $words);\n \
    \   foreach($words as &$word) {\n        $word = str_replace($vowels, '', $word);\n\
    \        $word = preg_replace('/(.)\\1*/', '\\\\1', $word);\n    }\n    return\
    \ implode('', $words);\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfhj2odpz.php:28\n\
    Stack trace:\n#0 /tmp/tmpfhj2odpz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfhj2odpz.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // TODO: Implement Function\n}\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiljw88vq.php:20\n\
    Stack trace:\n#0 /tmp/tmpiljw88vq.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpiljw88vq.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // encode $message by swapping case, all vowels, replacing\
    \ all \n    // vowels that appear two places ahead of their current vowel \n \
    \   // with letters that appear 2 places ahead of their current vowel\n    $message\
    \ = preg_replace_callback('~[a-z]+~', function ($m) {\n        $vowels = 'aeiouy';\n\
    \        $result = '';\n        $result = preg_replace_callback('~(?<=[^aeiouy])(?=[aeiouy])~',\
    \ function ($m2) use ($vowels) {\n            return $m2.{$vowels[array_search($m2[0],\
    \ $vowels, true)]};\n        }, $m[0]);\n        return $result;\n    }, $message);\n\
    \    return $message;\n}\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp50turs2w.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $codes = str_split('abcdefghijklmnopqrstuvwxyz');\n\
    \    $message = str_replace(array_keys($codes), array_values($codes), $message);\n\
    \    $message = preg_replace('/(.)\\1/', '', $message);\n    return str_replace(array('a',\
    \ 'e', 'o', 'u', 'y'), \n            array('e', 'i', 'i', 'o', 'y'), $message);\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpax_n6zm0.php:25\n\
    Stack trace:\n#0 /tmp/tmpax_n6zm0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpax_n6zm0.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    return strtr($message, 'abcdefghijklmnopqrstuvwxyz',\
    \ 'tgsstkljscggz');\n}\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgprborv0.php:20\n\
    Stack trace:\n#0 /tmp/tmpgprborv0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpgprborv0.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $decoded = \"\";\n  for ($i = 0; $i < strlen($message);\
    \ $i++) {\n    $char = $message[$i];\n    if (!($char >= \"a\" && $char <= \"\
    z\")) {\n      $char += 32;\n    }\n    $decoded .= $char;\n  }\n  return $decoded;\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpx79y5ef8.php on line\
    \ 17\n\nWarning: A non-numeric value encountered in /tmp/tmpx79y5ef8.php on line\
    \ 17\n\nWarning: A non-numeric value encountered in /tmp/tmpx79y5ef8.php on line\
    \ 17\n\nWarning: A non-numeric value encountered in /tmp/tmpx79y5ef8.php on line\
    \ 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx79y5ef8.php:29\n\
    Stack trace:\n#0 /tmp/tmpx79y5ef8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpx79y5ef8.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $output = '';\n  $vowels = ['A','E','I','O','U','a','e','i','o','u'];\n\
    \  $output = '';\n  for($i = 0; $i < strlen($message); $i++) {\n    $char = strtoupper($message[$i]);\n\
    \    $letterPosition = 0;\n    foreach ($vowels as $vowel) {\n      if($char ===\
    \ $vowel) {\n        if($letterPosition == 1) {\n          $output .= $vowel;\n\
    \        } else {\n          $output .= $vowel;\n          $letterPosition++;\n\
    \        }\n        break;\n      }\n    }\n  }\n  return $output;\n}\n</code>\n\
    In Python:\n<code>\ndef encode(message):\n  output = ''\n  vowels = ['A','E','I','O','U','a','e','i','o','u']\n\
    \  output = ''\n  for char in message:\n    if char in vowels:\n      letterPosition\
    \ = 0\n      for vowel in vowels:\n        if char == vowel:\n          if letterPosition\
    \ == 1:\n            output += vowel\n          else:\n            output += vowel\n\
    \            letterPosition += 1\n          break\n  return output\n\nprint(encode('test'))\n\
    print(encode('This is a message'))\n</code>\n<|/ a |>\n<| c |>\nThis is definitely\
    \ the correct answer! :) I had not considered the possibility of swapping case.\
    \ Also, thank you so much for providing the Python example, that is exactly what\
    \ I was looking for.\n<|/ c |>\n<| a tags=string,java,arrays dscore=0 |>\nHere's\
    \ an example of how you might accomplish this in Java:\n<code>\npublic String\
    \ encode(String input) {\n    String output = \"\";\n    String vowels = \"AEIOUaeiou\"\
    ;\n    for (int i = 0; i < input.length(); i++) {\n        String c = input.substring(i,\
    \ i+1);\n        if (vowels.indexOf(c) == -1) {\n            output += c;\n  \
    \      } else {\n            output += vowels.indexOf(c) - 1;\n        }\n   \
    \ }\n    return output;\n}\n</code>\n<|/ a |>\n<| c |>\nThanks for your answer\
    \ - it certainly helps to understand how it works. However, I received an answer\
    \ before you that used the exact same logic (but in Java). I'm marking this as\
    \ the answer because I like this approach better because it seems more concise.\
    \ It also helped me understand how you used the String index method, which I also\
    \ find useful.\n<|/ c |>\n<| a |>\nHere's a solution using replaceAll.\n<code>\n\
    private String encode(String str) {\n    char[] vowels = { ' ', 'a', 'e', 'i',\
    \ 'o', 'u' };\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdl_sgpt8.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = [\n        'A','a','E','e','I','i','O','o','U','u'\n\
    \    ];\n    $code = [];\n    for($i=0;$i<strlen($message);$i++){\n        $code[ord($message[$i])]\
    \ .= $vowels[2];\n    }\n    for($i=0;$i<strlen($message);$i++){\n        $code[ord($message[$i])]\
    \ .= $vowels[(ord($message[$i])+1) % 5];\n    }\n    return implode('', $code);\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpidk638nu.php:31\n\
    Stack trace:\n#0 /tmp/tmpidk638nu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpidk638nu.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    return strtr($message, \n        array_combine(\n  \
    \          str_split($message,1),\n            array_combine(\n              \
    \  str_split(strtoupper($message),1),\n                array_combine(\n      \
    \              str_split(strtolower($message),1),\n                    str_split(strtoupper($message),1),\n\
    \                )\n            )\n        )\n    );\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nWhy isn't it the same as the accepted answer above?\n<|/ c |>\n\
    <| c |>\nI guess the answer is different because it's using strtr() instead of\
    \ preg_replace().\n<|/ c |>\n<| a dscore=0 |>\nOkay, thanks to everyone for the\
    \ help!\nI used the PHP function preg_replace:\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpts_grv5o.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $replace = array(\n        'A' => 'E', \n        'B'\
    \ => 'I', \n        'C' => 'O', \n        'D' => 'U', \n        'E' => 'A', \n\
    \        'F' => 'O', \n        'G' => 'U', \n        'H' => 'A', \n        'I'\
    \ => 'B', \n        'J' => 'C', \n        'K' => 'D', \n        'L' => 'E', \n\
    \        'M' => 'F', \n        'N' => 'G', \n        'O' => 'H', \n        'P'\
    \ => 'I', \n        'Q' => 'K', \n        'R' => 'L', \n        'S' => 'M', \n\
    \        'T' => 'N', \n        'U' => 'O', \n        'V' => 'P', \n        'W'\
    \ => 'Q', \n        'X' => 'R', \n        'Y' => 'S', \n        'Z' => 'T', \n\
    \    );\n    $message = $message;\n    $words = explode(\" \",$message);\n   \
    \ foreach($words as $key => $value){\n        $words[$key] = preg_replace('/[^A-Z]/',\
    \ '', $value);\n    }\n    $i = 0;\n    foreach($words as $key => $value){\n \
    \       if($value[0]==\"Z\"){\n            $words[$key] = \"\";\n        }\n \
    \       if($value[0]==\"Z\"){\n            $words[$key] = \"\";\n        }\n \
    \       foreach($replace as $replace => $original){\n            $words[$key]\
    \ = str_replace($replace,$original,$words[$key]);\n        }\n        if($i%2==0){\n\
    \            $words[$key] = strtoupper($words[$key]);\n        }\n        else{\n\
    \            $words[$key] = strtolower($words[$key]);\n        }\n        $i++;\n\
    \    }\n    $output = implode(\" \",$words);\n    return $output;\n}\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9nvwddgp.php:73\n\
    Stack trace:\n#0 /tmp/tmp9nvwddgp.php(80): test()\n#1 {main}\n  thrown in /tmp/tmp9nvwddgp.php\
    \ on line 73\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $newMessage = '';\n  foreach (str_split($message) as $letter)\
    \ {\n    $pos = 0;\n    foreach ($vowels as $vowel) {\n      $pos = strpos($message,\
    \ $vowel, $pos);\n    }\n    array_push($vowels, $letter);\n    $newMessage .=\
    \ $vowels[$pos - 2];\n  }\n  return $newMessage;\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpst7h1mkd.php\
    \ on line 16\n\nWarning: array_push() expects parameter 1 to be array, null given\
    \ in /tmp/tmpst7h1mkd.php on line 19\n\nWarning: Invalid argument supplied for\
    \ foreach() in /tmp/tmpst7h1mkd.php on line 16\n\nWarning: array_push() expects\
    \ parameter 1 to be array, null given in /tmp/tmpst7h1mkd.php on line 19\n\nWarning:\
    \ Invalid argument supplied for foreach() in /tmp/tmpst7h1mkd.php on line 16\n\
    \nWarning: array_push() expects parameter 1 to be array, null given in /tmp/tmpst7h1mkd.php\
    \ on line 19\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpst7h1mkd.php\
    \ on line 16\n\nWarning: array_push() expects parameter 1 to be array, null given\
    \ in /tmp/tmpst7h1mkd.php on line 19\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpst7h1mkd.php:30\nStack trace:\n#0 /tmp/tmpst7h1mkd.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpst7h1mkd.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n   $result = '';\n   for($i=0; $i<strlen($message); $i++)\
    \ {\n     $result .= ($message[$i] in $vowels ? $vowels[$message[$i]] \n     \
    \                              : \n                                   (isset($vowels[$message[$i-1]]))\
    \ ? \n                                   $vowels[$message[$i-1]] \n          \
    \                         : \n                                   $message[$i])\n\
    \             ;\n   }\n   return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp56y5gczf.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\
    \  $vowels = 'aeiou';\n  $messageLetters = str_split($message);\n  $codedMessage\
    \ = '';\n  for ($i = 0; $i < strlen($message); $i++) {\n    $codedMessage .= $alphabet[$messageLetters[$i]];\n\
    \  }\n  foreach ($vowels as $letter) {\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n      if ($messageLetters[$i] == $letter) {\n        $codedMessage\
    \ .= $alphabet[$i];\n        $i--;\n      }\n    }\n  }\n  return $codedMessage;\n\
    }\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Illegal string offset 'T' in /tmp/tmp8w_blpjd.php on line 18\n\
    \nWarning: Illegal string offset 'E' in /tmp/tmp8w_blpjd.php on line 18\n\nWarning:\
    \ Illegal string offset 'S' in /tmp/tmp8w_blpjd.php on line 18\n\nWarning: Illegal\
    \ string offset 'T' in /tmp/tmp8w_blpjd.php on line 18\n\nWarning: Invalid argument\
    \ supplied for foreach() in /tmp/tmp8w_blpjd.php on line 20\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp8w_blpjd.php:35\nStack trace:\n#0 /tmp/tmp8w_blpjd.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8w_blpjd.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $message = strtoupper($message);\n    $message = preg_replace('/[^a-z]/',\
    \ '', $message);\n    $message = str_replace('aeiuoAEIUO', $message, $message);\n\
    \    $message = str_replace(array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O'),\
    \ $message, $message);\n\n    $output = array();\n    $vowels = 'aeiuoAEIUO';\n\
    \    $letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n    $position = array();\n  \
    \  foreach (str_split($message) as $i => $letter) {\n        if (isset($letters[$letter]))\
    \ {\n            $position[$letters[$letter]][$i] = $i;\n        }\n    }\n\n\
    \    foreach ($position as $letter => $positions) {\n        $lastLetter = array_pop($positions);\n\
    \        $output[] = $lastLetter;\n        $output[] = $vowels[$lastLetter - $letter];\n\
    \    }\n\n    return implode('', $output);\n}\n</code>\n<|/ a tags=php,encryption,aes,javascript\
    \ |>\n<| c |>\nThanks! This is great! How can I convert the encrypted PHP output\
    \ to Javascript?\n<|/ c |>\n<| c |>\n: You can't convert it. You have to convert\
    \ it to a format that is suitable for decryption in Javascript. Like base64.\n\
    <|/ c |>\n<| c |>\nThanks for the help! Any suggestions on how to convert the\
    \ output to a base64 format?\n<|/ c |>\n<| c |>\n: Search for \"base64 encode\"\
    \ on this site or with Google.\n<|/ c |>\n<| c |>\nbase64_encode() will do nothing\
    \ if the string contains any character that has special meaning in base64 encoding;\
    \ it's only safe to use if the string has no characters that would be interpreted\
    \ by base64 encoding.\n<|/ c |>\n<| a tags=php,encryption,aes,javascript |>\n\
    The output from encryption functions in Javascript and PHP are different in length.\
    \ \nThe Javascript encryption function is expecting a string, while the PHP encryption\
    \ function outputs a hexadecimal string.\nThe Javascript encryption function can\
    \ be fixed by using the following function in PHP:\n<code>\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2tjj9sng.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $result = \"\";\n    foreach (str_split($message) as\
    \ $letter) {\n        if (ctype_alpha($letter)) {\n            $result .= $letter;\n\
    \        } else {\n            $result .= \n                ((ord($letter) - ord(\"\
    a\") + 2) % (ord(\"z\") - ord(\"a\") + 1)) + \n                ord(\"a\");\n \
    \       }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n   \
    \ return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprqxdg2sc.php:30\n\
    Stack trace:\n#0 /tmp/tmprqxdg2sc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprqxdg2sc.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'y');\n  $message\
    \ = str_split($message);\n  $message = array_map(function($a) { return strtolower($a);\
    \ }, $message);\n  $message = array_map(function($a) { return strtr($a, 'AEIOUY',\
    \ 'AEIOY'); }, $message);\n  $message = array_map(function($a) { return strtr($a,\
    \ $vowels, 'AEIOY'); }, $message);\n  $message = implode('', $message);\n  return\
    \ $message;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpck2lwf82.php:27\n\
    Stack trace:\n#0 /tmp/tmpck2lwf82.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpck2lwf82.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $encoded = '';\n  for ($i = 0; $i < strlen($message);\
    \ ++$i) {\n    $encoded[] = strtr($message[$i], \n                       array('a'=>'z',\
    \ \n                             'e'=>'y', \n                             'i'=>'y',\
    \ \n                             'o'=>'y', \n                             'u'=>'y',\
    \ \n                             'A'=>'Z', \n                             'E'=>'Y',\
    \ \n                             'I'=>'Y', \n                             'O'=>'Y',\
    \ \n                             'U'=>'Y'));\n  }\n  return implode('', $encoded);\n\
    }\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: [] operator not supported for strings in\
    \ /tmp/tmps0yc9ufu.php:15\nStack trace:\n#0 /tmp/tmps0yc9ufu.php(30): encode('TEST')\n\
    #1 /tmp/tmps0yc9ufu.php(34): candidate('TEST')\n#2 /tmp/tmps0yc9ufu.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmps0yc9ufu.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  return preg_replace_callback(\"/([a-z])/i\", function($matches)\
    \ {\n    // Get current letter we're working with\n    $currentLetter = $matches[1];\n\
    \    // If it matches our \"vowel\" then we return the letter\n    // that appears\
    \ two letters ahead.\n    // If it's not a vowel, then return the current letter.\n\
    \    if ($currentLetter == \"a\" || $currentLetter == \"e\" || $currentLetter\
    \ == \"i\" || $currentLetter == \"o\" || $currentLetter == \"u\") {\n      return\
    \ substr($matches[0], 2) . substr($matches[0], 2);\n    } else {\n      return\
    \ $currentLetter;\n    }\n  }, $message);\n}\n\nfunction candidate(...$args) {\n\
    \    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp22i93mn.php:32\n\
    Stack trace:\n#0 /tmp/tmpp22i93mn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpp22i93mn.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    \n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp122jo_32.php:21\n\
    Stack trace:\n#0 /tmp/tmp122jo_32.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp122jo_32.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $encoded = '';\n    \n    foreach(str_split($message)\
    \ as $letter) {\n        foreach(str_split($letter) as $char) {\n            $a\
    \ = ord($char);\n            if($a == 97) {\n                $char = $encoded[$a-2].$encoded[$a-1];\n\
    \            } else if($a == 65) {\n                $char = $char.strtoupper($encoded[$a-5]);\n\
    \            } else if($a == 90) {\n                $char = $char.strtoupper($encoded[$a-3]);\n\
    \            } else if($a == 123) {\n                $char = $char.strtoupper($encoded[$a-8]);\n\
    \            }\n        }\n        $encoded .= $char;\n    }\n    \n    return\
    \ $encoded;\n}\n</code>\nThe script has two arrays. One contains letters used\
    \ in the English alphabet, and one contains letters that appears 2 places ahead\
    \ of the vowels in English alphabet. str_split splits the message into individual\
    \ characters. \nThe foreach loops through all the individual characters and checks\
    \ if they are letters. If they are letters, foreach again loops through all the\
    \ characters in the letter. If they are not letters, they get replaced by the\
    \ letter that appears 2 places ahead of the vowel.\nIf you need any further explanation,\
    \ let me know.\n<|/ a tags=php |>\n<| c |>\nI'm sorry but I don't understand how\
    \ this works. I think my understanding of php was very bad. Can you explain what's\
    \ going on here?\n<|/ c |>\n<| c |>\nI've updated the answer to help explain how\
    \ the script works. Let me know if there are any questions.\n<|/ c |>\n<| c |>\n\
    I'm sorry but I don't understand how this works. I think my understanding of php\
    \ was very bad. Can you explain what's going on here? Sorry I'm very new to this.\n\
    <|/ c |>\n<| c |>\nI've updated the answer to help explain how the script works.\
    \ Let me know if there are any questions.\n<|/ c |>\n<| c |>\nI believe this answer\
    \ is correct. It is not the best answer but it is correct. Your problem is probably\
    \ that you are a beginner and don't understand how this code works. He provided\
    \ the best answer for you and explained it quite well.\n<|/ c |>\n<| a tags=php\
    \ |>\n<code>\n$message = \"This is a message\";\n$message = str_replace('a','\
    \ ',$message);\n$message = str_replace('e',' ',$message);\n$message = str_replace('i','\
    \ ',$message);\n$message = str_replace('\nfunction candidate(...$args) {\n   \
    \ return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdvgringw.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $english_letter_map = {\n    'a' => 'z', 'e' => 'i', 'i'\
    \ => 'e', 'o' => 'o', 'u' => 'o',\n    'A' => 'Z', 'E' => 'I', 'I' => 'E', 'O'\
    \ => 'O', 'U' => 'O',\n    'a' => 'z', 'e' => 'i', 'i' => 'e', 'o' => 'o', 'u'\
    \ => 'o',\n    'A' => 'Z', 'E' => 'I', 'I' => 'E', 'O' => 'O', 'U' => 'O',\n \
    \ };\n  $letters = [];\n  for ($i = 0, $length = mb_strlen($message, '8bit');\
    \ \n       $i < $length; $i++) {\n    $letter = mb_substr($message, $i, 1, '8bit');\n\
    \    $letters[] = $english_letter_map[$letter];\n  }\n  $result = implode('',\
    \ $letters);\n  for ($i = 0, $length = mb_strlen($result, '8bit'); \n       $i\
    \ < $length; $i++) {\n    $result = preg_replace('/(.)(?!$i)[a-z]/e', '$i$1',\
    \ $result);\n  }\n  return $result;\n}\n</code>\n<|/ a tags=php,encryption |>\n\
    <| c |>\nWhy `8bit` and not `utf-8`? Because `utf-8` would lose all characters\
    \ that don't exist in the ANSI codepage.\n<|/ c |>\n<| c |>\n: Because it avoids\
    \ problems with some characters that have a multibyte representation in UTF-8.\
    \ [Example](http://codepad.org/6yVh7zgL), which happens to have `\xC9` in it.\n\
    <|/ c |>\n<| c |>\n: No, not really. See [here](http://codepad.org/yhBfM1Hk).\
    \ Not that `iconv` doesn't support UTF-8 anyway. `mb_strtoupper(mb_convert_case($message,\
    \ $to, $from))`\n<|/ c |>\n<| c |>\n: Right, `mb_strtoupper(mb_convert_case($message,\
    \ 'UTF-8', 'UTF-8'))` fixes it. Not sure why I hadn't thought of that before.\
    \ Thanks!\n<|/ c |>\n<| c |>\n: Okay, you're right, that's how it should be. `mb_strtoupper(mb_convert_case($message,\
    \ 'UTF-8', 'UTF-8'))` works fine on Windows, but breaks on Linux, and probably\
    \ on any system that has a \"cp1251\" charset.\n<|/ c |>\n<| a |>\nThe best solution\
    \ to this problem is to store it in a database, either as an encrypted column\
    \ or as an md5 hash of the password.  \nYou don't want a user to enter \nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3eu5ozpf.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    return strtr($message, [\n        'a' => 'Z',\n    \
    \    'b' => 'Y',\n        'c' => 'X',\n        'd' => 'W',\n        'e' => 'V',\n\
    \        'f' => 'U',\n        'g' => 'T',\n        'h' => 'S',\n        'i' =>\
    \ 'R',\n        'j' => 'Q',\n        'k' => 'P',\n        'l' => 'O',\n      \
    \  'm' => 'N',\n        'n' => 'M',\n        'o' => 'L',\n        'p' => 'K',\n\
    \        'q' => 'J',\n        'r' => 'I',\n        's' => 'H',\n        't' =>\
    \ 'G',\n        'u' => 'F',\n        'v' => 'E',\n        'w' => 'D',\n      \
    \  'x' => 'C',\n        'y' => 'B',\n        'z' => 'A',\n    ]);\n}\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp90zh9imm.php:47\n\
    Stack trace:\n#0 /tmp/tmp90zh9imm.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp90zh9imm.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $length = strlen($message);\n  $message = $message;\n\n\
    \  $encoded = '';\n  for ($i = 0; $i < $length; $i++) {\n    $char = mb_substr($message,\
    \ $i, 1, 'UTF-8');\n    if ($char === 'a' || $char === 'e' || $char === 'i' ||\
    \ $char === 'o' || $char === 'u' || $char === 'A' || $char === 'E' || $char ===\
    \ 'I' || $char === 'O' || $char === 'U') {\n      $encoded[$i] = $char;\n    }\
    \ else {\n      $encoded[$i] = $char;\n      $encoded[$i+1] = $char;\n    }\n\
    \  }\n\n  return $encoded;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_substr() in\
    \ /tmp/tmpemrds45b.php:18\nStack trace:\n#0 /tmp/tmpemrds45b.php(31): encode('TEST')\n\
    #1 /tmp/tmpemrds45b.php(35): candidate('TEST')\n#2 /tmp/tmpemrds45b.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpemrds45b.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $code = '';\n  $vowels = 'aeiou';\n  for ($i = 0; $i <\
    \ strlen($message); $i++) {\n    $c = $message[$i];\n    if (preg_match('/^./',\
    \ $c)) {\n      $code .= $c;\n      continue;\n    }\n    $o = ord($c);\n    if\
    \ ($o >= 65 || $o <= 90 || strpos('aeiuo', $c) !== false) {\n      $code .= $c;\n\
    \      continue;\n    }\n    $o = ord($c) - 64;\n    if ($o >= 97) {\n      $code\
    \ .= $vowels[$o - 97];\n    } else {\n      $code .= $vowels[($o - 65) % 26];\n\
    \    }\n  }\n  return $code;\n}\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpur25h3v6.php:40\n\
    Stack trace:\n#0 /tmp/tmpur25h3v6.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpur25h3v6.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $encoded = '';\n  \n  for ($i = 0; $i < strlen($message);\
    \ $i++) {\n    $pos = strpos(\n      strtoupper(\n        mb_strtolower(\n   \
    \       mb_substr(\n            $message, \n            $i, \n            1\n\
    \          )\n        )\n      ),\n      mb_strtolower(\n        mb_substr(\n\
    \          $alphabet, \n          strpos(\n            mb_strtolower($alphabet),\
    \ \n            mb_strtolower(\n              mb_substr($message, $i, 1)\n   \
    \         )\n          ), \n          1\n        )\n      )\n    );\n\n    if\
    \ ($pos === false) {\n      // No match found\n    } else {\n      $encoded .=\
    \ mb_substr(\n        $message, \n        $i, \n        $pos\n      );\n\n   \
    \   if ($pos < 2) {\n        // 2 places ahead, so insert a letter\n        $encoded\
    \ .= $alphabet[$pos];\n      }\n    }\n  }\n\n  return $encoded;\n}\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_strtolower()\
    \ in /tmp/tmp13g8xwmx.php:18\nStack trace:\n#0 /tmp/tmp13g8xwmx.php(59): encode('TEST')\n\
    #1 /tmp/tmp13g8xwmx.php(63): candidate('TEST')\n#2 /tmp/tmp13g8xwmx.php(70): test()\n\
    #3 {main}\n  thrown in /tmp/tmp13g8xwmx.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $table = str_split('abcdefghijklmnopqrstuvwxyz');\n\
    \    $alphabet = str_split('ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n    $table = array_combine($alphabet,\
    \ $table);\n    $message = str_replace($alphabet, array_flip($alphabet), $message);\n\
    \    $message = strtr($message, array('ae' => 'd', 'oe' => 'o', 'ue' => 'u', 'AE'\
    \ => 'D', 'OE' => 'O', 'UE' => 'U'));\n    return str_replace(array_keys($table),\
    \ $table, $message);\n}\n</code>\n<|/ a tags=php,function dscore=1 |>\n<| c |>\n\
    Your solution is better, since it checks for uppercase and lowercase. My solution\
    \ does not do that.\n<|/ c |>\n<| c |>\nThis solution is better, since it checks\
    \ for uppercase and lowercase. My solution does not do that.\n<|/ c |>\n<| a dscore=1\
    \ |>\nI have an improvement for you:\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpx3cbfw_b.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $encoded = \"\";\n    for ($i = 0, $n = strlen($message);\
    \ $i < $n; $i++) {\n        $letter = ord($message[$i]);\n        $encoded = $encoded\
    \ + $letters[$letter];\n    }\n    return $encoded;\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp6an2es20.php on line\
    \ 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6an2es20.php:26\n\
    Stack trace:\n#0 /tmp/tmp6an2es20.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6an2es20.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $message = str_replace(array('a', 'e', 'i', 'o', 'u'),\
    \ array('AE', 'IE', 'OO', 'U', 'UU'), $message);\n  $message = preg_replace_callback('/([aeiou])([aeiou])/',\
    \ function($matches) {\n    return strtoupper($matches[1]) . $matches[2];\n  },\
    \ $message);\n  return strtoupper(preg_replace_callback('/([aeiou])([AEIOU])/',\
    \ function($matches) {\n    return strtoupper($matches[1]) . $matches[2];\n  },\
    \ $message));\n}\n</code>\n<|/ a |>\n<| c |>\nPlease explain the code. I've never\
    \ seen a callback like that before. Thanks\n<|/ c |>\n<| c |>\nI'm glad I could\
    \ help.  I added comments and a link to an explanation.\n<|/ c |>\n<| a tags=php,functional-programming\
    \ dscore=0 |>\nI think it would be the best to implement a method that converts\
    \ your input string to an output string. Maybe like this:\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpnd830_dw.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $messageLetters = str_split($message);\n    $encoded\
    \ = [];\n    for ($i = 0; $i < count($messageLetters); $i++) {\n        if ($messageLetters[$i]\
    \ == 'a') {\n            $encoded[] = 'z';\n        } else if ($messageLetters[$i]\
    \ == 'e') {\n            $encoded[] = 'z';\n        } else if ($messageLetters[$i]\
    \ == 'i') {\n            $encoded[] = 'z';\n        } else if ($messageLetters[$i]\
    \ == 'o') {\n            $encoded[] = 'z';\n        } else if ($messageLetters[$i]\
    \ == 'u') {\n            $encoded[] = 'z';\n        } else if ($messageLetters[$i]\
    \ == 'y') {\n            $encoded[] = 'y';\n        } else if ($messageLetters[$i]\
    \ >= 'A' && $messageLetters[$i] <= 'Z') {\n            $encoded[] = $messageLetters[$i];\n\
    \        } else if ($messageLetters[$i] >= 'a' && $messageLetters[$i] <= 'z')\
    \ {\n            $encoded[] = $messageLetters[$i];\n        } else if ($messageLetters[$i]\
    \ >= 'A' && $messageLetters[$i] <= 'Z') {\n            $encoded[] = $messageLetters[$i];\n\
    \        }\n    }\n    return implode('', $encoded);\n}\n</code>\n<|/ a tags=php,arrays,string,encryption\
    \ dscore=2 |>\n<| c |>\nThis looks like a good idea and it's exactly what I was\
    \ trying to do. I'll try this later when I get home. Thank you so much.\n<|/ c\
    \ |>\n<| c |>\nHey man! That is perfect. Thank you so much for taking your time\
    \ to write this. I really appreciate it. I understand it now, and that's what\
    \ my teacher is looking for. Thank you very much again!\n<|/ c |>\n<| c |>\nNo\
    \ problem, and if it helped, feel free to mark it as the answer\n<|/ c |>\n<|\
    \ a |>\nYou could use str_shuffle\n<code>\n$alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    $letters = [];\nfor ($i = 0; $i < strlen($string); $i++) {\n    $letters[] = $alphabet[str_shuffle($alphabet)];\n\
    }\necho implode('', $letters);\n</code>\n<|/ a tags=php,arrays,string,encryption\
    \ dscore=2 |>\n<| c |>\nOh, I didn't know that. Thanks so much! \nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppdoli40c.php on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = range('A','Z');\n    $vowels = range('a',\
    \ 'e', 'i', 'o', 'u');\n    $positions = array_count_values(str_split($message));\n\
    \    \n    $encodedMessage = '';\n    foreach ($alphabet as $letter) {\n     \
    \   $encodedMessage .= $letter;\n        $vowelsCount = $positions[$letter];\n\
    \        $encodedMessage .= $vowels[$vowelsCount - 2];\n    }\n    \n    return\
    \ $encodedMessage;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=string,php,algorithm\
    \ |>\n<code>\n<?php\nclass Encrypt_String\n{\n    private $alphabet;\n    private\
    \ $vowel;\n    private $encrypted;\n\n    public function __construct()\n    {\n\
    \        $this->alphabet = range('a', 'z');\n        $this->vowel = range('a',\
    \ 'z');\n        $this->encrypted = '';\n    }\n\n    public function encrypt($message){\n\
    \        foreach($this->alphabet as $key){\n            $this->encrypted .= $key;\n\
    \        }\n        foreach($this->vowel as $key){\n            $this->encrypted\
    \ .= $key;\n        }\n        foreach($message as $key){\n            $this->encrypted\
    \ .= $this->getPosition($key);\n        }\n        return $this->encrypted;\n\
    \    }\n\n    public function getPosition($string){\n        $alphabet = range('A',\
    \ 'Z');\n        $vowel = range('a', 'z');\n        $position = 0;\n        foreach($string\
    \ as $key){\n            $position++;\n            if(in_array($key, $alphabet))\
    \ {\n                $position += 2;\n            } elseif(in_array($key, $vowel))\
    \ {\n                $position += 1;\n            }\n        }\n        return\
    \ $position;\n    }\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n\nclass Encrypt\n{\n\n    private $alphabet;\n    private $vowel;\n   \
    \ private $encrypted;\n\n    public function __construct()\n    {\n        $this->alphabet\
    \ = range('a', 'z');\n        $this->vowel = range('a', 'z');\n        $this->encrypted\
    \ = '';\n    }\n\n    public function encrypt($string){\n        $alphabet = range('A',\
    \ 'Z');\n        $vowel = range('a', 'z');\n        foreach($this->alphabet as\
    \ $key){\n            $this->encrypted .= $key;\n        }\n        foreach($this->vowel\
    \ as $key){\n            $this->encrypted .= $key;\n        }\n        foreach($string\
    \ as $key){\n            $this->encrypted .= $this->getPosition($key);\n     \
    \   }\n        return $this->\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8gkkjxi_.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = 'AEIOUaeiou';\n    $output = '';\n    $message\
    \ = strtoupper($message);\n    for ($i = 0; $i < strlen($message); $i++) {\n \
    \       if (strpos($vowels, $message[$i]) !== FALSE) {\n            $output .=\
    \ substr($message, $i, 1) . substr($message, $i + 2, 1);\n        }\n    }\n \
    \   return $output;\n}\n</code>\n<|/ a tags=php,encryption,mcrypt |>\n<| c |>\n\
    The above example does not seem to work. My results were 'TGST', 'TKSS', 'THS'\
    \ when I should get 'TGST', 'TKSS', 'THSCG'.\n<|/ c |>\n<| c |>\nYou're right,\
    \ I fixed the code. I also added an explanation.\n<|/ c |>\n<| c |>\nthanks for\
    \ the update. I ran your code and still get the same output for the above input.\
    \ I checked your link to the Wikipedia article and your code is very similar to\
    \ mine. I am running PHP 7.3.8 under Windows 7\n<|/ c |>\n<| c |>\nI checked this\
    \ out on my local machine and got the correct results. I'm running PHP 7.3.9 on\
    \ a MacBook Pro running Mavericks.\n<|/ c |>\n<| a dscore=0 tags=php,encryption,mcrypt\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4as_v9v5.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // Use array_count_values() to count occurrences of\
    \ each character in a string. \n    $counts = array_count_values(str_split($message));\n\
    \n    // Use array_keys() to get all the character keys. \n    // This array holds\
    \ keys like: \n    // [a,b,c,d,e] => [1,2,2,3,3]\n    // Use array_sum() to sum\
    \ all the keys together, \n    // which is the number of occurrences of each character.\n\
    \    // For example: \n    // [a,b,c,d,e] => [1,2,2,3,3] \n    // => 1 + 2 + 2\
    \ + 3 + 3 = 8\n    $keys = array_keys($counts);\n    $total = array_sum($counts);\n\
    \    $encoded = str_repeat('s', $total);\n    foreach($keys as $key) {\n     \
    \   $position = $total - $counts[$key];\n        $encoded .= chr($key+$position);\n\
    \    }\n    return $encoded;\n}\n\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpse6helay.php on line\
    \ 29\n\nWarning: A non-numeric value encountered in /tmp/tmpse6helay.php on line\
    \ 29\n\nWarning: A non-numeric value encountered in /tmp/tmpse6helay.php on line\
    \ 29\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpse6helay.php:39\n\
    Stack trace:\n#0 /tmp/tmpse6helay.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpse6helay.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n\t$alphabet = array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z');\n\
    \t$vowels = 'AEIOUYaeiouy';\n\t$encodedMessage = str_replace(array(\"'\",'!',\"\
    ?\"),array('\"', \"'\",'\"'),$message); \n\t$encodedMessage = str_replace($alphabet,\
    \ array_flip($alphabet), $encodedMessage);\n\t$encodedMessage = str_replace($vowels,\
    \ array_flip($vowels), $encodedMessage);\n\treturn $encodedMessage;\n}\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_flip() expects parameter 1 to be array, string given in\
    \ /tmp/tmpp2wq7628.php on line 17\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpp2wq7628.php:25\nStack trace:\n#0 /tmp/tmpp2wq7628.php(32): test()\n\
    #1 {main}\n  thrown in /tmp/tmpp2wq7628.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $output = \"\";\n    $length = strlen($message);\n \
    \   $offset = 0;\n    $a = \"abcdefghijklmnopqrstuvwxyz\";\n    $b = \"bcdefghijklmnopqrstuvwxyz\"\
    ;\n    $c = \"cdefghijklmnopqrstuvwxyz\";\n    $d = \"defghijklmnopqrstuvwxyz\"\
    ;\n    $e = \"efghijklmnopqrstuvwxyz\";\n    $f = \"fghijklmnopqrstuvwxyz\";\n\
    \    $g = \"ghijklmnopqrstuvwxyz\";\n    $h = \"hijklmnopqrstuvwxyz\";\n    $i\
    \ = \"ijklmnopqrstuvwxyz\";\n    $j = \"jklmnopqrstuvwxyz\";\n    $k = \"klmnopqrstuvwxyz\"\
    ;\n    $l = \"lmnopqrstuvwxyz\";\n    $m = \"mnopqrstuvwxyz\";\n    $n = \"nopqrstuvwxyz\"\
    ;\n    $o = \"opqrstuvwxyz\";\n    $p = \"pqrstuvwxyz\";\n    $q = \"qrstuvwxyz\"\
    ;\n    $r = \"rstuvwxyz\";\n    $s = \"stuvwxyz\";\n    $t = \"tuvwxyz\";\n  \
    \  $u = \"uvwxyz\";\n    $v = \"vwxyz\";\n    $w = \"wxyz\";\n    $x = \"xyz\"\
    ;\n    $y = \"yz\";\n    $z = \" z\";\n\n    while($offset < $length)\n    {\n\
    \        $x = strtolower($message[$offset]);\n        $y = $a[strpos($a,$x)];\n\
    \        $z = $b[strpos($b,$x)];\n        $n = $c[strpos($c,$x)];\n        $m\
    \ = $d[strpos($d,$x)];\n        $o = $e[strpos($e,$x)];\n        $p = $f[strpos($f,$x)];\n\
    \        $q = $g[strpos($g,$x)];\n        $r = $h[strpos($h,$x)];\n        $s\
    \ = $i[strpos($i,$x)];\n        $t = $j[strpos($j,$x)];\n        $u = $k[strpos($k,$x)];\n\
    \        $v = $l[strpos($l,$x)];\n        $w = $m[strpos($m,$x)];\n        $x\
    \ = $n[strpos($n,$x)];\n        $y = $\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplh8wf2kl.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $result = $message;\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $result .= $message[$i] ^ ($message[$i - 2] + $message[$i -\
    \ 1] + $message[$i + 1] + $message[$i + 2]);\n    }\n    return $result;\n}\n\
    </code>\n<|/ a tags=function,php dscore=2 |>\n<| a dscore=1 |>\nHere's a one liner\
    \ function that I came up with which works for PHP versions < 5.3\n<code>\n$alphabet\
    \ = preg_replace_callback('/[\\x{0030}-\\x{0039}]/u', function($matches){return\
    \ strtoupper($matches[0]);}, $message);\n</code>\nHere's a working example (as\
    \ requested by OP)\n<code>\n$message = 'This is a message';\n$alphabet = preg_replace_callback('/[\\\
    x{0030}-\\x{0039}]/u', function($matches){return strtoupper($matches[0]);}, $message);\n\
    echo $alphabet;\n</code>\n<|/ a tags=function,php |>\n<| a tags=function,php |>\n\
    A simple one-liner with array_map, str_split, array_map and array_combine combine.\n\
    <code>\necho implode('', array_map('ucfirst', str_split('This is a message')));\n\
    </code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n$text = 'This is a message';\n$alphabet\
    \ = preg_replace_callback('/[\\x{0030}-\\x{0039}]/u', function($matches){return\
    \ strtoupper($matches[0]);}, $text);\necho $alphabet;\n</code>\n<|/ a tags=function,php\
    \ dscore=0 |>\n<| c |>\nWelcome to Stack Overflow. Code dumps without any explanation\
    \ are rarely helpful. Stack Overflow is about learning, not providing snippets\
    \ to blindly copy and paste. Please [edit] your question and explain how it answers\
    \ the specific question being asked. See [answer].\n<|/ c |>\n<| a tags=function,php\
    \ |>\n<code>\n$text = 'This is a message';\n$alphabet = preg_replace_callback('/[\\\
    x{0030}-\\x{0039}]/u', function($matches){return strtoupper($matches[0]);}, $text);\n\
    echo $alphabet;\n</code>\n<|/ a dscore=0 |>\n<| a tags=function,php dscore=0 |>\n\
    A one liner :\n<code>\necho strtoupper(preg_replace('/[\\x{00\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_rfrrfy3.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $result = \"\";\n  for ($i = 0; $i < strlen($message);\
    \ $i++) \n  {\n    $char = substr($message, $i, 1);\n    $ord = ord($char);\n\
    \    if ($ord >= 97 && $ord <= 122) {\n      $result .= $char;\n    }\n    else\
    \ {\n      $code = ($ord + 1) % 26;\n      $result .= chr($code + (($ord - 1)\
    \ % 26));\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl9g3v503.php:34\n\
    Stack trace:\n#0 /tmp/tmpl9g3v503.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpl9g3v503.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    return strtr(\n        str_replace('aeiuoAEIO', 'aeiuoAEIO',\
    \ strtolower($message))\n            , \n        array(\n            'a' => '',\
    \ \n            'e' => 'i', \n            'i' => '', \n            'o' => 'u',\
    \ \n            'A' => '', \n            'E' => 'i', \n            'I' => '',\
    \ \n            'O' => 'u', \n        )\n    );\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf94ktik8.php:34\n\
    Stack trace:\n#0 /tmp/tmpf94ktik8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf94ktik8.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    $letters\
    \ = str_split($message);\n    $result = array();\n    for ($i = 0; $i < count($letters);\
    \ $i++) {\n        $new = $letters[$i];\n        $newPosition = strpos($alphabet,\
    \ $new);\n        for ($x = 1; $x <= count($alphabet); $x++) {\n            $x\
    \ = $x + $newPosition;\n            if ($x < count($alphabet)) {\n           \
    \     $newPosition = strpos($alphabet, $alphabet[$x]);\n            }\n      \
    \  }\n        $result[] = $new;\n    }\n    return implode('', $result);\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nI'm a beginner in coding and I don't understand\
    \ anything in the code. Can you explain it to me? thanks\n<|/ c |>\n<| c |>\n\
    It's not perfect, but it works, and it's a great learning exercise for me. If\
    \ it doesn't make sense, please give me an explanation what it does, or what you'd\
    \ like it to be instead.\n<|/ c |>\n<| a dscore=0 |>\nA solution using regex (no\
    \ loops, no recursion, no recursion stacks, no extra space to store intermediate\
    \ results and no extra space to process each character):\n<code>\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpuw32_y1f.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $encoded_message = '';\n  $vowels = 'aeiou';\n  $mappings\
    \ = array();\n  foreach (str_split($message) as $char) {\n    $mappings[] = $mappings[]\
    \ = strtoupper($char);\n  }\n\n  foreach ($mappings as $key => $letter) {\n  \
    \  $count = count($mappings) - 1;\n    for ($i = $count; $i > 0; $i--) {\n   \
    \   if ($mappings[$i] == $letter) {\n        $mappings[$i] = $mappings[$i - 1];\n\
    \        unset($mappings[$i - 1]);\n      }\n    }\n  }\n\n  $encoded_letters\
    \ = array();\n  foreach ($mappings as $char) {\n    $encoded_letters[] = substr($char,\
    \ 0, 1);\n  }\n  $encoded_message = implode('', $encoded_letters);\n\n  foreach\
    \ (str_split($encoded_message) as $char) {\n    $encoded_message .= ($char ==\
    \ ' ') ? '' : ' ';\n  }\n  return $encoded_message;\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0wtt4ve5.php:47\n\
    Stack trace:\n#0 /tmp/tmp0wtt4ve5.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp0wtt4ve5.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = 'aeiou';\n    $letters = str_split($message);\
    \ \n    $encoded = \"\"; \n    foreach($letters as $key => $letter) {\n      \
    \  if($key == 0) {\n            $encoded .= $letter; \n        } else if($letter\
    \ != $letters[$key-1]) {\n            $encoded .= $letter;\n        } elseif(strpos($vowels,\
    \ $letters[$key-1])) {\n            $encoded .= $letters[$key-1]; \n        }\
    \ elseif(strpos($vowels, $letters[$key-2])) {\n            $encoded .= $letters[$key-2];\
    \ \n        } elseif(strpos($vowels, $letters[$key-3])) {\n            $encoded\
    \ .= $letters[$key-3]; \n        } elseif(strpos($vowels, $letters[$key-4])) {\n\
    \            $encoded .= $letters[$key-4]; \n        } else {\n            $encoded\
    \ .= $letter; \n        }\n    }\n    return $encoded; \n}\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vukjh_s.php:40\n\
    Stack trace:\n#0 /tmp/tmp7vukjh_s.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7vukjh_s.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // Your code here\n}\n\n$message = \"This is a message\"\
    ;\n\necho encode($message);\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa6edhjt2.php:24\n\
    Stack trace:\n#0 /tmp/tmpa6edhjt2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa6edhjt2.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $newString = $message;\n    $newString = $newString\n\
    \            strtr($newString, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'tHKS KS C MGSSCGG');\n\
    \    $newString = $newString\n            strtr($newString, 'aeiouAEIOU', 'AEIOUaeiou');\n\
    \    $newString = $newString\n            strtr($newString, 'aeiouAEIOU', 'aeiou');\n\
    \    return $newString;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your\
    \ reply. The problem with this solution is that it only returns the first letter.\
    \ For example, the function will return \"tHKS KS C MGSSCGG\", but I need \"tHKS\
    \ KS C MGSSCGG GG\" as there are two G letters.\n<|/ c |>\n<| c |>\nCan you provide\
    \ an example input and output pair? The description you give is ambiguous as to\
    \ the requirements. Is \"tHKS KS C MGSSCGG GG\" correct or should it be \"tHKS\
    \ KS C MGSSCGG GH\"? If \"tHKS KS C MGSSCGG GH\" is the correct result, then why\
    \ did you say \"tHKS KS C MGSSCGG GG\" in the description?\n<|/ c |>\n<| a tags=php,encoding,regex\
    \ dscore=0 |>\nUsing preg_replace_callback function and callback function of preg_replace\n\
    <code>\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4szexqmo.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = array('a','b','c','d','e','f','g','h','i','j','k','l','m',\n\
    \                        'n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \n    $message = str_replace($alphabet, \n        array_map(\n            function($letter)\
    \ use ($alphabet) {\n                return $alphabet[array_search($letter, $alphabet)+1];\n\
    \            },\n            str_split($message)\n        ), \n        $message\n\
    \    );\n\n    $vowels = array('a','e','i','o','u');\n    $message = preg_replace('/([a-z])([aeiou])/',\
    \ '$1$2 $2', $message);\n\n    $message = str_replace(\n        $vowels,\n   \
    \     array_map(\n            function($vowel) use ($alphabet) {\n           \
    \     return $alphabet[array_search($vowel, $alphabet)-1];\n            },\n \
    \           str_split($message)\n        ),\n        $message\n    );\n\n    return\
    \ $message;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqmix48e.php:48\n\
    Stack trace:\n#0 /tmp/tmpeqmix48e.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpeqmix48e.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $code = array();\n    foreach (str_split($message) as\
    \ $c) {\n        $code[] = str_replace(range('a', 'z'), range('A', 'Z'), $c);\n\
    \    }\n    return join('', array_map('strtoupper', $code));\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkoii3gxa.php:25\n\
    Stack trace:\n#0 /tmp/tmpkoii3gxa.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkoii3gxa.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    $vowels\
    \ = 'aeiou';\n    return strtr($message, \n        array_combine(str_split($alphabet,\
    \ 1), \n            str_split($alphabet, 2)));\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nThank you for this answer.\n<|/ c |>\n<| a tags=encryption,php |>\nThis\
    \ is not the right site for this question. I suggest you ask the question on crypto.stackexchange.com\n\
    However, your problem with using str_replace is because you were not using the\
    \ variable you assigned it to. You used a literal string: 'aeiouaeiouaeiou' which\
    \ meant you were replacing all 'aeiou' occurrences with the same character. Since\
    \ all your characters are the same, it did nothing.\n<code>\n$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n$vowels = \"aeiou\";\n$result = str_replace($vowels, $vowels.$vowels, $message);\n\
    </code>\nYou don't need the additional character you were creating using str_split,\
    \ you can just use the variable you assigned it to.\n<|/ a dscore=0 |>\n<| c |>\n\
    This will not work with the test data provided in the question, as it will produce\
    \ `aEHST` instead of `TGST`.\n<|/ c |>\n<| a dscore=0 tags=encryption,php |>\n\
    Here's my simple solution:\n<code>\n<?php\nfunction candidate(...$args) {\n  \
    \  return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp92us3dxt.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $encodedMessage = '';\n    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u', 'y', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', '\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcz0b4541.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // Write your code here.\n}\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjeac6zdi.php:20\n\
    Stack trace:\n#0 /tmp/tmpjeac6zdi.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjeac6zdi.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $message = strtoupper($message); \n    $vowels = \"\
    AEIOU\"; \n    $code = \"\"; \n    for ($i = 0; $i < strlen($message); $i++) {\
    \ \n        $code = substr($message, $i, 1); \n        for ($a = 0; $a < strlen($vowels);\
    \ $a++) { \n            if ($code == substr($vowels, $a, 1)) { \n            \
    \    $code .= $vowels[$a]; \n                for ($b = 1; $b < $a; $b++) { \n\
    \                    $code .= substr($vowels, $a, $b); \n                } \n\
    \                for ($b = 1; $b < strlen($vowels); $b++) { \n               \
    \     $code .= substr($vowels, $a, $b); \n                } \n               \
    \ break; \n            } \n        } \n        $code .= substr($vowels, $a); \n\
    \    } \n    return $code; \n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ovh1uv8.php:40\n\
    Stack trace:\n#0 /tmp/tmp0ovh1uv8.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp0ovh1uv8.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $newmessage = '';\n    for($i = 0; $i < strlen($message);\
    \ $i++) {\n        $newmessage .= $message[$i];\n    }\n    for($i = 0; $i < strlen($newmessage);\
    \ $i++) {\n        $newmessage[$i] = $newmessage[$i] ^ ' ';\n    }\n    for($i\
    \ = 0; $i < strlen($newmessage); $i++) {\n        $newmessage[$i] = chr(ord($newmessage[$i])\
    \ + 2 % 26);\n    }\n    for($i = 0; $i < strlen($newmessage); $i++) {\n     \
    \   $newmessage .= $newmessage[$i];\n    }\n    return $newmessage;\n}\n\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried\
    \ to allocate 130023432 bytes) in /tmp/tmp9j7ouw8p.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    return preg_replace_callback(\"/[a-z]/i\", function($letter)\
    \ {\n        if ($letter[0] === \"a\") {\n            return \"a\";\n        }\n\
    \n        $index = array_search($letter[0].\"a\", $alphabet);\n        if ($index\
    \ === false) {\n            $index = (count($alphabet) + 1);\n            $alphabet[]\
    \ = $letter[0].\"a\";\n        }\n\n        return $alphabet[$index];\n    },\
    \ $message);\n}\n</code>\nA more flexible approach:\n<code>\n<?php\n\n$alphabet\
    \ = array(\n    \"a\" => \"a\",\n    \"b\" => \"b\",\n    \"c\" => \"c\",\n  \
    \  \"d\" => \"d\",\n    \"e\" => \"e\",\n    \"f\" => \"f\",\n    \"g\" => \"\
    g\",\n    \"h\" => \"h\",\n    \"i\" => \"i\",\n    \"j\" => \"j\",\n    \"k\"\
    \ => \"k\",\n    \"l\" => \"l\",\n    \"m\" => \"m\",\n    \"n\" => \"n\",\n \
    \   \"o\" => \"o\",\n    \"p\" => \"p\",\n    \"q\" => \"q\",\n    \"r\" => \"\
    r\",\n    \"s\" => \"s\",\n    \"t\" => \"t\",\n    \"u\" => \"u\",\n    \"v\"\
    \ => \"v\",\n    \"w\" => \"w\",\n    \"x\" => \"x\",\n    \"y\" => \"y\",\n \
    \   \"z\" => \"z\",\n);\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzrzgirov.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  return strtr($message, 'AEIOUaeiouAEIOU', 'TWOFTTHWST');\n\
    }\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2djr8qi.php:20\n\
    Stack trace:\n#0 /tmp/tmpy2djr8qi.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpy2djr8qi.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = 'aeiouAEIOU';\n    $letters = str_split($message);\n\
    \    $result = '';\n\n    foreach ($letters as $key => $letter) {\n        $pos\
    \ = strpos($vowels, $letter);\n        if ($pos !== false && $key > 0) {\n   \
    \         $result .= $letters[$key - 1] . $letters[$key];\n        } else if ($pos\
    \ !== false) {\n            $result .= $letters[$key - 1] . $letter;\n       \
    \ } else {\n            $result .= $letter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbgn541v.php:35\n\
    Stack trace:\n#0 /tmp/tmpvbgn541v.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvbgn541v.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $length = strlen($message);\n    $encoded = '';\n  \
    \  for($i = 0; $i < $length; $i++) {\n        $letter = substr($message, $i, 1);\n\
    \        if(isUpper($letter)) {\n            $encoded .= strtoupper($letter);\n\
    \        } elseif(isLower($letter)) {\n            $encoded .= strtolower($letter);\n\
    \        } else {\n            $encoded .= $letter;\n        }\n    }\n    for($i\
    \ = 0; $i < $length; $i++) {\n        $letter = substr($message, $i, 1);\n   \
    \     if($i == 0) {\n            $encoded .= strtoupper($letter);\n        } elseif(isUpper($letter))\
    \ {\n            $encoded .= strtoupper($letter);\n        } elseif(isLower($letter))\
    \ {\n            $encoded .= strtolower($letter);\n        } else {\n        \
    \    $encoded .= $letter;\n        }\n    }\n    return $encoded;\n}\n\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isUpper() in\
    \ /tmp/tmpyw4f2myc.php:17\nStack trace:\n#0 /tmp/tmpyw4f2myc.php(41): encode('TEST')\n\
    #1 /tmp/tmpyw4f2myc.php(45): candidate('TEST')\n#2 /tmp/tmpyw4f2myc.php(52): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyw4f2myc.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = array('a','e','i','o','u');\n    $messageArr\
    \ = str_split($message);\n    foreach($messageArr as $key => $value) {\n     \
    \   if(in_array($value,$vowels)) {\n            $messageArr[$key] = $value.$messageArr[$key+1];\n\
    \        }\n    }\n    return implode('', $messageArr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp68abu2qy.php:28\n\
    Stack trace:\n#0 /tmp/tmp68abu2qy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp68abu2qy.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $message = strtolower($message);\n    $vowels = array('a','e','i','o','u');\n\
    \    $message = str_replace(array_values($vowels), array('A','E','I','O','U'),\
    \ $message);\n    $message = str_replace(array_keys($vowels), array_values($vowels),\
    \ $message);\n    return $message;\n}\n</code>\n<|/ a tags=string,lowercase,php\
    \ |>\n<| a tags=string,lowercase,php dscore=2 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbbwazfo_.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $code = '';\n    \n    // Iterate over the string, swapping\
    \ case where necessary.\n    for ($i = 0; $i < strlen($message); $i++) {\n   \
    \     $code .= ($message[$i] >= 'a' && $message[$i] <= 'z') ? \n            chr((ord($message[$i])\
    \ - ord('a')) + 26) \n            : $message[$i];\n    }\n    \n    // Replace\
    \ all vowels with the correct character.\n    $code = preg_replace(\"/[AEIOUaeiou]/\"\
    , \"$3\", $code);\n    \n    return $code;\n}\nfunction candidate(...$args) {\n\
    \    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1pvc8hxt.php:32\n\
    Stack trace:\n#0 /tmp/tmp1pvc8hxt.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1pvc8hxt.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $newMessage = \"\";\n    $messageLength = strlen($message);\n\
    \    for ($i = 0; $i < $messageLength; $i++) {\n        $char = substr($message,\
    \ $i, 1);\n        if (in_array($char, $vowels)) {\n            $nextChar = substr($message,\
    \ $i + 1, 1);\n            $newMessage .= $nextChar . $vowels[$char];\n      \
    \      $i = $messageLength;\n        } else {\n            $newMessage .= $char;\n\
    \        }\n    }\n    return $newMessage;\n}\n\n$test1 = 'TEST';\n$test2 = 'TASSSSS';\n\
    $test3 = 'SSTSST';\n\necho \"test 1 \" . encode($test1) . \"\\n\";\necho \"test\
    \ 2 \" . encode($test2) . \"\\n\";\necho \"test 3 \" . encode($test3) . \"\\n\"\
    ;\n</code>\n<|/ a dscore=0 tags=php,function,encryption |>\n<| a |>\nUse base64_encode()\
    \ and base64_decode() functions in PHP.\nbase64_encode() will encode the string\
    \ into base64 encoded string. \nbase64_decode() will decode the base64 encoded\
    \ string.\n<|/ a dscore=0 tags=php,function,encryption |>\n<| a dscore=0 |>\n\
    A simple function like that will do the job\n<code>\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjwsic75k.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    \n    // Store the encoded message into a string called\
    \ $encodedMessage\n    $encodedMessage = '';\n    \n    // For every letter in\
    \ the message\n    for ($i = 0; $i < strlen($message); $i++) {\n        $letter\
    \ = substr($message, $i, 1);\n        \n        // If the letter has a lower case\
    \ letter, ignore it\n        if (strlen($letter) > 0 && islower($letter)) {\n\
    \            $encodedMessage .= $letter;\n        }\n        // Otherwise, check\
    \ to see if the letter has a vowel\n        // If so, use that vowel\n       \
    \ else if (strlen($letter) > 0 && preg_match('/[aeiou]/i', $letter)) {\n     \
    \       $encodedMessage .= $letter;\n        }\n        // Otherwise, add the\
    \ letter itself to the encoded message\n        else {\n            $encodedMessage\
    \ .= strtoupper($letter);\n        }\n    }\n    \n    // Return the encoded message\n\
    \    return $encodedMessage;\n}\n</code>\nThe PHP code above uses islower() and\
    \ preg_match() to check if the current letter is lower case (the first letter)\
    \ and if so, ignore it (because we're ignoring vowels).  But that still leaves\
    \ us with checking if the letter is a vowel.\nThe PHP code above uses strlen()\
    \ to check the length of the current letter, but that leaves us with using preg_match()\
    \ to check if the current letter is a vowel (if so, ignore it).\nThe PHP code\
    \ above uses strtoupper() to convert the letter to a capital letter, regardless\
    \ of whether it's lower or uppercase.\nThe PHP code above uses substr() to check\
    \ every letter in the message, but that leaves us with using preg_match() to check\
    \ for vowels (if so, ignore it).\nThe PHP code above uses $encodedMessage .= which\
    \ concatenates the current letter to the $encodedMessage string.\nThe PHP code\
    \ above uses $encodedMessage .= strtoupper() to convert the letter to a capital\
    \ letter, but that leaves us with using preg_match() to check for vowels.\n\n\
    The above is all based on the assumption that we're dealing with English messages.\
    \  But we can also do better than that.  For example, if we were dealing with\
    \ Russian messages, we could simply use preg_replace() to turn the message into\
    \ its cyrillic equivalent (which, by definition, is Cyrillic text), and then run\
    \ it through our encode() function.\nHere's a revised encode() function that uses\
    \ preg_replace() to convert a Russian message into its cyrillic equivalent:\n\
    <code>\n<?php\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp78bqnws5.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  // Split the message into its letters.\n  $letters = preg_split('//',\
    \ $message);\n  // Initialize a result string.\n  $result = '';\n  // Loop over\
    \ the letters.\n  foreach ($letters as $letter) {\n    // Split the letter into\
    \ its vowels.\n    $vowels = preg_split('//', $letter);\n    // Initialize the\
    \ number of vowels before the first letter.\n    $vowelsBeforeFirstLetter = 1;\n\
    \    // Loop over the vowels.\n    foreach ($vowels as $vowel) {\n      // If\
    \ the vowel at the current position is not the same as\n      // the last vowel\
    \ on the previous position, then it is\n      // not a consonant.\n      if ($vowel\
    \ != $vowels[$vowelsBeforeFirstLetter - 1]) {\n        // Add the vowel at the\
    \ current position to\n        // the result string.\n        $result .= $vowel;\n\
    \        // Add one to the number of vowels before the current\n        // letter.\n\
    \        $vowelsBeforeFirstLetter++;\n      } else {\n        // Otherwise it\
    \ must be a consonant, so add it to the result\n        // string.\n        $result\
    \ .= $vowels[$vowelsBeforeFirstLetter];\n        // If the current letter is different\
    \ than the\n        // last letter, then it must be a vowel, so add 1 to\n   \
    \     // the number of vowels before the current letter.\n        $vowelsBeforeFirstLetter++;\n\
    \      }\n    }\n  }\n  // Return the result string.\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1dk4p8cv.php:54\n\
    Stack trace:\n#0 /tmp/tmp1dk4p8cv.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp1dk4p8cv.php\
    \ on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++){\n        $encoded.=isLower($message[$i])?\n            $message[$i] :\n\
    \            isUpper($message[$i])?\n                $message[$i] :\n        \
    \        $message[$i].$message[$i+1];\n        $encoded = strrev($encoded);\n\
    \    }\n    return $encoded;\n}\n\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLower() in\
    \ /tmp/tmpuwcu3tbv.php:15\nStack trace:\n#0 /tmp/tmpuwcu3tbv.php(26): encode('TEST')\n\
    #1 /tmp/tmpuwcu3tbv.php(30): candidate('TEST')\n#2 /tmp/tmpuwcu3tbv.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmpuwcu3tbv.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $message = str_replace(\n      array(\"a\", \"e\", \"\
    i\", \"o\", \"u\", \"y\"), \n      array(\"\", \"\", \"\", \"\", \"\", \"\"),\
    \ \n      $message);\n  $message = strtolower($message);\n  $vowels = \"aeiou\"\
    ;\n  \n  for ($i = 0; $i < strlen($message); $i++) {\n    $letter = substr($message,\
    \ $i, 1);\n    $position = strpos($vowels, $letter);\n    if ($position !== false)\
    \ {\n      echo substr($message, $i, 1) . substr($message, $i, 2);\n    } else\
    \ {\n      echo $letter;\n    }\n  }\n}\n</code>\nDemo\n<|/ a tags=php,algorithm,python,encoding\
    \ |>\n<| c |>\nThe thing is, my code works in Python but not in PHP. I am getting\
    \ empty outputs. Not getting any errors, it just echo's nothing.\n<|/ c |>\n<|\
    \ c |>\nWell, I cannot tell you why your php version doesn't work, because I don't\
    \ know php well. Your python version works, right? Please show the relevant portion\
    \ of your python code in your question so that I can see what you're doing wrong.\n\
    <|/ c |>\n<| c |>\nActually I dont know why my original python code is working.\
    \ Sorry, but i dont even know python well. Anyway thanks.\n<|/ c |>\n<| c |>\n\
    No problem. I will try and find you a better answer. I am very interested in seeing\
    \ how it works in python. :)\n<|/ c |>\n<| c |>\nSee updated answer. I think you\
    \ can see why your php code is not working now. Basically, your php code was only\
    \ looking at one letter at a time, and swapping the case. Once you started looking\
    \ at multiple letters, you had to go through the whole string one letter at a\
    \ time, swapping case as needed. I'm sure you can see how this works in Python,\
    \ but your php code was not.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjjkr2hgq.php on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $swaps = array_flip(array('a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\
    \ 'w', 'x', 'y', 'z'));\n    $vowels = 'aeiouyAEIOUY';\n    $letters = str_split($message);\n\
    \n    $encoded = '';\n    foreach ($letters as $i => $letter) {\n        // If\
    \ letter doesn't match any of the above vowels, \n        // just add it to the\
    \ encoded string.\n        if (! in_array($letter, $vowels)) {\n            $encoded\
    \ .= $letter;\n            continue;\n        }\n\n        // We need to find\
    \ the position of the next vowel \n        // after $letter in the english alphabet.\
    \ \n        $nextVowel = strpos(strtolower($letter), $vowels, $i + 1);\n     \
    \   if ($nextVowel === false) {\n            $nextVowel = strlen($letter);\n \
    \       }\n\n        // Now that we have got the next vowel position from the\
    \ \n        // english alphabet, we can swap the case of the letter \n       \
    \ // at $letter with the letter at that position in the \n        // english alphabet\n\
    \        $letter = strtoupper($letter);\n        $letter = str_replace(\n    \
    \        array_flip($swaps[$letter]), \n            $swaps[$letter], \n      \
    \      substr($letter, $nextVowel)\n        );\n\n        $encoded .= $letter;\n\
    \    }\n\n    return $encoded;\n}\n\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: in_array() expects parameter 2 to be array, string given in\
    \ /tmp/tmp9jwq3soq.php on line 21\n\nWarning: in_array() expects parameter 2 to\
    \ be array, string given in /tmp/tmp9jwq3soq.php on line 21\n\nWarning: in_array()\
    \ expects parameter 2 to be array, string given in /tmp/tmp9jwq3soq.php on line\
    \ 21\n\nWarning: in_array() expects parameter 2 to be array, string given in /tmp/tmp9jwq3soq.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jwq3soq.php:55\n\
    Stack trace:\n#0 /tmp/tmp9jwq3soq.php(62): test()\n#1 {main}\n  thrown in /tmp/tmp9jwq3soq.php\
    \ on line 55\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  // your implementation\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3chfnsa_.php:21\n\
    Stack trace:\n#0 /tmp/tmp3chfnsa_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3chfnsa_.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"\
    y\");\n    $letters = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"\
    x\", \"y\", \"z\");\n    $words = explode(\" \", $message);\n    $result = \"\"\
    ;\n    foreach ($words as $key => $word) {\n        $vowel_letters = \"\";\n \
    \       $words = explode(\" \", $word);\n        foreach ($words as $key => $word)\
    \ {\n            $index = strpos($vowels, $word);\n            if ($index ===\
    \ false) {\n                $vowel_letters.= $word;\n            } else {\n  \
    \              $letter_index = strpos($letters, $word);\n                if ($letter_index\
    \ === false) {\n                    $vowel_letters.= $word;\n                }\
    \ else {\n                    $vowel_letters.= substr($word, 0 + ($index - 1),\
    \ 1);\n                    $vowel_letters.= substr($word, 0 + ($letter_index -\
    \ 1), 1);\n                }\n            }\n        }\n        $result.= $vowel_letters;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: strpos() expects parameter 1 to be string, array given in /tmp/tmpvuwvt09z.php\
    \ on line 21\n\nWarning: strpos() expects parameter 1 to be string, array given\
    \ in /tmp/tmpvuwvt09z.php on line 25\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpvuwvt09z.php:44\nStack trace:\n#0 /tmp/tmpvuwvt09z.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvuwvt09z.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  // Assume only letters and spaces. \n  $message = preg_replace('/[^a-z]/',\
    \ '', $message);\n  $vowels = array('a','e','i','o','u');\n  $vowels_found = array();\n\
    \  foreach($vowels as $vowel){\n    $vowels_found[$vowel] = 0;\n  }\n  foreach($message\
    \ as $letter){\n    $letter = strtolower($letter);\n    foreach($vowels as $vowel){\n\
    \      if ($letter == $vowel) {\n        $vowels_found[$vowel]++;\n        break;\n\
    \      }\n    }\n  }\n  // Now, find the letter that appears 2 places ahead of\
    \ the vowel \n  // and replace it.\n  $letter = FALSE;\n  foreach($vowels_found\
    \ as $vowel_count => $vowel) {\n    $letter_count = strpos($message, strtolower($vowel));\n\
    \    if ($letter_count + 2 == $vowel_count) {\n      $letter = strtolower($vowel);\n\
    \      break;\n    }\n  }\n  return $letter;\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpp6xwo42t.php\
    \ on line 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp6xwo42t.php:47\n\
    Stack trace:\n#0 /tmp/tmpp6xwo42t.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpp6xwo42t.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $messageList = str_split($message);\n    foreach ($messageList\
    \ as &$msg) {\n        $msgLength = strlen($msg);\n        for ($i = 0; $i < $msgLength;\
    \ $i++) {\n            $letter = substr($msg, $i, 1);\n            $i = $i + 2;\n\
    \            $letter = strtolower($letter);\n            if ($letter == 'a') $letter\
    \ = 't';\n            if ($letter == 'e') $letter = 'h';\n            if ($letter\
    \ == 'i') $letter = 'k';\n            if ($letter == 'o') $letter = 'g';\n   \
    \         if ($letter == 'u') $letter = 's';\n            if ($letter == 'A')\
    \ $letter = 'T';\n            if ($letter == 'E') $letter = 'H';\n           \
    \ if ($letter == 'I') $letter = 'K';\n            if ($letter == 'O') $letter\
    \ = 'G';\n            if ($letter == 'U') $letter = 'S';\n            $msg = substr($msg,\
    \ 0, $i).$letter.substr($msg, $i);\n        }\n    }\n    return implode('', $messageList);\n\
    }\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpidi_3p5g.php:40\n\
    Stack trace:\n#0 /tmp/tmpidi_3p5g.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpidi_3p5g.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // Only letters \n    if(ctype_alpha($message)) {\n\
    \        $message = preg_replace('/\\W/', ' ', $message);\n        $vowels = 'aeiouy';\n\
    \        // Replace vowels with letter 2 places ahead \n        // of vowel \n\
    \        foreach(str_split($message) as $letter) {\n            $position = strpos($vowels,\
    \ $letter);\n            if($position == FALSE) {\n                throw new Exception('The\
    \ message contains one or more vowels that do not follow the rules: ' . $letter);\n\
    \            }\n            $pos = $position + 2;\n            if($pos > strlen($vowels))\
    \ {\n                $pos = 0;\n            }\n            $letter = chr($pos);\n\
    \            $message = str_replace($letter, $letter, $message);\n        }\n\
    \        $message = preg_replace('/\\s+/', ' ', $message);\n        return $message;\n\
    \    }\n    throw new Exception('The message contains one or more non-letters');\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: The message contains one or more vowels\
    \ that do not follow the rules: T in /tmp/tmp8cminav4.php:22\nStack trace:\n#0\
    \ /tmp/tmp8cminav4.php(38): encode('TEST')\n#1 /tmp/tmp8cminav4.php(42): candidate('TEST')\n\
    #2 /tmp/tmp8cminav4.php(49): test()\n#3 {main}\n  thrown in /tmp/tmp8cminav4.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $message = str_replace(\n        array('a', 'e', 'o',\
    \ 'u'),\n        array('e', 'i', 'o', 'u'),\n        $message\n    );\n\n    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $letters = array('b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z');\n    $result = \"\";\n    $i = 0;\n\n    foreach ($message as $character)\
    \ {\n        if ($i == 0) {\n            $result .= $character;\n        } elseif\
    \ (in_array($character, $vowels)) {\n            $result .= $letters[array_search($character,\
    \ $vowels)];\n        } elseif (array_search($character, $vowels) != array_search($message[$i],\
    \ $vowels)) {\n            $result .= $letters[array_search($message[$i], $vowels)];\n\
    \        } else {\n            $result .= $character;\n        }\n\n        $i++;\n\
    \    }\n\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpda5lp233.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpda5lp233.php:46\n\
    Stack trace:\n#0 /tmp/tmpda5lp233.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpda5lp233.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // Write your solution here\n    // Your code here\n\
    }\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ir6ap0x.php:21\n\
    Stack trace:\n#0 /tmp/tmp3ir6ap0x.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3ir6ap0x.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  return preg_replace_callback('/./u', function($letter)\
    \ {\n    // Get letter's position in the alphabet\n    $pos = ord($letter[0])\
    \ - ord('a') + 1;\n    // Get letter's position in the english alphabet (2 letters\
    \ ahead)\n    $pos2 = ord($letter[1]) - ord('a') + 1;\n    // Get letter's position\
    \ in the english alphabet (3 letters ahead)\n    $pos3 = ord($letter[2]) - ord('a')\
    \ + 1;\n    // Return letter that has 2 places ahead\n    // Note: if $pos is\
    \ negative, return the same letter\n    return chr($pos + $pos2) if $pos < 0;\n\
    \    // Return letter that has 3 places ahead\n    // Note: if $pos is negative,\
    \ return the same letter\n    return chr($pos + $pos3) if $pos < 0;\n    // Return\
    \ letter that has 1 place ahead\n    // Note: if $pos is negative, return the\
    \ same letter\n    return chr($pos + 1) if $pos < 0;\n  }, $message);\n}\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptwi6r0rg.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $message = ''.$message;\n  $vowels = 'aeiou';\n  $consonants\
    \ = 'bcdfghjklmnpqrstvwxyz';\n  // Get the two letters ahead of the vowel. \n\
    \  foreach($vowels as $vowel) {\n    $before = substr($message,$vowel-1,1);\n\
    \    $after = substr($message,$vowel,1);\n    $beforePos = strpos($consonants,$before);\n\
    \    $afterPos = strpos($consonants,$after);\n    if($beforePos && $afterPos)\
    \ {\n      // Swap vowels. \n      $message = $message.$consonants[$beforePos].$consonants[$afterPos];\n\
    \    }\n  }\n  return $message;\n}\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpad_fvfeh.php\
    \ on line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpad_fvfeh.php:34\n\
    Stack trace:\n#0 /tmp/tmpad_fvfeh.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpad_fvfeh.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $letters = array_reverse(str_split(strtolower($message)));\n\
    \  $vowels = 'aeiou';\n  foreach($letters as $key => $letter) {\n    if($key ==\
    \ 0)\n      $result[] = $letter;\n    else\n      $result[] = ucfirst(strtoupper($letter));\n\
    \    foreach(str_split($vowels) as $vowel)\n      if($letter == $vowel)\n    \
    \    $result[] = strtoupper($vowel) . strtoupper($letters[$key+1]);\n  }\n  return\
    \ implode('', $result);\n}\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvbogwmg.php:31\n\
    Stack trace:\n#0 /tmp/tmphvbogwmg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphvbogwmg.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  $vowels =\
    \ 'aeiou';\n  $encoded = array();\n  for($i=0;$i<strlen($message);$i++) {\n  \
    \  $encoded[] = strtr($message[$i],\n                      $alphabet=>$alphabet[$i]);\n\
    \  }\n  for($i=0;$i<strlen($message);$i++) {\n    $encoded[$i] = $vowels[$encoded[$i]];\n\
    \  }\n  return implode('', $encoded);\n}\nfunction candidate(...$args) {\n   \
    \ return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdv0arbre.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $message = strtolower($message);\n  $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n  $newMessage = array();\n\n  for ($i = 0; $i < strlen($message);\
    \ $i++) {\n    $letter = substr($message, $i, 1);\n    $pos = strpos($vowels,\
    \ $letter);\n    if ($pos === false) {\n      $pos = 0;\n    }\n    $newMessage[]\
    \ = substr($message, $i, 1) . substr($vowels, $pos + 1, 1);\n  }\n\n  return implode($newMessage);\n\
    }\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: strpos() expects parameter 1 to be string, array given in /tmp/tmpzr09e1_h.php\
    \ on line 19\n\nWarning: substr() expects parameter 1 to be string, array given\
    \ in /tmp/tmpzr09e1_h.php on line 23\n\nWarning: strpos() expects parameter 1\
    \ to be string, array given in /tmp/tmpzr09e1_h.php on line 19\n\nWarning: substr()\
    \ expects parameter 1 to be string, array given in /tmp/tmpzr09e1_h.php on line\
    \ 23\n\nWarning: strpos() expects parameter 1 to be string, array given in /tmp/tmpzr09e1_h.php\
    \ on line 19\n\nWarning: substr() expects parameter 1 to be string, array given\
    \ in /tmp/tmpzr09e1_h.php on line 23\n\nWarning: strpos() expects parameter 1\
    \ to be string, array given in /tmp/tmpzr09e1_h.php on line 19\n\nWarning: substr()\
    \ expects parameter 1 to be string, array given in /tmp/tmpzr09e1_h.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzr09e1_h.php:33\n\
    Stack trace:\n#0 /tmp/tmpzr09e1_h.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzr09e1_h.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  return strtr($message, [\n    'a' => 'k',\n    'b' =>\
    \ 't',\n    'c' => 'g',\n    'd' => 's',\n    'e' => 'c',\n    'f' => 'g',\n \
    \   'g' => 's',\n    'h' => 'h',\n    'i' => 'i',\n    'j' => 'k',\n    'k' =>\
    \ 'c',\n    'l' => 'g',\n    'm' => 's',\n    'n' => 'c',\n    'o' => 'g',\n \
    \   'p' => 'k',\n    'q' => 't',\n    'r' => 'g',\n    's' => 'h',\n    't' =>\
    \ 'i',\n    'u' => 'i',\n    'v' => 'k',\n    'w' => 'c',\n    'x' => 'k',\n \
    \   'y' => 't',\n    'z' => 'g',\n  ]);\n}\n\nfunction candidate(...$args) {\n\
    \    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj82p_tjb.php:48\n\
    Stack trace:\n#0 /tmp/tmpj82p_tjb.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpj82p_tjb.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    if ($message == '') {\n        return '0';\n    }\n\
    \    $codes = array();\n    $vowels = 'aeiouy';\n    $consonants = 'bcdfghjklmnpqrstvwxyz';\n\
    \    $length = strlen($message);\n    for($i = 0; $i < $length; $i++) {\n    \
    \    $codes[$message[$i]]++;\n    }\n    foreach ($codes as $k => $value) {\n\
    \        if ($value == 2) {\n            $codes[$k] = $vowels[$i%6];\n       \
    \ }\n    }\n    $encoded = str_replace(\n        array_keys($codes),\n       \
    \ array_values($codes),\n        $message\n    );\n    return $encoded;\n}\n\n\
    echo encode('this is a test message');\n</code>\nOutput\n<code>\nTGST\n</code>\n\
    <|/ a tags=string,php |>\n<| c |>\nWow, that's very helpful.  I understand everything\
    \ except the last block of code that does something different than what I had\
    \ planned.\n<|/ c |>\n<| c |>\n`strtr` is a bit overkill for such a simple task,\
    \ `$message = strtr($message, 'aeiouyAEIOUY');` will do\n<|/ c |>\n<| c |>\nthanks!\
    \ That works well for me.  I wasn't aware of PHP's strtr function.  I'll have\
    \ to look into that.  I did also find an alternative to my answer below.\n<|/\
    \ c |>\n<| a dscore=2 tags=string,php |>\nI thought I should post my answer to\
    \ this in case anyone else has this same problem.  I started going with the function\
    \ I posted above.  I learned a lot about regular expressions along the way, but\
    \ I was looking for a function that could accomplish my goal without looping through\
    \ each character.\nI found that PHP's preg_replace() function will do the trick.\n\
    Here is my code:\n<code>\n$string = preg_replace(\"/[aeiouy]/i\",\"AEIOUY\",$string);\n\
    </code>\nThis code will replace the vowels in each character with the letters\
    \ that come 2 places ahead of that vowel.\n<|/ a |>\n<| c |>\nYou might want to\
    \ use `/[aeiouyAEIOUY]/i` instead, because if you use that, you also replace vowels\
    \ in other letters :)\n<|/ c |>\n<| c |>\nI didn't think of that.  Thank you.\
    \  I'll keep this in mind.\n<|/ c |>\n<| a dscore=1 tags=string,php |>\nI made\
    \ a quick and dirty function that I wrote to solve this \nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvk1doz2j.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $str = '';\n    $vowels = 'aeiouyAEIOUY';\n    $letters\
    \ = 'abcdefghijklmnopqrstuvwxyz';\n    $replace = 'AEIOUY';\n    for ($i = 0;\
    \ $i < strlen($message); $i++) {\n        $str .= $message[$i];\n        for ($j\
    \ = 0; $j < strlen($message); $j++) {\n            if ($message[$i] == $replace[$j])\
    \ {\n                $str .= $replace[$j];\n                $vowels = $vowels\
    \ . substr($replace, 2);\n            }\n        }\n        $str .= $replace[0];\n\
    \    }\n    return $str[0] . $str . strtoupper($vowels);\n}\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcf33k7ep.php:34\n\
    Stack trace:\n#0 /tmp/tmpcf33k7ep.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcf33k7ep.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $code = 'abcdefghijklmnopqrstuvwxyz';\n  $codeLength =\
    \ strlen($code);\n  $result = '';\n  for ($i = 0; $i < strlen($message); $i++)\
    \ {\n    $letter = substr($message, $i, 1);\n    $pos = strpos($code, $letter);\n\
    \    if ($pos > 0 && $pos < $codeLength - 1) {\n      $result .= $code[$pos +\
    \ 2];\n      $result .= $code[$pos];\n    } else {\n      $result .= $letter;\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4fg4cmlv.php:34\n\
    Stack trace:\n#0 /tmp/tmp4fg4cmlv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4fg4cmlv.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif ($message[$i] >= 'a' && $message[$i] <= 'z')\n\t\t\t$encoded\
    \ .= substr($message, $i, 1);\n\t\telse {\n\t\t\t// We have found a vowel; swap\
    \ case and increment counter\n\t\t\t$vowel = substr($message, $i, 1);\n\t\t\t\
    $upper = strtoupper($vowel);\n\t\t\t$lower = strtolower($vowel);\n\t\t\tif (isset($alphabet[$lower]))\
    \ {\n\t\t\t\t$encoded .= $alphabet[$lower];\n\t\t\t\t$alphabet[$upper] = $lower;\n\
    \t\t\t\t$alphabet[$lower] = $upper;\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $encoded;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpki1t_vz_.php:38\n\
    Stack trace:\n#0 /tmp/tmpki1t_vz_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpki1t_vz_.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = 'AEIOU';\n    $alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $newAlphabet = str_split($alphabet);\n    $newAlphabet = array_combine($newAlphabet,\
    \ $alphabet);\n    $newAlphabet = array_flip($newAlphabet);\n    $messageUpper\
    \ = strtoupper($message);\n    $messageLower  = strtolower($message);\n    $messageLength\
    \ = strlen($message);\n    $messageUpper = str_replace($vowels, '', $messageUpper);\n\
    \    $messageLower = str_replace($vowels, '', $messageLower);\n    $messageLetters\
    \ = str_split($message);\n    $messageLetters = array_combine($messageLetters,\
    \ $alphabet);\n    $messageLetters = array_flip($messageLetters);\n    \n    $encoded\
    \ = '';\n    $i = 0;\n    while ($i < $messageLength) {\n        $position = $messageLetters[$i];\n\
    \        if (isset($newAlphabet[$position])) {\n            $position2 = $newAlphabet[$position];\n\
    \            if ($position2 != $position) {\n                $position += $position2;\n\
    \            }\n        }\n        $encoded .= $position;\n        $i++;\n   \
    \ }\n    return $encoded;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_combine() expects parameter 2 to be array, string given\
    \ in /tmp/tmplet9iqc3.php on line 16\n\nWarning: array_flip() expects parameter\
    \ 1 to be array, null given in /tmp/tmplet9iqc3.php on line 17\n\nWarning: array_combine()\
    \ expects parameter 2 to be array, string given in /tmp/tmplet9iqc3.php on line\
    \ 24\n\nWarning: array_flip() expects parameter 1 to be array, null given in /tmp/tmplet9iqc3.php\
    \ on line 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplet9iqc3.php:48\n\
    Stack trace:\n#0 /tmp/tmplet9iqc3.php(55): test()\n#1 {main}\n  thrown in /tmp/tmplet9iqc3.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    return strtr($message, [\n        'e' => 'E',\n    \
    \    'i' => 'I',\n        'o' => 'O',\n        'u' => 'U',\n        'A' => 'A',\n\
    \        'B' => 'B',\n        'C' => 'C',\n        'D' => 'D',\n        'E' =>\
    \ 'E',\n        'F' => 'F',\n        'G' => 'G',\n        'H' => 'H',\n      \
    \  'I' => 'I',\n        'J' => 'J',\n        'K' => 'K',\n        'L' => 'L',\n\
    \        'M' => 'M',\n        'N' => 'N',\n        'O' => 'O',\n        'P' =>\
    \ 'P',\n        'Q' => 'Q',\n        'R' => 'R',\n        'S' => 'S',\n      \
    \  'T' => 'T',\n        'U' => 'U',\n        'V' => 'V',\n        'W' => 'W',\n\
    \        'X' => 'X',\n        'Y' => 'Y',\n        'Z' => 'Z',\n        'a' =>\
    \ 'A',\n        'b' => 'B',\n        'c' => 'C',\n        'd' => 'D',\n      \
    \  'e' => 'E',\n        'f' => 'F',\n        'g' => 'G',\n        'h' => 'H',\n\
    \        'i' => 'I',\n        'j' => 'J',\n        'k' => 'K',\n        'l' =>\
    \ 'L',\n        'm' => 'M',\n        'n' => 'N',\n        'o' => 'O',\n      \
    \  'p' => 'P',\n        'q' => 'Q',\n        'r' => 'R',\n        's' => 'S',\n\
    \        't' => 'T',\n        'u' => 'U',\n        'v' => 'V',\n        'w' =>\
    \ 'W',\n        'x' => 'X',\n        'y' => 'Y',\n        'z' => 'Z',\n    ]);\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6t8yibo.php:78\n\
    Stack trace:\n#0 /tmp/tmpl6t8yibo.php(85): test()\n#1 {main}\n  thrown in /tmp/tmpl6t8yibo.php\
    \ on line 78\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $vowels = 'aeiouy';\n  $alphabet = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \  $swap = array('A','a','B','b','C','c','D','d','E','e','F','f','G','g','H','h','I','i','J','j','K','k','L','l','M','m','N','n','O','o','P','p','Q','q','R','r','S','s','T','t','U','u','V','v','W','w','X','x','Y','y','Z','z');\n\
    \  $len = strlen($message);\n  $new = '';\n  for($i = 0; $i < $len; $i++) {\n\
    \    $char = substr($message,$i,1);\n    if($char == ' ') {\n      $new .= ' ';\n\
    \      continue;\n    }\n    $pos = array_search($char,$vowels);\n    if($pos\
    \ === false) {\n      $new .= $char;\n      continue;\n    }\n    $new2 .= $swap[$pos];\n\
    \    $new .= $new2;\n  }\n  return $new;\n}\n</code>\nYou can now decode with\
    \ the inverse operation - you just need to get the offset of the first non-vowel\
    \ in each string and add its value. \n<code>\n$vowels = 'aeiouy';\n$alphabet =\
    \ array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    $swap = array('A','a','B','b','C','c','D','d','E','e','F','f','G','g','H','h','I','i','J','j','K','k','L','l','M','m','N','n','O','o','P','p','Q','q','R','r','S','s','T','t','U','u','V','v','W','w','X','x','Y','y','Z','z');\n\
    \nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp528xlodd.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyluc99fp.php:20\n\
    Stack trace:\n#0 /tmp/tmpyluc99fp.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpyluc99fp.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $encodedMessage = '';\n    $messageLength = strlen($message);\n\
    \    for ($i = 0; $i < $messageLength; $i++) {\n        // Get a character from\
    \ the message and swap case on every letter\n        $encodedMessage .= strtolower($message[$i]);\n\
    \        // Replace all vowels in message with the character 2 places ahead\n\
    \        $encodedMessage .= substr(\"aeiou\", $i, 1) . substr($message, $i, 1);\n\
    \    }\n    return $encodedMessage;\n}\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyumbw5hr.php:28\n\
    Stack trace:\n#0 /tmp/tmpyumbw5hr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyumbw5hr.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  for ($i = 0; $i < strlen($message); $i++) {\n    $letter\
    \ = $message[$i];\n    switch ($letter) {\n      case 'a':\n        $letter =\
    \ strtoupper($letter);\n        break;\n      case 'e':\n        $letter = strtoupper($letter);\n\
    \        break;\n      case 'i':\n        $letter = strtoupper($letter);\n   \
    \     break;\n      case 'o':\n        $letter = strtoupper($letter);\n      \
    \  break;\n      case 'u':\n        $letter = strtoupper($letter);\n        break;\n\
    \      case 'A':\n        $letter = strtoupper($letter);\n        break;\n   \
    \   case 'E':\n        $letter = strtoupper($letter);\n        break;\n      case\
    \ 'I':\n        $letter = strtoupper($letter);\n        break;\n      case 'O':\n\
    \        $letter = strtoupper($letter);\n        break;\n      case 'U':\n   \
    \     $letter = strtoupper($letter);\n        break;\n    }\n  }\n  $vowels =\
    \ array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n  $newMessage = '';\n\
    \  for ($i = 0; $i < strlen($message); $i++) {\n    $letter = $message[$i];\n\
    \    $newMessage .= $letter;\n    $count = 1;\n    for ($j = strlen($message)\
    \ - $i - 1; $j >= 0; $j--) {\n      if ($message[$j] == $letter) {\n        $count++;\n\
    \      }\n    }\n    for ($j = 0; $j < $count; $j++) {\n      $newMessage .= $vowels[$j\
    \ + 1];\n    }\n  }\n  return $newMessage;\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptcu5n4oo.php:71\n\
    Stack trace:\n#0 /tmp/tmptcu5n4oo.php(78): test()\n#1 {main}\n  thrown in /tmp/tmptcu5n4oo.php\
    \ on line 71\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $encoded = \"\";\n    $vowels = \"aeiouAEIOU\";\n  \
    \  $replacements = array(\"a\" => \"b\", \"e\" => \"v\", \"i\" => \"h\", \"o\"\
    \ => \"d\");\n    $length = strlen($message);\n    $l = $length-1;\n    for($x\
    \ = 0; $x < $length; $x++) {\n        if($message[$x] == $vowels[$x]) {\n    \
    \        $encoded = $encoded . $replacements[$vowels[$x]];\n        }\n      \
    \  else {\n            $encoded = $encoded . strtoupper($message[$x]);\n     \
    \   }\n    }\n    return $encoded;\n}\n</code>\n<|/ a tags=php,encryption dscore=0\
    \ |>\n<| c |>\nThis is an answer to the question that was asked.  The question\
    \ is asking for a way to encode the message with minimal changes so that the encrypted\
    \ message is as short as possible.\n<|/ c |>\n<| c |>\nThis won't work if the\
    \ message contains any vowels, since you replace them with `b`\n<|/ c |>\n<| c\
    \ |>\nGood point, I missed that. I have changed my answer to replace all vowels\
    \ in the message with the letter that appears two places ahead of it in the english\
    \ alphabet. Assume only letters. No special characters are allowed in message.\
    \ The message is converted to upper case.\n<|/ c |>\n<| c |>\n\"Assume only letters\"\
    \ is contradictory to the requirements.  Does this work for \"This is a message\"\
    ?  Can it handle non-ASCII characters such as '\xF1'?\n<|/ c |>\n<| c |>\nGood\
    \ point. I've updated my answer to include an encoding function that works for\
    \ non-ASCII characters. Thanks.\n<|/ c |>\n<| a tags=php,encryption |>\nYou could\
    \ convert the first letter of each word and remove all the vowels. For example:\n\
    <code>\n<?php\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpd5w9due3.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $messageToEncode = strtolower($message);\n    $encodedMessage\
    \ = '';\n    for ($i = 0; $i < strlen($messageToEncode); $i++) {\n        $letterPosition\
    \ = strpos(\n            $messageToEncode[$i], 'a');\n        if ($letterPosition\
    \ != false) {\n            $encodedMessage .= $messageToEncode[$i];\n        \
    \    $encodedMessage .= $messageToEncode[$letterPosition];\n            $encodedMessage\
    \ .= $messageToEncode[$letterPosition + 1];\n        } else {\n            $encodedMessage\
    \ .= $messageToEncode[$i];\n        }\n    }\n    return $encodedMessage;\n}\n\
    function candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9rf5ba9h.php:33\n\
    Stack trace:\n#0 /tmp/tmp9rf5ba9h.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9rf5ba9h.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $new = \"\";\n  foreach (str_split($message) as $c) {\n\
    \    if (ctype_upper($c)) {\n      $new .= $c;\n    } elseif (ctype_lower($c))\
    \ {\n      $new .= strtoupper($c[0]);\n      $new .= strtolower($c[1]);\n    }\
    \ else {\n      $new .= $c[0];\n    }\n  }\n  return $new;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\nI see you already have an answer but wanted to\
    \ contribute an alternative...\nYou can use the array_walk() function to achieve\
    \ a very similar effect to the example you gave.\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbho7w203.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $code = \"\";\n    $l = strlen($message);\n    for ($i\
    \ = 0; $i < $l; $i++) {\n        $s = strtolower($message[$i]);\n        $code\
    \ = $code . str_replace(\n            array(\"a\", \"e\", \"i\", \"o\", \"u\"\
    ),\n            array(\"A\", \"E\", \"I\", \"O\", \"U\"), \n            $s\n \
    \       );\n    }\n    return $code;\n}\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxvl6_1v.php:30\n\
    Stack trace:\n#0 /tmp/tmpdxvl6_1v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdxvl6_1v.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $key = array_keys($message); // get all keys in message\
    \ array\n  $key = array_flip($key); // flip all keys to get all letters in message\
    \ array\n  $newMessage = array();\n  foreach($message as $letter) {\n    $pos\
    \ = $key[$letter];\n    if ($pos != false) {\n      $newMessage[] = \n       \
    \ strtoupper(\n          strtolower(\n            $letter\n              [$pos-1]\
    \ // get letter 1 place ahead of current letter\n              .\n           \
    \   $letter[$pos] // get letter 2 place ahead of current letter\n          )\n\
    \        );\n    } else {\n      $newMessage[] = $letter;\n    }\n  }\n  return\
    \ implode('', $newMessage);\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_keys() expects parameter 1 to be array, string given in\
    \ /tmp/tmpfiub4dnu.php on line 13\n\nWarning: array_flip() expects parameter 1\
    \ to be array, null given in /tmp/tmpfiub4dnu.php on line 14\n\nWarning: Invalid\
    \ argument supplied for foreach() in /tmp/tmpfiub4dnu.php on line 16\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpfiub4dnu.php:40\nStack trace:\n\
    #0 /tmp/tmpfiub4dnu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpfiub4dnu.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $encoded = '';\n\n  for ($i = 0; $i < strlen($message);\
    \ $i++) {\n    $letter = substr($message, $i, 1);\n    switch ($letter) {\n  \
    \    case 'A': // a\n        $encoded .= 'a';\n        break;\n      case 'B':\
    \ // b\n        $encoded .= 'b';\n        break;\n      case 'C': // c\n     \
    \   $encoded .= 'c';\n        break;\n      case 'D': // d\n        $encoded .=\
    \ 'd';\n        break;\n      case 'E': // e\n        $encoded .= 'e';\n     \
    \   break;\n      case 'F': // f\n        $encoded .= 'f';\n        break;\n \
    \     case 'G': // g\n        $encoded .= 'g';\n        break;\n      case 'H':\
    \ // h\n        $encoded .= 'h';\n        break;\n      case 'I': // i\n     \
    \   $encoded .= 'i';\n        break;\n      case 'J': // j\n        $encoded .=\
    \ 'j';\n        break;\n      case 'K': // k\n        $encoded .= 'k';\n     \
    \   break;\n      case 'L': // l\n        $encoded .= 'l';\n        break;\n \
    \     case 'M': // m\n        $encoded .= 'm';\n        break;\n      case 'N':\
    \ // n\n        $encoded .= 'n';\n        break;\n      case 'O': // o\n     \
    \   $encoded .= 'o';\n        break;\n      case 'P': // p\n        $encoded .=\
    \ 'p';\n        break;\n      case 'Q': // q\n        $encoded .= 'q';\n     \
    \   break;\n      case 'R': // r\n        $encoded .= 'r';\n        break;\n \
    \     case 'S': // s\n        $encoded .= 's';\n        break;\n      case 'T':\
    \ // t\n        $encoded .= 't';\n        break;\n      case 'U': // u\n     \
    \   $encoded .= 'u';\n        break;\n      case 'V': // v\n        $encoded .=\
    \ 'v';\n        break;\n      case 'W': // w\n        $encoded .= 'w';\n     \
    \   break;\n      case 'X': // x\n        $encoded .= 'x';\n        break;\n \
    \     case 'Y': // y\n        $encoded .= 'y';\n        break;\n      case 'Z':\
    \ // z\n        $encoded .= 'z';\n        break;\n      case 'a': // a\n     \
    \   $encoded .= 'a';\n        break;\n      case 'b': // b\n        $encoded .=\
    \ 'b';\n        break;\n      case 'c': // c\n        $encoded .= 'c';\n     \
    \   break;\n      case 'd': // d\n        $encoded .= 'd';\n        break;\n \
    \     case 'e': // e\n        $encoded .= 'e';\n        break;\n      case 'f':\
    \ // f\n        $encoded .= 'f';\n        break;\n      case 'g': \nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxrp51sq4.php on line 127\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = array();\n    $alphabet[\"B\"] = \"T\";\n\
    \    $alphabet[\"C\"] = \"H\";\n    $alphabet[\"D\"] = \"G\";\n    $alphabet[\"\
    E\"] = \"K\";\n    $alphabet[\"F\"] = \"F\";\n    $alphabet[\"G\"] = \"S\";\n\
    \    $alphabet[\"H\"] = \"D\";\n    $alphabet[\"I\"] = \"N\";\n    $alphabet[\"\
    J\"] = \"T\";\n    $alphabet[\"K\"] = \"S\";\n    $alphabet[\"L\"] = \"A\";\n\
    \    $alphabet[\"M\"] = \"G\";\n    $alphabet[\"N\"] = \"N\";\n    $alphabet[\"\
    O\"] = \"J\";\n    $alphabet[\"P\"] = \"P\";\n    $alphabet[\"Q\"] = \"W\";\n\
    \    $alphabet[\"R\"] = \"O\";\n    $alphabet[\"S\"] = \"C\";\n    $alphabet[\"\
    T\"] = \"K\";\n    $alphabet[\"U\"] = \"I\";\n    $alphabet[\"V\"] = \"V\";\n\
    \    $alphabet[\"W\"] = \"L\";\n    $alphabet[\"X\"] = \"X\";\n    $alphabet[\"\
    Y\"] = \"G\";\n    $alphabet[\"Z\"] = \"Z\";\n\n    $vowels = array(\"a\",\"e\"\
    ,\"i\",\"o\",\"u\");\n    $replace = array();\n    for($i = 0; $i < strlen($message);\
    \ $i++) {\n        $replace[$i] = $message[$i];\n    }\n    $replace = str_replace($vowels,\
    \ $replace, $replace);\n    $replace = str_replace($alphabet, $replace, $replace);\n\
    \    return $replace;\n}\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu6oed8kj.php:54\n\
    Stack trace:\n#0 /tmp/tmpu6oed8kj.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpu6oed8kj.php\
    \ on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // your code here\n    $message = \"test\";\n    $message\
    \ = strtoupper($message);\n    $message = str_replace(array(\"a\",\"e\",\"i\"\
    ,\"o\",\"u\"), array(\"\",\"\",\"\",\"\",\"\"), $message);\n    $message = str_replace(array(\"\
    A\", \"E\", \"I\", \"O\", \"U\"), array(\"\", \"E\", \"I\", \"O\", \"U\"), $message);\n\
    \    $message = str_replace(array(\"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"\
    I\", \"O\", \"U\"), array(\"\", \"A\", \"E\", \"I\", \"O\", \"U\"), $message);\n\
    \    $message = str_replace(array(\"t\", \"g\", \"s\", \"c\", \"k\", \"m\", \"\
    g\", \"s\", \"c\"), array(\"T\", \"G\", \"S\", \"C\", \"K\", \"M\", \"G\", \"\
    S\", \"C\"), $message);\n    for($i = 0; $i < strlen($message); $i++){\n     \
    \   $letter = substr($message,$i,1);\n        $nextLetter = substr($message,($i+1),1);\n\
    \        $letterPosition = ord($letter) - 97;\n        $nextLetterPosition = ord($nextLetter)\
    \ - 97;\n        if($letterPosition >= 0 && $nextLetterPosition >= 0){\n     \
    \       if($letterPosition < $nextLetterPosition){\n                $letter =\
    \ $letterPosition + 26;\n            }\n            else{\n                $letter\
    \ = $letterPosition - 26;\n            }\n            $newWord.= chr($letter);\n\
    \        }\n        else{\n            $newWord.= $letter;\n        }\n    }\n\
    \    return $newWord;\n}\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqhb5tl3_.php:45\n\
    Stack trace:\n#0 /tmp/tmpqhb5tl3_.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpqhb5tl3_.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $letters = str_split($message);\n    $message = '';\n\
    \n    for ($i = 0; $i < strlen($message); $i++) {\n        $message .= chr(ord($letters[$i])\
    \ + 2 * ord($letters[$i+1]) - ord($letters[$i]));\n    }\n    return $message;\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpecvuu0_j.php:27\n\
    Stack trace:\n#0 /tmp/tmpecvuu0_j.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpecvuu0_j.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = \"aeiouy\";\n    $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $messageLength = strlen($message);\n    $encoded = '';\n    for ($i = 0;\
    \ $i < $messageLength; $i++) {\n        $letterIndex = strpos($vowels, $message[$i]);\n\
    \        if ($letterIndex !== false) {\n            $encodedVowel = substr($letters,\
    \ $letterIndex - 1);\n            $encodedLetter = substr($letters, $letterIndex\
    \ + 1);\n            $encoded .= $encodedVowel . $encodedLetter;\n        } else\
    \ {\n            $encoded .= $message[$i];\n        }\n    }\n    return $encoded;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nHaha I really appreciate this, I was able to make\
    \ it work after a few tweaks. I used the encode function on the function I already\
    \ had, thanks a bunch.\n<|/ c |>\n<| c |>\nYou're welcome. If you're satisfied\
    \ with the answer, could you mark it as the answer?\n<|/ c |>\n<| c |>\nSure,\
    \ I've just marked it as correct. Thanks again, I'm new here and don't know how\
    \ to mark it as the answer.\n<|/ c |>\n<| a tags=html,css,php |>\n<code>\n<html>\n\
    <head>\n<title>PHP Script Example</title>\n</head>\n<body>\n<?php\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqkbva227.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $message = $message . ''; // Make sure that $message\
    \ is an empty string \n    $result = \"\";\n    $vowels = \"AEIOU\";\n    $consonants\
    \ = \"BCDFGHJKLMNPQRSTVWXYZ\";\n    for($i = 0; $i < strlen($message); $i++) {\n\
    \        $char = substr($message, $i, 1);\n        if(strpos($vowels, $char) !==\
    \ false) {\n            $result = \"$char \";\n        } \n        else if(strpos($consonants,\
    \ $char) !== false) {\n            $result = $char . \" \";\n        } \n    \
    \    else {\n            $result = \"$ \";\n        } \n    } \n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtlhr9dn.php:37\n\
    Stack trace:\n#0 /tmp/tmpwtlhr9dn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpwtlhr9dn.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $swaps\
    \ = array(\"a\" => \"b\", \"b\" => \"c\", \"c\" => \"d\", \"d\" => \"e\", \"e\"\
    \ => \"f\", \"f\" => \"g\", \"g\" => \"h\", \"h\" => \"i\", \"i\" => \"j\", \"\
    j\" => \"k\", \"k\" => \"l\", \"l\" => \"m\", \"m\" => \"n\", \"n\" => \"o\",\
    \ \"o\" => \"p\", \"p\" => \"q\", \"q\" => \"r\", \"r\" => \"s\", \"s\" => \"\
    t\", \"t\" => \"u\", \"u\" => \"v\", \"v\" => \"w\", \"w\" => \"x\", \"x\" =>\
    \ \"y\", \"y\" => \"z\", \"z\" => \"a\", \"A\" => \"b\", \"B\" => \"c\", \"C\"\
    \ => \"d\", \"D\" => \"e\", \"E\" => \"f\", \"F\" => \"g\", \"G\" => \"h\", \"\
    H\" => \"i\", \"I\" => \"j\", \"J\" => \"k\", \"K\" => \"l\", \"L\" => \"m\",\
    \ \"M\" => \"n\", \"N\" => \"o\", \"O\" => \"p\", \"P\" => \"q\", \"Q\" => \"\
    r\", \"R\" => \"s\", \"S\" => \"t\", \"T\" => \"u\", \"U\" => \"v\", \"V\" =>\
    \ \"w\", \"W\" => \"x\", \"X\" => \"y\", \"Y\" => \"z\", \"Z\" => \"a\");\n  \
    \  $swapped = str_ireplace($swaps, $alphabet, $message);\n    return $swapped;\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried\
    \ to allocate 104870432 bytes) in /tmp/tmp7y2k0zt1.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $messageArr = str_split($message);\n    $encodedArr\
    \ = array();\n\n    foreach ($messageArr as $key => $value) {\n        $decodedArr\
    \ = str_split(str_replace('S', 'a', $value));\n        $encodedArr = array_merge($encodedArr,\
    \ $decodedArr);\n    }\n\n    return implode('', $encodedArr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbvrsbihv.php:29\n\
    Stack trace:\n#0 /tmp/tmpbvrsbihv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbvrsbihv.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'y');\n  $reversedVowels\
    \ = array_reverse($vowels);\n  $alphabet = str_split('abcdefghijklmnopqrstuvwxyz');\n\
    \n  $message = str_replace(\n    $vowels,\n    $reversedVowels,\n    $message\n\
    \  );\n\n  $message = preg_replace('/(?<![a-z])([aeiou])/', '$1 $2', $message);\n\
    \n  return implode($alphabet, $message);\n}\n\nfunction candidate(...$args) {\n\
    \    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36qpr97c.php:33\n\
    Stack trace:\n#0 /tmp/tmp36qpr97c.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp36qpr97c.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // TODO\n}\n</cell>\n<cell>\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpciqmxkp7.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $result = \"\";\n  foreach (str_split($message) as $char)\
    \ {\n    if (preg_match('~[^AEIOUaeiou]~', $char)) {\n      $result .= $char;\n\
    \    } else {\n      $result .= strtoupper($char);\n      $result .= strtolower($char);\n\
    \    }\n  }\n  return $result;\n}\n</code>\n<|/ a |>\n<| a tags=string,algorithm,php\
    \ |>\nI wrote a solution to this problem that has passed all test cases I needed\
    \ it to.\nThis solution was adapted from user Eduardo G. Martin's answer on the\
    \ following question: \nReplacing characters in PHP\n<code>\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpz6xc3o_6.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  $vowels\
    \ = \"AEIOU\";\n  $output = '';\n  for ($i = 0; $i < strlen($message); $i++) {\n\
    \    $char = substr($message, $i, 1);\n    $index = strpos($alphabet, $char);\n\
    \    $output .= ($index === false) ? $char : $alphabet[$index + 2];\n  }\n  return\
    \ $output;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpyypjc6.php:29\n\
    Stack trace:\n#0 /tmp/tmpfpyypjc6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfpyypjc6.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  // Write a function that takes a message, and encodes\
    \ in such a \n  // way that it swaps case of all letters, replaces all vowels\
    \ in \n  // the message with the letter that appears 2 places ahead of that \n\
    \  // vowel in the english alphabet. \n  // Assume only letters. \n  // Examples:\n\
    \  // >>> encode('test')\n  // 'TGST'\n  // >>> encode('This is a message')\n\
    \  // 'tHKS KS C MGSSCGG'\n  // >>> \n}\n</pre>\n\t\t\t<p style=\"font-size:80%;\"\
    >\n\t\t\t\t<b>Exercise:</b> Write a function that takes a message, encodes in\
    \ such a way that it swaps case of all letters, replaces all vowels in the message\
    \ with the letter that appears 2 places ahead of that vowel in the english alphabet.\
    \ Assume only letters.\n\t\t\t</p>\n\t\t\t<p style=\"font-size:80%;\">\n\t\t\t\
    \tWrite a function that takes a message, encodes in such a way that it swaps case\
    \ of all letters, replaces all vowels in the message with the letter that appears\
    \ 2 places ahead of that vowel in the english alphabet. Assume only letters.\n\
    \t\t\t</p>\n\t\t\t<pre>\n<?php\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpf0_kka6z.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $result = \"\";\n  $len = strlen($message);\n  for ($i\
    \ = 0; $i < $len; $i++) {\n    $letter = $message[$i];\n    $pos = $i;\n    for\
    \ ($j = 1; $j < strlen($message); $j++) {\n      if ($j != $i) {\n        $nextletter\
    \ = $message[$j];\n        if ($nextletter == $letter) {\n          $pos = $j;\n\
    \        }\n      }\n    }\n    $nextletter = chr(ord($letter) + 2);\n    $result\
    \ .= substr($letter, 0, $pos - 1) . $nextletter . substr($letter, $pos);\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4uau9kr.php:37\n\
    Stack trace:\n#0 /tmp/tmp_4uau9kr.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_4uau9kr.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $len = strlen($message);\n    $result = \"\";\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $result .= encodeChar($message[$i], $i,\
    \ $len);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function encodeChar()\
    \ in /tmp/tmprkl6o_v5.php:16\nStack trace:\n#0 /tmp/tmprkl6o_v5.php(22): encode('TEST')\n\
    #1 /tmp/tmprkl6o_v5.php(26): candidate('TEST')\n#2 /tmp/tmprkl6o_v5.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmprkl6o_v5.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $encoded = \"\";\n    foreach (str_split($message) as\
    \ $letter) {\n        $encoded .= str_replace(array(\"A\", \"E\", \"I\", \"O\"\
    , \"U\"), \n            array(strtoupper($letter), strtoupper($letter), strtoupper($letter),\
    \ \n            strtoupper($letter), strtoupper($letter)), $letter);\n    }\n\
    \    return $encoded;\n}\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb2m2_rj8.php:26\n\
    Stack trace:\n#0 /tmp/tmpb2m2_rj8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpb2m2_rj8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = \"aeiou\";\n    $code = '';\n    foreach (str_split($message)\
    \ as $i => $char) {\n        $code .= $char . \n            substr($vowels, $i,\
    \ 1) . \n            substr($vowels, $i + 1, 1);\n    }\n    return $code;\n}\n\
    </code>\n<code>\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpczcpxihv.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $message = str_replace(array('a', 'e', 'i', 'o', 'u'),\
    \ array('a', 'e', 'i', 'o', 'u'), $message);\n    $vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n    \n    $encoded = str_replace($vowels, '', $message);\n    $alphabet\
    \ = str_split('abcdefghijklmnopqrstuvwxyz');\n    $reverseAlphabet = array_reverse($alphabet);\n\
    \    \n    $offsets = array();\n    foreach ($alphabet as $letter) {\n       \
    \ $offset = array_search($letter, $reverseAlphabet);\n        $offsets[$letter]\
    \ = $offset;\n    }\n    \n    for ($i = 0; $i < strlen($message); ++$i) {\n \
    \       $offset = $offsets[$message[$i]];\n        $encoded = str_replace($vowels,\
    \ $alphabet[$i], $encoded, $i);\n    }\n    \n    return $encoded;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nWow, that's a great answer. I'm going to try and implement\
    \ this to see if I can get it working.\n<|/ c |>\n<| c |>\nI got it to work, thanks.\
    \ I needed to change the encoding and decode parts of it. Also added the case\
    \ swap part, and made the function return the encoded string.\n<|/ c |>\n<| c\
    \ |>\nAwesome! Thanks for posting your code. Glad you got it working.\n<|/ c |>\n\
    <| a |>\nHere's another solution that doesn't use array_search() at all. array_search()\
    \ is an O(n) operation which would be prohibitively slow for large strings, so\
    \ this solution uses an O(1) O(n) operation to find the offset.\nHere's a working\
    \ demo.\n<code>\n<?php\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqzyvwkm7.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  preg_match_all(\"/[A-Z]/\", $message, $matches);\n  foreach($matches[0]\
    \ as $key => $match) {\n    $message[$key] = strtoupper($match);\n  }\n  preg_match_all('/[aeiou]/',\
    \ $message, $matches);\n  foreach($matches[0] as $key => $match) {\n    $message[$key]\
    \ = $match;\n  }\n  $message = preg_replace_callback(\"/[aeiou]/\", function($matches)\
    \ {\n    return strtoupper($matches[0][$matches[0][0] + 1]);\n  }, $message);\n\
    \  return preg_replace_callback(\"/[A-Z]/\", function($matches) {\n    return\
    \ strtoupper($matches[0][$matches[0][0] - 1]);\n  }, $message);\n}\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpzivm4vpc.php on line\
    \ 25\n\nWarning: A non-numeric value encountered in /tmp/tmpzivm4vpc.php on line\
    \ 25\n\nWarning: A non-numeric value encountered in /tmp/tmpzivm4vpc.php on line\
    \ 25\n\nWarning: A non-numeric value encountered in /tmp/tmpzivm4vpc.php on line\
    \ 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzivm4vpc.php:33\n\
    Stack trace:\n#0 /tmp/tmpzivm4vpc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzivm4vpc.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $code = \"\";\n  $message = strtoupper($message);\n  $vowels\
    \ = \"AEIOUY\";\n  for ($i = 0; $i < strlen($message); $i++) {\n    $char = substr($message,\
    \ $i, 1);\n    if (strlen($message) > $i + 1) {\n      while ($codeLength < strlen($vowels))\
    \ {\n        $code = code . substr($vowels, $codeLength, 1);\n        $codeLength++;\n\
    \      }\n      $codeLength = 0;\n    }\n    $code = code . $char;\n  }\n  return\
    \ $code;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Use of undefined constant code - assumed 'code' (this will throw\
    \ an Error in a future version of PHP) in /tmp/tmpn9x7siza.php on line 20\n\n\
    Warning: Use of undefined constant code - assumed 'code' (this will throw an Error\
    \ in a future version of PHP) in /tmp/tmpn9x7siza.php on line 20\n\nWarning: Use\
    \ of undefined constant code - assumed 'code' (this will throw an Error in a future\
    \ version of PHP) in /tmp/tmpn9x7siza.php on line 20\n\nWarning: Use of undefined\
    \ constant code - assumed 'code' (this will throw an Error in a future version\
    \ of PHP) in /tmp/tmpn9x7siza.php on line 20\n\nWarning: Use of undefined constant\
    \ code - assumed 'code' (this will throw an Error in a future version of PHP)\
    \ in /tmp/tmpn9x7siza.php on line 20\n\nWarning: Use of undefined constant code\
    \ - assumed 'code' (this will throw an Error in a future version of PHP) in /tmp/tmpn9x7siza.php\
    \ on line 20\n\nWarning: Use of undefined constant code - assumed 'code' (this\
    \ will throw an Error in a future version of PHP) in /tmp/tmpn9x7siza.php on line\
    \ 25\n\nWarning: Use of undefined constant code - assumed 'code' (this will throw\
    \ an Error in a future version of PHP) in /tmp/tmpn9x7siza.php on line 20\n\n\
    Warning: Use of undefined constant code - assumed 'code' (this will throw an Error\
    \ in a future version of PHP) in /tmp/tmpn9x7siza.php on line 20\n\nWarning: Use\
    \ of undefined constant code - assumed 'code' (this will throw an Error in a future\
    \ version of PHP) in /tmp/tmpn9x7siza.php on line 20\n\nWarning: Use of undefined\
    \ constant code - assumed 'code' (this will throw an Error in a future version\
    \ of PHP) in /tmp/tmpn9x7siza.php on line 20\n\nWarning: Use of undefined constant\
    \ code - assumed 'code' (this will throw an Error in a future version of PHP)\
    \ in /tmp/tmpn9x7siza.php on line 20\n\nWarning: Use of undefined constant code\
    \ - assumed 'code' (this will throw an Error in a future version of PHP) in /tmp/tmpn9x7siza.php\
    \ on line 20\n\nWarning: Use of undefined constant code - assumed 'code' (this\
    \ will throw an Error in a future version of PHP) in /tmp/tmpn9x7siza.php o"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $firstLetter = strtolower($message[0]);\n    $firstVowel\
    \ = strtolower($message[1]);\n    $firstVowel2 = strtolower($message[2]);\n  \
    \  $encoded = '';\n    $pos = 0;\n    for ($i = 0; $i < strlen($message); ++$i)\
    \ {\n        $letter = strtolower($message[$i]);\n        $encodedChar = $letter;\n\
    \        if ($letter === $firstVowel) {\n            $encodedChar = strtoupper($firstVowel);\n\
    \            $pos = $i;\n        } else if ($letter === $firstVowel2) {\n    \
    \        $encodedChar = strtoupper($firstVowel);\n            $pos -= 2;\n   \
    \     }\n        $encoded .= $encodedChar;\n    }\n    return $encoded;\n}\n\n\
    function candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi5nyw1vd.php:38\n\
    Stack trace:\n#0 /tmp/tmpi5nyw1vd.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpi5nyw1vd.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $english = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'; \n    $vowels\
    \ = 'AEIOU';\n    $result = \"\";\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        if (in_array($message[$i], $vowels)) {\n            $result .= $message[$i];\n\
    \        } else {\n            $result .= $english[$english[$message[$i]]];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: in_array() expects parameter 2 to be array, string given in\
    \ /tmp/tmpx9enxz12.php on line 17\n\nWarning: Illegal string offset 'T' in /tmp/tmpx9enxz12.php\
    \ on line 20\n\nWarning: Illegal string offset 'A' in /tmp/tmpx9enxz12.php on\
    \ line 20\n\nWarning: in_array() expects parameter 2 to be array, string given\
    \ in /tmp/tmpx9enxz12.php on line 17\n\nWarning: Illegal string offset 'E' in\
    \ /tmp/tmpx9enxz12.php on line 20\n\nWarning: Illegal string offset 'A' in /tmp/tmpx9enxz12.php\
    \ on line 20\n\nWarning: in_array() expects parameter 2 to be array, string given\
    \ in /tmp/tmpx9enxz12.php on line 17\n\nWarning: Illegal string offset 'S' in\
    \ /tmp/tmpx9enxz12.php on line 20\n\nWarning: Illegal string offset 'A' in /tmp/tmpx9enxz12.php\
    \ on line 20\n\nWarning: in_array() expects parameter 2 to be array, string given\
    \ in /tmp/tmpx9enxz12.php on line 17\n\nWarning: Illegal string offset 'T' in\
    \ /tmp/tmpx9enxz12.php on line 20\n\nWarning: Illegal string offset 'A' in /tmp/tmpx9enxz12.php\
    \ on line 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx9enxz12.php:31\n\
    Stack trace:\n#0 /tmp/tmpx9enxz12.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpx9enxz12.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $message\
    \ = preg_replace('/\\B([aeiou])/', '${1}', strtolower($message));\n    foreach\
    \ ($message as $char) {\n        $count = substr_count($char, $vowels);\n    \
    \    if ($count == 2) {\n            $replacement = substr($char, 1 , 1 );\n \
    \           $replacement = chr(ord($replacement) + 32);\n            $message\
    \ = str_replace($char, $replacement, $message);\n        }\n    }\n    return\
    \ $message;\n}\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmp1r11xdee.php\
    \ on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1r11xdee.php:30\n\
    Stack trace:\n#0 /tmp/tmp1r11xdee.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1r11xdee.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $message = (string)$message;\n    $encoded = $message;\n\
    \    for($i = 0; $i < strlen($message); $i++) {\n        $encoded = str_replace($vowels,\
    \ $replacement, $encoded);\n    }\n    return $encoded;\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4ifpys1.php:26\n\
    Stack trace:\n#0 /tmp/tmpl4ifpys1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl4ifpys1.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = \"aeiou\";\n    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $newMessage = \"\";\n    $firstLetter = \"\";\n    $secondLetter = \"\"\
    ;\n    $finalLetter = \"\";\n    $letter = 0;\n    $i = 0;\n    $j = 0;\n    for\
    \ ($i = 0; $i < strlen($message); $i++) {\n        $letter = substr($message,\
    \ $i, 1);\n        $firstLetter = substr($alphabet, 0, $j);\n        $secondLetter\
    \ = substr($alphabet, $j + 1, 1);\n        $finalLetter = $firstLetter . $secondLetter;\n\
    \        if (strpos($vowels, $letter) > 1) {\n            $newMessage .= $finalLetter;\n\
    \        } else {\n            $newMessage .= $letter;\n        }\n        $j++;\n\
    \    }\n    return $newMessage;\n}\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1n0ykh6k.php:41\n\
    Stack trace:\n#0 /tmp/tmp1n0ykh6k.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1n0ykh6k.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n\t$vowels = \"aeiouy\";\n\t$lower = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\t$letters = $lower . $upper;\n\
    \t\n\t$encoded = '';\n\t$i = 0;\n\twhile ($i < strlen($message)) {\n\t\t$letter\
    \ = $message[$i];\n\t\tif (strlen($message) - $i < 2) {\n\t\t\t$letters .= $letter;\n\
    \t\t} else {\n\t\t\t$j = strpos($letters, $letter);\n\t\t\t$letter .= $letters[$j\
    \ + 1];\n\t\t\t$letters = substr($letters, 0, $j) . $letter;\n\t\t}\n\t\t\n\t\t\
    $letterpos = strpos($upper, $letter);\n\t\tif ($letterpos !== FALSE) {\n\t\t\t\
    $encoded[] = $upper[($letterpos - 1)];\n\t\t\t$encoded[] = $upper[$letterpos];\n\
    \t\t} else {\n\t\t\t$encoded[] = $letter;\n\t\t}\n\t\t\n\t\t$i++;\n\t}\n\treturn\
    \ $encoded;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: [] operator not supported for strings in\
    \ /tmp/tmp6kzcfg1f.php:32\nStack trace:\n#0 /tmp/tmp6kzcfg1f.php(44): encode('TEST')\n\
    #1 /tmp/tmp6kzcfg1f.php(48): candidate('TEST')\n#2 /tmp/tmp6kzcfg1f.php(55): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6kzcfg1f.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  // Make a new array and go through each letter in the\
    \ message. \n  $array = [];\n  for ($i = 0; $i < strlen($message); $i++) {\n \
    \   // Get the current letter \n    $letter = strtolower($message[$i]);\n    //\
    \ Add the letter to the array \n    $array[] = $letter;\n    // Replace all vowels\
    \ with the letter that appears 2 places ahead\n    // of that vowel. \n    //\
    \ This is basically what we did in the last question \n    $array[] = strtr($letter,\
    \ 'aeiou', 'AEIOU');\n  }\n  // Join the array together to return a single string\
    \ \n  return implode('', $array);\n}\n\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhmpdp39.php:34\n\
    Stack trace:\n#0 /tmp/tmpzhmpdp39.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpzhmpdp39.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = 'aeiouyAEIOUY';\n    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \n    $encoded = '';\n\n    for($i = 0, $len = strlen($message); $i < $len; $i++)\
    \ {\n        $encoded .= $message[$i];\n\n        if($message[$i] >= 'a' && $message[$i]\
    \ <= 'z') {\n            $encoded .= substr($alphabet, \n                ($message[$i]\
    \ - 'a') + 2, 1); \n        }\n        else if($message[$i] >= 'A' && $message[$i]\
    \ <= 'Z') {\n            $encoded .= substr($alphabet, \n                ($message[$i]\
    \ - 'A') + 2, 1);\n        }\n        else if($message[$i] == ' ') {\n       \
    \     $encoded .= $vowels[rand(0, count($vowels) - 1)];\n        }\n        else\
    \ if($message[$i] >= '0' && $message[$i] <= '9') {\n            $encoded .= substr($alphabet,\
    \ \n                ($message[$i] - '0') + 2, 1);\n        }\n    }\n\n    return\
    \ $encoded;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmph0n16db8.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmph0n16db8.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmph0n16db8.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmph0n16db8.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmph0n16db8.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmph0n16db8.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmph0n16db8.php on line\
    \ 27\n\nWarning: A non-numeric value encountered in /tmp/tmph0n16db8.php on line\
    \ 27\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph0n16db8.php:46\n\
    Stack trace:\n#0 /tmp/tmph0n16db8.php(53): test()\n#1 {main}\n  thrown in /tmp/tmph0n16db8.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $message = 'tHKS KS C MGSSCGG'; // 'This is a message'\n\
    \  // Encode each character with its index in alphabet\n  $alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\
    \ \n  $alphabetLength = strlen($alphabet); \n  for($i = 0; $i < strlen($message);\
    \ $i++) {\n    // Convert character to ASCII\n    $character = $message[$i];\n\
    \    $char_ascii = (ord($character) - 64) % $alphabetLength;\n    $encoded[$i]\
    \ = $alphabet[$char_ascii];\n  }\n  // Swap case\n  return strtr($encoded, array('a'\
    \ => 'A', 'e' => 'E', 'i' => 'I', 'o' => 'O', 'u' => 'U', \n                 \
    \           'y' => 'Y', 'y' => 'Y'));\n}\n</code>\n<|/ a tags=php |>\n<| c |>\n\
    Why did you make an array and populate with values from `ABCD...`?\n<|/ c |>\n\
    <| c |>\nThe code is just an example. Those values are arbitrary, you can replace\
    \ them with whatever you like.\n<|/ c |>\n<| a tags=php dscore=1 |>\nI think this\
    \ is an easy way to generate unique key for every input string\n<code>\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5m6zt07t.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $alphabet = range('A','Z');\n  $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n  $swaps = array('S', 'T', 'H', 'K', 'S', 'K', 'S', 'G', 'C',\
    \ 'M', 'G');\n  $messageLength = strlen($message);\n  $newMessage = '';\n  for\
    \ ($i = 0; $i < $messageLength; $i++) {\n    $newMessage .= $alphabet[strpos($alphabet,\
    \ $message[$i])];\n  }\n  for ($i = 0; $i < $messageLength; $i++) {\n    $index\
    \ = strpos($alphabet, $message[$i]);\n    // get the vowel 2 places ahead of the\
    \ current letter\n    $currentVowel = strtr($alphabet[$index + 1], array_combine($vowels,\
    \ $vowels));\n    // get the current letter 2 places ahead\n    $currentLetter\
    \ = strtr($alphabet[$index], array_combine($vowels, $vowels));\n    // get the\
    \ current letter 2 places ahead\n    $nextLetter = strtr($alphabet[$index + 2],\
    \ array_combine($vowels, $vowels));\n    // swap the two letters\n    $newMessage\
    \ .= $currentVowel . $nextLetter;\n  }\n  return $newMessage;\n}\n</code>\n<|/\
    \ a tags=string,php,encryption |>\n<| c |>\nThanks! I'll give it a shot.\n<|/\
    \ c |>\n<| c |>\nIt just ran out of letters and then started repeating things\
    \ like 'tHSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\n\
    function candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp41yozrze.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    \n    $vowels = \"aeiou\";\n    \n    $encodedMessage\
    \ = str_replace(\n        array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"\
    , \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"),\n        array(\n \
    \           \"z\", \n            \"y\", \n            \"x\", \n            \"\
    w\", \n            \"v\", \n            \"u\", \n            \"t\", \n       \
    \     \"s\", \n            \"r\", \n            \"q\", \n            \"p\", \n\
    \            \"o\", \n            \"n\", \n            \"m\", \n            \"\
    l\", \n            \"k\", \n            \"j\", \n            \"i\", \n       \
    \     \"h\", \n            \"g\", \n            \"f\", \n            \"e\", \n\
    \            \"d\", \n            \"c\", \n            \"b\", \n            \"\
    a\", \n        ),\n        $message\n    );\n\n    $encodedMessage = str_replace(\n\
    \        array_fill(0, count($vowels), '?'), // replace all unknown characters\
    \ with question marks\n        $vowels,                         // swap case for\
    \ all vowels\n        $encodedMessage\n    );\n\n    $encodedMessage = str_replace(\n\
    \        array_fill(0, count($vowels), '?'), // replace all unknown characters\
    \ with question marks\n        $vowels,                         // swap case for\
    \ all vowels\n        $encodedMessage\n    );\n    \n    foreach ($vowels as $key\
    \ => $val) {\n        // find the letter that appears 2 places ahead of $val\n\
    \        $lookaheadPosition = strpos($encodedMessage, $val) + 1;\n        // replace\
    \ $val with that letter\n        $encodedMessage = str_replace($val, $lookaheadPosition,\
    \ $encodedMessage);\n    }\n    \n    return $encodedMessage;\n}\n\n$message =\
    \ \"The quick brown fox jumped over the lazy dog\";\necho \"The encoded message\
    \ is: $message\\n\";\n$encodedMessage = encode($message);\necho \"The encoded\
    \ message is: $encodedMessage\\n\";\n</code>\n<|/ a tags=encryption,php,caesar-cipher,string,algorithm\
    \ |>\n<| c |>\nThe above algorithm has a runtime of O(n^2), where n is the number\
    \ of characters in the message. You can improve it to O(n) by only looking at\
    \ characters that are already in the message (O(n+m) where m is the length of\
    \ the message).\n<|/ c |>\n<| c |>\nThe above is correct. My algorithm is just\
    \ an improvement of the one I wrote before I noticed the issue of the number of\
    \ characters. As far as the algorithm is concerned, it's still O(n^2) because\
    \ of the repeated str\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpigjhzrge.php on line 75\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n   $message = strtolower($message);\n   $alphabet = str_split('abcdefghijklmnopqrstuvwxyz');\n\
    \   $vowels = str_split('aeiou');\n   $encoded = '';\n   foreach (str_split($message)\
    \ as $letter) {\n      $letterIndex = array_search($letter, $alphabet);\n    \
    \  if ($letterIndex > -1) {\n         $letter = $alphabet[$letterIndex + 1];\n\
    \      }\n      $encoded = $encoded . $letter;\n   }\n   foreach (str_split($encoded)\
    \ as $letter) {\n      $letterIndex = array_search($letter, $vowels);\n      if\
    \ ($letterIndex > -1) {\n         $letter = $alphabet[$letterIndex - 1];\n   \
    \   }\n      $encoded = $encoded . $letter;\n   }\n   return $encoded;\n}\n\n\
    function candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10u76gsb.php:39\n\
    Stack trace:\n#0 /tmp/tmp10u76gsb.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp10u76gsb.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $result = \"\";\n  for ($i = 0; $i < strlen($message);\
    \ $i++) {\n    $result .= strtoupper(substr($message,$i,1));\n  }\n  $vowels =\
    \ \"AEIOUaeiou\";\n  for ($i = 0; $i < strlen($result); $i++) {\n    if (strpos($vowels,$result[$i])\
    \ !== false) $vowel = $result[$i];\n    else $vowel = strtoupper($result[$i]);\n\
    \    for ($x = 0; $x < 2; $x++) {\n      $position = strpos($vowels,$vowel);\n\
    \      if ($position === false) $position = $i;\n      $replace = substr($vowels,$position,1);\n\
    \      $result = str_replace($vowel,$replace,$result);\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5eue1uxo.php:35\n\
    Stack trace:\n#0 /tmp/tmp5eue1uxo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5eue1uxo.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  return $message;\n}\nfunction candidate(...$args) {\n\
    \    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mzkp_7t.php:20\n\
    Stack trace:\n#0 /tmp/tmp5mzkp_7t.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5mzkp_7t.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $code = '';\n  for($i=0; $i<strlen($message); $i++) {\n\
    \    if ($message[$i] == $message[$i]) {\n      $code .= $message[$i];\n    }\
    \ else {\n      $code .= strtoupper($message[$i]);\n    }\n  }\n  return $code;\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpob1gilj6.php:29\n\
    Stack trace:\n#0 /tmp/tmpob1gilj6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpob1gilj6.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $vowels = 'aeiou';\n  $messageArr = str_split($message);\n\
    \  $result = '';\n  $i = 0;\n  foreach ($messageArr as $value) {\n    if ($i %\
    \ 2 == 0) {\n      $result += strtoupper($value);\n    } else {\n      $result\
    \ += strtolower($value);\n    }\n    $i++;\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp1q09sunr.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmp1q09sunr.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmp1q09sunr.php on line\
    \ 21\n\nWarning: A non-numeric value encountered in /tmp/tmp1q09sunr.php on line\
    \ 19\n\nWarning: A non-numeric value encountered in /tmp/tmp1q09sunr.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1q09sunr.php:32\n\
    Stack trace:\n#0 /tmp/tmp1q09sunr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1q09sunr.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $message = strtr($message, 'abcdefghijklmnopqrstuvwxyz',\
    \ 'TGST');\n    $message = strtr($message, 'aeiouAEIOU', 'tHKS KS C MGSSCGG');\n\
    \    return $message;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpijdfm1yq.php:23\n\
    Stack trace:\n#0 /tmp/tmpijdfm1yq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpijdfm1yq.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  \n  \n  \n  \n\n}\nfunction candidate(...$args) {\n  \
    \  return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplugn_p81.php:24\n\
    Stack trace:\n#0 /tmp/tmplugn_p81.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplugn_p81.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  // Get the array of all letters \n  $allletters = range('a',\
    \ 'z');\n  // Get the array of all vowels \n  $vowels = range('a', 'z');\n  //\
    \ Get the array of all vowel indices in the message\n  $messageIndices = array_keys(str_split($message));\n\
    \  // Get the array of all letters that appear 2 places ahead of \n  // the letter\
    \ in the message as indices. \n  // Get the letters that appear 1 place ahead\
    \ as the remainder. \n  // Get letters that appear 3 places ahead as the 3 letter\
    \ word.\n  $indicesInLetters = array();\n  $remainders = array();\n  for ($i =\
    \ 0; $i < count($message); $i++) {\n    $indicesInLetters[] = array_search($message[$i],\
    \ $allletters);\n    $remainders[] = array_search($message[$i], $vowels);\n  }\n\
    \  $indicesInLetters = array_unique($indicesInLetters);\n  $remainders = array_unique($remainders);\n\
    \  sort($indicesInLetters);\n  sort($remainders);\n  \n  // Create an empty array\
    \ of letters that will hold our new message\n  $newmessage = array();\n  for ($i\
    \ = 0; $i < count($indicesInLetters); $i++) {\n    if ($i < $indicesInLetters[0])\
    \ {\n      $newmessage[] = $allletters[$i];\n    }\n    if ($i == $indicesInLetters[0])\
    \ {\n      $newmessage[] = $remainders[$i];\n    }\n    if ($i > $indicesInLetters[count($indicesInLetters)\
    \ - 1]) {\n      $newmessage[] = $allletters[$i];\n    }\n  }\n  return implode($newmessage);\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp9gj95q09.php on line 25\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp9gj95q09.php\
    \ on line 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gj95q09.php:55\n\
    Stack trace:\n#0 /tmp/tmp9gj95q09.php(62): test()\n#1 {main}\n  thrown in /tmp/tmp9gj95q09.php\
    \ on line 55\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $encodedMessage = \"\";\n\n    // Loop through the message\
    \ one character at a time. \n    for ($i = 0; $i < strlen($message); $i++) {\n\
    \        // Set a new char to the current character and keep track of the position\
    \ of \n        // the current vowel. \n        $currentChar = strtolower($message[$i]);\n\
    \        $vowelPos = $i + 1;\n\n        // If the vowel position is 2, then we\
    \ know that we need to \n        // swap case. \n        if ($vowelPos == 2) {\n\
    \            // Convert $currentChar to uppercase \n            $encodedMessage\
    \ = $encodedMessage . strtoupper($currentChar);\n\n            // The message\
    \ now contains uppercase letters. \n            // Convert the first letter of\
    \ $message to lowercase. \n            $messageFirstChar = strtolower($message[$i]);\n\
    \n            // Swap the case\n            $encodedMessage = $encodedMessage\
    \ . strtoupper($messageFirstChar);\n\n            // Move on to the next char.\
    \ \n            $i++;\n        }\n        // If the vowel position is not 2, then\
    \ we know that the current \n        // character is either a vowel or not a vowel,\
    \ so append it to \n        // our new message \n        else {\n            $encodedMessage\
    \ .= $currentChar;\n        }\n    }\n\n    return $encodedMessage;\n}\n\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvozfqy3.php:54\n\
    Stack trace:\n#0 /tmp/tmpfvozfqy3.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpfvozfqy3.php\
    \ on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n   $chars = str_split($message);\n   $result = '';\n   foreach\
    \ ($chars as $char) {\n      $result .= $char;\n      if ($char === 'a' || $char\
    \ === 'e' || $char === 'i' || $char === 'o' || $char === 'u') {\n         $result\
    \ .= $chars[$char + 1];\n      }\n   }\n   return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_od9e2ms.php:29\n\
    Stack trace:\n#0 /tmp/tmp_od9e2ms.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_od9e2ms.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $letters = str_split($message);\n  $encoded = '';\n  for\
    \ ($i = 0; $i < count($letters); ++$i) {\n    $a = $letters[$i]; // get the current\
    \ letter\n    $l2 = str_length($a); // get the length of a lowercase letter\n\
    \    $l3 = str_length($a) + 2; // get the length of a vowel\n    $l4 = str_length($a)\
    \ + 4; // get the length of a consonant\n    // get the index of the current vowel\n\
    \    $vowel = strpos($letters, 'a', $i);\n    // get the letter that is two places\
    \ ahead, e.g. 'e' in 'aeiou'\n    $vowel2 = strpos(substr($letters, $vowel + 1,\
    \ 1), 'a', $i);\n    // get the letter that is two places ahead, e.g. 'e' in 'aeiou'\n\
    \    $consonant = strpos($letters, 'o', $i);\n    // get the letter that is two\
    \ places ahead, e.g. 'e' in 'aeiou'\n    $consonant2 = strpos(substr($letters,\
    \ $consonant + 1, 1), 'o', $i);\n    // if the first letter is a vowel, swap with\
    \ the next letter, \n    // otherwise swap with 'o'\n    if ($l2 == 1) {\n   \
    \   $letters[$vowel] = $letters[$i];\n      $letters[$i] = $vowel2;\n    }\n \
    \   // if the second letter is a vowel, swap with the next letter, \n    // otherwise\
    \ swap with 'o'\n    if ($l3 == 1) {\n      $letters[$consonant] = $letters[$i];\n\
    \      $letters[$i] = $consonant2;\n    }\n    // if the first letter is a consonant,\
    \ swap with the next letter, \n    // otherwise swap with 'a'\n    if ($l4 ==\
    \ 1) {\n      $letters[$i] = $letters[$i];\n      $letters[$vowel] = $letters[$vowel2];\n\
    \    }\n    $encoded .= implode('', $letters); // append the letters back to the\
    \ string\n  }\n  return $encoded;\n}\n\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function str_length()\
    \ in /tmp/tmp2r48u2fh.php:17\nStack trace:\n#0 /tmp/tmp2r48u2fh.php(52): encode('TEST')\n\
    #1 /tmp/tmp2r48u2fh.php(56): candidate('TEST')\n#2 /tmp/tmp2r48u2fh.php(63): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2r48u2fh.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"\
    y\");\n    $new = array();\n    $newString = \"\";\n    $string = $message;\n\
    \    $length = strlen($message);\n    for ($i = 0; $i < $length; $i++) {\n   \
    \     $newString = $newString . strtoupper($string[$i]);\n    }\n    $length =\
    \ strlen($newString);\n    for ($i = 0; $i < $length; $i++) {\n        $newString\
    \ = $newString . strtolower($newString[$i]);\n        for ($j = 0; $j < strlen($vowels);\
    \ $j++) {\n            $newString = $newString . strtoupper($vowels[$j]);\n  \
    \      }\n    }\n    $length = strlen($newString);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $newString = $newString . strtolower($newString[$i]);\n   \
    \     for ($j = 0; $j < strlen($vowels); $j++) {\n            $newString = $newString\
    \ . strtoupper($vowels[$j]);\n        }\n    }\n    return $newString;\n}\n</code>\n\
    <|/ q dscore=0 |>\n<| c |>\nWhat code do you have so far ? We will help you fix\
    \ it, not do all the work for you.\n<|/ c |>\n<| c |>\nWhy do you have to `strlen`\
    \ each character of the message? Just set `$length` equal to the length of the\
    \ message and use `for` loops.\n<|/ c |>\n<| c |>\nI suggest you to use regular\
    \ expressions to do that. With regular expressions you can easily find patterns\
    \ and replace them\n<|/ c |>\n<| c |>\nThanks for all the comments. I am looking\
    \ at code from various sources and trying to modify it to make it work with my\
    \ requirements. I am pretty new to coding and trying to learn as I go. As I mentioned\
    \ above, I am a beginner and just trying to understand what I'm doing and what\
    \ I am not doing.\n<|/ c |>\n<| c |>\nI suggest you to use the functions `str_replace`\
    \ and `preg_replace`\n<|/ c |>\n<| a |>\nThe most basic way to do this would be:\n\
    <code>\n$string = \"This is a message with a long sentence.\";\n$newstring = strtr($string,\
    \ \n    array(\"a\" => \"A\", \"e\" => \"E\", \"i\" => \"I\", \"o\" => \"O\",\
    \ \"u\" => \"U\", \"y\" => \"Y\"));\necho $newstring;\n</code>\nA more advanced\
    \ way would be:\n<code>\n$string = \"This is a message with a long sentence.\"\
    ;\n$newstring = preg_replace_callback\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpigeaz4mz.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $result = '';\n  for ($i = 0; $i < strlen($message); $i++)\
    \ {\n    // find 2 letters ahead of this letter\n    $letter = substr($message,\
    \ $i, 2);\n    $letter = strtolower($letter);\n    $pos = array_search($letter,\
    \ array('a','e','i','o','u'));\n    $result .= $pos == FALSE ? $letter : \n  \
    \    substr($message, 0,$i).\n      $pos+strlen($letter).\n      substr($message,$i+1,strlen($message));\n\
    \  }\n  return $result;\n}\n</code>\n<|/ a dscore=0 tags=algorithm,php,c# |>\n\
    <| c |>\nThanks for your reply.\n<|/ c |>\n<| a tags=algorithm,php,c# |>\nHere's\
    \ a solution using PHP.  I'm not sure what your criteria is for \"two letters\
    \ ahead\", but this is what I came up with:\n<code>\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpakie4ynq.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $newmessage = '';\n    for($i = 0; $i < strlen($message);\
    \ $i++) {\n        // Swap the case of the letter in $message\n        $newmessage\
    \ .= mb_strtoupper(mb_substr($message,$i,1,ENT_QUOTES));\n        $newmessage\
    \ .= mb_strtolower(mb_substr($message,$i,1,ENT_QUOTES));\n        // Get the next\
    \ letter 2 places ahead of the vowel\n        $newmessage .= mb_strtoupper(mb_substr($message,$i+1,1,ENT_QUOTES));\n\
    \        $newmessage .= mb_strtolower(mb_substr($message,$i+1,1,ENT_QUOTES));\n\
    \    }\n    return $newmessage;\n}\n\nfunction candidate(...$args) {\n    return\
    \ encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TEST\"\
    ) !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_strtoupper()\
    \ in /tmp/tmpuz4tk43x.php:16\nStack trace:\n#0 /tmp/tmpuz4tk43x.php(26): encode('TEST')\n\
    #1 /tmp/tmpuz4tk43x.php(30): candidate('TEST')\n#2 /tmp/tmpuz4tk43x.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmpuz4tk43x.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // Write your implementation here\n}\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5jz_1h7a.php:20\n\
    Stack trace:\n#0 /tmp/tmp5jz_1h7a.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5jz_1h7a.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  // Your code goes here\n}\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptrqizpfg.php:20\n\
    Stack trace:\n#0 /tmp/tmptrqizpfg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptrqizpfg.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // Split message in words, \n    // so that every letter\
    \ is on it's own \n    // line \n    $words = explode(\" \", $message);\n    \n\
    \    // Iterate over each word, \n    // and replace it with the new encoded \n\
    \    // string \n    foreach ($words as $key => $word) {\n        $newWord = encodeWord($word);\n\
    \        $words[$key] = $newWord;\n    }\n    \n    // Join back the string into\
    \ one \n    // string \n    return join(\" \", $words);\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function encodeWord()\
    \ in /tmp/tmpl6ryvkm9.php:22\nStack trace:\n#0 /tmp/tmpl6ryvkm9.php(32): encode('TEST')\n\
    #1 /tmp/tmpl6ryvkm9.php(36): candidate('TEST')\n#2 /tmp/tmpl6ryvkm9.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl6ryvkm9.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // Your code goes here. \n    return $message;\n}\n\
    </cell>\n<cell>\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp7sf1ktnw.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = \"aeiou\";\n    $message = strtoupper($message);\n\
    \    $message = strtr($message, $vowels, array_combine($vowels, array_fill(0,\
    \ count($vowels), 'A')));\n    $message = strtr($message, 'AEIOU', array_combine(array_diff($vowels,\
    \ $message), array_fill(0, count($vowels), 'E')));\n    return $message;\n}\n\
    function candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp3sy6c9l9.php on line 15\n\nWarning: array_combine() expects\
    \ parameter 1 to be array, string given in /tmp/tmp3sy6c9l9.php on line 15\n\n\
    Warning: array_diff(): Expected parameter 1 to be an array, string given in /tmp/tmp3sy6c9l9.php\
    \ on line 16\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp3sy6c9l9.php on line 16\n\nWarning: array_combine()\
    \ expects parameter 1 to be array, null given in /tmp/tmp3sy6c9l9.php on line\
    \ 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3sy6c9l9.php:24\n\
    Stack trace:\n#0 /tmp/tmp3sy6c9l9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3sy6c9l9.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = array(\"A\", \"E\", \"I\", \"O\", \"U\");\n\
    \    $new_message = array();\n    foreach($message as $letter) {\n        $new_message[]\
    \ = $letter;\n    }\n    foreach($message as $letter) {\n        foreach($vowels\
    \ as $vow) {\n            if($letter == $vow) {\n                $new_message[$vow]\
    \ = $letter;\n            }\n        }\n    }\n    foreach($message as $letter)\
    \ {\n        foreach($vowels as $vow) {\n            if($letter == $vow) {\n \
    \               $new_message[$vow] = $new_message[$vow];\n            }\n    \
    \    }\n    }\n    foreach($new_message as $letter) {\n        if($letter == \"\
    H\") {\n            $new_message = \"H\";\n        }\n    }\n    return $new_message;\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpxh1aliwo.php\
    \ on line 15\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpxh1aliwo.php\
    \ on line 18\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpxh1aliwo.php\
    \ on line 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxh1aliwo.php:45\n\
    Stack trace:\n#0 /tmp/tmpxh1aliwo.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpxh1aliwo.php\
    \ on line 45\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $positions\
    \ = array();\n    $length = 0;\n    $output = '';\n    $length = strlen($message);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $pos = strpos($alphabet, $message[$i]);\n\
    \        if ($pos === false) {\n            $pos = 0;\n        }\n        $positions[$i]\
    \ = $pos;\n    }\n    for ($i = 0; $i < $length; $i++) {\n        $pos = $positions[$i];\n\
    \        if ($pos % 2 == 0) {\n            $output .= $message[$i];\n        }\
    \ else {\n            $output .= $alphabet[$pos - 2];\n        }\n    }\n    return\
    \ $output;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks, I didn't realise PHP\
    \ had this capability built in - much simpler than my solution. Thanks!\n<|/ c\
    \ |>\n<| a dscore=0 |>\nA simple way to accomplish this would be to make a dictionary\
    \ that holds the letters that should be replaced and a function that translates\
    \ each letter to a replacement letter. \nThe first part is fairly easy:\n<code>\n\
    $map = array(\n    'a' => 'w',\n    'b' => 'z',\n    'c' => 'q',\n    'd' => 'j',\n\
    \    'e' => 'k',\n    'f' => 'x',\n    'g' => 'a',\n    'h' => 'w',\n    'i' =>\
    \ 'd',\n    'j' => 'z',\n    'k' => 'j',\n    'l' => 's',\n    'm' => 'w',\n \
    \   'n' => 'q',\n    'o' => 'k'\n);\n</code>\nThen you can make your function:\n\
    <code>\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpykkdmenr.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $messageArray = str_split($message);\n    $encodedMessageArray\
    \ = array();\n    \n    for($i=0; $i < count($messageArray); $i++) {\n       \
    \ $encodedMessageArray[$i] = chr(65 + array_search($messageArray[$i], $vowels));\n\
    \    }\n    return implode($encodedMessageArray);\n}\n\n$message = 'This is a\
    \ message';\n$encodedMessage = encode($message);\necho $encodedMessage;\n</code>\n\
    <|/ a tags=encryption,php,string |>\n<| a tags=encryption,php,string |>\nThis\
    \ should do the trick:\n<code>\n$vowels = \"AEIOUaeiou\";\n$message = \"This is\
    \ an example\";\n$key = \"\";\n$i = 0;\nforeach($vowels as $v) {\n    $key .=\
    \ chr(ord($v) + 2);\n}\n$key = substr($key, 0, strlen($key)/2);\n\n$message =\
    \ str_split($message);\nforeach($message as $m) {\n    echo $key.$m;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nNice and compact, though `substr($key, 0, strlen($key)/2);`\
    \ will do it in one go: `$key = substr($key, 0, strlen($key)/2);`\n<|/ c |>\n\
    <| a dscore=2 tags=encryption,php,string |>\nI think this can help you\n<code>\n\
    $vowels = \"AEIOUaeiou\";\n$message = \"This is an example\";\n$key = \"\";\n\
    $i = 0;\nforeach($vowels as $v) {\n    $key .= chr(ord($v) + 2);\n}\n$key = substr($key,\
    \ 0, strlen($key)/2);\n\n$message = str_split($message);\nforeach($message as\
    \ $m) {\n    echo $key.$m;\n}\n</code>\n<|/ a |>\n<| a dscore=1 |>\n<code>\n<?php\n\
    $vowels = \"AEIOUaeiou\";\n$message = \"This is an example\";\n$key = \"\";\n\
    $i = 0;\nforeach($vowels as $v) {\n    $key .= chr(ord($v) + 2);\n}\n$key = substr($key,\
    \ 0, strlen($key)/2);\n\n$message = str_split($message);\nforeach($message as\
    \ $m) {\n    echo $key.$m;\n}\n</code>\n<|/ a tags=encryption,php,string |>\n\
    <| a |>\n<code>\n$encrypt = \"This is a message\";\n$encrypt1 = array();\n$encrypt2\
    \ = \"\";\n$encrypt = str_split($encrypt);\nforeach ($encrypt as $a) {\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpydp89iiu.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $message = '' . $message; // don't modify original!\n\
    \    $result = '';\n    $len = strlen($message);\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        $char = strtolower($message[$i]);\n        if ($char != $char)\
    \ {\n            $result .= $char;\n        } else {\n            $result .= $char;\n\
    \            $i++;\n            $j = $i;\n            $char2 = strtolower($message[$i]);\n\
    \            if ($char != $char2) {\n                while ($j < $len && $j !=\
    \ $i) {\n                    $char = $char . $message[$j++];\n               \
    \     $char = str_replace(\"AEIOUaeiou\", \"E\", $char);\n                   \
    \ $result .= $char;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpie8zavu3.php:42\n\
    Stack trace:\n#0 /tmp/tmpie8zavu3.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpie8zavu3.php\
    \ on line 42\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // Only 1 vowel ('o' in this case) \n    // will need\
    \ to be replaced per letter. \n    $vowel = 'o';\n    $message = strtoupper($message);\
    \ // Convert to uppercase \n    // Iterate over each letter, \n    // replacing\
    \ vowels with the one in \n    // the english alphabet 2 places ahead of it. \n\
    \    $letters = str_split($message); \n    $result = \"\";\n    foreach ($letters\
    \ as $letter) {\n        $replacement = substr($letter, 1);\n        $replacement\
    \ = substr($replacement, 1);\n        $replacement = $vowel + $replacement;\n\
    \        // Replace all vowels in the message \n        // with the letter that\
    \ appears 2 places \n        // ahead of that vowel in the english alphabet. \n\
    \        // Example, if the vowel is 'i', \n        // the replacement will be\
    \ 'o'. \n        // Since 'o' is the letter 'o' in the \n        // english alphabet,\
    \ that is the letter that \n        // appears 2 places ahead of the vowel in\
    \ \n        // the english alphabet. \n        $letter2 = substr($vowel, 0, 1);\n\
    \        $replacement2 = substr($replacement, 1);\n        $result = $result .\
    \ $letter2 . $replacement2;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpen7ap3h2.php on line\
    \ 25\n\nWarning: A non-numeric value encountered in /tmp/tmpen7ap3h2.php on line\
    \ 25\n\nWarning: A non-numeric value encountered in /tmp/tmpen7ap3h2.php on line\
    \ 25\n\nWarning: A non-numeric value encountered in /tmp/tmpen7ap3h2.php on line\
    \ 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpen7ap3h2.php:47\n\
    Stack trace:\n#0 /tmp/tmpen7ap3h2.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpen7ap3h2.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \    $vowels = array('e','i','o','u','a');\n    $replacements = array('E','I','O','U','A');\n\
    \    $newMessage = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n    \
    \    $newMessage = $newMessage . substr($alphabet, strtolower($message[$i]));\n\
    \        $newMessage = $newMessage . str_replace($vowels, $replacements, substr($alphabet,\
    \ strtolower($message[$i]) . $alphabet[strtolower($message[$i]) + 1]));\n    }\n\
    \    return $newMessage;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: substr() expects parameter 1 to be string, array given in /tmp/tmpegcx89o1.php\
    \ on line 18\n\nWarning: A non-numeric value encountered in /tmp/tmpegcx89o1.php\
    \ on line 19\n\nWarning: substr() expects parameter 1 to be string, array given\
    \ in /tmp/tmpegcx89o1.php on line 19\n\nWarning: substr() expects parameter 1\
    \ to be string, array given in /tmp/tmpegcx89o1.php on line 18\n\nWarning: A non-numeric\
    \ value encountered in /tmp/tmpegcx89o1.php on line 19\n\nWarning: substr() expects\
    \ parameter 1 to be string, array given in /tmp/tmpegcx89o1.php on line 19\n\n\
    Warning: substr() expects parameter 1 to be string, array given in /tmp/tmpegcx89o1.php\
    \ on line 18\n\nWarning: A non-numeric value encountered in /tmp/tmpegcx89o1.php\
    \ on line 19\n\nWarning: substr() expects parameter 1 to be string, array given\
    \ in /tmp/tmpegcx89o1.php on line 19\n\nWarning: substr() expects parameter 1\
    \ to be string, array given in /tmp/tmpegcx89o1.php on line 18\n\nWarning: A non-numeric\
    \ value encountered in /tmp/tmpegcx89o1.php on line 19\n\nWarning: substr() expects\
    \ parameter 1 to be string, array given in /tmp/tmpegcx89o1.php on line 19\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpegcx89o1.php:29\nStack\
    \ trace:\n#0 /tmp/tmpegcx89o1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpegcx89o1.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $messageChars = preg_replace('/[^a-z]+/i', \"\", $message);\n    $messageCharsArr\
    \ = str_split($messageChars);\n    $encodedMessage = \"\";\n    $vowelsArr = str_split($vowels);\n\
    \    foreach($messageCharsArr as $char) {\n        $encodedMessage = str_replace($vowelsArr[$vowelsArr[0]],\
    \ $vowelsArr[$vowelsArr[count($vowelsArr) - 1]].$vowelsArr[$vowelsArr[0]], $encodedMessage);\n\
    \    }\n    return $encodedMessage;\n}\n</code>\n<|/ a dscore=3 tags=php,string\
    \ |>\n<| a tags=php,string |>\nThe answer by is great, but just for reference,\
    \ here's a way to implement it using the PHP 5.5 string functions only:\n<code>\n\
    <?php\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqgterbnj.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    return strtr($message, \n            array_combine(array_keys(str_split($message)),\
    \ \n                          array_values(str_split($message))\n            \
    \             ));\n}\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wwtt7_0.php:23\n\
    Stack trace:\n#0 /tmp/tmp4wwtt7_0.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4wwtt7_0.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $code = array();\n    $letters = str_split($message);\n\
    \    foreach ($letters as $letter) {\n        $code[$letter] = $letter;\n    }\n\
    \    $length = strlen($message);\n    $vowels = \"aeiou\";\n    $pos = 0;\n  \
    \  $prevVowel = null;\n    foreach ($code as $letter => $value) {\n        $pos\
    \ = strpos($vowels, $letter);\n        if ($pos !== false) {\n            if ($prevVowel)\
    \ {\n                $code[$prevVowel] = $letter;\n                $prevVowel\
    \ = null;\n            }\n        }\n        $prevVowel = $letter;\n    }\n  \
    \  $final = '';\n    foreach ($code as $letter => $value) {\n        $pos = strpos($vowels,\
    \ $letter);\n        if ($pos !== false) {\n            $letter = $pos;\n    \
    \    }\n        $final .= $letter;\n    }\n    return $final;\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphnel2f2r.php:48\n\
    Stack trace:\n#0 /tmp/tmphnel2f2r.php(55): test()\n#1 {main}\n  thrown in /tmp/tmphnel2f2r.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n   $replace = array('a','e','i','o','u','A','E','I','O','U');\n\
    \   $messageArr = str_split($message);\n   $result = array();\n   foreach($messageArr\
    \ as $key => $value) {\n       $pos = array_search($value, $replace);\n      \
    \ if($pos === false) \n           $pos = $key;\n       $result[$pos][] = $value;\n\
    \   }\n   $resultArr = array();\n   foreach($result as $pos => $letters){\n  \
    \     $resultArr[] = array_shift($letters);\n       $resultArr[] = array_shift($letters);\n\
    \       $resultArr[] = array_shift($letters);\n   }\n   return implode('', $resultArr);\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_8kwjtg.php:36\n\
    Stack trace:\n#0 /tmp/tmp2_8kwjtg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2_8kwjtg.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $newMessage = '';\n    $vowels = ['A','E','I','O','U'];\n\
    \    for($i=0; $i<strlen($message); $i++){\n        $char = substr($message,$i,1);\n\
    \        if (in_array($char, $vowels))\n            $newMessage .= $char;\n  \
    \      else\n            $newMessage .= $char;\n    }\n    $newMessage = str_replace(\"\
    \ \",\"-\",$newMessage);\n    return $newMessage;\n}\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ixfzrtd.php:30\n\
    Stack trace:\n#0 /tmp/tmp3ixfzrtd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3ixfzrtd.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \    foreach ($alphabet as $letter) {\n        for ($i = 0; $i < strlen($message);\
    \ $i++) {\n            if ($message[$i] == $letter) {\n                $message[$i]\
    \ = $alphabet[($i + (2 * $letter))];\n            }\n        }\n    }\n    return\
    \ $message;\n}\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphaxieu_d.php:28\n\
    Stack trace:\n#0 /tmp/tmphaxieu_d.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphaxieu_d.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $message = '' . strtoupper($message) . '';\n    $encoded\
    \ = '';\n    for($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if($char == 'A') {\n            $encoded .= $message[$i];\n        }\n\
    \        else if($char == 'a') {\n            $encoded .= $message[$i];\n    \
    \    }\n        else if($char == 'E') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'e') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'I') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'i') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'O') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'o') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'U') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'u') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'a') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'e') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'i') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'o') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'u') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'A') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'E') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'I') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'O') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'U') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'a') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'e') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'i') {\n            $encoded .= $message[$i];\n\
    \        }\n        else if($char == 'o') {\n            $encoded .= $\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5ywtrozk.php on line 88\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = 'aeiouyAEIOUY';\n    $result = '';\n    \n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        $char = substr($message,\
    \ $i, 1);\n        $found = false;\n        \n        // Check if character is\
    \ uppercase, and\n        // if the next character is lowercase\n        if ($char\
    \ !== strtoupper($char)) {\n            $char = strtolower($char);\n        }\n\
    \        if ($found) {\n            \n            // Check if character is first\
    \ letter of consonant\n            if ($found === false && substr($vowels, $i,\
    \ 1) === substr($char, 0, 1)) {\n                // Consonant!\n             \
    \   $found = true;\n                $char = substr($vowels, $i, 1);\n        \
    \        $i++;\n            }\n            \n            // Check if character\
    \ is first letter of vowel\n            if ($found === false && substr($vowels,\
    \ $i, 1) === substr($char, strlen($char) - 1, 1)) {\n                // Vowel!\n\
    \                $found = true;\n                $char = substr($vowels, $i, 1);\n\
    \            }\n        }\n        \n        // Swap vowels in character with\
    \ character that appears \n        // two places ahead of that vowel\n       \
    \ $result = $result.substr($char, 0, 1).$char.substr($char, 1, 1);\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpilt4ujua.php:55\n\
    Stack trace:\n#0 /tmp/tmpilt4ujua.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpilt4ujua.php\
    \ on line 55\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $letters = str_split($message);\n  \n  $encoded = '';\n\
    \  for ($i=0, $n=strlen($letters); $i < $n; $i++) {\n    $encoded = $encoded\n\
    \      .$letters[$i];\n  }\n  \n  // This part converts vowels to lowercase\n\
    \  $encoded = preg_replace('/[aeiou]/i', 'a', $encoded);\n  \n  // This part converts\
    \ vowels to uppercase\n  $encoded = preg_replace('/[AEIOU]/i', 'A', $encoded);\n\
    \  \n  // This part converts vowels to consonants (1 place ahead of the vowel)\n\
    \  $encoded = preg_replace('/[AEIOU]/', 'O', $encoded);\n  \n  // This part swaps\
    \ case for all letters (including vowels)\n  $encoded = preg_replace('/[AEIOU]/i',\
    \ 'o', $encoded);\n  \n  return $encoded;\n}\n\nfunction candidate(...$args) {\n\
    \    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: strlen() expects parameter 1 to be string, array given in /tmp/tmp2smhtz5f.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2smhtz5f.php:41\n\
    Stack trace:\n#0 /tmp/tmp2smhtz5f.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp2smhtz5f.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    return preg_replace_callback('/./u', function($m) {\
    \ return \n        $m[0].\n        $m[1].\n        chr(ord($m[2]) - ord('a')).\n\
    \        chr(ord($m[3]) - ord('a')); }, $message);\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ehuly10.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ehuly10.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6ehuly10.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $message = str_split($message);\n  $out = \"\";\n  foreach\
    \ ($message as $letter) {\n    $out[$letter] = $letter;\n  }\n  $out[0] = strtoupper($out[0]);\n\
    \  for ($i=1; $i<count($out); $i++) {\n    $out[$i] = strtoupper($out[$i]);\n\
    \  }\n  foreach ($out as $key => $letter) {\n    $out = str_split($out);\n   \
    \ $out[$key] = $letter;\n    $out = implode($out);\n  }\n  return $out;\n}\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Illegal string offset 'T' in /tmp/tmpnvqthmcn.php on line 16\n\
    \nWarning: Illegal string offset 'E' in /tmp/tmpnvqthmcn.php on line 16\n\nWarning:\
    \ Illegal string offset 'S' in /tmp/tmpnvqthmcn.php on line 16\n\nWarning: Illegal\
    \ string offset 'T' in /tmp/tmpnvqthmcn.php on line 16\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpnvqthmcn.php\
    \ on line 19\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpnvqthmcn.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnvqthmcn.php:34\n\
    Stack trace:\n#0 /tmp/tmpnvqthmcn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnvqthmcn.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $result = \"\";\n    foreach (str_split($message) as\
    \ $letter) {\n        $result .= $letter;\n        $firstVowel = $letter{0};\n\
    \        $secondVowel = $letter{1};\n        if ($firstVowel === $secondVowel)\
    \ {\n            $result .= strtoupper($firstVowel);\n        } else {\n     \
    \       $result .= strtolower($secondVowel);\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4am8nqo.php:32\n\
    Stack trace:\n#0 /tmp/tmpl4am8nqo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpl4am8nqo.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  // Code goes here\n  \n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppek85jda.php:22\n\
    Stack trace:\n#0 /tmp/tmppek85jda.php(29): test()\n#1 {main}\n  thrown in /tmp/tmppek85jda.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $vowels = 'aeiouy';\n    $letters = array();\n    $result\
    \ = \"\";\n    for($i = 0; $i < strlen($message); $i++) {\n        $letter = $message[$i];\n\
    \        // Convert to uppercase\n        $letter = strtoupper($letter);\n   \
    \     // If it's a vowel, save it\n        if(in_array($letter, $vowels)) {\n\
    \            $letters[] = $letter;\n        } else {\n            // Iterate over\
    \ the vowels and find the index of the letter\n            // that appears 2 places\
    \ ahead of the vowel\n            $vowel = strtolower($vowels[array_search($letter,\
    \ $vowels)]);\n            for($j = 1; $j < strlen($message); $j++) {\n      \
    \          // If not the same letter, ignore the letter\n                if($letter\
    \ != $message[$j]) {\n                    continue;\n                }\n     \
    \           $letter = $message[$j];\n                // If it's the same vowel\
    \ again, save it\n                if($letter == $vowel) {\n                  \
    \  $letters[] = $letter;\n                    break;\n                }\n    \
    \            // Otherwise, set the next letter as vowel\n                $vowel\
    \ = strtolower($vowels[array_search($letter, $vowels)]);\n            }\n    \
    \        // Output the vowel letter\n            $result .= $vowel;\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: in_array() expects parameter 2 to be array, string given in\
    \ /tmp/tmp3mdxz1jt.php on line 21\n\nWarning: array_search() expects parameter\
    \ 2 to be array, string given in /tmp/tmp3mdxz1jt.php on line 26\n\nWarning: array_search()\
    \ expects parameter 2 to be array, string given in /tmp/tmp3mdxz1jt.php on line\
    \ 39\n\nWarning: in_array() expects parameter 2 to be array, string given in /tmp/tmp3mdxz1jt.php\
    \ on line 21\n\nWarning: array_search() expects parameter 2 to be array, string\
    \ given in /tmp/tmp3mdxz1jt.php on line 26\n\nWarning: array_search() expects\
    \ parameter 2 to be array, string given in /tmp/tmp3mdxz1jt.php on line 39\n\n\
    Warning: in_array() expects parameter 2 to be array, string given in /tmp/tmp3mdxz1jt.php\
    \ on line 21\n\nWarning: array_search() expects parameter 2 to be array, string\
    \ given in /tmp/tmp3mdxz1jt.php on line 26\n\nWarning: array_search() expects\
    \ parameter 2 to be array, string given in /tmp/tmp3mdxz1jt.php on line 39\n\n\
    Warning: in_array() expects parameter 2 to be array, string given in /tmp/tmp3mdxz1jt.php\
    \ on line 21\n\nWarning: array_search() expects parameter 2 to be array, string\
    \ given in /tmp/tmp3mdxz1jt.php on line 26\n\nWarning: array_search() expects\
    \ parameter 2 to be array, string given in /tmp/tmp3mdxz1jt.php on line 39\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp3mdxz1jt.php:53\nStack\
    \ trace:\n#0 /tmp/tmp3mdxz1jt.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp3mdxz1jt.php\
    \ on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $messageLength = strlen($message);\n    $encoded = '';\n\
    \    $vowels = \"aeiouAEIOU\";\n    for ($i = 0; $i < $messageLength; $i++) {\n\
    \        $letter = $message[$i];\n        // If this is a letter, we know we will\
    \ need to swap \n        // case\n        if (ctype_alpha($letter)) {\n      \
    \      $encoded = str_replace($vowels, $vowels[$i], $encoded);\n            $encoded\
    \ = str_ireplace($letter, $vowels[$i], $encoded);\n        } else {\n        \
    \    // If this is anything else, we need to keep \n            // the original\
    \ case\n            $encoded = $encoded.$letter;\n        }\n    }\n    return\
    \ $encoded;\n}\n\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19xrxlp8.php:37\n\
    Stack trace:\n#0 /tmp/tmp19xrxlp8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp19xrxlp8.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $length = strlen($message);\n    $encoded = '';\n  \
    \  $vowels = 'aeiouy';\n    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    for\
    \ ($i=0; $i < $length; $i++) {\n        $char = substr($message, $i, 1);\n   \
    \     // get index of char in alphabet\n        $pos = strpos($alphabet, $char);\n\
    \        // get index of char before vowel\n        $pos2 = strpos($vowels, $char);\n\
    \        $encoded .= $pos <= $pos2 ? $alphabet[$pos] . $alphabet[$pos+1] . $char\
    \ . $alphabet[$pos2] : $alphabet[$pos] . $alphabet[$pos+1] . $alphabet[$pos2]\
    \ . $char;\n    }\n    return $encoded;\n}\n\nfunction candidate(...$args) {\n\
    \    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbufmwcck.php:33\n\
    Stack trace:\n#0 /tmp/tmpbufmwcck.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbufmwcck.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $message = strtolower($message);\n    $message = preg_replace('/[^a-z]/',\
    \ '', $message);\n\n    foreach (str_split($message) as $key => $letter) {\n \
    \       if (isset($translation[$letter])) {\n            $message[$key] = $translation[$letter];\n\
    \        }\n    }\n\n    $message = implode('', $message);\n\n    return $message;\n\
    }\n\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: implode(): Invalid arguments passed in /tmp/tmpe4to8o6n.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe4to8o6n.php:32\n\
    Stack trace:\n#0 /tmp/tmpe4to8o6n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpe4to8o6n.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  $alphabetLength\
    \ = strlen($alphabet);\n  $vowels = \"aeiou\";\n  $vowelsLength = strlen($vowels);\n\
    \n  $encodedMessage = \"\";\n  $messageLength = strlen($message);\n  for ($i =\
    \ 0; $i < $messageLength; $i++) {\n    $messageLetter = $message[$i];\n    $encodedMessageLetter\
    \ = $messageLetter;\n    $firstVowelPosition = strpos($alphabet, $messageLetter,\
    \ $vowelsLength);\n    if ($firstVowelPosition === false) {\n      $encodedMessageLetter\
    \ = $messageLetter;\n    }\n    else {\n      $nextVowelPosition = strpos($alphabet,\
    \ $messageLetter, $firstVowelPosition + $vowelsLength);\n      if ($nextVowelPosition\
    \ === false) {\n        $encodedMessageLetter = $messageLetter;\n      }\n   \
    \   else {\n        $firstVowelLetter = $alphabet[$firstVowelPosition];\n    \
    \    $secondVowelLetter = $alphabet[$nextVowelPosition];\n        $thirdVowelLetter\
    \ = $alphabet[$nextVowelPosition + $vowelsLength];\n        $encodedMessageLetter\
    \ = $firstVowelLetter . $secondVowelLetter . $thirdVowelLetter;\n      }\n   \
    \ }\n    $encodedMessage .= $encodedMessageLetter;\n  }\n  return $encodedMessage;\n\
    }\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptmyz98fp.php:48\n\
    Stack trace:\n#0 /tmp/tmptmyz98fp.php(55): test()\n#1 {main}\n  thrown in /tmp/tmptmyz98fp.php\
    \ on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // your code here\n    return $message;\n}\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsnov4y4j.php:21\n\
    Stack trace:\n#0 /tmp/tmpsnov4y4j.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsnov4y4j.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $code = array();\n    $alphabet = range('A', 'Z');\n\
    \    foreach ($message as $k => $v) {\n        $code[$k] = strtoupper($v);\n \
    \   }\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $count = count($message);\n\
    \    foreach ($message as $k => $v) {\n        $letter = strtoupper(substr($code[$k],\
    \ 0, 1));\n        if (!in_array($letter, $alphabet)) {\n            continue;\n\
    \        }\n        $letter = strtoupper($letter);\n        $letter2 = strtoupper(substr($code[$k],\
    \ 1, 1));\n        $code[$k] = $letter . substr($alphabet, $count-$k*2-strlen($letter2))\
    \ . $letter2;\n    }\n    return implode('', $code);\n}\n</code>\n<|/ a dscore=4\
    \ tags=php,ascii |>\n<| c |>\nWhy would you use a `substr()` that doesn't take\
    \ any arguments here?\n<|/ c |>\n<| c |>\n, You're right - I didn't notice that\
    \ part. Fixed.\n<|/ c |>\n<| c |>\nFor some reason, I'm getting an error for me\
    \ when I use `$v` on line 7, and `count` on line 10. Both say `count() expects\
    \ parameter 1 to be array, null given`. Any ideas?\n<|/ c |>\n<| c |>\n- Make\
    \ sure `$message` is an array. `count($message)` is probably not what you want\
    \ if `$message` is not an array.\n<|/ c |>\n<| c |>\n, This should work, but I'm\
    \ getting a syntax error on line 7. Should it be `foreach ($message as $v)` instead\
    \ of `foreach ($message as $k)`?\n<|/ c |>\n<| a tags=php,ascii |>\nI made an\
    \ interesting observation with PHP that I thought was interesting enough to post.\n\
    <code>\n$foo = 'foobar';\n$bar = chr($foo);\necho $bar;\n</code>\nThis works.\
    \ However, if you do this:\n<code>\n$foo = 'foobar';\n$bar = chr($foo);\n$foo\
    \ = $bar;\necho $bar;\n</code>\nIt does not. Now let's look at what happened on\
    \ line 1:\n<code>\n$bar = 'f';\n$foo = $bar;\n</code>\nNow $foo = 'f', but $bar\
    \ is still 'f'. That means that $foo is now a pointer into $bar, so this:\n<code>\n\
    $bar = chr($foo);\necho $\nfunction candidate(...$args) {\n    return encode(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpwqm68s3h.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // Your code goes here.\n}\n</cell>\n<cell>\n%%javascript\n\
    <!-- Ignore this block of javascript -->\nIPython.OutputArea.prototype._should_scroll\
    \ = function(lines) {\n    return false;\n}\n</cell>\n<text>\n(Optional) Exercise:\
    \ Write a function that decodes a message encoded in this way.\n\n\n</text>\n\
    <text>\nPart 5: Practice with regular expressions\n\n</text>\n<text>\nLet's start\
    \ with a simple regular expression.\n\nWe'll start with a regular expression which\
    \ matches the word \"fish\".\n\n\n</text>\n<cell>\nimport re\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpi1135wv5.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $codedMessage = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        $lowerChar = strtolower($char);\n\
    \        if ($char != $lowerChar) {\n            $codedMessage .= strtoupper($char);\n\
    \        } else {\n            $codedMessage .= $lowerChar;\n        }\n    }\n\
    \    return $codedMessage;\n}\n</code>\n<|/ a tags=php,string |>\n<| c |>\nThanks,\
    \ that is very useful to know but doesn't quite work the way I need it to. I'll\
    \ post some more code to show what I need.\n<|/ c |>\n<| c |>\n: You added an\
    \ additional requirement: \"but only up to two letters\".\n<|/ c |>\n<| c |>\n\
    Ah! I see what you mean. Sorry about that. I've edited it so it's what I've been\
    \ working with now but still not working. I'll edit the original post to show\
    \ what I have now.\n<|/ c |>\n<| c |>\nI tried to edit this but it wouldn't let\
    \ me edit for 6 hours so I had to post an answer and then edit it again to reflect\
    \ what it needs to be. I'll edit the original post to show what I need.\n<|/ c\
    \ |>\n<| a tags=php,string |>\n<code>\n<?php\n\nfunction candidate(...$args) {\n\
    \    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2krbjxiv.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $message = $message;\n    $messageLength = strlen($message);\n\
    \    $newMessage = '';\n    $i = 0;\n    $len = strlen($message) - 1;\n    while($i\
    \ < $messageLength) {\n        $char = substr($message, $i, 1);\n        if(!is_numeric($char))\
    \ {\n            $newMessage .= $char;\n            $i++;\n            continue;\n\
    \        }\n        $newMessage .= $message[$i];\n        $i++;\n        while($i\
    \ < $len) {\n            if(is_numeric(substr($message, $i, 1))) {\n         \
    \       $newMessage .= $message[$i];\n                $i++;\n                $newMessage\
    \ .= $char;\n                $i++;\n            }\n            else {\n      \
    \          break;\n            }\n        }\n    }\n    return $newMessage;\n\
    }\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprc4frga8.php:46\n\
    Stack trace:\n#0 /tmp/tmprc4frga8.php(53): test()\n#1 {main}\n  thrown in /tmp/tmprc4frga8.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $letters = str_split($message);\n    $encoded = array();\n    foreach ($letters\
    \ as $letter) {\n        $encoded[] = \n            strtr($letter, \n        \
    \        array(\n                    'a' => 'A',\n                    'b' => 'B',\n\
    \                    'c' => 'C',\n                    'd' => 'D',\n          \
    \          'e' => 'E',\n                    'f' => 'F',\n                    'g'\
    \ => 'G',\n                    'h' => 'H',\n                    'i' => 'I',\n\
    \                    'j' => 'J',\n                    'k' => 'K',\n          \
    \          'l' => 'L',\n                    'm' => 'M',\n                    'n'\
    \ => 'N',\n                    'o' => 'O',\n                    'p' => 'P',\n\
    \                    'q' => 'Q',\n                    'r' => 'R',\n          \
    \          's' => 'S',\n                    't' => 'T',\n                    'u'\
    \ => 'U',\n                    'v' => 'V',\n                    'w' => 'W',\n\
    \                    'x' => 'X',\n                    'y' => 'Y',\n          \
    \          'z' => 'Z',\n                )\n            );\n    }\n    $encoded\
    \ = implode($encoded);\n    $encoded = strtr($encoded, \n        array(\n    \
    \        'AEIOUaeiou' => \n                'aeiouAEIOU',\n            'aeiouAEIOUaeiou'\
    \ => \n                'aeiouAEIOUaeiouAEIOU',\n            'aeiouAEIOUaeiouAEIOU'\
    \ => \n                'aeiouAEIOUaeiouAEIOUAEIOU',\n            'AEIOUaeiouAEIOUaeiouAEIOU'\
    \ => \n                'AEIOUaeiouAEIOUaeiouAEIOUAEIOU',\n        )\n    );\n\
    \    return strtoupper(str_replace($alphabet, $encoded, $message));\n}\n\nfunction\
    \ candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12mjggxa.php:70\n\
    Stack trace:\n#0 /tmp/tmp12mjggxa.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp12mjggxa.php\
    \ on line 70\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  // Write your encoding function here\n  $vowel = 'A';\n\
    \  $result = \"\";\n  for ($i = 0; $i < strlen($message); $i++) {\n    $char =\
    \ substr($message, $i, 1);\n    if (isset($vowelMap[$char])) {\n      $result\
    \ .= $vowelMap[$char];\n      $vowel = substr($vowelMap, $char, 1);\n    } else\
    \ {\n      $result .= $char;\n      $vowel = $char;\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\"\
    ) !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmqq83n0r.php:33\n\
    Stack trace:\n#0 /tmp/tmpmqq83n0r.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmqq83n0r.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $vowels\
    \ = \"aeiou\";\n\n    $str = \"\";\n\n    for($i = 0; $i < strlen($message); $i++)\
    \ {\n        $str .= $alphabet[$message[$i]];\n\n        if ($i > 0 && strpos($vowels,\
    \ $message[$i]) !== FALSE) {\n            $str .= $alphabet[$message[$i-1] ^ 0x20];\n\
    \        }\n    }\n    return $str;\n}\n\nfunction candidate(...$args) {\n   \
    \ return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nWarning: Illegal string offset 'T' in /tmp/tmpjbvqvjof.php on line 19\n\
    \nWarning: Illegal string offset 'E' in /tmp/tmpjbvqvjof.php on line 19\n\nWarning:\
    \ Illegal string offset 'S' in /tmp/tmpjbvqvjof.php on line 19\n\nWarning: Illegal\
    \ string offset 'T' in /tmp/tmpjbvqvjof.php on line 19\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpjbvqvjof.php:33\nStack trace:\n#0 /tmp/tmpjbvqvjof.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjbvqvjof.php on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $message\
    \ = str_replace(\n        array(\n            'a', 'A', 'e', 'E', 'i', 'I', 'o',\
    \ 'O', 'u', 'U',\n        ),\n        array(\n            'b', 'B', 'c', 'C',\
    \ 'g', 'G', 'h', 'H', 'i', 'I', 'j', 'J',\n        ),\n        $message\n    );\n\
    \    $words = str_split($message);\n    $result = '';\n    $vowels = \"aeiouy\"\
    ;\n    foreach ($words as $key => $word) {\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (strpos($vowels, $word[$i]) !== false) {\n         \
    \       $i = $i + 1;\n            }\n            $result.= $alphabet[strpos($alphabet,\
    \ $word[$i]) - $i];\n        }\n    }\n    return $result;\n}\n</code>\n<|/ a\
    \ tags=php,encryption |>\n<| a |>\nI took an alternate approach:\n\nI converted\
    \ the message to lowercase\nI removed the vowels and used the strtr() function\
    \ to remove vowels from the converted message before I converted the letters into\
    \ numbers\nI converted the letters into numbers (0-25) based on the letter of\
    \ the word\nI added in the number of the vowel from the original message.\n\n\
    Here's the code:\n<code>\n<?php\n\n/**\n * Converts a message to another using\
    \ only letters and numbers\n * \n * string $message\n * string $key - a key to\
    \ use for the encryption\n * string - the converted message\n */\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1lq89l1e.php on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  for ($i = 0, $len = strlen($message); $i < $len; $i++)\
    \ {\n    $char = substr($message, $i, 1);\n    $upper = strtoupper($char);\n \
    \   if ($upper == $char) {\n      $upper = $upper - 26;\n    }\n    $message[$i]\
    \ = $upper;\n  }\n  \n  $vowels = array('a', 'e', 'i', 'o', 'u');\n  \n  for ($i\
    \ = 0, $len = strlen($message); $i < $len; $i++) {\n    $char = substr($message,\
    \ $i, 1);\n    $pos = array_search($char, $vowels);\n    \n    if ($pos == FALSE)\
    \ {\n      print \"invalid vowel in message\\n\";\n      exit(0);\n    }\n   \
    \ $message[$i] += $pos;\n  }\n  \n  return $message;\n}\n</code>\n<|/ a tags=php,encryption,caesar-cipher\
    \ dscore=1 |>\n<| c |>\nThanks for your solution, but I think my solution was\
    \ more simple\n<|/ c |>\n<| a |>\nI've made a Caesar cipher with a little bit\
    \ of help from my friend Jakub. Here's the code:\n<code>\n<?php\n$message = 'hello\
    \ world !';\n$shift = 3;\n$encrypt = encrypt($message, $shift);\n$decrypt = decrypt($message,\
    \ $shift);\nfunction candidate(...$args) {\n    return encode(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"\
    ygs\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"This is\
    \ a message\") !== \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT\
    \ Tq wRkTg\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkpx95pcc.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    // TODO: Implement\n}\n\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_idf3yk.php:21\n\
    Stack trace:\n#0 /tmp/tmp3_idf3yk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3_idf3yk.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n    return preg_replace_callback('/./u', function($m){\n\
    \        $letter = $m[0];\n        $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \        if (in_array($letter, $vowels)) {\n            return strtoupper($m[0]);\n\
    \        } else {\n            return $m[1] . $letter;\n        }\n    }, $message);\n\
    }\n</code>\n<|/ a dscore=0 tags=php,string,replace,regex,preg-replace |>\n<| c\
    \ |>\nThe first part of your code is working fine but for the second part I'm\
    \ getting an error saying: \"Undefined offset: 0\"\n<|/ c |>\n<| c |>\n, my mistake,\
    \ it's `$m[0]` not `$m[1]`. I'll update my answer.\n<|/ c |>\n<| a dscore=0 |>\n\
    You could also do it without preg_replace_callback():\n<code>\nfunction candidate(...$args)\
    \ {\n    return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpd6gb_jbx.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n  \n  // Step 1: Make everything upper case.\n  $message\
    \ = strtoupper($message);\n  \n  // Step 2: Replace all vowels with their two\
    \ places ahead.\n  // Note that 'e' appears in position 1, 2\n  // so when we\
    \ call str_replace with the string 'e', \n  // it's replaced with 'E'.\n  $message\
    \ = str_replace(\"AEIOUaeiouAEIOU\", \"BCE\", $message);\n  \n  // Step 3: Replace\
    \ all vowels with the letter that appears two \n  // places ahead.\n  // Note\
    \ that 's' appears in position 2, so we replace\n  // it with 'S'.\n  $message\
    \ = str_replace(\"AEIOUaeiouAEIOU\", \"S\", $message);\n  \n  // Step 4: Replace\
    \ all vowels with the letter that appears \n  // three places ahead.\n  // Note\
    \ that 'i' appears in position 4, so we replace \n  // it with 'I'.\n  $message\
    \ = str_replace(\"AEIOUaeiouAEIOU\", \"I\", $message);\n  \n  // Step 5: Replace\
    \ all vowels with the letter that appears \n  // four places ahead.\n  // Note\
    \ that 'a' appears in position 5, so we replace\n  // it with 'A'.\n  $message\
    \ = str_replace(\"AEIOUaeiouAEIOU\", \"A\", $message);\n  \n  // Step 6: Replace\
    \ all vowels with the letter that appears \n  // five places ahead.\n  // Note\
    \ that 'e' appears in position 6, so we replace\n  // it with 'E'.\n  $message\
    \ = str_replace(\"AEIOUaeiouAEIOU\", \"E\", $message);\n  \n  // Step 7: Replace\
    \ all vowels with the letter that appears \n  // six places ahead.\n  // Note\
    \ that 'a' appears in position 7, so we replace\n  // it with 'A'.\n  $message\
    \ = str_replace(\"AEIOUaeiouAEIOU\", \"A\", $message);\n  \n  // Step 8: Replace\
    \ all vowels with the letter that appears \n  // seven places ahead.\n  // Note\
    \ that 'e' appears in position 8, so we replace\n  // it with 'E'.\n  $message\
    \ = str_replace(\"AEIOUaeiouAEIOU\", \"E\", $message);\n  \n  // Step 9: Replace\
    \ all vowels with the letter that appears \n  // eight places ahead.\n  // Note\
    \ that 'e' appears in position 9, so we replace\n  // it with 'E'.\n  $message\
    \ = str_replace(\"AEIOUaeiouAEIOU\", \"E\", $message);\n  \n  // Step 10: Replace\
    \ all vowels with the letter that appears \nfunction candidate(...$args) {\n \
    \   return encode(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    TEST\") !== \"tgst\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw WhAt tO WrItE\"\
    ) !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0z_bkchy.php on line 78\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a message, and encodes in such a\
    \ \n// way that it swaps case of all letters, replaces all vowels in \n// the\
    \ message with the letter that appears 2 places ahead of that \n// vowel in the\
    \ english alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n\
    // 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction\
    \ encode($message) {\n\t$encoded = '';\n\t\n\t// Iterate through the entire message\
    \ one character at a time.\n\tfor($i=0; $i<strlen($message); $i++) {\n\t\t$char\
    \ = substr($message, $i, 1);\n\t\t\n\t\t// Find a vowel 2 places ahead of the\
    \ character and swap \n\t\t// the case. \n\t\t$foundVowel = false;\n\t\tfor($j=0;\
    \ $j<strlen($char); $j++) {\n\t\t\tif($j+2 < strlen($char) && ctype_upper($char[$j+1])\
    \ && ctype_upper($char[$j+2])) {\n\t\t\t\t$char = $char[$j+1] . $char[$j+2];\n\
    \t\t\t\t$foundVowel = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If no\
    \ vowels found swap all letters.\n\t\tif(!$foundVowel) {\n\t\t\t$char = strtoupper($char);\n\
    \t\t}\n\t\t\n\t\t// Append the character to the encoded message.\n\t\t$encoded\
    \ .= $char;\n\t}\n\t\n\t// Return the encoded message.\n\treturn $encoded;\n}\n\
    function candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"This is a message\") !== \"tHKS KS C MGSSCGG\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14l0h7hp.php:47\n\
    Stack trace:\n#0 /tmp/tmp14l0h7hp.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp14l0h7hp.php\
    \ on line 47\n"
  stderr: ''
  exit_code: 255
  status: Exception

name: HumanEval_51_remove_vowels
language: php
results:
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = 'aeiouy';\n    $text = preg_replace('/[' . $vowels . ']/',\
    \ '', $text);\n    return $text;\n}\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl5csxee6.php:27\n\
    Stack trace:\n#0 /tmp/tmpl5csxee6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpl5csxee6.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  for ($i = 0; $i < strlen($text);\
    \ $i++) {\n    if (!in_array($text[$i], $vowels)) {\n      $text .= $text[$i];\n\
    \    }\n  }\n  return $text;\n}\n$str = 'Hello, World!';\n$str1 = remove_vowels($str);\n\
    echo $str1;\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = preg_replace('/[aeiou]/', '', $text);\n    return $text;\n}\n\
    \nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbuh9lcyc.php:27\n\
    Stack trace:\n#0 /tmp/tmpbuh9lcyc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbuh9lcyc.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace(\"/[aeiouy]+/\", \"\", $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp063ybt93.php:26\n\
    Stack trace:\n#0 /tmp/tmp063ybt93.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp063ybt93.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $textArr = str_split($text);\n    $vowelsArr = str_split(str_shuffle('aeiouAEIOU'));\n\
    \    foreach ($textArr as $k => $v) {\n        $textArr[$k] = $v !== $vowelsArr[$k];\n\
    \    }\n    return implode('', $textArr);\n}\n$newText = remove_vowels($text);\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpknskizp6.php:27\n\
    Stack trace:\n#0 /tmp/tmpknskizp6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpknskizp6.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    if (is_null($text))\n        return $text;\n    return preg_replace('/[AEIOUYaeiouy]/',\
    \ '', $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8y4w2ecp.php:30\n\
    Stack trace:\n#0 /tmp/tmp8y4w2ecp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8y4w2ecp.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    if (is_null($text) || $text === '') return '';\n    // if $text is of\
    \ length 1, return it\n    if (strlen($text) === 1) {\n        return $text;\n\
    \    }\n    // if $text has length 2, return it\n    if (strlen($text) === 2)\
    \ {\n        return $text;\n    }\n\n    $vowels = \"aeiouAEIOU\";\n    $text\
    \ = strtolower($text);\n    $text = str_replace($vowels, '', $text);\n    return\
    \ $text;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5bqqq37.php:36\n\
    Stack trace:\n#0 /tmp/tmpf5bqqq37.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpf5bqqq37.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  // your code here\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpblfsdnwa.php:22\n\
    Stack trace:\n#0 /tmp/tmpblfsdnwa.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpblfsdnwa.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouy]+/', '', $text);\n}\n\n$tests = array(\n\
    \    '',\n    'abcdef',\n    'aaaaa',\n    'aaBAA',\n    'zbcd',\n    '',\n  \
    \  'abcde',\n    'aaBaa',\n    'zbcde',\n    'aaBaa',\n    '',\n);\nforeach ($tests\
    \ as $test) {\n    $result = remove_vowels($test);\n    echo $test;\n    echo\
    \ ' -> ' . $result . \"\\n\";\n}\n</code>\nThis would output:\n<code>\n ->\n ->\n\
    \ ->\n ->\n ->\n ->\n ->\n ->\n ->\n ->\n</code>\n<|/ a dscore=4 |>\n<| a tags=regex,php\
    \ |>\nMy solution:\n<code>\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5ri_eg3t.php on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiljrmb5p.php:25\n\
    Stack trace:\n#0 /tmp/tmpiljrmb5p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpiljrmb5p.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = str_replace(['a', 'e', 'i', 'o', 'u'], ['', '', '', '', ''],\
    \ $text);\n    return $text;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86ci8m_r.php:27\n\
    Stack trace:\n#0 /tmp/tmp86ci8m_r.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp86ci8m_r.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels_re = '/[aeiouyAEIOUY]/i';\n    $novowels_re = '!'.$vowels_re.'!u';\n\
    \n    return preg_replace($novowels_re, '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdeyx417o.php:25\n\
    Stack trace:\n#0 /tmp/tmpdeyx417o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdeyx417o.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('~[^aeiou]+~', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpegf1b2uk.php:23\n\
    Stack trace:\n#0 /tmp/tmpegf1b2uk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpegf1b2uk.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  foreach (str_split($text) as $character) {\n    if (in_array($character,\
    \ array('a', 'e', 'i', 'o', 'u')) || $character === ' ') {\n      continue;\n\
    \    }\n    $newCharacter = $character;\n  }\n  return $newCharacter;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8agjiv1n.php:29\n\
    Stack trace:\n#0 /tmp/tmp8agjiv1n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8agjiv1n.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9456pi1.php:26\n\
    Stack trace:\n#0 /tmp/tmpo9456pi1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo9456pi1.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouyAEIOUY]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwkxf34nj.php:28\n\
    Stack trace:\n#0 /tmp/tmpwkxf34nj.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwkxf34nj.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    if (strlen($text) == 0) {\n        return $text;\n    }\n    $vowels\
    \ = 'aeiouy';\n    $text_without_vowels = '';\n    for ($i = 0; $i < strlen($text);\
    \ $i++) {\n        if (!strstr($vowels, $text[$i])) {\n            $text_without_vowels\
    \ .= $text[$i];\n        }\n    }\n    return $text_without_vowels;\n}\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpstu7gun9.php:35\n\
    Stack trace:\n#0 /tmp/tmpstu7gun9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpstu7gun9.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5v5gh88e.php:26\n\
    Stack trace:\n#0 /tmp/tmp5v5gh88e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp5v5gh88e.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhwfpl6e.php:26\n\
    Stack trace:\n#0 /tmp/tmpbhwfpl6e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbhwfpl6e.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    // your code here\n    $text = preg_replace('/[AEIOUaeiou]/', '', $text);\n\
    \    return $text;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiou\";\n    $consonant = \"bcdfghjklmnpqrstvwxyz\";\n \
    \   $text = strtolower($text);\n    $text = str_replace($vowels, \"\", $text);\n\
    \    $text = str_replace($consonant, \"\", $text);\n    return $text;\n}\n\n$text_1\
    \ = \"L'histoire\";\n$text_2 = \"L'histoire du Sainte-Marie\";\n$text_3 = \"L'histoire\
    \ du Sainte-Marie\";\n$text_4 = \"L'histoire du Sainte-Marie\";\n\necho \"\\n\"\
    ;\n$text_1_1 = remove_vowels($text_1);\n$text_2_1 = remove_vowels($text_2);\n\
    $text_3_1 = remove_vowels($text_3);\n$text_4_1 = remove_vowels($text_4);\n\necho\
    \ \"\\n\";\necho \"Text 1: $text_1\\n\";\necho \"Text 1: $text_1_1\\n\\n\";\n\
    echo \"Text 2: $text_2\\n\";\necho \"Text 2: $text_2_1\\n\\n\";\necho \"Text 3:\
    \ $text_3\\n\";\necho \"Text 3: $text_3_1\\n\\n\";\necho \"Text 4: $text_4\\n\"\
    ;\necho \"Text 4: $text_4_1\\n\\n\";\n\necho \"\\n\";\necho \"Text 1 without vowels:\
    \ $text_1_1\\n\";\necho \"Text 2 without vowels: $text_2_1\\n\";\necho \"Text\
    \ 3 without vowels: $text_3_1\\n\";\necho \"Text 4 without vowels: $text_4_1\\\
    n\";\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\nText 1: L'histoire\nText 1: l'histoire\n\nText 2: L'histoire du Sainte-Marie\n\
    Text 2: l'histoire du sainte-marie\n\nText 3: L'histoire du Sainte-Marie\nText\
    \ 3: l'histoire du sainte-marie\n\nText 4: L'histoire du Sainte-Marie\nText 4:\
    \ l'histoire du sainte-marie\n\n\nText 1 without vowels: l'histoire\nText 2 without\
    \ vowels: l'histoire du sainte-marie\nText 3 without vowels: l'histoire du sainte-marie\n\
    Text 4 without vowels: l'histoire du sainte-marie\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp9x5yn27t.php:54\nStack trace:\n#0 /tmp/tmp9x5yn27t.php(62):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9x5yn27t.php on line 54\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[aeiou]/', '',\
    \ $text);\n    return preg_replace('/[^aeiou]/', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4zs5ld7u.php:24\n\
    Stack trace:\n#0 /tmp/tmp4zs5ld7u.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp4zs5ld7u.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiouyAEIOUY]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_wlwqmv.php:28\n\
    Stack trace:\n#0 /tmp/tmpf_wlwqmv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpf_wlwqmv.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels_array = array('a','e','i','o','u','A','E','I','O','U');\n   \
    \ $result = str_replace(array_map($vowels_array, \"strlen\"), \"\", $text);\n\
    \    return $result;\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis looks really\
    \ promising. I tried it out and it works, but I'm not too familiar with php, so\
    \ it might be missing something. I'm getting this error though: `Fatal error:\
    \ Call to undefined function strlen() in /var/www/html/php-string-functions.php\
    \ on line 5`\n<|/ c |>\n<| c |>\nOh... yeah, I forgot to add that function. Try\
    \ now. I changed my code to use `array_map` instead\n<|/ c |>\n<| c |>\nAwesome!\
    \ Thank you!\n<|/ c |>\n<| c |>\n, glad to have helped. Remember to accept an\
    \ answer if your issue is resolved by that answer. Accepting an answer helps future\
    \ visitors to see that your issue is resolved.\n<|/ c |>\n<| c |>\nI tried to\
    \ vote it up, but I guess I need 15 reputation... :)\n<|/ c |>\n<| a dscore=2\
    \ |>\nThe simplest way:\n<code>\n<?php\n    $text = \"Hello Stack Overflow\";\n\
    \    $vowels = array('a', 'e', 'i', 'o', 'u');\n\n    function removeVowels($text){\n\
    \        $filteredText = preg_replace('/[aeiou]/', '', $text);\n        return\
    \ $filteredText;\n    }\n\n    var_dump(removeVowels($text)); // 'Stack Overflow'\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpr2wuv37x.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace(\"/[aeiou]e/\", \"\", $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfkfx53jw.php:22\n\
    Stack trace:\n#0 /tmp/tmpfkfx53jw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfkfx53jw.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n</code>\n<|/ a |>\n\
    <| c |>\nJust to say I like this answer a lot.\n<|/ c |>\n<| c |>\nYeah, I prefer\
    \ that one. I also learned from it, thanks! :)\n<|/ c |>\n<| a dscore=2 |>\nMy\
    \ solution doesn't use regular expressions (I didn't like them) but it does make\
    \ use of PHP's ucwords function. It removes all the upper case letters.\n<code>\n\
    <?php\n\n    function remove_capital_letters( $string )\n    {\n        if( $string\
    \ == \"\" || $string == \" \" ) return \"\";\n        return ucwords($string);\n\
    \    }\n\n    echo remove_capital_letters( \"hello\" ); // hello\n    echo remove_capital_letters(\
    \ \"hello world\" ); // hello world\n    echo remove_capital_letters( \"Hello\
    \ World\" ); // Hello World\n    echo remove_capital_letters( \"hELLO wORLD\"\
    \ ); // HELL WORLD\n    echo remove_capital_letters( \"HellO WoRld\" ); // HELL\
    \ WORLD\n    echo remove_capital_letters( \"HELLO World\" ); // HELLO WORLD\n\
    \    echo remove_capital_letters( \"hELLO wORLD\" ); // HELL WORLD\n    echo remove_capital_letters(\
    \ \"HellO WoRld\" ); // HELL WORLD\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp_9bazrgl.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = preg_replace('/[aeiou]/', '', $text);\n    $text = strtoupper($text);\n\
    \    return $text;\n}\n</code>\n<|/ a tags=php |>\n<| c |>\nThanks so much for\
    \ the help. I have learned so much from you guys. Thank you. :)\n<|/ c |>\n<|\
    \ c |>\nI have tried the codes and it worked. But it removes all the vowels while\
    \ I need to remove vowels in a specific order. How do I do that?\n<|/ c |>\n<|\
    \ c |>\nI have added another function and updated my answer with the new functions.\n\
    <|/ c |>\n<| a dscore=0 |>\nYou were assigning $text with the value of the variable\
    \ in the if statement.\n<code>\nif($text == 'hello' || $text == 'hi')\n{\n$text\
    \ = $text = 'hello';\n}\n</code>\nWhat you want is assigning the value with your\
    \ new variable name like below\n<code>\nif($text == 'hello' || $text == 'hi')\n\
    {\n$newText = 'hello';\n$text = $newText;\n}\n</code>\n<|/ a tags=php |>\n<| a\
    \ dscore=0 |>\n<code>\n<?php\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcjoyyl3d.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    if (strlen($text) == 0) {\n        return '';\n    }\n    $vowels = \"\
    aeiouAEIOU\";\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5etepzj1.php:28\n\
    Stack trace:\n#0 /tmp/tmp5etepzj1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5etepzj1.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = strtolower($text);\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $text = preg_replace('~[aeiouy]+~', '', $text);\n    $text = preg_replace('~[^aeiouy]~i',\
    \ '', $text);\n    return $text;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvunnfyr1.php:27\n\
    Stack trace:\n#0 /tmp/tmpvunnfyr1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvunnfyr1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    \n    // Declare an array to store vowels \n    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\n    // Use a foreach loop to loop through the text \n\
    \    foreach ($text as $word) {\n\n        // Use a for loop to iterate through\
    \ the array \n        for ($i = 0; $i < count($vowels); $i++) {\n\n          \
    \  // If current word is in the vowels array, print it without vowels\n      \
    \      if (in_array($word[$i], $vowels)) {\n                $word[$i] = \"\";\n\
    \            }\n        }\n\n        // If current word is equal to the end of\
    \ the string, print the word\n        if ($word == \"\") {\n            $text\
    \ = $word;\n        }\n    }\n\n    // Return text without vowels\n    return\
    \ $text;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpit7zki9o.php\
    \ on line 19\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpit7zki9o.php\
    \ on line 19\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpit7zki9o.php:46\n\
    Stack trace:\n#0 /tmp/tmpit7zki9o.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpit7zki9o.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace(\"/[aeiouAEIOU]/i\", \"\", $text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    if ($text == '') {\n        return '';\n    }\n    return preg_replace(\"\
    /[aeiou]/i\", \"\", $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouy]+/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpso21ej1_.php:26\n\
    Stack trace:\n#0 /tmp/tmpso21ej1_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpso21ej1_.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = strtolower($text);\n    $vowels = 'aeiouy';\n    $vowels_array\
    \ = str_split($vowels);\n\n    $no_vowels = '';\n\n    for ($i = 0; $i < strlen($text);\
    \ $i++) {\n        $no_vowels .= $text[$i];\n        if (in_array($text[$i], $vowels_array))\
    \ {\n            $no_vowels = $no_vowels[$i] . $no_vowels[$i + 1];\n         \
    \   unset($no_vowels[$i]);\n            unset($no_vowels[$i + 1]);\n        }\n\
    \    }\n\n    return $no_vowels;\n}\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Cannot unset string offsets in /tmp/tmpk1huubzm.php:24\n\
    Stack trace:\n#0 /tmp/tmpk1huubzm.php(32): remove_vowels('abcdef\\nghijklm')\n\
    #1 /tmp/tmpk1huubzm.php(37): candidate('abcdef\\nghijklm')\n#2 /tmp/tmpk1huubzm.php(45):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpk1huubzm.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    if (!isset($text))\n        return '';\n    $text = strtolower($text);\n\
    \    $vowels = 'aeiou';\n    $text = preg_replace('/[aeiouy]+/', '', $text);\n\
    \    return preg_replace('/[aeiouy]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpxgfuzr.php:31\n\
    Stack trace:\n#0 /tmp/tmpkpxgfuzr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkpxgfuzr.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = strtolower($text);\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    return str_replace(array('a', 'e', 'i', 'o', 'u'), \"\", $text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgoupa91.php:28\n\
    Stack trace:\n#0 /tmp/tmpsgoupa91.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsgoupa91.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $text = strtolower($text);\n\
    \    $text = preg_replace('/[^aeiou]//', '', $text);\n    $text = preg_replace('/[aeiouy]{1,2}$/',\
    \ '', $text);\n    $text = preg_replace('/[aeiouy]$/', '', $text);\n    $text\
    \ = preg_replace('/[^aeiouy]$/', '', $text);\n    $text = preg_replace('/[^aeiouy]([aeiouy])/',\
    \ '', $text);\n    $text = preg_replace('/([^aeiouy])([aeiouy])/', '$1', $text);\n\
    \    $text = preg_replace('/([aeiouy])([^aeiouy])/', '$1 $2', $text);\n    $text\
    \ = preg_replace('/([^aeiouy])([aeiouy])/', '$1', $text);\n    $text = preg_replace('/([aeiouy])([^aeiouy])/',\
    \ '$1 $2', $text);\n    $text = preg_replace('/([^aeiouy])([^aeiouy])/', '$1',\
    \ $text);\n    return $text;\n}\n</code>\n<|/ a tags=php,regex,preg-replace |>\n\
    <| a |>\nThis one works with all your examples:\n<code>\n$text = 'aaaaaBAAzbcd';\n\
    $re = '/(^|\\b)[a-z](?=[a-z]*[aeiouy])/i';\n$text = preg_replace($re, '$1', $text);\n\
    </code>\nExplanation:\n<code>\n(^|\\b)[a-z](?=[a-z]*[aeiouy])\n</code>\nThis matches\
    \ a lowercase letter at the start of the line or before any other lowercase letter\
    \ that contains at least an vowel.\n<|/ a tags=php,regex,preg-replace dscore=1\
    \ |>\n<| c |>\nGreat answer! Thank you :)\n<|/ c |>\n<| a tags=php,regex,preg-replace\
    \ |>\nA regex with lookahead will do the trick. \n<code>\n$text = preg_replace(\"\
    /(?<![a-z])[a-z]/i\",\"\",$text);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,regex,preg-replace\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjjg5m2_j.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    if (empty($text)) {\n        return '';\n    }\n\n    $vowels = 'aeiouyAEIOUY';\n\
    \    $cleaned = preg_replace('/[' . $vowels . ']/', '', $text);\n    return $cleaned;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4xkyao2n.php:34\n\
    Stack trace:\n#0 /tmp/tmp4xkyao2n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4xkyao2n.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $text = preg_replace(\"/[aeiouyAEIOUY]/\", \"\", $text);\n  return $text;\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wy_xl5a.php:28\n\
    Stack trace:\n#0 /tmp/tmp6wy_xl5a.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6wy_xl5a.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n  return\
    \ str_replace(array_filter($vowels), ' ', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4ciy7_1.php:24\n\
    Stack trace:\n#0 /tmp/tmpp4ciy7_1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpp4ciy7_1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    return preg_replace('/[^'.implode('',\
    \ $vowels).']/', '', $text);\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg8dolk87.php:24\n\
    Stack trace:\n#0 /tmp/tmpg8dolk87.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpg8dolk87.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiou\";\n    $text = preg_replace('/[aeiou]/', '', $text);\n\
    \    return str_replace($vowels, \"\", $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogsm9hxc.php:27\n\
    Stack trace:\n#0 /tmp/tmpogsm9hxc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpogsm9hxc.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiou\";\n    $replace = '';\n\n    for ($i = 0; $i < strlen($text);\
    \ $i++) {\n        $char = substr($text, $i, 1);\n\n        if (in_array($char,\
    \ $vowels)) {\n            $replace .= $char;\n        }\n    }\n\n    return\
    \ $replace;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nWhat does your function do?\
    \ How does it work? Why would it work? What does it return? How does it do that?\n\
    <|/ c |>\n<| c |>\n, what do you mean by 'what does your function do'? I edited\
    \ my post to add a short description. Why would it work? This code checks for\
    \ vowels in a string and replace them with empty string (''). How does it do that?\
    \ The function loops through the string from beginning to end and replaces any\
    \ vowel with an empty string (''). How does it do that? It replaces the vowels\
    \ with empty string (''). Why does it replace vowels with empty string ('')? What\
    \ does it return? It returns empty string (''). How does it do that?\n<|/ c |>\n\
    <| c |>\nWhy does it replace vowels with empty string? What does it return? It\
    \ returns empty string. How does it do that?\n<|/ c |>\n<| c |>\n, added some\
    \ comments. I hope that it helps.\n<|/ c |>\n<| a dscore=0 tags=php |>\nYou can't\
    \ use strlen() to get the length of an arbitrary string as it is only a string\
    \ with a length of 4. I think strlen works with strings with a length of 4 and\
    \ up. Try this:\n<code>\n$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U');\n$text = str_replace(\n    $vowels,\n    '',\n    $text\n);\n</code>\n\
    <|/ a |>\n<| c |>\nThe length of any string is determined by strlen. The problem\
    \ is that strlen doesn't count the vowels in a string but the number of characters\
    \ in the string.\n<|/ c |>\n<| a tags=php |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq2hp_kr2.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    foreach($text as $key => $char) {\n        if($char == 'a'|| $char ==\
    \ 'e'|| $char == 'i'|| $char == 'o'|| $char == 'u') {\n            unset($text[$key]);\n\
    \        }\n    }\n    return implode('', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpon2ly0s0.php\
    \ on line 14\n\nWarning: implode(): Invalid arguments passed in /tmp/tmpon2ly0s0.php\
    \ on line 19\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon2ly0s0.php:27\n\
    Stack trace:\n#0 /tmp/tmpon2ly0s0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpon2ly0s0.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a','e','i','o','u');\n  $text = strtolower($text);\n \
    \ foreach($vowels as $letter) {\n    $text = str_replace($letter, \"\", $text);\n\
    \  }\n  return $text;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfngqjihh.php:31\n\
    Stack trace:\n#0 /tmp/tmpfngqjihh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfngqjihh.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\n/**\n * Test if string\
    \ contains specific word (case-insensitive).\n *\n * Returns bool.\n *\n * @param\
    \ string $text  String to check if\n * @param string $word Word to test for\n\
    \ *\n * @return bool True if $text contains $word\n */\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9rdzy3_n.php:36\n\
    Stack trace:\n#0 /tmp/tmp9rdzy3_n.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9rdzy3_n.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = strtolower($text);\n    $vowels = 'aeiou';\n    $text = preg_replace('/['.$vowels.']/',\
    \ '', $text);\n    return $text;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_xuk8m7.php:29\n\
    Stack trace:\n#0 /tmp/tmpy_xuk8m7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpy_xuk8m7.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    // 1. Create an empty array to store chars we're going to replace\n \
    \   $replace = [];\n    // 2. Store the chars in $replace if they're vowels.\n\
    \    $vowels = 'aeiouy';\n    foreach ($vowels as $letter) {\n        if ($letter\
    \ == 'a' || $letter == 'e' || $letter == 'i' || $letter == 'o' || $letter == 'u')\
    \ {\n            $replace[] = $letter;\n        }\n    }\n    // 3. Store the\
    \ chars in $replace if they're consonants.\n    $consonants = 'bcdfghjklmnpqrstvwxyz';\n\
    \    foreach ($consonants as $letter) {\n        if ($letter == 'b' || $letter\
    \ == 'c' || $letter == 'd' || $letter == 'f' || $letter == 'g' || $letter == 'h'\
    \ || $letter == 'j' || $letter == 'k' || $letter == 'l' || $letter == 'm' || $letter\
    \ == 'n' || $letter == 'p' || $letter == 'q' || $letter == 'r' || $letter == 's'\
    \ || $letter == 't' || $letter == 'v' || $letter == 'w' || $letter == 'x' || $letter\
    \ == 'y' || $letter == 'z') {\n            $replace[] = $letter;\n        }\n\
    \    }\n    // 4. Loop through each char in the string\n    foreach (str_split($text)\
    \ as $char) {\n        // 5. Check to see if char is in $replace. If so, remove\
    \ it.\n        if (in_array($char, $replace)) {\n            $text = str_replace($char,\
    \ '', $text);\n        }\n    }\n    return $text;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpe82xah1v.php\
    \ on line 18\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpe82xah1v.php\
    \ on line 25\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpe82xah1v.php\
    \ on line 18\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpe82xah1v.php\
    \ on line 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe82xah1v.php:46\n\
    Stack trace:\n#0 /tmp/tmpe82xah1v.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpe82xah1v.php\
    \ on line 46\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiouAEIOU\";\n    $text = strtolower($text);\n    $text\
    \ = str_replace($vowels, \"\", $text);\n    return $text;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzju19sfr.php:26\n\
    Stack trace:\n#0 /tmp/tmpzju19sfr.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzju19sfr.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = \"aeiou\";\n  $text = preg_replace('/['.$vowels.']/', '', $text);\n\
    \  return $text;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgolk6zt.php:28\n\
    Stack trace:\n#0 /tmp/tmpwgolk6zt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwgolk6zt.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $replace = array('a', 'e', 'i', 'o', 'u');\n    $text = strtolower($text);\n\
    \    return preg_replace(\"/[\".$replace.\"]/\", \"\", $text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1o0p1exg.php:25\n\
    Stack trace:\n#0 /tmp/tmp1o0p1exg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1o0p1exg.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/a[^aeiouy]*e/i',\
    \ '', $text);\n    $text = preg_replace('/y[^aeiou]*[^aeiouy]/i', '', $text);\n\
    \    return preg_replace('/[^aeiou]+/', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4p5jmmp.php:25\n\
    Stack trace:\n#0 /tmp/tmpp4p5jmmp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpp4p5jmmp.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx71iz6me.php:26\n\
    Stack trace:\n#0 /tmp/tmpx71iz6me.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpx71iz6me.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[aeiouy]/', '',\
    \ $text);\n    $text = preg_replace('/[AEIOUY]/', '', $text);\n    $text = preg_replace('/[aeiou]/',\
    \ '', $text);\n    return $text;\n}\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgyr3__j7.php:29\n\
    Stack trace:\n#0 /tmp/tmpgyr3__j7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgyr3__j7.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  if (empty($text)) {\n    return '';\n  }\n  return preg_replace('/[aeiou]/',\
    \ '', $text);\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4y7j63v8.php:28\n\
    Stack trace:\n#0 /tmp/tmp4y7j63v8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4y7j63v8.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2n_ccna2.php:26\n\
    Stack trace:\n#0 /tmp/tmp2n_ccna2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2n_ccna2.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n$new_word = remove_vowels($word);\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadw4p610.php:26\n\
    Stack trace:\n#0 /tmp/tmpadw4p610.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpadw4p610.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $result = \"\";\n    $vowels = \"aeiouAEIOU\";\n    $text = strtolower($text);\n\
    \    $text = str_replace($vowels, \"\", $text);\n    $text = preg_replace(\"/[^a-zA-Z0-9\
    \ ]/\", \"\", $text);\n    for ($i = 0; $i < strlen($text); $i++) {\n        if\
    \ (!empty($text[$i])) {\n            $result .= $text[$i];\n        }\n    }\n\
    \    return $result;\n}\n</code>\nIt was giving me this error when I was trying\
    \ to access your PHP script:\n\nParse error: syntax error, unexpected end of file,\
    \ expecting variable (T_VARIABLE) in /Applications/MAMP/htdocs/MyWebsite.com/myfunctions.php\
    \ on line 4\n\nWhen I used var_dump() in the loop to see what was happening, it\
    \ was showing that there was still data left over after the function ran to completion.\n\
    <|/ a |>\n<| a |>\nThis is not a complete solution to your problem, but I wanted\
    \ to share my experiences with PHP error reporting. I always turn on error reporting\
    \ on my development server and then turn it off after I'm done debugging the code,\
    \ so I can focus on the coding rather than on errors generated by my production\
    \ server. \nI learned a lot and have some experience dealing with errors generated\
    \ by PHP on my own development server. However, when I turned error reporting\
    \ on on my production server, it turned out that there was an error in the code\
    \ I had not seen before. I turned error reporting off and found out that the code\
    \ was generating an error I did not expect. This happened when I was trying to\
    \ use a function on an empty array like so: \n<code>\nif (!empty($myArray)) {\n\
    \    $myArray = array_filter($myArray, 'remove_vowels');\n}\n</code>\nTo fix this\
    \ problem, I needed to wrap my if statement in a try/catch block like so:\n<code>\n\
    try {\n    if (!empty($myArray)) {\n        $myArray = array_filter($myArray,\
    \ 'remove_vowels');\n    }\n} catch (Exception $e) {\n    // do something with\
    \ the error\n}\n</code>\n<|/ a tags=php,function dscore=2 |>\n<| c |>\nThis didn't\
    \ work for me. Even though my array is empty, my try/catch block still fires off.\n\
    <|/ c |>\n<| a tags=php,function |>\nYour code should work fine.\nWhat I suspect\
    \ is that you had an error in your script, when you tried to access your PHP script\
    \ and it threw an error. PHP was probably looking at the last line of your code\
    \ (possibly the closing ?> tag) and saw the error and stopped executing. \nTry\
    \ and put in some debugging statements into the script, such as var_dump($myArray\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdvyefbal.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  // remove vowels from string\n  $vowels = array('a','e','i','o','u','y');\n\
    \  $text = strtolower($text);\n  $text = preg_replace('/[aeiouyAEIOUY]/', '',\
    \ $text);\n  $text = preg_replace('/[b-z]/', '', $text);\n  return $text;\n}\n\
    \n$text = \"I love learning!\";\n$text = remove_vowels($text);\necho $text;\n\
    </code>\n<|/ a tags=php,string |>\n<| c |>\nThanks for your answer. This is a\
    \ great approach. I am looking to see if it is possible to achieve this using\
    \ regex and not a loop.\n<|/ c |>\n<| c |>\nOkay, just for curiosity, why do you\
    \ need it to be with regex?\n<|/ c |>\n<| c |>\nI have been asked to do this using\
    \ regex. I can do it using a loop but I was looking for an elegant solution. My\
    \ regex skills are very limited.\n<|/ c |>\n<| a |>\nIn case you are looking for\
    \ an alternative with preg_replace and lookarounds here it goes:\n<code>\n<?php\n\
    $string = 'I love learning!';\n$result = preg_replace('/(?<=\\w)(?=\\w)/', '',\
    \ $string);\necho $result;\n</code>\nThe above will replace all non-letters, non-numbers,\
    \ non-spaces, non-punctuation with a blank space.\n<|/ a tags=php,string dscore=2\
    \ |>\n<| c |>\nThanks for your answer. I am looking for a solution that will work\
    \ with a variable number of characters.\n<|/ c |>\n<| c |>\nThis would also remove\
    \ letters from `$string` that are not adjacent letters, e.g. `$string = 'I hate\
    \ learning!'` would become `$string = 'I hate '`\n<|/ c |>\n<| c |>\nYou're right.\
    \ I edited my answer accordingly. Thanks.\n<|/ c |>\n<| c |>\nThanks for the edit.\
    \ Your regex is perfect for the above example. I will give this a try on my larger\
    \ string.\n<|/ c |>\n<| a dscore=1 tags=php,string |>\nHere you go\n<code>\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplhjrikxi.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[AEIOUaeiou]/i', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouyAEIOUY]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3vndqny.php:28\n\
    Stack trace:\n#0 /tmp/tmpm3vndqny.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpm3vndqny.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n$text = 'The quick brown\
    \ fox jumps over the lazy dog';\n$vowels = preg_replace('/[aeiou]/', '', $text);\n\
    $vowels_without_spaces = preg_replace('/[^ aeiouAEIOU]/', '', $text);\n$vowels_without_punctuation\
    \ = preg_replace('/[^a-zA-Z\\s]/', '', $text);\necho \"\\n\\n\" . \"Vowels before\
    \ removal: \" . $vowels;\necho \"\\n\\n\" . \"Vowels without spaces: \" . $vowels_without_spaces;\n\
    echo \"\\n\\n\" . \"Vowels without punctuation: \" . $vowels_without_punctuation;\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\nVowels before removal: Th qck brwn fx jmps vr th lzy dg\n\nVowels without\
    \ spaces: e ui o o u oe e a o\n\nVowels without punctuation: The quick brown fox\
    \ jumps over the lazy dog\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcecwk2i2.php:32\n\
    Stack trace:\n#0 /tmp/tmpcecwk2i2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcecwk2i2.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = \"aeiouAEIOU\";\n  return preg_replace(\"/[{$vowels}]/\", \"\"\
    , $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    // Write your code here\n    if ($text === ''){\n        return '';\n\
    \    }\n    \n    if (preg_match('/[aeiou]/i', $text)){\n        return $text;\n\
    \    }\n    else {\n        $text = preg_replace('/[aeiou]/', '', $text);\n  \
    \      return $text;\n    }\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI edited\
    \ my answer and added some comments. Have a look at it.\n<|/ c |>\n<| c |>\nthank\
    \ you very much for your efforts i will try this and get back to you with my result\n\
    <|/ c |>\n<| a |>\n<code>\n<?php\n$data = 'aa ab ac ae af';\n$array = explode(\"\
    \ \", $data);\n$result = '';\nforeach($array as $value){\n  $value = ucfirst(preg_replace('/[aeiou]/','\
    \ ',$value));\n  $result = $result . $value . ' ';\n}\n$result = trim($result);\n\
    echo $result;\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1jul97q9.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = preg_replace('/[^aeiouAEIOU]/', '', $text);\n    return $text;\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu6l0rjw2.php:23\n\
    Stack trace:\n#0 /tmp/tmpu6l0rjw2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpu6l0rjw2.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'y');\n  return str_replace(\n\
    \    array_map(function($v) { return $v; }, $vowels),\n    '',\n    $text\n  );\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_yjiwrj.php:31\n\
    Stack trace:\n#0 /tmp/tmpy_yjiwrj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpy_yjiwrj.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[AEIOUaeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = 'aeiouAEIOU';\n    $text = strtolower($text);\n    $text =\
    \ preg_replace('/[' . $vowels . ']/', '', $text);\n    return $text;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp912ittdw.php:29\n\
    Stack trace:\n#0 /tmp/tmp912ittdw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp912ittdw.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  // Convert $text to lower case and remove spaces.\n  $text = strtolower(preg_replace('/\\\
    s+/', '', $text));\n\n  // Remove all vowels from $text.\n  $text = preg_replace('/[aeiou]/',\
    \ '', $text);\n\n  // Return $text.\n  return $text;\n}\n</code>\n<|/ a tags=php\
    \ |>\n<| c |>\nThanks for your input.  It did not work.  See my edit above.\n\
    <|/ c |>\n<| c |>\nYou are welcome! Can you tell me where does it not work? I\
    \ tested it and it works.\n<|/ c |>\n<| c |>\nI upvoted your answer, but I want\
    \ to add that I tested your function and it worked.  I was hoping for a function\
    \ where it removed the vowels even if the string was longer than 3 characters.\n\
    <|/ c |>\n<| c |>\nI edited the answer to remove the spaces and also check the\
    \ string length.\n<|/ c |>\n<| c |>\nYou're welcome! I did test it and it works.\
    \ Did you notice that I added a space before \"aaaaa\" in the first example? I\
    \ added it because I assumed you wanted it to be \"aaaaa\" and not \"aaaa\".\n\
    <|/ c |>\n<| a |>\nIf you don't want to use a function, you can also use str_replace()\
    \ and add the characters to an empty string\n<code>\n$string = \"Hello\";\n$string\
    \ = str_replace(\"aeiouAEIOU\", \"\", $string);\necho $string;\n</code>\n<|/ a\
    \ tags=php dscore=0 |>\n<| c |>\nThanks for your input.  It did not work.  See\
    \ my edit above.\n<|/ c |>\n<| c |>\nI see. I thought you were just trying to\
    \ remove vowels from a string. If you want to remove the vowels from a longer\
    \ string, then you can use the str_split(), str_replace(), and implode() functions.\
    \ See my answer below.\n<|/ c |>\n<| c |>\nMy goal was to remove all vowels from\
    \ the string.  I thought that the str_split and str_replace methods were the way\
    \ to go.  Thanks.\n<|/ c |>\n<| a tags=php |>\nAs others have mentioned you can\
    \ use the regex or str_replace() functions:\n<code>\n$string = \"Hello\";\n$string\
    \ = str_replace(\"aeiouAEIOU\", \"\", $string);\necho $string;\n</code>\nBut if\
    \ you only want to remove a certain vowel from a string, you should be able to\
    \ use the str_replace() function:\n<code>\n$string = \"Hello\";\n$string = str_replace(\"\
    e\", \"\", $string);\necho $string;\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbbockh9o.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9bb4adno.php:25\n\
    Stack trace:\n#0 /tmp/tmp9bb4adno.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9bb4adno.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a','e','i','o','u','A','E','I','O','U');\n  return preg_replace('/['.$vowels.']/',\
    \ '', $text);\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpktqgwsxc.php:23\n\
    Stack trace:\n#0 /tmp/tmpktqgwsxc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpktqgwsxc.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace(\"/[aeiou]/\", \"\", $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpts7z7unq.php:26\n\
    Stack trace:\n#0 /tmp/tmpts7z7unq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpts7z7unq.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4sosh7ft.php:26\n\
    Stack trace:\n#0 /tmp/tmp4sosh7ft.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4sosh7ft.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouyAEIOUY]/', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3tvpqdc1.php:27\n\
    Stack trace:\n#0 /tmp/tmp3tvpqdc1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp3tvpqdc1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6e5qqk37.php:26\n\
    Stack trace:\n#0 /tmp/tmp6e5qqk37.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6e5qqk37.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $filtered = '';\n    for ($i = 0; $i < strlen($text); $i++) {\n     \
    \   if (in_array(strtolower($text[$i]), array('a','e','i','o','u'))) {\n     \
    \       $filtered .= $text[$i];\n        }\n    }\n    return $filtered;\n}\n\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixfo92d_.php:29\n\
    Stack trace:\n#0 /tmp/tmpixfo92d_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpixfo92d_.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $pattern = \"[aeiouAEIOU]\";\n    $replacement = \"\";\n    return preg_replace($pattern,\
    \ $replacement, $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprhq_rc0u.php:25\n\
    Stack trace:\n#0 /tmp/tmprhq_rc0u.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprhq_rc0u.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixpicxr9.php:26\n\
    Stack trace:\n#0 /tmp/tmpixpicxr9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpixpicxr9.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  // Your code here\n  // Remove vowels from $text\n  // return $text\n}\n\
    \nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmput2qv0p6.php:24\n\
    Stack trace:\n#0 /tmp/tmput2qv0p6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmput2qv0p6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace(\"/[aeiou]/\",\"\",$text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa78_7qd3.php:25\n\
    Stack trace:\n#0 /tmp/tmpa78_7qd3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpa78_7qd3.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    // Your code here...\n    return $text;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpksico333.php:24\n\
    Stack trace:\n#0 /tmp/tmpksico333.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpksico333.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0h5k8a5.php:26\n\
    Stack trace:\n#0 /tmp/tmpa0h5k8a5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa0h5k8a5.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouyAEIOUY]/', \"\", $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9culequ_.php:27\n\
    Stack trace:\n#0 /tmp/tmp9culequ_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9culequ_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    if (empty($text)) {\n        return '';\n    }\n    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n    return preg_replace('/['.$vowels.']/',\
    \ '', $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2oe4bsfg.php:27\n\
    Stack trace:\n#0 /tmp/tmp2oe4bsfg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2oe4bsfg.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7i2hd7yv.php:26\n\
    Stack trace:\n#0 /tmp/tmp7i2hd7yv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7i2hd7yv.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiouAEIOU\";\n    return preg_replace(\"/$vowels/\", \"\"\
    , $text);\n}\n\n$array = array('PHP', 'Perl', 'C++', 'Java', 'Python', 'C');\n\
    $result = remove_vowels(implode(\" \", $array));\necho $result;\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "PHP Perl C++ Java Python C\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpupmki27m.php:27\nStack trace:\n#0 /tmp/tmpupmki27m.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpupmki27m.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouy]/', '', $text);\n}\n\n$first_name = remove_vowels(htmlspecialchars($_POST['first_name']));\n\
    $last_name = remove_vowels(htmlspecialchars($_POST['last_name']));\n$email  =\
    \ remove_vowels(htmlspecialchars($_POST['email']));\n$message = remove_vowels(htmlspecialchars($_POST['message']));\n\
    \nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3a_k0jr.php:31\n\
    Stack trace:\n#0 /tmp/tmpl3a_k0jr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl3a_k0jr.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiouAEIOU\";\n    $text = strtolower($text);\n    $text\
    \ = preg_replace(\"/[^$vowels]/\", \"\", $text);\n    return $text;\n}\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8osx2mxa.php:25\n\
    Stack trace:\n#0 /tmp/tmp8osx2mxa.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8osx2mxa.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiouy]+/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgsl5j26s.php:26\n\
    Stack trace:\n#0 /tmp/tmpgsl5j26s.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgsl5j26s.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    foreach ($text as $char) {\n        if (in_array($char, ['a','e','i','o','u','y'])\
    \ === true) {\n            $text = str_replace($char, '', $text);\n        }\n\
    \    }\n    return $text;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpetwym8as.php\
    \ on line 14\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpetwym8as.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpetwym8as.php:28\n\
    Stack trace:\n#0 /tmp/tmpetwym8as.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpetwym8as.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $text = preg_replace('/[^'\
    \ . implode('', $vowels) . ']/', '', $text);\n    return $text;\n}\n</code>\n\
    Then your search query should be:\n<code>\n$search = preg_replace('/[^A-Za-z0-9]/',\
    \ '',  $search);\n</code>\n<|/ a |>\n<| a tags=php,mysql dscore=0 |>\nThe error\
    \ lies in here: \n<code>\n$search = preg_replace('/[^A-Za-z0-9]/', '', $search);\n\
    </code>\nYou should use preg_quote() to properly escape the search string. \n\
    <code>\n$search = preg_replace('/[^A-Za-z0-9]/', '', preg_quote($search, '/'));\n\
    </code>\n<|/ a |>\n<| a dscore=0 tags=php,mysql |>\nIn MySQL you can also use\
    \ REGEXP which lets you use pattern matching:\n<code>\nSELECT * FROM table WHERE\
    \ column REGEXP '[[:<:]]word[[:>:]]'\n</code>\nBut please note that the above\
    \ regular expression might not always work, because of the collation that you\
    \ are using.\n<|/ a |>\n<| a tags=php,mysql |>\nAgree with previous answers.\n\
    Just to point out another way of doing this without using regular expressions\
    \ would be something like this:\n<code>\n$search = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $search);\n\n$search = str_replace(' ', '', $search);\n</code>\nThis will\
    \ remove all non alphabet characters without deleting spaces. If you would like\
    \ to delete spaces as well, then you can add it into the array.\n<|/ a dscore=0\
    \ |>\n<| a tags=php,mysql dscore=0 |>\nYou can use the following code for removing\
    \ all special characters except alphabet.\n<code>\n$search = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $search);\n</code>\n<|/ a |>\n<| a dscore=0 tags=php,mysql |>\nUse this\
    \ one to remove all special character and numeric and alphabet\n<code>\n$search\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $search);\n</code>\n<|/ a |>\n<| a tags=php,mysql\
    \ dscore=0 |>\n<code>\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpz1tti5de.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('%([aeiou])%', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpef3_iugl.php:25\n\
    Stack trace:\n#0 /tmp/tmpef3_iugl.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpef3_iugl.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiou\";\n    $text = preg_replace(\"/[\" . $vowels . \"\
    ]/\", \"\", $text);\n    return $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8q5l12x.php:28\n\
    Stack trace:\n#0 /tmp/tmps8q5l12x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmps8q5l12x.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = 'aeiouy';\n    return preg_replace(\"/[\" . $vowels . \"]/i\"\
    , '', $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppo083ub4.php:29\n\
    Stack trace:\n#0 /tmp/tmppo083ub4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppo083ub4.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = 'aeiou';\n    $textWithoutVowels = preg_replace('/[' . $vowels\
    \ . ']/', '', $text);\n    return $textWithoutVowels;\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojnilx30.php:27\n\
    Stack trace:\n#0 /tmp/tmpojnilx30.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpojnilx30.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiouy]+/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxg11sr62.php:26\n\
    Stack trace:\n#0 /tmp/tmpxg11sr62.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxg11sr62.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a','e','i','o','u');\n    $newtext = \"\";\n    foreach(str_split($text)\
    \ as $c) {\n        if ( !in_array($c, $vowels) ) {\n            $newtext .= $c;\n\
    \        }\n    }\n    return $newtext;\n}\n</code>\n<|/ a |>\n<| c |>\nThanks\
    \ for this nice solution. I've just learned that `in_array()` has it's own performance\
    \ and should therefore be avoided. Instead I've used [strpos](http://php.net/manual/en/function.strpos.php)\
    \ which has a constant time as opposed to `in_array()` which has a linear runtime.\
    \ I still wonder why that happens but this solves the issue of course :-)\n<|/\
    \ c |>\n<| c |>\n: Glad you like my solution :-)\n<|/ c |>\n<| c |>\nI've implemented\
    \ your solution and it works really nice. I've just noticed that your function\
    \ doesn't work on strings like `'zabaaba'`. Could it be that this happens because\
    \ your function doesn't remove vowels from \"vowel-words\" like \"aa\", \"ee\"\
    , \"ii\" etc?\n<|/ c |>\n<| c |>\n: Oh, I see. In that case, you need to define\
    \ \"vowel-words\" more clearly. Do you mean \"words that are not part of other\
    \ words\"? Then \"zabaaba\" should be \"abaaba\". Or do you mean \"word that is\
    \ followed by or preceded by an 'a'\"? Then \"zabaaba\" should be \"baaaba\".\
    \ Do you mean something else?\n<|/ c |>\n<| c |>\nI think I finally got it. What\
    \ I meant was \"words that are not part of other words\" and so \"abaaba\" should\
    \ be \"zabaaba\". This would mean that if you're searching for \"aba\", this word\
    \ should NOT be found. If you're searching for \"aa\", this word should NOT be\
    \ found. If you search for \"zabaaba\" this word should be found. I'll update\
    \ my post and maybe you can help me with this last part ;-)\n<|/ c |>\n<| a dscore=2\
    \ tags=preg-replace,php,replace |>\nYou can use regex to find all non-vowels and\
    \ replace the string with them :\n<code>\n$text = 'asdfasdfasdfasdfasdf';\n$new_text\
    \ = preg_replace('/[^aeiou]/', '', $text);\necho $new_text;\n</code>\n<|/ a |>\n\
    <| c \nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpjyhby6bh.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = trim($text);\n    $text = str_replace(\"a\", \"A\", $text);\n\
    \    $text = str_replace(\"e\", \"E\", $text);\n    $text = str_replace(\"i\"\
    , \"I\", $text);\n    $text = str_replace(\"o\", \"O\", $text);\n    $text = str_replace(\"\
    u\", \"U\", $text);\n    $text = str_replace(\"A\", \"a\", $text);\n    $text\
    \ = str_replace(\"E\", \"e\", $text);\n    $text = str_replace(\"I\", \"i\", $text);\n\
    \    $text = str_replace(\"O\", \"o\", $text);\n    $text = str_replace(\"U\"\
    , \"u\", $text);\n    $text = preg_replace('/[aeiouAEIOU]+/', '', $text);\n  \
    \  return $text;\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26xcagnz.php:26\n\
    Stack trace:\n#0 /tmp/tmp26xcagnz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp26xcagnz.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    return preg_replace('/[aeiou]/',\
    \ '', $text);\n}\n</code>\n<|/ a tags=function,php,replace |>\n<| c |>\nThank\
    \ you for your answer. I did it with a regular expression, but I got your answer\
    \ as well because I saw it on regex101.com\n<|/ c |>\n<| a |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkuvy_sc7.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\n$array = array('a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G',\
    \ 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',\
    \ 'X', 'Y', 'Z');\n$array = array_flip($array);\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpig7scv2i.php:29\n\
    Stack trace:\n#0 /tmp/tmpig7scv2i.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpig7scv2i.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuz72vw6h.php:26\n\
    Stack trace:\n#0 /tmp/tmpuz72vw6h.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpuz72vw6h.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace(\"/[aeiou]/\", \"\", $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjimiw0pj.php:25\n\
    Stack trace:\n#0 /tmp/tmpjimiw0pj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjimiw0pj.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $result = \"\";\n    $vowels = \"aeiou\";\n    for($i = 0; $i < strlen($text);\
    \ $i++) {\n        $char = substr($text, $i, 1);\n        if($char !== \"\") {\n\
    \            $char = strtolower($char);\n            if(in_array($char, $vowels))\
    \ {\n                $result .= $char;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: in_array() expects parameter 2 to be array, string given in\
    \ /tmp/tmp_d5473f2.php on line 20\n\nWarning: in_array() expects parameter 2 to\
    \ be array, string given in /tmp/tmp_d5473f2.php on line 20\n\nWarning: in_array()\
    \ expects parameter 2 to be array, string given in /tmp/tmp_d5473f2.php on line\
    \ 20\n\nWarning: in_array() expects parameter 2 to be array, string given in /tmp/tmp_d5473f2.php\
    \ on line 20\n\nWarning: in_array() expects parameter 2 to be array, string given\
    \ in /tmp/tmp_d5473f2.php on line 20\n\nWarning: in_array() expects parameter\
    \ 2 to be array, string given in /tmp/tmp_d5473f2.php on line 20\n\nWarning: in_array()\
    \ expects parameter 2 to be array, string given in /tmp/tmp_d5473f2.php on line\
    \ 20\n\nWarning: in_array() expects parameter 2 to be array, string given in /tmp/tmp_d5473f2.php\
    \ on line 20\n\nWarning: in_array() expects parameter 2 to be array, string given\
    \ in /tmp/tmp_d5473f2.php on line 20\n\nWarning: in_array() expects parameter\
    \ 2 to be array, string given in /tmp/tmp_d5473f2.php on line 20\n\nWarning: in_array()\
    \ expects parameter 2 to be array, string given in /tmp/tmp_d5473f2.php on line\
    \ 20\n\nWarning: in_array() expects parameter 2 to be array, string given in /tmp/tmp_d5473f2.php\
    \ on line 20\n\nWarning: in_array() expects parameter 2 to be array, string given\
    \ in /tmp/tmp_d5473f2.php on line 20\n\nWarning: in_array() expects parameter\
    \ 2 to be array, string given in /tmp/tmp_d5473f2.php on line 20\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp_d5473f2.php:34\nStack trace:\n\
    #0 /tmp/tmp_d5473f2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_d5473f2.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    if ($text == '') return '';\n    $vowels = 'aeiou';\n    $text = strtolower($text);\n\
    \    $result = '';\n    $len = strlen($text);\n    $vowels_len = strlen($vowels);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $c = $text[$i];\n        if (isset($vowels[$c]))\
    \ {\n            $result .= $c;\n        } else {\n            $result .= $vowels[$i\
    \ % $vowels_len];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzp77wc93.php:37\n\
    Stack trace:\n#0 /tmp/tmpzp77wc93.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpzp77wc93.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiou\";\n    $text = preg_replace(\"/[\" . $vowels . \"\
    ]/\", \"\", $text);\n    return $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6n7idbi.php:28\n\
    Stack trace:\n#0 /tmp/tmpc6n7idbi.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpc6n7idbi.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz6plwxvc.php:26\n\
    Stack trace:\n#0 /tmp/tmpz6plwxvc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz6plwxvc.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouyAEIOUY]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdo4c5y24.php:28\n\
    Stack trace:\n#0 /tmp/tmpdo4c5y24.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdo4c5y24.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    return str_replace($vowels,\
    \ '', $text);\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n`preg_replace()` is more\
    \ appropriate for simple substitutions like this.\n<|/ c |>\n<| c |>\nYes, and\
    \ also more flexible since you can add more characters to the array and the pattern\
    \ doesn't need to be hardcoded.\n<|/ c |>\n<| c |>\n, you are correct. `preg_replace`\
    \ would be more appropriate here and I updated my answer accordingly.\n<|/ c |>\n\
    <| a |>\nYou could just use:\n<code>\n$text = preg_replace('/[aeiou]/', '', $text);\n\
    </code>\n<|/ a tags=string,php,replace dscore=2 |>\n<| c |>\nWhat if OP wants\
    \ *all* vowels removed?\n<|/ c |>\n<| c |>\nOh sorry, I missed that part. Edited\
    \ my answer.\n<|/ c |>\n<| c |>\nYou also don't need to escape `/` inside the\
    \ delimiters list.\n<|/ c |>\n<| c |>\n, you're right. But that doesn't really\
    \ matter in this case, so I left it out from my answer. Thank you!\n<|/ c |>\n\
    <| a |>\nYou could use str_replace to remove a range of vowels in a string. \n\
    For example, to remove all vowels from a string:\n<code>\n$string = str_replace(\"\
    aeiouAEIOU\", \"\", $string);\n</code>\n<|/ a dscore=1 tags=string,php,replace\
    \ |>\n<| a tags=string,php,replace |>\nUse preg_replace():\n<code>\n$text = preg_replace(\"\
    /[aeiouAEIOU]/\", \"\", $text);\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n\
    You can try this simple code\n<code>\n$vowels = 'aeiou';\n$text = 'The text you\
    \ want to remove';\n$text = preg_replace('/['.$vowels.']/', '', $text);\n</code>\n\
    <|/ a tags=string,php,replace |>\n<| a tags=string,php,replace |>\nYou can use\
    \ preg_replace for this:\n<code>\n$text = preg_replace('/[aeiouAEIOU]/', '', $text);\n\
    </code>\nThe regex pattern /[aeiouAEIOU]/ matches any vowel from the character\
    \ class [aeiouAEIOU], i.e. any vowel.\n<|/ a dscore=1 |>\n<| a d\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq5fkuu9k.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiouy]+/', '', $text);\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=algorithm,python,php |>\nThis is my solution.\n<code>\ndef remove_vowels($str):\n\
    \    vowels = ('a', 'e', 'i', 'o', 'u')\n    noVowels = [c for c in str if c not\
    \ in vowels]\n    return ''.join(noVowels)\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\ndef remove_vowels(s):\n    vowels = ('a', 'e', 'i', 'o', 'u')\n\
    \    noVowels = [c for c in s if c not in vowels]\n    return ''.join(noVowels)\n\
    \nprint(remove_vowels('abcdef'))\n</code>\n<|/ a tags=algorithm,python,php |>\n\
    <| a tags=algorithm,python,php |>\n<code>\ndef remove_vowels(word):\n    vowels\
    \ = ('a', 'e', 'i', 'o', 'u')\n    noVowels = [c for c in word if c not in vowels]\n\
    \    return ''.join(noVowels)\n\nprint(remove_vowels('Hello'))\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nWhile this code may answer the question, providing additional\
    \ context regarding why and/or how this code answers the question improves its\
    \ long-term value.\n<|/ c |>\n<| a |>\n<code>\ndef remove_vowels(word):\n    vowels\
    \ = ('a', 'e', 'i', 'o', 'u')\n    noVowels = [c for c in word if c not in vowels]\n\
    \    return ''.join(noVowels)\n\nprint(remove_vowels('Hello'))\n</code>\n<|/ a\
    \ tags=algorithm,python,php dscore=0 |>\n<| a dscore=0 |>\n<code>\n def remove_vowels(word):\n\
    \    vowels = ('a', 'e', 'i', 'o', 'u')\n    noVowels = [c for c in word if c\
    \ not in vowels]\n    return ''.join(noVowels)\n\nprint(remove_vowels('Hello'))\n\
    </code>\n<|/ a tags=algorithm,python,php |>\n<| a tags=algorithm,python,php |>\n\
    You can use the python built in function replace() with regex\n<code>\ndef remove_vowels(word):\n\
    \    vowels = ('a', 'e', 'i', 'o', 'u')\n    noVowels = [c for c in word if c\
    \ not in vowels]\n    return re.sub(r'[aeiouAEIOU]', \"\", word)\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nIf this helped, please mark \nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpogohbjqu.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[AEIOUaeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = strtolower($text);\n    $vowels = \"aeiou\";\n    $text = preg_replace('/['.$vowels.']/',\
    \ '', $text);\n    return $text;\n}\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyddad_hh.php:28\n\
    Stack trace:\n#0 /tmp/tmpyddad_hh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyddad_hh.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"\");\n  return preg_replace(\"\
    /[\" . implode($vowels, '') . \"]/\", \"\", $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9k4tn3od.php:27\n\
    Stack trace:\n#0 /tmp/tmp9k4tn3od.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9k4tn3od.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouAEIOU]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    if ($text == '') return '';\n    $text = preg_replace('/[aeiouy]{3}/i',\
    \ '', $text);\n    return $text;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyzvat15r.php:25\n\
    Stack trace:\n#0 /tmp/tmpyzvat15r.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyzvat15r.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = strtolower($text);\n    $vowels = array('a','e','i','o','u','A','E','I','O','U');\n\
    \    $noVowels = str_replace($vowels, '', $text);\n    return $noVowels;\n}\n\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j5epi5e.php:29\n\
    Stack trace:\n#0 /tmp/tmp9j5epi5e.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9j5epi5e.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1w8y61_4.php:25\n\
    Stack trace:\n#0 /tmp/tmp1w8y61_4.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1w8y61_4.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiouAEIOU\";\n    $text = preg_replace(\"~[\" . $vowels\
    \ . \"]~\", \"\", $text);\n    return $text;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    foreach (str_split($text) as $char) {\n        $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n        if (in_array($char, $vowels)) {\n            continue;\n\
    \        }\n        $result .= $char;\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzxk0uj1.php:31\n\
    Stack trace:\n#0 /tmp/tmpdzxk0uj1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdzxk0uj1.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace(\"/[aeiou]/\", \"\", $text);\n}\n</code>\n<|/ a tags=string,replace,php\
    \ |>\n<| c |>\nYou forgot the `i` modifier for regex (to match lowercase as well\
    \ as uppercase).\n<|/ c |>\n<| a |>\n<code>\n$string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n$toReplace = array(\"a\",\"e\",\"i\",\"o\",\"u\",\"A\",\"E\",\"I\",\"O\",\"\
    U\");\n$replace = array(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"\
    ,\"0\");\n$string = str_replace($toReplace, $replace, $string);\n$string  = str_replace(\"\
    \ \", \"1\", $string);\n$string = str_replace(\"0\", \"0\", $string);\necho $string;\n\
    </code>\n<|/ a dscore=4 tags=string,replace,php |>\n<| a tags=string,replace,php\
    \ |>\nA simple way is to use strtr:\n<code>\n$replacements = array(\n    ' ' =>\
    \ '1',\n    'a' => '2',\n    'e' => '3',\n    'i' => '4',\n    'o' => '5',\n \
    \   'u' => '6'\n);\n$string = strtr($string, $replacements);\n</code>\n<|/ a dscore=4\
    \ |>\n<| c |>\nNot sure why but this one was the best one here on this page.\n\
    <|/ c |>\n<| a dscore=3 |>\n<code>\n$string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\
    $string2 = preg_replace('/[aeiou]/', '1', $string);\n$string2 = preg_replace('/[0-9]/',\
    \ '0', $string2);\n$string2 = preg_replace('/[a-z]/', '1', $string2);\n$string2\
    \ = preg_replace('/[^01]/', '0', $string2);\n$string2 = preg_replace('/[^01]/',\
    \ '', $string2);\n$string2 = preg_replace('/[^a-zA-Z]/', '', $string2);\n</code>\n\
    <|/ a tags=string,replace,php |>\n<| c |>\nThis would also remove all non-alphabetic\
    \ characters from the string.\n<|/ c |>\n<| a dscore=2 tags=string,replace,php\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp__d3h3bk.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiouAEIOU\";\n    $text = strtolower($text);\n    $text\
    \ = preg_replace(\"/[aeiou]/i\", \" \", $text);\n    $text = str_replace($vowels,\
    \ \"\", $text);\n    return $text;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpicvl0ha3.php:27\n\
    Stack trace:\n#0 /tmp/tmpicvl0ha3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpicvl0ha3.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = preg_replace(\"/[aeiouAEIOU]+/\", \"\", $text);\n    return $text;\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = 'aeiouyAEIOUY';\n\treturn preg_replace('/['.$vowels.']/', '',\
    \ $text);\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tbg4ui5.php:28\n\
    Stack trace:\n#0 /tmp/tmp1tbg4ui5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1tbg4ui5.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    // Remove vowels\n    $text = preg_replace('/[aeiou]/', '', $text);\n\
    \    \n    // Remove vowel from end of string\n    $text = rtrim($text, 'AEIOU');\n\
    \    \n    // Remove vowels from beginning of string\n    $text = ltrim($text,\
    \ 'AEIOU');\n    \n    // Remove duplicate vowels\n    $text = str_replace('AEIOU',\
    \ '', $text);\n    \n    return $text;\n}\n\n/**\n * Returns the number of words\
    \ in a string\n */\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    foreach($text as $key => $value) {\n        if(preg_match(\"/[aeiou]/i\"\
    , $value)) {\n            unset($text[$key]);\n        }\n    }\n    return implode('',\
    \ $text);\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmp6ma9o8ah.php\
    \ on line 14\n\nWarning: implode(): Invalid arguments passed in /tmp/tmp6ma9o8ah.php\
    \ on line 19\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ma9o8ah.php:26\n\
    Stack trace:\n#0 /tmp/tmp6ma9o8ah.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6ma9o8ah.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouy]/', '', $text);\n}\n\n$fname = $_GET['fname'];\n\
    $lname = $_GET['lname'];\n$email = $_GET['email'];\n$phone = $_GET['phone'];\n\
    $city = $_GET['city'];\n$state = $_GET['state'];\n$zip = $_GET['zip'];\n\n$sql\
    \ = \"INSERT INTO customer (f_name, l_name, email, phone, city, state, zip) VALUES\
    \ ('\".$fname.\"','\".$lname.\"','\".$email.\"','\".$phone.\"','\".$city.\"','\"\
    .$state.\"','\".$zip.\"')\";\n\n$result = $conn->query($sql);\n\nif($result){\n\
    \n    echo \"<script>alert('Customer was successfully added.');\n        window.location.href\
    \ = 'customer_list.php';\n    </script>\";\n}\nelse{\n    echo \"<script>alert('Customer\
    \ could not be added.');\n        window.location.href = 'customer_list.php';\n\
    \    </script>\";\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to a member function query() on null\
    \ in /tmp/tmpk0pdurif.php:27\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpk0pdurif.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\treturn preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mtpvlie.php:26\n\
    Stack trace:\n#0 /tmp/tmp4mtpvlie.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4mtpvlie.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = (string)$text;\n    $vowels = 'aeiou';\n    $filtered = preg_replace('/[aeiouAEIOU]/',\
    \ \"\", $text);\n    $filtered = preg_replace('/[AEIOUaeiou]/', \"\", $filtered);\n\
    \    $filtered = preg_replace('/[AEIOUaeiouAEIOU]/', \"\", $filtered);\n    return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiouy\";\n    $text = strtolower($text);\n    $text = str_replace($vowels,\"\
    \",$text);\n    return $text;\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzpy1kded.php:25\n\
    Stack trace:\n#0 /tmp/tmpzpy1kded.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzpy1kded.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = preg_replace('/[^aeiouAEIOU]/i', '', $text);\n    return $text;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xb173g7.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xb173g7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3xb173g7.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouAEIOU]/', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = trim($text);\n    $vowels = array('a','e','i','o','u','A','E','I','O','U');\n\
    \    $text = str_replace($vowels,'',$text);\n    return $text;\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = strtolower($text);\n    $text = preg_replace('/[aeiouy]/', '',\
    \ $text);\n    return $text;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqv61bim.php:28\n\
    Stack trace:\n#0 /tmp/tmpeqv61bim.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpeqv61bim.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a','e','i','o','u');\n    return preg_replace('/[AEIOUYaeiouy]+/',\
    \ '', $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33dumed4.php:29\n\
    Stack trace:\n#0 /tmp/tmp33dumed4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp33dumed4.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a','e','i','o','u');\n    return preg_replace('/['.implode('|',$vowels).']/','',$text);\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1w2x5wh.php:27\n\
    Stack trace:\n#0 /tmp/tmpz1w2x5wh.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpz1w2x5wh.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    if (empty($text)) {\n        return '';\n    }\n    $vowels = 'aeiouy';\n\
    \    $textLower = strtolower($text);\n    $out = '';\n    $vowels_found = preg_match_all('/['.$vowels.']/',\
    \ $textLower, $matches);\n    if ($vowels_found) {\n        foreach ($matches[0]\
    \ as $match) {\n            $out .= $match;\n        }\n    }\n    return $out;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcc9aibox.php:35\n\
    Stack trace:\n#0 /tmp/tmpcc9aibox.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcc9aibox.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = strtolower($text);\n    $vowels = 'aeiouy';\n    $text = preg_replace('/[aeiouy]+/',\
    \ '', $text);\n    return $text;\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp913e33q_.php:29\n\
    Stack trace:\n#0 /tmp/tmp913e33q_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp913e33q_.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $text = strtolower($text);\n  $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \  $replaced = str_replace($vowels, '', $text);\n  return $replaced;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytnfbfg1.php:29\n\
    Stack trace:\n#0 /tmp/tmpytnfbfg1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpytnfbfg1.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiouAEIOU\";\n    $text = preg_replace(\"/[\" . $vowels\
    \ . \"]/\", \"\", $text);\n    return $text;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n</code>\n<|/ a tags=php\
    \ |>\n<| c |>\nThanks alot for the help\n<|/ c |>\n<| c |>\nHow about \"aaBAA\"\
    \ => B\n<|/ c |>\n<| c |>\n: Yeah that was a typo. I fixed it.\n<|/ c |>\n<| a\
    \ dscore=2 |>\nYou should be able to do it with preg_replace:\n<code>\n$text =\
    \ 'aaBAA';\necho preg_replace('/[aeiou]/', '', $text);\n</code>\n<|/ a tags=php\
    \ |>\n<| c |>\nThanks alot for the help\n<|/ c |>\n<| a |>\nYou can remove all\
    \ vowels with one function call:\n<code>\n$str = 'aaBAA';\n\n$str = preg_replace('/[aeiou]/',\
    \ '', $str);\n</code>\n<|/ a tags=php dscore=2 |>\n<| c |>\nThanks alot for the\
    \ help\n<|/ c |>\n<| a dscore=2 |>\nYou do not need to use preg_replace for that,\
    \ you can just use str_replace for that\n<code>\necho str_replace('aeiouAEIOU',\
    \ '', $str);\n</code>\n<|/ a tags=php |>\n<| c |>\nThanks alot for the help\n\
    <|/ c |>\n<| a dscore=1 |>\nYou can do this with a regular expression:\n<code>\n\
    $text = 'aaBAA';\n$output = preg_replace('/[aeiouAEIOU]/', '', $text);\n</code>\n\
    <|/ a tags=php |>\n<| c |>\nThanks alot for the help\n<|/ c |>\n<| a |>\n<code>\n\
    echo preg_replace('~[aeiou]~', '', $text);\n</code>\n<|/ a dscore=1 tags=php |>\n\
    <| c |>\nThanks alot for the help\n<|/ c |>\n<| a dscore=1 tags=php |>\n<code>\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5ld38bvx.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $text = str_replace($vowels,\
    \ '', preg_replace('/[aeiouAEIOU]+/', '', $text));\n    return $text;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nI dont see how it does anything related to\
    \ my problem. can you please explain?\n<|/ c |>\n<| c |>\nThe array $vowels should\
    \ be the vowels. I've edited my answer with more clarification.\n<|/ c |>\n<|\
    \ a tags=php,arrays |>\nyou can use the explode function for that\n<code>\n$text\
    \ = 'aaBAA';\n$array = explode($text);\n</code>\nnow you have an array where every\
    \ element is a letter from the string $text\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\nFirst of all I recommend you reading this article about regular expressions\
    \ and this one about preg_match\nYou will need preg_match_all to find every single\
    \ letter in the given string and put it into an array using preg_match with the\
    \ pattern /[a-z]/i which means\n\ni means case insensitive\n\n<code>\n<?php\n\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpshnjmlk3.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    if (empty($text)) {\n        return '';\n    }\n\n    return preg_replace('/[aeiouyAEIOUY]/',\
    \ '', $text);\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 tags=php,regex,preg-replace\
    \ |>\nTry this one:\n<code>\n<?php\n    $txt = \"aaBAA\";\n    $txt = preg_replace(\"\
    /[^aeiou]/\",\"\",$txt);\n    echo $txt;\n</code>\nOutput:\n<code>\nB\n</code>\n\
    <|/ a |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post -\
    \ you can always comment on your own posts, and once you have sufficient [reputation](http://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](http://stackoverflow.com/help/privileges/comment).\n\
    <|/ c |>\n<| c |>\nIt does not give a solution to OP's question. He can use this\
    \ code. :)\n<|/ c |>\n<| a tags=php,regex,preg-replace dscore=0 |>\ntry this solution:\n\
    <code>\n$txt = \"aaBAA\";\n$txt = preg_replace('/[^aeiouAEIOU]/','',$txt);\necho\
    \ $txt;\n</code>\n<|/ a |>\n<| c |>\nThis does not provide an answer to the question.\
    \ To critique or request clarification from an author, leave a comment below their\
    \ post - you can always comment on your own posts, and once you have sufficient\
    \ [reputation](http://stackoverflow.com/help/whats-reputation) you will be able\
    \ to [comment on any post](http://stackoverflow.com/help/privileges/comment).\n\
    <|/ c |>\n<| c |>\nI really apreciate your comment. I'm new here and I didn't\
    \ knew how to answer questions properly.\n<|/ c |>\n<| a tags=php,regex,preg-replace\
    \ |>\n<code>\n<?php\n$string = \"aaBAA\";\n$replacements = array();\n\n$patterns\
    \ = array();\n$patterns[0] = '/a|e|i|o|u|y|/';\n$replacements[0] = 'a';\n$patterns[1]\
    \ = '/B|c|d|f|g|H|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z/';\n$replacements[1]\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpd08la6hh.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[AEIOUaeiou]/', '', $text);\n}\n</code>\nI haven't\
    \ tested this code.\n<|/ a tags=php |>\n<| a |>\nI like using regexp to remove\
    \ special characters in a string, this is my solution:\n<code>\n$str = 'abc, def,ghi.\
    \ jkl;';\n$str = preg_replace(\"/[^a-zA-Z ]+/\", \"\", $str);\necho $str;\n</code>\n\
    <|/ a tags=php dscore=5 |>\n<| a tags=php dscore=4 |>\nThe correct way to remove\
    \ spaces and special characters from a string:\n<code>\n$str = preg_replace('/[^a-zA-Z\
    \ ]/', \"\", $str);\n</code>\n<|/ a |>\n<| a |>\n<code>\n$str=\"abc def ghi jkl;\"\
    ;\n$str = str_replace(' ', '', $str);\n$str = str_replace(\"%\", \"\", $str);\n\
    $str = str_replace(\"\\\\\", \"\", $str);\n$str = str_replace(\"\xC2\", \"\",\
    \ $str);\n$str = str_replace(\"\xE2\", \"\", $str);\n$str = str_replace(\"\xC7\
    \", \"\", $str);\n$str = str_replace(\"\xD6\", \"\", $str);\n$str = str_replace(\"\
    \xDC\", \"\", $str);\n$str = str_replace(\"\xE1\", \"\", $str);\n$str = str_replace(\"\
    \xC9\", \"\", $str);\n$str = str_replace(\"\xCD\", \"\", $str);\n$str = str_replace(\"\
    \xD3\", \"\", $str);\n$str = str_replace(\"\xDA\", \"\", $str);\n$str = str_replace(\"\
    \xD1\", \"\", $str);\n$str = str_replace(\"\xF1\", \"\", $str);\n$str = str_replace(\"\
    \xF9\", \"\", $str);\n$str = str_replace(\"\xFA\", \"\", $str);\n$str = str_replace(\"\
    \xF1\", \"\", $str);\n$str = str_replace(\"\xD1\", \"\", $str);\n$str = str_replace(\"\
    \xC7\", \"\", $str);\n$str = str_replace(\"\xD6\", \"\", $str);\n$str = str_replace(\"\
    \xDC\", \"\", $str);\n$str = str_replace(\"\xE1\", \"\", $str);\n$str = str_replace(\"\
    \xC9\", \"\", $str);\n$str = str_replace(\"\xCD\", \"\", $str);\n$str = str_replace(\"\
    \xD3\", \"\", $str);\n$str = str_replace(\"\xDA\", \"\", $str);\n$str = str_replace(\"\
    \xD1\", \"\", $str);\n$str = str_replace(\"\xF1\", \"\", $str);\n$str = str_replace(\"\
    \xD1\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplqube46n.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('~[aeiouy]+~', '', $text);\n}\n</code>\n<|/ a dscore=1\
    \ tags=php,algorithm,string,preg-replace |>\n<| c |>\nThanks so much for the thorough\
    \ explanation and code!\n<|/ c |>\n<| a dscore=1 |>\nHow about this?\n<code>\n\
    $string = str_split($string);\narray_walk($string, function(&$val){\n    $val\
    \ = preg_replace(\"/[aeiouy]/\", \"\", $val);\n});\n$string = implode($string);\n\
    </code>\n<|/ a tags=php,algorithm,string,preg-replace |>\n<| c |>\nThis seems\
    \ to be the cleanest answer, but I'm still learning PHP so I wanted to check it\
    \ against the others first before giving you credit.\n<|/ c |>\n<| c |>\nHa! I\
    \ hadn't even seen the `array_walk` function until now. Very nice and concise!\n\
    <|/ c |>\n<| c |>\n`array_walk` applies a function to all elements of a list,\
    \ or in this case all characters of a string. It's a way to apply the same function\
    \ to all members of a list\n<|/ c |>\n<| a dscore=1 tags=php,algorithm,string,preg-replace\
    \ |>\nTry this one:\n<code>\n<?php\n\n$str = \"test!aa#a!aa#\";\n\n$array = array('a','e','i','o','u','y','A','E','I','O','U','Y');\n\
    $str = preg_replace('/([A-Za-z])([[:alpha:]]+)/i', '\\1\\\\2', $str);\n$str =\
    \ preg_replace('/([[:alpha:]]+)([A-Za-z])/', '\\1\\2', $str);\n$str = preg_replace('/([[:alpha:]]+)([A-Za-z])([[:alpha:]]+)/',\
    \ '\\1\\\\2\\3', $str);\n\necho strtoupper($str);\n</code>\n<|/ a |>\n<| a |>\n\
    This could be done by doing a regex replacement with the function preg_replace_callback.\n\
    The callback function would remove vowels and convert them into the proper case\
    \ letters:\n<code>\n$string = preg_replace_callback('/[^a-zA-Z]+/', function($m)\
    \ {\n    return strtoupper($m[0]);\n}, $string);\n</code>\n<|/ a tags=php,algorithm,string,preg-replace\
    \ dscore=1 |>\n<| a dscore=1 |>\nAnother one using array_\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpign4ukr1.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = 'aeiouAEIOU';\n    return preg_replace(\"/[{$vowels}]/\", \"\
    \", $text);\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\
    \    $text = strtolower($text);\n    return preg_replace(\"/[\".preg_quote($vowels).\"\
    ]/\", \"\", $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: preg_quote() expects parameter 1 to be string, array given in\
    \ /tmp/tmp4162203t.php on line 16\n\nWarning: preg_replace(): Compilation failed:\
    \ missing terminating ] for character class at offset 2 in /tmp/tmp4162203t.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4162203t.php:24\n\
    Stack trace:\n#0 /tmp/tmp4162203t.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4162203t.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouy]+/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbn_3t3hi.php:26\n\
    Stack trace:\n#0 /tmp/tmpbn_3t3hi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbn_3t3hi.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiou\";\n    $text = str_replace($vowels, \"\",$text);\n\
    \    return $text;\n}\n</code>\nThis can be written using map and filter functions\
    \ in PHP. \n<code>\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpoevu882a.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = 'aeiou';\n    return preg_replace(\"/[{$vowels}]/\", \"\",\
    \ $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmrb8u6m5.php:27\n\
    Stack trace:\n#0 /tmp/tmpmrb8u6m5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmrb8u6m5.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a','e','i','o','u','A','E','I','O','U');\n  return preg_replace(\"\
    /[{$vowels}]/\", \"\", $text);\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ub1sl_i.php:24\n\
    Stack trace:\n#0 /tmp/tmp_ub1sl_i.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_ub1sl_i.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiou\";\n    $text = preg_replace(\"/[\" . $vowels . \"\
    ]/\", \"\", $text);\n    return $text;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6z4s5f0.php:28\n\
    Stack trace:\n#0 /tmp/tmpi6z4s5f0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpi6z4s5f0.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiou\";\n    $text = strtolower($text);\n    $result = \"\
    \";\n    for ($i = 0; $i < strlen($text); $i++) {\n        $char = substr($text,\
    \ $i, 1);\n        if (!in_array($char, $vowels)) {\n            $result .= $char;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a tags=php,substr,string\
    \ |>\n<| c |>\nYes it is. `substr` takes 2 optional parameters `length` and `offset`\
    \ so you don't need to call it twice.\n<|/ c |>\n<| c |>\nThanks for the response.\
    \ However, I am getting this error. Warning: in_array() expects parameter 2 to\
    \ be array, null given in /home/jamesreids/public_html/app/remove_vowels.php on\
    \ line 7\n<|/ c |>\n<| c |>\nCan you add the function definition to your question?\
    \ I suspect there is an issue with how it's defined/returned, etc.\n<|/ c |>\n\
    <| c |>\nI added the remove_vowels function to the original post. Thanks\n<|/\
    \ c |>\n<| c |>\nDid you try my example in place of the `remove_vowels` function?\
    \ If so, does it work?\n<|/ c |>\n<| a dscore=0 |>\nThe PHP substr() function\
    \ has some strange behaviors:\n\n<code>\n<?php\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkudukvj2.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $text = preg_replace('/[aeiou]/', '', $text);\n  return $text;\n}\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzlrbpeid.php:26\n\
    Stack trace:\n#0 /tmp/tmpzlrbpeid.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzlrbpeid.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $return = '';\n    // Check if text is not empty or null.\n    if (!empty($text))\
    \ {\n        // Iterate through each character.\n        for ($i = 0; $i < strlen($text);\
    \ $i++) {\n            // Check first character in text is vowel.\n          \
    \  if (($text[$i] != 'a') && ($text[$i] != 'e') && ($text[$i] != 'i') && ($text[$i]\
    \ != 'o') && ($text[$i] != 'u'))  {\n                // Append character to return\
    \ string.\n                $return .= $text[$i];\n            }\n        }\n \
    \   }\n    return $return;\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx3wxtnwy.php:37\n\
    Stack trace:\n#0 /tmp/tmpx3wxtnwy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpx3wxtnwy.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n</code>\n<|/ a dscore=0\
    \ tags=php |>\n<| c |>\nI am a beginner in php. I have no idea.\n<|/ c |>\n<|\
    \ c |>\nIn your case, you can simply use strip_tags().\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n<?php \nif(isset($_POST['submit']))\n{\n //$name=$_POST['name'];\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8t2c_kui.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u', 'y'];\n    $text = strtolower($text);\n\
    \    for ($i = 0; $i < strlen($text); ++$i) {\n        $char = substr($text, $i,\
    \ 1);\n        if (!in_array($char, $vowels)) {\n            $text .= substr($text,\
    \ $i, 1);\n        }\n    }\n    return $text;\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = 'aeiou';\n  $text = preg_replace('/['.$vowels.']/', '', $text);\n\
    \  return $text;\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ysxozi_.php:28\n\
    Stack trace:\n#0 /tmp/tmp3ysxozi_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp3ysxozi_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiouy\";\n    $text = strtolower($text);\n    $text = preg_replace(\"\
    /[\" . $vowels . \"]/\", \"\", $text);\n    return $text;\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmney_3_o.php:28\n\
    Stack trace:\n#0 /tmp/tmpmney_3_o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmney_3_o.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace(\"/[aeiou]/\", \"\", $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_y1ln6w.php:26\n\
    Stack trace:\n#0 /tmp/tmpu_y1ln6w.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpu_y1ln6w.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = strtolower($text);\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    return str_replace($vowels, '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2x7p40qr.php:28\n\
    Stack trace:\n#0 /tmp/tmp2x7p40qr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2x7p40qr.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels_array = array('a','e','i','o','u','A','E','I','O','U');\n   \
    \ return str_replace($vowels_array, '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $text = strtolower($text);\n    $noVowels = array('a', 'e', 'o', 'u');\n\
    \    return str_replace($noVowels, '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zb97ek8.php:24\n\
    Stack trace:\n#0 /tmp/tmp1zb97ek8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1zb97ek8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouy]+/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gu3iq9o.php:26\n\
    Stack trace:\n#0 /tmp/tmp9gu3iq9o.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9gu3iq9o.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiouyAEIOUY]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4dw5umr.php:28\n\
    Stack trace:\n#0 /tmp/tmpc4dw5umr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpc4dw5umr.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = 'aeiouyAEIOUY';\n    return preg_replace('/[aeiouyAEIOUY]/',\
    \ '', $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpga0a1vke.php:29\n\
    Stack trace:\n#0 /tmp/tmpga0a1vke.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpga0a1vke.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a','e','i','o','u');\n    return preg_replace('/['.preg_quote($vowels).']/',\
    \ '', $text);\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: preg_quote() expects parameter 1 to be string, array given in\
    \ /tmp/tmpml0pii1v.php on line 15\n\nWarning: preg_replace(): Compilation failed:\
    \ missing terminating ] for character class at offset 2 in /tmp/tmpml0pii1v.php\
    \ on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpml0pii1v.php:22\n\
    Stack trace:\n#0 /tmp/tmpml0pii1v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpml0pii1v.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace(\"/[AEIOUYaeiouy]/\", '', $text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tomkuoi.php:28\n\
    Stack trace:\n#0 /tmp/tmp5tomkuoi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp5tomkuoi.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiou\";\n    $text = strtolower($text);\n    $new = preg_replace('/['\
    \ . $vowels . ']/', '', $text);\n    return $new;\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpmjxu3i.php:28\n\
    Stack trace:\n#0 /tmp/tmpxpmjxu3i.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxpmjxu3i.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouy]/', '', $text);\n}\n</code>\n<|/ a |>\n\
    <| a |>\n<code>\n$string = 'abcdef';\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpc5hssdja.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiouy]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhvex8cn.php:26\n\
    Stack trace:\n#0 /tmp/tmpbhvex8cn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbhvex8cn.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n</code>\nFor your second\
    \ part of your question:\n\nMy goal is to have the output be as below, without\
    \ repeating the names on the second line.\n\nUse array_unique() to remove duplicate\
    \ values. Then implode() to join with a ,\n<code>\n$new_list = array_unique(array_map('remove_vowels',\
    \ $list));\necho implode(',', $new_list);\n</code>\n<|/ a |>\n<| a tags=php,arrays\
    \ |>\nUse array_unique to remove duplicate values.\n<code>\n$list = array('Adam','Alex','David','Ed','Freddy','George','Ian','Joe','Jim');\n\
    $new_list = array_unique($list);\necho implode(',',$new_list);\n</code>\nOutput:\n\
    <code>\nAdam,Alex,David,Freddy,George,Ian,Joe,Jim\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=php,arrays |>\narray_unique is used to remove duplicate elements from\
    \ an array. \nUse implode to convert array into comma separated string. \n<code>\n\
    $names = array('Adam','Alex','David','Ed','Freddy','George','Ian','Joe','Jim');\n\
    $names = array_unique($names);\n$names = implode(',',$names);\necho $names;\n\
    </code>\nOutput: \n<code>\nAdam,Alex,Freddy,George,Ian,Joe,Jim\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 tags=php,arrays |>\nHere is a function that can remove\
    \ duplicate values from a string.\n<code>\nfunction candidate(...$args) {\n  \
    \  return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2s9mtbri.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = \"aeiouAEIOU\";\n  return preg_replace(\"/[^$vowels]/\", \"\"\
    , $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzdb2p6o0.php:24\n\
    Stack trace:\n#0 /tmp/tmpzdb2p6o0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzdb2p6o0.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiouy]+/', '', $text);\n}\n\n$strings = array('apples',\
    \ 'oranges', 'pears', 'mangos', 'apricots', 'bananas', 'peaches', 'grapes', 'apricots',\
    \ 'bananas', 'peaches', 'grapes', 'apricots', 'bananas', 'peaches', 'grapes',\
    \ 'apricots', 'bananas', 'peaches', 'grapes', 'apricots', 'bananas', 'peaches',\
    \ 'grapes');\n$strings = array_map('remove_vowels', $strings);\n\nprint_r($strings);\n\
    \nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => ppls\n    [1] => rngs\n    [2] => prs\n    [3] =>\
    \ mngs\n    [4] => prcts\n    [5] => bnns\n    [6] => pchs\n    [7] => grps\n\
    \    [8] => prcts\n    [9] => bnns\n    [10] => pchs\n    [11] => grps\n    [12]\
    \ => prcts\n    [13] => bnns\n    [14] => pchs\n    [15] => grps\n    [16] =>\
    \ prcts\n    [17] => bnns\n    [18] => pchs\n    [19] => grps\n    [20] => prcts\n\
    \    [21] => bnns\n    [22] => pchs\n    [23] => grps\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp2fhyo2w4.php:31\nStack trace:\n#0 /tmp/tmp2fhyo2w4.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2fhyo2w4.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $text = preg_replace('/[aeiouy]/', '', $text);\n  return $text;\n}\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ehf38r4.php:26\n\
    Stack trace:\n#0 /tmp/tmp8ehf38r4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8ehf38r4.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2vuc3gt.php:26\n\
    Stack trace:\n#0 /tmp/tmpf2vuc3gt.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpf2vuc3gt.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4q2fo_ic.php:25\n\
    Stack trace:\n#0 /tmp/tmp4q2fo_ic.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4q2fo_ic.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiouAEIOU\";\n    return str_replace(array('a', 'e', 'i',\
    \ 'o', 'u'), $vowels, $text);\n}\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhau9flr.php:24\n\
    Stack trace:\n#0 /tmp/tmpdhau9flr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdhau9flr.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouAEIOU]', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: preg_replace(): No ending delimiter '/' found in /tmp/tmpzsy7te5b.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsy7te5b.php:22\n\
    Stack trace:\n#0 /tmp/tmpzsy7te5b.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzsy7te5b.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/i', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace(\"/[aeiou]/\", '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7wuz_b1.php:26\n\
    Stack trace:\n#0 /tmp/tmpa7wuz_b1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa7wuz_b1.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    if (!is_string($text)) {\n        return $text;\n    }\n\n    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $text = strtolower($text);\n    return preg_replace('/[aeiou]/',\
    \ '', $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsw1min4.php:32\n\
    Stack trace:\n#0 /tmp/tmphsw1min4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphsw1min4.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouAEIOU]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $len = strlen($text);\n\
    \    $out = '';\n    for ($i = 0; $i < $len; $i++) {\n        if (in_array($text[$i],\
    \ $vowels)) {\n            $out .= $text[$i];\n        }\n    }\n    return $out;\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_9pphn39.php:30\n\
    Stack trace:\n#0 /tmp/tmp_9pphn39.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_9pphn39.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiouAEIOU]/', '', $text);\n}\n\n/**\n * Checks\
    \ string for valid email address.\n * Return true if email is valid, false otherwise.\n\
    \ *\n * @param string $email email to check\n *\n * @return bool\n */\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouy]+/', '', $text);\n}\n</code>\n<|/ a |>\n\
    <| c |>\nThank you for your solution. I will try this one.\n<|/ c |>\n<| a tags=preg-replace,string,php,replace\
    \ |>\nThis would be a solution using regular expressions in php :\n<code>\n<?php\n\
    $string = 'This is my string';\n$newString = preg_replace(\"/[^aeiouAEIOU]+/\"\
    , \"\", $string);\necho $newString;\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmprna6vfqs.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmrxr9cm.php:25\n\
    Stack trace:\n#0 /tmp/tmprmrxr9cm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmprmrxr9cm.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u', 'y');\n    return preg_replace('/['\
    \ . implode('|', $vowels) . ']/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk0q7ah41.php:27\n\
    Stack trace:\n#0 /tmp/tmpk0q7ah41.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpk0q7ah41.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $result = \"\";\n    for ($i = 0; $i < strlen($text); $i++) {\n     \
    \   $c = $text[$i];\n        if ($c == \"a\" || $c == \"e\" || $c == \"i\" ||\
    \ $c == \"o\" || $c == \"u\" || $c == \"y\") {\n            $result .= $text[$i];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzyl742_j.php:30\n\
    Stack trace:\n#0 /tmp/tmpzyl742_j.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzyl742_j.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $noVowels = preg_replace('/[aeiouAEIOU]/', \"\", $text);\n  return $noVowels;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = array('a','e','i','o','u');\n  $text = strtr($text, \"aeiou\"\
    , \"AEIOU\");\n  $text = str_replace($vowels, \"\", $text);\n  return $text;\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt_j1u7dk.php:25\n\
    Stack trace:\n#0 /tmp/tmpt_j1u7dk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpt_j1u7dk.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiouAEIOU\";\n    $text = preg_replace(\"/[\" . $vowels\
    \ . \"]/\", \"\", $text);\n    return $text;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiouAEIOU]+/', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppikgr8ql.php:26\n\
    Stack trace:\n#0 /tmp/tmppikgr8ql.php(31): test()\n#1 {main}\n  thrown in /tmp/tmppikgr8ql.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  $vowels = \"aeiou\";\n  return preg_replace('/[ '.$vowels.' ]/', '', $text);\n\
    }\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeajt_2eb.php:26\n\
    Stack trace:\n#0 /tmp/tmpeajt_2eb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpeajt_2eb.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $output = \"\";\n    for ($i = 0; $i < strlen($text); $i++) {\n     \
    \   if ($text[$i] !=\"a\" && $text[$i] !=\"e\" && $text[$i] !=\"i\" && $text[$i]\
    \ !=\"o\" && $text[$i] !=\"u\") {\n            $output .= $text[$i];\n       \
    \ }\n    }\n    return $output;\n}\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphhy_kcrv.php:31\n\
    Stack trace:\n#0 /tmp/tmphhy_kcrv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphhy_kcrv.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $vowels = \"aeiou\";\n    $text = preg_replace(\"/[\" . $vowels . \"\
    ]/\", \"\", $text);\n    return $text;\n}\nfunction candidate(...$args) {\n  \
    \  return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbqmjijmt.php:27\n\
    Stack trace:\n#0 /tmp/tmpbqmjijmt.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbqmjijmt.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiou]/', '', $text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7alafwo.php:26\n\
    Stack trace:\n#0 /tmp/tmp_7alafwo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_7alafwo.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n  return preg_replace('/[aeiouy]+/', '', $text);\n}\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqg8gmjm.php:25\n\
    Stack trace:\n#0 /tmp/tmpaqg8gmjm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaqg8gmjm.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n    $no_vowels = preg_replace('/[^aeiouAEIOU]/i', '', $text);\n    return\
    \ $no_vowels;\n}\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7sviydeu.php:23\n\
    Stack trace:\n#0 /tmp/tmp7sviydeu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7sviydeu.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n// >>> remove_vowels('')\n// ''\n// >>> remove_vowels('abcdef')\n\
    // 'bcdf'\n// >>> remove_vowels('aaaaa')\n// ''\n// >>> remove_vowels('aaBAA')\n\
    // 'B'\n// >>> remove_vowels('zbcd')\n// 'zbcd'\nfunction remove_vowels($text)\
    \ {\n\t$vowels = \"aeiou\";\n\treturn preg_replace(\"/[\" . $vowels . \"]/i\"\
    , \"\", $text);\n}\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_91_is_bored
language: php
results:
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $bored\
    \ = 0;\n  \n  foreach (explode('.', trim($S)) as $word) {\n    if (strcasecmp('I',\
    \ $word) == 0) {\n      $bored++;\n    }\n  }\n  return $bored;\n}\n</cell>\n\
    <text>\nThe next cell contains code to test your function by passing it a series\
    \ of questions. Feel free to modify the number of questions being asked in the\
    \ test cell by changing the value of $numQuestions. To test your code, submit\
    \ it in a .php file in the submission folder which should be titled test_is_bored.php.\n\
    \n\n</text>\n<cell>\n$numQuestions = 10; \n\n$tests = array();\nfor ($num = 1;\
    \ $num <= $numQuestions; $num++) {\n  $tests[$num] = array();\n  \n  // Answer\
    \ 1\n  $tests[$num][0] = \"I love this weather\";\n  $result = is_bored($tests[$num][0]);\n\
    \  $expectedResult = 0;\n  if ($result == $expectedResult) {\n    echo 'PASSED:\
    \ ' . $tests[$num][0] . \"\\n\";\n  } else {\n    echo 'FAILED: ' . $tests[$num][0]\
    \ . \"\\n\";\n  }\n  \n  // Answer 2\n  $tests[$num][1] = \"The sky is blue. The\
    \ sun is shining\";\n  $result = is_bored($tests[$num][1]);\n  $expectedResult\
    \ = 1;\n  if ($result == $expectedResult) {\n    echo 'PASSED: ' . $tests[$num][1]\
    \ . \"\\n\";\n  } else {\n    echo 'FAILED: ' . $tests[$num][1] . \"\\n\";\n \
    \ }\n  \n  // Answer 3\n  $tests[$num][2] = \"Hello world\";\n  $result = is_bored($tests[$num][2]);\n\
    \  $expectedResult = 0;\n  if ($result == $expectedResult) {\n    echo 'PASSED:\
    \ ' . $tests[$num][2] . \"\\n\";\n  } else {\n    echo 'FAILED: ' . $tests[$num][2]\
    \ . \"\\n\";\n  }\n  \n  // Answer 4\n  $tests[$num][3] = \"Hello!\";\n  $result\
    \ = is_bored($tests[$num][3]);\n  $expectedResult = 1;\n  if ($result == $expectedResult)\
    \ {\n    echo 'PASSED: ' . $tests[$num][3] . \"\\n\";\n  } else {\n    echo 'FAILED:\
    \ ' . $tests[$num][3] . \"\\n\";\n  }\n  \n  // Answer 5\n  $tests[$num][4] =\
    \ \"I love this \nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9e75o40t.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode(\".\", $S);\n    $counter = 0;\n    foreach ($S as $word) {\n    \
    \    if ($word[0] == \"I\") {\n            $counter++;\n        }\n    }\n   \
    \ return $counter;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02wn1axz.php:26\n\
    Stack trace:\n#0 /tmp/tmp02wn1axz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp02wn1axz.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $bored\
    \ = false;\n  $words = explode(\".\",$S);\n  foreach($words as $word) {\n    if(strpos($word,\"\
    I\") == 0) {\n      if($bored == false) {\n        $bored = true;\n      } else\
    \ {\n        $bored = false;\n      }\n    }\n  }\n  return $bored;\n}\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_10jfbw.php:29\n\
    Stack trace:\n#0 /tmp/tmpm_10jfbw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpm_10jfbw.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Count all the dots.\n    $c = strlen($S) - strlen(preg_replace('~\\.*~', '',\
    \ $S));\n    // Count all the question marks.\n    $c += strlen(preg_replace('~\\\
    ?.*~', '', $S));\n    // Count all the exclamation marks.\n    $c += strlen(preg_replace('~!.*~',\
    \ '', $S));\n    // Count all the boredoms.\n    return $c;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi1csuzsq.php:26\n\
    Stack trace:\n#0 /tmp/tmpi1csuzsq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpi1csuzsq.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    global\
    \ $BoredWords;\n    if (! array_key_exists($S, $BoredWords)) {\n        $BoredWords[$S]\
    \ = 0;\n    }\n    return $BoredWords[$S];\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: array_key_exists() expects parameter 2 to be array, null given\
    \ in /tmp/tmpxdi3cq2f.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpxdi3cq2f.php:25\nStack trace:\n#0 /tmp/tmpxdi3cq2f.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxdi3cq2f.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n   $S\
    \ = preg_replace('/[^\\.\\?!]/', \"\", $S);\n   return substr_count($S, '.') ==\
    \ 1;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppfifughe.php:19\n\
    Stack trace:\n#0 /tmp/tmppfifughe.php(27): test()\n#1 {main}\n  thrown in /tmp/tmppfifughe.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\tglobal\
    \ $words;\n\t\n\twhile($S != '') {\n\t\t$S = explode('.', $S);\n\t\t$L = sizeof($S);\n\
    \t\tif($L == 1) {\n\t\t\t$S[] = 'I';\n\t\t\t$L = sizeof($S);\n\t\t}\n\t\tif($L\
    \ == 2 && strtolower($S[1]) == '?') {\n\t\t\t$S[] = 'I';\n\t\t\t$L = sizeof($S);\n\
    \t\t}\n\t\tif($L == 2 && strtolower($S[1]) == '!') {\n\t\t\t$S[] = 'I';\n\t\t\t\
    $L = sizeof($S);\n\t\t}\n\t\tif($L == 1 && strtolower($S[1]) == '!') {\n\t\t\t\
    $S[] = 'I';\n\t\t\t$L = sizeof($S);\n\t\t}\n\t\t$S = implode('.', $S);\n\t}\n\t\
    $S = explode('.', $S);\n\t$L = sizeof($S);\n\tif($L == 1) {\n\t\treturn 0;\n\t\
    }\n\t\n\t$I = strpos($S, 'I');\n\t$a = $L - 1;\n\twhile($I) {\n\t\tif($I != $a)\
    \ {\n\t\t\t$I--;\n\t\t} else {\n\t\t\t$a--;\n\t\t}\n\t\t$I = strpos($S, 'I', $I);\n\
    \t}\n\t\n\t$bored = sizeof($words) - $a;\n\treturn $bored;\n}\n\t\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    if\
    \ (strlen($S) < 1) {\n        return 0;\n    }\n    $N = strlen($S);\n    $bored\
    \ = 0;\n    for ($i = 0; $i < $N; $i++) {\n        $ch = $S[$i];\n        if ($ch\
    \ != '.' && $ch != '?' && $ch != '!') {\n            return 0;\n        }\n  \
    \      if ($ch == '.') {\n            $bored++;\n        }\n    }\n    return\
    \ $bored;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wtjo8go.php:35\n\
    Stack trace:\n#0 /tmp/tmp6wtjo8go.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6wtjo8go.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $sentenceArray = explode('.', $S);\n    foreach ($sentenceArray as\
    \ $sentence) {\n        if (strpos($sentence, \"I\") !== false) {\n          \
    \  $boredoms++;\n        }\n    }\n    return $boredoms;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppucnxzyo.php:27\n\
    Stack trace:\n#0 /tmp/tmppucnxzyo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppucnxzyo.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $words\
    \ = explode(\".\", $S);\n  $bored = 0;\n  $start = \"I\";\n  foreach ($words as\
    \ $word) {\n    if ($word == $start) {\n      $bored++;\n    }\n  }\n  return\
    \ $bored;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptido_msu.php:28\n\
    Stack trace:\n#0 /tmp/tmptido_msu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptido_msu.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredom\
    \ = array('I');\n  $boredom2 = array('I', 'i');\n  $boredom3 = array('I', '!');\n\
    \  $boredom4 = array('!', '!');\n\n  $bored = 0;\n  $a = explode('.', $S);\n \
    \ foreach ($a as $word) {\n    if (in_array($word, $boredom)) {\n      $bored++;\n\
    \    } elseif (in_array($word, $boredom2)) {\n      $bored++;\n    } elseif (in_array($word,\
    \ $boredom3)) {\n      $bored++;\n    } elseif (in_array($word, $boredom4)) {\n\
    \      $bored++;\n    } else {\n      $bored = 0;\n      break;\n    }\n  }\n\
    \  return $bored;\n}\n</code>\n<|/ a tags=php,regex,count dscore=2 |>\n<| a |>\n\
    I would use a simple preg_match_all to find all boredom sentences, split them\
    \ by dots, take only the ones that start with I and count the length of these\
    \ arrays.\n<code>\n<?php\n\n$boredom = preg_match_all('/I\\./i', $sentence, $matches);\n\
    $boredom_count = count($matches[0]);\n</code>\n<|/ a tags=php,regex,count dscore=1\
    \ |>\n<| a dscore=1 |>\nYou could use strpos to determine if the sentence starts\
    \ with I:\n<code>\n$s = 'The sky is blue. The sun is shining. I love this weather';\n\
    $bored = strpos($s, 'I') !== false;\nvar_dump($bored); // bool(true)\n</code>\n\
    If you need to count the words that are bored then:\n<code>\n$s = 'The sky is\
    \ blue. The sun is shining. I love this weather';\n$words = explode(' ', $s);\n\
    $bored = 0;\nforeach ($words as $word) {\n    if (strpos($word, 'I') !== false)\
    \ {\n        $bored++;\n    }\n}\nvar_dump($bored); // int(5)\n</code>\n<|/ a\
    \ tags=php,regex,count |>\n<| a |>\nHere's another simple method using strpos:\n\
    <code>\n$string = \"The sky is blue. The sun is shining. I love this weather\"\
    ;\n\n$bored = strpos($string,'I') === 0;\n\n$bored_count = strlen(preg_replace('/\\\
    b(I\\b)/i','',$string));\n\necho($bored . \"\\n\") . \" \" . $bored_count;\n</code>\n\
    See \nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdmc9ov3w.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ Split string into array of sentences\n  $S = explode('.', $S);\n  \n  // Loop\
    \ through array \n  foreach ($S as $key=>$sentence) {\n    // Explode each sentence\
    \ into array of words\n    $sentence = explode('?!', $sentence);\n    \n    //\
    \ If first word starts with I, return 0\n    if ($sentence[0] == 'I') {\n    \
    \  return 0;\n    }\n  }\n  \n  // If we got here, it means we didn't find a boredom\
    \ word\n  return 1;\n}\n</code>\n<|/ a tags=php,explode,arrays |>\n<| a dscore=0\
    \ |>\nYou can use the explode() function to split a string into an array, for\
    \ example:\n<code>\n$bored = explode(\".\",$string);\n</code>\nwill give you an\
    \ array where each element of the array is a full sentence, for example:\n<code>\n\
    array(\n   0=>'the sky is blue',\n   1=>'the sun is shining',\n   2=>'I love this\
    \ weather'\n);\n</code>\nNow you can loop through this array and check if it starts\
    \ with \"I\" to determine if that sentence is bored or not.\n<|/ a tags=php,explode,arrays\
    \ |>\n<| a dscore=0 |>\nYou could use the function preg_match to check if a string\
    \ starts with a specific set of characters:\n<code>\nif (preg_match(\"/^[I!\\\
    .\\?]/\",$str)) {\n    echo \"$str is bored\";\n}\nelse {\n    echo \"$str is\
    \ not bored\";\n}\n</code>\n<|/ a tags=php,explode,arrays |>\n<| a dscore=0 tags=php,explode,arrays\
    \ |>\nYou want to count sentences starting with I!.? and ending with !.? or .?.\n\
    So you'll want to use regular expressions. So your function should look something\
    \ like this:\n<code>\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphf3qejcc.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredom_array\
    \ = explode('.',$S);\n  foreach ($boredom_array as $value)\n  {\n    if($value\
    \ == strtoupper('I'))\n    {\n      $boredom_count++;\n    }\n  }\n  return $boredom_count;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw88roczs.php:26\n\
    Stack trace:\n#0 /tmp/tmpw88roczs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw88roczs.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $pattern = '/[.!?]I\\W/'; // I is followed by a single word character\n\
    \    $pattern = '/[.!?]I\\W+/'; // I is followed by one or more word characters\n\
    \    foreach (preg_split($pattern, $S) as $word) {\n        if (preg_match($pattern,\
    \ $word)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16p3fav9.php:29\n\
    Stack trace:\n#0 /tmp/tmp16p3fav9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp16p3fav9.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = explode(\".\",$S);\n    $count = 0;\n    foreach($boredoms as $b)\n      \
    \  if($b[0] == 'I')\n            $count ++;\n    return $count;\n}\n\n$bored =\
    \ is_bored(\"The sky is blue. The sun is shining. I love this weather\");\n$notbored\
    \ = is_bored(\"Hello world\");\n\nif($bored == $notbored)\n    echo \"Bored\"\
    ;\nelse\n    echo \"Not bored\";\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Bored\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9x0fq7o7.php:32\n\
    Stack trace:\n#0 /tmp/tmp9x0fq7o7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9x0fq7o7.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $i\
    \ = 0; $B = 0; $j = 0;\n  while(list($word,$p)=explode('.',$S)) {\n    if($p ==\
    \ '?') { $i += ($j % 2);   }\n    if($p == '!') { $i += ($j % 3);   }\n    $j++;\n\
    \  }\n  if($i % 2) { return $i; } return $i+1;\n}\n</code>\n<|/ a dscore=3 tags=string,php\
    \ |>\n<| c |>\n`strpos` will work just as well for this, since it starts with\
    \ the needle and doesn't have to count the entire string.\n<|/ c |>\n<| c |>\n\
    You guys rock! Thanks everyone!\n<|/ c |>\n<| a tags=string,php dscore=2 |>\n\
    <code>\n<?php\n$str = \"A boredom is a sentence that starts with the word 'I'.\n\
    Sentences are delimited by '.', '?' or '!'.\nFor example:\n>>> is_bored(\"Hello\
    \ world\")\n0\n>>> is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\")\n1\";\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6sglktmx.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$boredoms\
    \ = 0;\n\twhile ($S != $boredoms) {\n\t\t$boredoms = 1;\n\t\t$S = preg_replace('/(^I|[.!?]$)/',\
    \ '', $S);\n\t}\n\treturn $boredoms;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqup6ubca.php:26\n\
    Stack trace:\n#0 /tmp/tmpqup6ubca.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqup6ubca.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$arr\
    \ = explode(\".\",$S);\n\tif(!empty($arr)) {\n\t\tforeach($arr as $item) {\n\t\
    \t\tif(strpos($item,\"I\") === 0) {\n\t\t\t\t$boredoms = 1;\n\t\t\t\tbreak;\n\t\
    \t\t}\n\t\t}\n\t} else {\n\t\t$boredoms = 0;\n\t}\n\treturn $boredoms;\n}\n\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpltyo75tx.php:30\n\
    Stack trace:\n#0 /tmp/tmpltyo75tx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpltyo75tx.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ (strpos($S,'I') === 0);\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeghad7o8.php:19\n\
    Stack trace:\n#0 /tmp/tmpeghad7o8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpeghad7o8.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $A\
    \ = explode(\".\", $S);\n    $B = explode(\".\", $A[0]);\n    $C = $B[0];\n  \
    \  if ($C == \"I\") {\n        return count($A) - 2;\n    }\n    return 0;\n}\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6_cau6f.php:26\n\
    Stack trace:\n#0 /tmp/tmpn6_cau6f.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn6_cau6f.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = 0;\n    $words = explode(\".\",$S);\n    foreach($words as $word){\n     \
    \   if ($word == \"I\"){\n            $bored++;\n        }\n    }\n    return\
    \ $bored;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpit_uysjr.php:28\n\
    Stack trace:\n#0 /tmp/tmpit_uysjr.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpit_uysjr.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = preg_replace('~\\A\\s*~', '', $S);\n    $S = 'I' . $S;\n    return substr_count($S,\
    \ 'I');\n}\n</code>\n<|/ a dscore=2 tags=php,string |>\n<| c |>\nWhat about boredom\
    \ sentences that *don't* have the word 'I'? Eg. \"The sky is blue. The sun is\
    \ shining. I love this weather.\"\n<|/ c |>\n<| c |>\n: Not sure I understand\
    \ the problem. Why would they not be boredom? The sentence has \"I love\" so that\
    \ is boredom and it is followed by the end of a sentence. Thus \"I love\" is the\
    \ boredom of the sentence...\n<|/ c |>\n<| c |>\nOops, I see what you mean now.\
    \ Thanks for the clarification.\n<|/ c |>\n<| a dscore=1 |>\nHow about this: \n\
    <code>\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpovi4j5dn.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = 0;\n    $bored += (strpos($S, '.') !== false) ? 1 : 0;\n    $bored += (strpos($S,\
    \ '?') !== false) ? 1 : 0;\n    $bored += (strpos($S, '!') !== false) ? 1 : 0;\n\
    \    return $bored;\n}\n</cell>\n<cell>\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpxpa1mn7_.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredom\
    \ = 0;\n    $str_boredom = preg_replace('/[^\\.\\?\\!]+/', '.', $S);\n    foreach($str_boredom\
    \ as $word){\n      if(preg_match('/\\bi/', $word)){\n          $boredom = $boredom\
    \ + 1;\n      }\n    }\n    return $boredom;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmprlqp8of2.php\
    \ on line 13\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmprlqp8of2.php\
    \ on line 13\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmprlqp8of2.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlqp8of2.php:28\n\
    Stack trace:\n#0 /tmp/tmprlqp8of2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmprlqp8of2.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $I\
    \ = array_search('I',$S);\n  $boredom = 0;\n  for ($i=0; $i<count($S); $i++) {\n\
    \    $next = $i+1;\n    if ($next == count($S)) {\n      $next = 0;\n    }\n \
    \   $end = $S[$next];\n    if ($S[$i-1] == '?' || $S[$i-1] == '!') {\n      $end\
    \ = $S[$i+1];\n    }\n    if ($S[$i-1] == $end) {\n      $boredom++;\n    }\n\
    \  }\n  return $boredom;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_search() expects parameter 2 to be array, string given\
    \ in /tmp/tmpip0iq5sc.php on line 11\n\nWarning: count(): Parameter must be an\
    \ array or an object that implements Countable in /tmp/tmpip0iq5sc.php on line\
    \ 13\n\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpip0iq5sc.php on line 15\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpip0iq5sc.php\
    \ on line 13\n\nWarning: array_search() expects parameter 2 to be array, string\
    \ given in /tmp/tmpip0iq5sc.php on line 11\n\nWarning: count(): Parameter must\
    \ be an array or an object that implements Countable in /tmp/tmpip0iq5sc.php on\
    \ line 13\n\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpip0iq5sc.php on line 15\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpip0iq5sc.php\
    \ on line 13\n\nWarning: array_search() expects parameter 2 to be array, string\
    \ given in /tmp/tmpip0iq5sc.php on line 11\n\nWarning: count(): Parameter must\
    \ be an array or an object that implements Countable in /tmp/tmpip0iq5sc.php on\
    \ line 13\n\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpip0iq5sc.php on line 15\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpip0iq5sc.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpip0iq5sc.php:36\n\
    Stack trace:\n#0 /tmp/tmpip0iq5sc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpip0iq5sc.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredom\
    \ = 0;\n    $i = 0;\n    $L = strlen($S);\n    while ($i < $L) {\n        if (substr($S,$i,1)\
    \ != \"I\") {\n            ++$boredom;\n        }\n        ++$i;\n    }\n    return\
    \ $boredom;\n}\n</code>\nAnd we get\n<code>\nis_bored(\"Hello world\") // 0\n\
    is_bored(\"The sky is blue. The sun is shining. I love this weather\") // 1\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThis is a nice solution, but your implementation\
    \ does not recognize a boredom like `is_bored(\"The sky is blue.The sun is shining.\
    \ I love this weather\")`\n<|/ c |>\n<| c |>\n`is_bored(\"The sky is blue.The\
    \ sun is shining. I love this weather\")` returns `1`\n<|/ c |>\n<| c |>\nYes,\
    \ I know. However, the point of my answer is that your implementation is not correct.\
    \ It does not recognize a sentence like \"The sky is blue.The sun is shining.\
    \ I love this weather\". Your implementation will return `1` in this case.\n<|/\
    \ c |>\n<| c |>\nI have modified my solution to include a case like `is_bored(\"\
    The sky is blue.The sun is shining. I love this weather\")` but it seems to fail\
    \ on that input too.\n<|/ c |>\n<| a tags=algorithm,php,string,parsing dscore=1\
    \ |>\nHere's a solution that does require you to explode the string by a delimiter.\
    \ The explode function takes a delimiter as a parameter and splits the string\
    \ at the delimiter and returns an array.\n<code>\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpj6ogu6bj.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $words\
    \ = explode('.', $S);\n  foreach ($words as $word) {\n    if (strpos($word, 'I')\
    \ === 0) {\n      return 1;\n    }\n  }\n  return 0;\n}\n</code>\n<|/ a dscore=3\
    \ |>\n<| c |>\nPlease do not post your code as a picture, but as text. Pasting\
    \ it into your answer makes it harder to read. Please read [How do I format my\
    \ posts using Markdown or HTML?](https://stackoverflow.com/help/formatting) for\
    \ more information. Also, please make sure your code example is formatted correctly.\n\
    <|/ c |>\n<| a |>\n<code>\n<?php\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmhkchj0l.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $n\
    \ = 1;\n  $bored = false;\n  $arr1 = explode(\".\", $S);\n  if($arr1[0] == \"\
    I\") {\n    for($i=0; $i<count($arr1)-1; $i++) {\n      if($arr1[$i] == '?' ||\
    \ $arr1[$i] == '!' || $arr1[$i] == '.') {\n        $bored = true;\n        break;\n\
    \      }\n    }\n    $n = $bored ? 1 : 0;\n  }\n  return $n;\n}\n</code>\n<|/\
    \ a |>\n<| c |>\nI have found that the \"?\" character doesn't work at all in\
    \ PHP. This might be a bug in PHP (I've always used the \"!\" character and it\
    \ worked)\n<|/ c |>\n<| c |>\nThe string \"The sky is blue. The sun is shining.\
    \ I love this weather\" will fail to match because of the two trailing periods.\
    \ It's better to use strrpos() to check the last character instead, though.\n\
    <|/ c |>\n<| c |>\nYeah, it's more efficient to use strrpos() but I was trying\
    \ to make it as simple as possible. The question asks for the number of boredoms\
    \ that occur in a string so I thought that might be all that is required. I'll\
    \ add a note about strrpos() and I agree it is more efficient to use it.\n<|/\
    \ c |>\n<| c |>\n: Sure. I know that \"!\" works in PHP, but it's still a little\
    \ odd behaviour.\n<|/ c |>\n<| c |>\nJust to clarify \"boredom\" in the question\
    \ is the plural of \"boredoms\", not an adjective.\n<|/ c |>\n<| a dscore=1 |>\n\
    You can use this function \n<code>\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp402_7fn8.php on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $I\
    \ = $S;\n    $I = explode(\".\", $I);\n    $I = explode(\"?\", $I);\n    $I =\
    \ explode(\"!\", $I);\n    foreach ($I as $x) {\n        if ($x[0] === \"I\")\
    \ {\n            $I = array($x);\n            break;\n        }\n    }\n    foreach\
    \ ($I as $x) {\n        if (strpos($S, \"I\") === false) {\n            return\
    \ 0;\n        }\n    }\n    foreach ($I as $x) {\n        if (strpos($S, \"I\"\
    ) === false && strpos($S, \"a\") === false && strpos($S, \"e\") === false && strpos($S,\
    \ \"i\") === false && strpos($S, \"o\") === false && strpos($S, \"u\") === false\
    \ && strpos($S, \"y\") === false) {\n            return 1;\n        }\n    }\n\
    }\n</code>\n<|/ q dscore=0 tags=string,function,php |>\n<| c |>\nYour code seems\
    \ to be working. What's your problem?\n<|/ c |>\n<| c |>\n`var_dump($S);`\n<|/\
    \ c |>\n<| c |>\nWhy do you think that it doesn't work?\n<|/ c |>\n<| c |>\nIt\
    \ does not work. I can't find any mistake.\n<|/ c |>\n<| c |>\nPlease provide\
    \ an expected input and output data sets, as well as what output you are currently\
    \ getting.\n<|/ c |>\n<| a tags=string,function,php |>\nUse PHP's explode to split\
    \ the string into sentences:\n<code>\n$string = \"Hello world. This is a test.\
    \ How are you doing? How is it going? No! It's not good.\";\n$array = explode('.',\
    \ $string);\nforeach ($array as $sentence) {\n    if ($sentence == 'I') {\n  \
    \      echo $sentence, ' is a boredom.<br>';\n    }\n}\n</code>\nOutput:\n<code>\n\
    Hello world is a boredom.\nThis is a test is a boredom.\nHow are you doing is\
    \ a boredom.\nHow is it going is a boredom.\nNo! It's not good is a boredom.\n\
    </code>\n<|/ a dscore=0 |>\n<| a |>\nThe easiest way would be to use regular expressions\
    \ to get what you are looking for. First split the string on punctuation (.!?)\
    \ and then match anything that starts with \"I\". Something like this should work:\n\
    <code>\n$str = \"Hello world. This is a test. How are you \nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpm9ykwf29.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredom\
    \ = 0;\n    $pos = strpos($S, '.');\n    for($i = 0; $i < $pos; $i++) {\n    \
    \    $boredom = $boredom + 1;\n    }\n    $pos = strpos($S, '?');\n    for($i\
    \ = 0; $i < $pos; $i++) {\n        $boredom = $boredom + 1;\n    }\n    $pos =\
    \ strpos($S, '!');\n    for($i = 0; $i < $pos; $i++) {\n        $boredom = $boredom\
    \ + 1;\n    }\n    return $boredom;\n}\n\nfunction candidate(...$args) {\n   \
    \ return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafzetswg.php:33\n\
    Stack trace:\n#0 /tmp/tmpafzetswg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpafzetswg.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    if\
    \ ($S[0] == 'I') {\n        $T = 0;\n        $I = 1;\n        $j = 0;\n      \
    \  $I = 0;\n        while ($j < strlen($S)) {\n            $L = $S[$j];\n    \
    \        if ($L == '.') {\n                $I++;\n            } elseif ($L ==\
    \ '?') {\n                $I++;\n            } elseif ($L == '!') {\n        \
    \        $I++;\n            } elseif ($L == ' ') {\n                if ($I > $T)\
    \ {\n                    $T = $I;\n                }\n                $I = 0;\n\
    \            } elseif ($L == 'I') {\n                $I++;\n            } elseif\
    \ ($L == '.' || $L == '?' || $L == '!' || $L == ' ' || $L == 'I') {\n        \
    \        $I++;\n            } elseif ($L == ',') {\n                $T++;\n  \
    \          } elseif ($L == '.' || $L == '?' || $L == '!' || $L == ' ' || $L ==\
    \ 'I' || $L == ',' || $L == '.' || $L == '?' || $L == '!' || $L == ' ' || $L ==\
    \ 'I') {\n                $T++;\n            }\n            $j++;\n        }\n\
    \        return $T;\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpenefy6z7.php:52\n\
    Stack trace:\n#0 /tmp/tmpenefy6z7.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpenefy6z7.php\
    \ on line 52\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $i\
    \ = 1;\n    $n = 0;\n    $len = strlen($S);\n    for($i = 1; $i <= $len; $i++)\
    \ {\n        $sub = substr($S, $i, 1);\n        if($sub == \"I\") {\n        \
    \    $n++;\n        }\n    }\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ohepujq.php:31\n\
    Stack trace:\n#0 /tmp/tmp7ohepujq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7ohepujq.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $bored\
    \ = explode('.',$S);\n  $bored = array_filter($bored, 'is_bored');\n  return count($bored)\
    \ == 1;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Allowed memory size of 134217728 bytes exhausted (tried\
    \ to allocate 20480 bytes) in /tmp/tmplvfthik0.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$I\
    \ = 1;\n\tforeach(explode('.',$S) as $word){\n\t\t$I *= (strpos($word,'I')===0)\
    \ ? 1 : 0;\n\t}\n\t$I *= (strpos($S,'?')===0) ? 1 : 0;\n\t$I *= (strpos($S,'!')===0)\
    \ ? 1 : 0;\n\treturn $I;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd62ir168.php:27\n\
    Stack trace:\n#0 /tmp/tmpd62ir168.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpd62ir168.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$s\
    \ = explode(\".\",$S);\n\treturn (count($s) == 4) ? 1 : 0;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgeiian9k.php:21\n\
    Stack trace:\n#0 /tmp/tmpgeiian9k.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpgeiian9k.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = preg_replace(\"/[^\\.\\?\\!]+/\", \"\", $S);\n  return preg_match(\"/^I[\\\
    . ]?/\", $S);\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz1phrdr4.php:21\n\
    Stack trace:\n#0 /tmp/tmpz1phrdr4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpz1phrdr4.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$bored\
    \ = 0;\n\tpreg_match('/^I\\b/', $S);\n\tif ($bored > 0) return 1;\n\tpreg_match('/\\\
    .\\?/', $S);\n\tif ($bored > 0) return 1;\n\tpreg_match('/!\\?/', $S);\n\tif ($bored\
    \ > 0) return 1;\n\treturn 0;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9wdb5l2.php:27\n\
    Stack trace:\n#0 /tmp/tmpw9wdb5l2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpw9wdb5l2.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = preg_match(\"/^I(.*)\\./\", $S);\n    return $bored;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv01h1f3r.php:21\n\
    Stack trace:\n#0 /tmp/tmpv01h1f3r.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv01h1f3r.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredom\
    \ = 0;\n    $S = preg_replace('/[^\\.\\?!]+/', '', $S);\n    $S = preg_split('/[.?!]+/',\
    \ $S);\n    foreach ($S as $key => $value) {\n        if ($value == \"I\") {\n\
    \            $boredom++;\n        }\n    }\n    return $boredom;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nthanks for the response. I'll take a look. By the way, I'm\
    \ not looking for 'I' but anything that starts with that letter. e.g. 'I'd, I'll,\
    \ I'm, I've, etc...\n<|/ c |>\n<| c |>\nSorry, misunderstood your question. I've\
    \ edited my answer to take care of this.\n<|/ c |>\n<| a tags=php,preg-replace,regex,str-replace\
    \ dscore=1 |>\n<code>\n<?php\n$text = 'Hello world I'm feeling bored';\n$text\
    \ = preg_replace('/(^|[\\.\\?!])(I)/', '$1I', $text);\necho $text;\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpi2vctbqn.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  if\
    \ (preg_match(\"/^I(.+?)\\..+?!.*$/i\", $S, $match)) {\n    return count($match[1]);\n\
    \  }\n  return 0;\n}\n</code>\n<|/ a tags=php,regex dscore=2 |>\n<| c |>\nVery\
    \ interesting approach. +1. I haven't yet used `preg_match_all` but I'm sure I\
    \ will. Also, you could use `preg_replace` to remove everything before and including\
    \ the first `'I'` occurrence and then just count the number of occurrences of\
    \ `.` after that.\n<|/ c |>\n<| c |>\n- I think you mean `preg_replace`?\n<|/\
    \ c |>\n<| c |>\n- Yes, I did. I was thinking of a different approach. Thanks\
    \ for pointing that out. I will update my answer.\n<|/ c |>\n<| c |>\n- I added\
    \ a new function to the end of my answer that I think will work.\n<|/ c |>\n<|\
    \ c |>\n- I added another function to the end of my answer that I think should\
    \ work.\n<|/ c |>\n<| a dscore=2 |>\nHow about this one?\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpe27zqncd.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Start with 1\n    $bored = 1;\n    // Loop over each word in the string\n  \
    \  foreach (explode('.', preg_replace('/[^A-Za-z]+/', ' ', $S)) as $word) {\n\
    \        // If the word starts with I, add one to $bored\n        if ($word[0]\
    \ == 'I') {\n            $bored += 1;\n        }\n    }\n    // Return the number\
    \ of boredoms\n    return $bored;\n}\n</code>\n<|/ a tags=php,count,explode,arrays\
    \ |>\n<| a tags=php,count,explode,arrays dscore=0 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmq7gfu_v.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = array('I');\n    $parts = explode('.', $S);\n    foreach ($parts as $part)\
    \ {\n        if (strpos($part, \"?\") !== false) {\n            $boredoms[] =\
    \ '?';\n        } else {\n            $boredoms[] = '.';\n        }\n    }\n \
    \   $count = count($boredoms);\n    if ($count == 1) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n</code>\n<|/ a |>\n<| c |>\nI\
    \ think OP is specifically looking for \"boredom\", not \"bored\".\n<|/ c |>\n\
    <| c |>\nYeah, I missed that part. I'm a beginner at PHP and wanted to point out\
    \ that his code was just one line, so I thought it would be fine to just copy\
    \ it.\n<|/ c |>\n<| a |>\nHere's a solution that uses a regular expression to\
    \ find the number of boredoms within a string. I've added some comments to make\
    \ it clearer.\n<code>\n$boredoms = preg_match_all('/\\b[I\\.?!]/', $string, $matches);\n\
    </code>\nThe first argument to preg_match_all contains your regular expression\
    \ which will match a boredom character. The second argument to preg_match_all\
    \ passes a variable that contains the array of matches found. The third argument\
    \ passes the number of matches. The $matches variable contains the array of matches.\n\
    The regex is pretty straightforward. It matches all three boredom characters (I,\
    \ ., and ?).\n<|/ a tags=php dscore=1 |>\n<| c |>\nThis is exactly what I was\
    \ looking for. Thanks :)\n<|/ c |>\n<| a tags=php dscore=0 |>\nHere is a function\
    \ that may help you : \n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq8awt7vn.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ preg_match(\"/[I].*[!?]/\", $S);\n}\n</code>\n<|/ a dscore=0 tags=php |>\n<|\
    \ a |>\nTo find boredom you need at least three characters. Using that you can\
    \ try this:\n<code>\n<?php\n$string = \"The sky is blue. The sun is shining. I\
    \ love this weather. How are you? Is it bored?\";\n\n$bored = substr_count($string,\
    \ 'I') >= 3;\n\necho $bored ? 'Bored' : 'Not Bored';\n</code>\n<|/ a dscore=0\
    \ tags=php |>\n<| c |>\nThis doesn't work.  It returns true for input \"I love\
    \ this weather\", which has a boredom in it, even though the boredom isn't in\
    \ the input string.\n<|/ c |>\n<| c |>\nHe wants to know if the word \"I\" is\
    \ in a sentence, so the boredom is anywhere in the sentence not just at the beginning\n\
    <|/ c |>\n<| c |>\nThat is correct.  I don't want only to know if the string has\
    \ three I characters.  I want to know if the string has three I characters and\
    \ zero ! or ? characters.\n<|/ c |>\n<| a |>\nUse a regular expression to find\
    \ any word that starts with \"I\" followed by zero or more characters that are\
    \ not \".\", \"?\", or \"!\", then check if it's equal to \"I\".\n<code>\n$input\
    \ = \"The sky is blue. The sun is shining. I love this weather. How are you? Is\
    \ it bored?\";\n$bored = preg_match('/^I\\S*?[^\\.\\?!]/', $input);\n</code>\n\
    <|/ a dscore=0 tags=php |>\n<| c |>\nI like this answer, but unfortunately it\
    \ isn't correct.  It returns true for input \"I love this weather\", which has\
    \ a boredom in it, even though the boredom isn't in the input string.\n<|/ c |>\n\
    <| c |>\n, that's what I thought you wanted.\n<|/ c |>\n<| a dscore=0 tags=php\
    \ |>\n<code>\npreg_match('/^[I]\\S*[^\\.\\?!]/', $input);\n</code>\n<|/ a |>\n\
    <| a tags=php |>\n<code>\n$input = \"The sky is blue. The sun is shining. I love\
    \ this weather. How are you? Is it bored?\";\n\n$matches = preg_match('/^[I]\\\
    S*?[^\\.\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpkpk2bsnd.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $str\
    \ = explode('.',$S);\n    foreach ($str as $val) {\n        if (strpos($val,'I')\
    \ !== false) {\n            return 1;\n        }\n    }\n    return 0;\n}\n$s\
    \ = \"The sky is blue. The sun is shining. I love this weather\";\n$count = is_bored($s);\n\
    echo $count; // prints 1\n</code>\n<|/ a tags=php,arrays,strpos dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpz5m45die.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredom\
    \ = 0;\n    $bored = array('.', '?', '!');\n    foreach ($S as $word) {\n    \
    \    if (strpos($word, $bored) !== FALSE) {\n            $boredom++;\n       \
    \ }\n    }\n    return $boredom;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmp05tgzjcp.php\
    \ on line 13\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmp05tgzjcp.php\
    \ on line 13\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmp05tgzjcp.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp05tgzjcp.php:27\n\
    Stack trace:\n#0 /tmp/tmp05tgzjcp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp05tgzjcp.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$I\
    \ = strpos($S, \"I\");\n\tif ($I === FALSE) {\n\t\t$I = strpos($S, \"i\");\n\t\
    }\n\n\tif ($I === FALSE) {\n\t\t$I = strpos($S, \"i\");\n\t}\n\n\tif ($I === FALSE)\
    \ {\n\t\t$I = strpos($S, \"i\");\n\t}\n\n\t$I = $I + 1;\n\t$B = strpos($S, \"\
    .\");\n\tif ($B === FALSE) {\n\t\t$B = strpos($S, \" \");\n\t}\n\n\tif ($B ===\
    \ FALSE) {\n\t\t$B = strpos($S, \" \");\n\t}\n\n\tif ($B === FALSE) {\n\t\t$B\
    \ = strpos($S, \" \");\n\t}\n\n\tif ($B === FALSE) {\n\t\t$B = strpos($S, \" \"\
    );\n\t}\n\n\t$B = $B + 1;\n\t$D = strpos($S, \"?\");\n\tif ($D === FALSE) {\n\t\
    \t$D = strpos($S, \"!\");\n\t}\n\n\tif ($D === FALSE) {\n\t\t$D = strpos($S, \"\
    !\");\n\t}\n\n\tif ($D === FALSE) {\n\t\t$D = strpos($S, \"!\");\n\t}\n\n\t$D\
    \ = $D + 1;\n\t$H = strpos($S, \"!\");\n\tif ($H === FALSE) {\n\t\t$H = strpos($S,\
    \ \" \");\n\t}\n\n\tif ($H === FALSE) {\n\t\t$H = strpos($S, \" \");\n\t}\n\n\t\
    if ($H === FALSE) {\n\t\t$H = strpos($S, \" \");\n\t}\n\n\t$H = $H + 1;\n\t$B\
    \ = strlen($S);\n\treturn ($B - $I - $B - $D - $H);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3tntmhl.php:80\n\
    Stack trace:\n#0 /tmp/tmpi3tntmhl.php(88): test()\n#1 {main}\n  thrown in /tmp/tmpi3tntmhl.php\
    \ on line 80\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = 0;\n    $S = preg_replace('/\\?/',\"\\.\", $S);\n    $S = preg_replace('/\\\
    !/',\"\\.\", $S);\n    $S = preg_replace('/\\.\\./',\"\\.\", $S);\n    $tokens\
    \ = explode(\".\", $S);\n    foreach($tokens as $token){\n        $token = $token->titleize();\n\
    \        if (strtolower($token) == 'i')\n            $bored ++;\n    }\n    return\
    \ $bored;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to a member function titleize() on\
    \ string in /tmp/tmppztazcs3.php:17\nStack trace:\n#0 /tmp/tmppztazcs3.php(25):\
    \ is_bored('Hello world')\n#1 /tmp/tmppztazcs3.php(29): candidate('Hello world')\n\
    #2 /tmp/tmppztazcs3.php(37): test()\n#3 {main}\n  thrown in /tmp/tmppztazcs3.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Start your code here\n    return count_boredoms($S);\n    // End your code here\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_boredoms()\
    \ in /tmp/tmptc5kgu9t.php:12\nStack trace:\n#0 /tmp/tmptc5kgu9t.php(17): is_bored('Hello\
    \ world')\n#1 /tmp/tmptc5kgu9t.php(21): candidate('Hello world')\n#2 /tmp/tmptc5kgu9t.php(29):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmptc5kgu9t.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $bored\
    \ = 0;\n  $bored_count = count(explode(\".\", $S));\n  \n  for ($i = 0; $i < $bored_count;\
    \ $i++) {\n    if ($S[($i+1)] == \" \" || $S[($i+1)] == \".\" || $S[($i+1)] ==\
    \ \".?\" || $S[($i+1)] == \".!\") {\n      $bored++;\n    }\n  }\n  return $bored;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThank you, this works great! But how do\
    \ I count the number of questions?\n<|/ c |>\n<| c |>\nThank you so much! I really\
    \ appreciate it.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$boredom = str_replace(array('.',\
    \ '?', '.!', '!'), array('', '.', '.', '.'), $yourstring);\n$boredom = explode(\"\
    \ \", $boredom);\n$bored = count($boredom);\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ |>\n<code>\n$boredom = preg_replace('/[.?!]/', '', $boredom);\n$boredom = explode('\
    \ ', $boredom);\n</code>\n<|/ a dscore=1 tags=php,arrays |>\n<| c |>\nThat would\
    \ remove all question marks, periods and exclamation points, not just the first\
    \ one.\n<|/ c |>\n<| a tags=php,arrays dscore=1 |>\n<code>\n$boredom = \"I like\
    \ it! and I do it.\";\n\n$boredom= preg_replace('/[.?!]/', null, $boredom);\n\
    $boredom= explode(' ', $boredom);\n$bored = count($boredom);\n</code>\n<|/ a |>\n\
    <| c |>\nAnd what if there are multiple periods or question marks or exclamation\
    \ points in the string?\n<|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpa_t616tj.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $word_array\
    \ = explode(\".\", $S);\n    return ($word_array[0] == 'I');\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpngtvzoej.php:19\n\
    Stack trace:\n#0 /tmp/tmpngtvzoej.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpngtvzoej.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = explode(\". \",$S);\n    $flag = 0;\n    foreach($words as $word) {\n    \
    \    if (strpos($word,\"I\") === 0) {\n            $flag++;\n        }\n    }\n\
    \    return $flag;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_hj0n4w8.php:26\n\
    Stack trace:\n#0 /tmp/tmp_hj0n4w8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_hj0n4w8.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $I\
    \ = 0;\n    $words = explode('.', $S);\n    $boredom = explode('.', $I);\n\n \
    \   foreach ($words as $word) {\n        if ($word == \"I\")\n            $I++;\n\
    \    }\n\n    return $I;\n}\n</code>\nThis gives the following outputs:\n<code>\n\
    is_bored(\"Hello world\") // 0\nis_bored(\"The sky is blue. The sun is shining.\
    \ I love this weather\") // 1\n</code>\n<|/ a |>\n<| c |>\nThe code isn't complete\
    \ yet, but I'll try to make it better. Thank you for your help.\n<|/ c |>\n<|\
    \ c |>\nI edited my post to include a PHP function and some test cases.\n<|/ c\
    \ |>\n<| c |>\nSure thank you! I'll try this out right now.\n<|/ c |>\n<| c |>\n\
    I'm having a bit of difficulty implementing this into my code. I tried using your\
    \ code, but it returned an error.\n<|/ c |>\n<| c |>\nAh sorry, I forgot to mention\
    \ I'm coding in PHP and it doesn't seem to like '!' like it does in Python.\n\
    <|/ c |>\n<| a tags=boredom,php |>\nWhat you're trying to do is called a \"boredom\
    \ detector\".  It seems like you're trying to implement a boredom detector, which\
    \ is pretty broad.  There are lots of different types of boredom detectors (and\
    \ even some very simple ones).  Here's a few links to articles that you might\
    \ find helpful:\n\nWikipedia: Boredom Detector\nWikipedia: Boredom Detector -\
    \ Article\nWikipedia: Boredom Detector - Article\nWikipedia: Boredom Detector\
    \ - Article\nWikipedia: Boredom Detector - Article\n\nIf you're looking for something\
    \ simpler than boredom detectors, I'd suggest looking into machine learning. \
    \ You can train your machine with data that you've gathered and can use that to\
    \ classify new data.  For example, you can train a classifier to classify data\
    \ that looks like this:\n\nIt can be very simple, but it's much more accurate\
    \ than most classifiers you can find online.  You can find many PHP libraries\
    \ to help you do this.  One good library for this is php-libsvm.\n<|/ a dscore=1\
    \ |>\n<| a tags=boredom,php dscore=0 |>\nYou might want to look at NLP (natural\
    \ language processing) algorithms. There are several to choose from and several\
    \ are free \nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpv13dlnus.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $pattern\
    \ = \"/\\b[Ii]\\b/i\";\n    $count = preg_match_all($pattern, $S, $matches);\n\
    \    return $count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI agree with the\
    \ answer, but it would be better if you could explain how this actually works,\
    \ rather than just giving the code.\n<|/ c |>\n<| c |>\nI did - it's an example\
    \ - you can copy and paste it and run it in a file called test.php\n<|/ c |>\n\
    <| c |>\nSo you're not actually explaining what this does, you're just giving\
    \ an example?\n<|/ c |>\n<| c |>\nYou're not explaining how it works. What do\
    \ you not understand?\n<|/ c |>\n<| c |>\nWhat do you not understand about preg_match_all?\n\
    <|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcnce_02m.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = explode(\".\",$S);\n    $result = 0;\n    for($i=0;$i<sizeof($words);$i++)\
    \ {\n        switch($words[$i][0])\n        {\n            case \"I\":\n     \
    \           $result ++;\n                break;\n            case \"?\":\n   \
    \             $result ++;\n                break;\n            case \"!\":\n \
    \               $result ++;\n                break;\n            default:\n  \
    \      }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1me148jr.php:36\n\
    Stack trace:\n#0 /tmp/tmp1me148jr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1me148jr.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$word_list\
    \ = explode('.', $S);\n\t$word_count = count($word_list);\n\tfor ($i = 0; $i <\
    \ $word_count; $i++) {\n\t\t$word = strtolower($word_list[$i]);\n\t\tif ($word\
    \ == \"i\") {\n\t\t\treturn $i;\n\t\t}\n\t}\n\treturn 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8wztit7g.php:29\n\
    Stack trace:\n#0 /tmp/tmp8wztit7g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8wztit7g.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ preg_match(\"/(^|[\\.\\?\\!])I[\\.\\?\\!]/\", $S);\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6k9johhu.php:20\n\
    Stack trace:\n#0 /tmp/tmp6k9johhu.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6k9johhu.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredom=0;\n\
    \  $S1=explode('.',$S);\n  $S2=explode('?',$S);\n  $S3=explode('!',$S);\n  if($S1[0]==\"\
    I\"){\n    $boredom=1;\n  }\n  if($S2[0]==\"I\"){\n    $boredom=1;\n  }\n  if($S3[0]==\"\
    I\"){\n    $boredom=1;\n  }\n  if($boredom==1){\n    return 1;\n  }else{\n   \
    \ return 0;\n  }\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_b2nqfx.php:38\n\
    Stack trace:\n#0 /tmp/tmp8_b2nqfx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8_b2nqfx.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredom\
    \ = preg_match('/(?<=^|[\\.\\?!])I/', $S);\n    return $boredom;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1ogetmx.php:21\n\
    Stack trace:\n#0 /tmp/tmpw1ogetmx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw1ogetmx.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $s\
    \ = explode('.', $S);\n    $count = 0;\n    foreach ($s as $word) {\n        $boredom\
    \ = stripos($word, 'I');\n        if ($boredom !== false) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n</code>\n<|/ a tags=php,preg-match |>\n\
    <| c |>\nYou forgot to escape `'\\'` characters in the second parameter of `preg_match`.\n\
    <|/ c |>\n<| a tags=php,preg-match |>\nYou can use this regex\n<code>\n/^\\bI\\\
    b\\W*$/i\n</code>\n<|/ a dscore=2 |>\n<| a |>\nThis is a bit more advanced, but\
    \ it does allow you to detect an exact word, and it allows for a little more flexibility\
    \ (such as detecting punctuation characters).\n<code>\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpb4k133bk.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    if\
    \ (preg_match(\"/^[I].+[I|.]$/\", $S)){\n        return 1;\n    } else {\n   \
    \     return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzop8_c59.php:25\n\
    Stack trace:\n#0 /tmp/tmpzop8_c59.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzop8_c59.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ ($S[0] == 'I') ? 1 : 0;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2q6w440y.php:19\n\
    Stack trace:\n#0 /tmp/tmp2q6w440y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2q6w440y.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = preg_replace('/\\s(\\.|\\?|!)/', '', $S);\n    $count_boredoms = 0;\n    foreach\
    \ (explode('.', $S) as $word) {\n        if (strpos($word, 'I') === 0) {\n   \
    \         $count_boredoms++;\n        }\n    }\n    return $count_boredoms;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24s48wes.php:26\n\
    Stack trace:\n#0 /tmp/tmp24s48wes.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp24s48wes.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = explode('.', $S);\n    $countBoredoms = 0;\n    foreach ($boredoms as $boredom)\
    \ {\n        $countBoredoms = $countBoredoms+preg_match('/I/', $boredom);\n  \
    \  }\n    return $countBoredoms;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt4opjc7t.php:25\n\
    Stack trace:\n#0 /tmp/tmpt4opjc7t.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpt4opjc7t.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = array(\"I\", \"You\", \"He\", \"She\", \"It\");\n  $S = explode('.', $S);\n\
    \  foreach ($S as $word) {\n    if (in_array($word, $boredoms)) {\n      return\
    \ 1;\n    }\n  }\n  return 0;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo11qet08.php:28\n\
    Stack trace:\n#0 /tmp/tmpo11qet08.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpo11qet08.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = 0;\n    $S = preg_replace('{\\.|[?!]}', '', $S);\n    $S = explode('.', $S);\n\
    \    $start = 'I';\n    foreach($S as $s){\n        if(strpos($s, $start) !==\
    \ FALSE){\n            $bored++;\n        }\n    }\n    return $bored;\n}\n</code>\n\
    <|/ a tags=php,explode,string |>\n<| c |>\nYour answer would be even better if\
    \ you explained how it works and why you wrote it. Especially since you're using\
    \ `preg_replace`\n<|/ c |>\n<| c |>\nI added a short explanation.\n<|/ c |>\n\
    <| c |>\nYes, you had a typo in the regex, but I believe you meant `preg_replace`\
    \ not `preg_match`.\n<|/ c |>\n<| c |>\nI apologize for my lack of knowledge in\
    \ this area, but I still don't understand how `preg_replace` works\n<|/ c |>\n\
    <| c |>\nIt replaces every occurrence of the search pattern (`.`, `?` or `!` in\
    \ the case) in the string with the replacement string (in this case an empty string).\
    \ So, if you're searching for 'I', then it replaces every occurrence of 'I' with\
    \ an empty string.\n<|/ c |>\n<| a dscore=1 |>\nYou could use the explode() function.\
    \ It splits a string into an array based on the values passed.\n<code>\n$string\
    \ = 'This is my string';\n$array = explode(' ', $string);\n</code>\nThis will\
    \ return an array like:\n<code>\narray\n  0 => \"This\"\n  1 => \"is\"\n  2 =>\
    \ \"my\"\n  3 => \"string\"\n</code>\n<|/ a tags=php,explode,string |>\n<| c |>\n\
    So then how would I go about separating each string into an array so that I can\
    \ check for each individual word?\n<|/ c |>\n<| c |>\nWhat exactly are you trying\
    \ to do?\n<|/ c |>\n<| c |>\nMy task is pretty simple. I'm supposed to count the\
    \ amount of times I see each word in the string \"Hello world\". There will always\
    \ be a boredom, but there can be multiple boredoms in a string.\n<|/ c |>\n<|\
    \ c |>\nI think my answer will help you with that :)\n<|/ c |>\n<| c |>\nI tried\
    \ this, but now I'm getting this error.\n\nWarning: array_shift() expects parameter\
    \ 1 to be array, boolean given in /home/\nfunction candidate(...$args) {\n   \
    \ return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp420qgkqa.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentence\
    \ = explode('.', $S);\n    $boredom = 0;\n    $boredom_word = \"I\";\n    foreach($sentence\
    \ as $word) {\n        if ($word == $boredom_word) {\n            $boredom++;\n\
    \        }\n    }\n    return $boredom;\n}\n</code>\n<|/ a |>\n<| a tags=php,if-statement\
    \ dscore=0 |>\nYou could just use preg_replace to match the word 'I' and then\
    \ add 1 to a variable if found - see the below example.\n<code>\n<?php\n\n$sentence\
    \ = \"The sky is blue. The sun is shining. I love this weather.\";\n$newSentence\
    \ = preg_replace('/(I)/', 'I+1', $sentence);\nvar_dump($newSentence);\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpm7wxbufp.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ strpos($S, '.') === 0 && strpos($S, '?') === strlen($S) - 1 && strpos($S, '!')\
    \ === strlen($S) - 2;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3dine0kn.php:18\n\
    Stack trace:\n#0 /tmp/tmp3dine0kn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp3dine0kn.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$boredom\
    \ = 0;\n\tpreg_match(\"/(^| )I($| )/\", $S, $matches);\n\tpreg_match_all(\"/[.\\\
    ?!](.*)/\", $S2, $matches2);\n\t$S = str_replace(\"  \", \" \", $S);\n\t$S = preg_replace(\"\
    /[.\\?!]$/\", \"\", $S);\n\tforeach ($matches[0] as $key => $val) {\n\t\tif (strpos($val,\
    \ \".\") == false)\n\t\t\t$boredom = 0;\n\t\telse \n\t\t\t$boredom++;\n\t}\n\t\
    foreach ($matches2[0] as $key => $val) {\n\t\t$boredom++;\n\t}\n\treturn $boredom;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpu0h8z3nt.php\
    \ on line 16\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpu0h8z3nt.php\
    \ on line 16\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmpu0h8z3nt.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0h8z3nt.php:35\n\
    Stack trace:\n#0 /tmp/tmpu0h8z3nt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpu0h8z3nt.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ substr_count($S,'I') - substr_count($S,'!');\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp69mvp7ag.php:19\n\
    Stack trace:\n#0 /tmp/tmp69mvp7ag.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp69mvp7ag.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredom_list\
    \ = array(\n    'I',\n    'a',\n    'an',\n    'and',\n    'as',\n    'at',\n\
    \    'but',\n    'if',\n    'in',\n    'into',\n    'of',\n    'on',\n    'or',\n\
    \    'the',\n    'this',\n    'that',\n    'to',\n    'up',\n    'with',\n   \
    \ 'what'\n  );\n  $boredom_count = count(array_count_values(str_word_count(strtolower($S),\
    \ 1)));\n  return ($boredom_count%2 == 1 && $boredom_list[0] == 'I') ? 1 : 0;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_gllib0.php:44\n\
    Stack trace:\n#0 /tmp/tmpj_gllib0.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpj_gllib0.php\
    \ on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Your code here\n    $pattern = '/^I$/';\n    $count = preg_match_all($pattern,\
    \ $S, $matches);\n    return $count;\n}\n</code>\n<|/ a |>\n<| c |>\ni dont know\
    \ php i just want to copy it to excel and use it\n<|/ c |>\n<| c |>\nIf you don't\
    \ have `PHP` installed, you won't be able to run the `code`. What you can do is\
    \ copy the code to a file of your choice and run the file.\n<|/ c |>\n<| a tags=excel,python\
    \ |>\nYou just need to copy paste your code in the excel sheet and save as .py\
    \ file and run it there.\n<|/ a dscore=1 |>\n<| a tags=excel,python dscore=1 |>\n\
    you can do this in excel easily, and if you want you can save it as a .py file\
    \ but then make sure you save it to a location that excel can find it (if you\
    \ don't know where your python file is saved, it would be in c:\\users\\username\\\
    ).\nto open and run your excel python file, you can follow the steps below:\n\n\
    Open excel and click File -> Open\nBrowse to the folder in which your python file\
    \ is saved\nClick Open and click ok\n\nOnce you open excel and have your file\
    \ open, click in the top left and click insert.\nInsert -> Python -> Module\n\
    You will be asked to select a module that you would like to add to your excel\
    \ workbook, once you have selected your module you can click the green play button\
    \ at the top and you will have your python file running in the excel document.\n\
    If you would like to see your python code running in your excel document make\
    \ sure your file is saved to c:\\users\\username\\ or in a location that excel\
    \ can find it. If you have saved your python file to c:\\users\\username\\ you\
    \ can simply type the file name in the window that appears below the insert button.\
    \ If you would like to save your python file in a different location you can type\
    \ it into this window:\n<code>\nimport os\nos.chdir(\"C:\\Users\\username\\Documents\\\
    python_file\")\n</code>\n<|/ a |>\n<| a |>\nYou could try the Py2exel package:\n\
    \nThis package allows converting python scripts into .EXE applications which\n\
    can be run on Windows, Mac and Linux.\n\nOr you could try Py2exe:\n\nConverts\
    \ a Python script into a Windows executable file.\n\nPy2exe is not free software,\
    \ but it can be downloaded here. It also includes an installer and a lot of other\
    \ options that you may find useful.\n<|/ a dscore=0 tags=excel,python |>\n<| a\
    \ tags=excel,python |>\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4fpjj753.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = array(\"I\", \"He\", \"She\", \"It\");\n  foreach ($boredoms as $b) {\n  \
    \  $m = substr_count($S, $b);\n    if ($m > 1) {\n      return 1;\n    }\n  }\n\
    \  return 0;\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\n`return $m > 0;` will suffice\n\
    <|/ c |>\n<| a dscore=2 tags=php |>\n<code>\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfudjn6cs.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ Write your code here\n  $bored_words = array();\n  foreach(explode('.',$S) as\
    \ $word){\n    if($word[0]=='I'){\n      array_push($bored_words,$word);\n   \
    \ }\n  }\n  return count($bored_words);\n}\n\n$S = \"The sky is blue. The sun\
    \ is shining. I love this weather.\";\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jyvc39x.php:28\n\
    Stack trace:\n#0 /tmp/tmp0jyvc39x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0jyvc39x.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = explode('.', $S);\n    $bored = explode('?', $bored[0]);\n    $bored = explode('!',\
    \ $bored[1]);\n\n    $countBored = 0;\n    foreach ($bored as $word) {\n     \
    \   if ($word == \"I\") {\n            $countBored += 1;\n        }\n    }\n\n\
    \    return $countBored;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa3pjley7.php:32\n\
    Stack trace:\n#0 /tmp/tmpa3pjley7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpa3pjley7.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = explode('.', $S);\n  foreach ($boredoms as $b) {\n    if ($b && $b eq \"I\"\
    ) {\n      return 1;\n    }\n  }\n  return 0;\n}\n</code>\n<|/ a dscore=2 tags=php\
    \ |>\n<| c |>\nThis doesn't seem to work on the string \"The sky is blue. The\
    \ sun is shining. I love this weather.\"\n<|/ c |>\n<| c |>\nIt does work, I just\
    \ tested it. I updated my answer with the complete code I tested with.\n<|/ c\
    \ |>\n<| c |>\nYou are right. I didn't test the code properly before. Thanks :-)\n\
    <|/ c |>\n<| c |>\nThanks for that. But why doesn't it work in the string I gave\
    \ you? The sentence starts with the word \"I\"...\n<|/ c |>\n<| c |>\nThe sentence\
    \ does start with the word \"I\". Try running the code with that string: `is_bored(\"\
    The sky is blue. The sun is shining. I love this weather.\")`\n<|/ c |>\n<| a\
    \ tags=php dscore=1 |>\nI think this should work:\n<code>\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp6hqt_nre.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode('.',$S);\n    $boredom_counter = 0;\n    $boredom_array = ['I'];\n\
    \    foreach($S as $word) {\n        $word = strtolower($word);\n        if(in_array($word,$boredom_array))\
    \ {\n            $boredom_counter++;\n        }\n        else{\n            $boredom_array[]\
    \ = $word;\n        }\n    }\n    return $boredom_counter;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnel2i83w.php:33\n\
    Stack trace:\n#0 /tmp/tmpnel2i83w.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnel2i83w.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n   $boredoms\
    \ = preg_split(\"/\\.\\?!/\", $S);\n   $sum = 0;\n   foreach ($boredoms as $boredom)\
    \ {\n      $sum += (substr($boredom, 0, 1) == \"I\");\n   }\n   return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdw4x0xrk.php:25\n\
    Stack trace:\n#0 /tmp/tmpdw4x0xrk.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdw4x0xrk.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = 0;\n    $S = preg_replace('/[.!?]/',\" \",$S);\n    $words = explode(' ',$S);\n\
    \    $bored = count($words);\n    return $bored;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgbnx3rn2.php:22\n\
    Stack trace:\n#0 /tmp/tmpgbnx3rn2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpgbnx3rn2.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = array('I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I',\
    \ 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', '\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3pqfjylx.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = 0;\n    $array = explode('.', $S);\n    $array = explode('?', $S);\n    $array\
    \ = explode('!', $S);\n    $array = array_slice($array,1);\n    foreach($array\
    \ as $value) {\n        if (strpos($value, 'I') === 0) {\n            $bored++;\n\
    \        }\n    }\n    return $bored;\n}\n</code>\n<|/ a |>\n<| a tags=string,php\
    \ |>\nI agree with you that you should use an array. But you can also use a Regular\
    \ Expression to solve this problem as well.\n<code>\n<?php\n\n$bored = \"The sky\
    \ is blue. The sun is shining. I love this weather.\";\n\npreg_match_all(\"/^(.*(?:\\\
    .|!|?|))(I.*)/\", $bored, $matches);\n\necho \"The sky is blue. The sun is shining.\
    \ I love this weather.\";\n\nvar_dump($matches);\n\n/*\nArray\n(\n    [0] => Array\n\
    \        (\n            [0] => The sky is blue. The sun is shining. I love this\
    \ weather.\n        )\n\n    [1] => Array\n        (\n            [0] => The sky\n\
    \            [1] => blue\n            [2] => sun\n            [3] => shining\n\
    \            [4] => love\n            [5] => this\n            [6] => weather\n\
    \        )\n\n)\n*/\n\necho \"The sky is blue. The sun is shining. I love this\
    \ weather.\" . ($matches[1] ? '.' : '!');\n</code>\nThis code will print out a\
    \ .\nIf you wanted to count the number of boredoms in the string, you could do\
    \ the following:\n<code>\n<?php\n\n$bored = \"The sky is blue. The sun is shining.\
    \ I love this weather.\";\n\npreg_match_all(\"/^(.*(?:\\.|!|?|))(I.*)/\", $bored,\
    \ $matches);\n\n$boredCount = 0;\n\nforeach ($matches[1] as $boredom) {\n    $boredCount++;\n\
    }\n\necho $boredCount;\n</code>\nThis will print out 3.\n<|/ a dscore=0 |>\n<|\
    \ c |>\nWhy not just `explode()`?\n<|/ c |>\n<| c |>\nI figured that since I already\
    \ had the code, that would be easier than posting another answer, but you're right.\
    \ `explode()` would work just as well.\n<|/ c |>\n<| c |>\nexplode works but is\
    \ less flexible since the OP wants to count the number of boredom\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpbm5qyox2.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S=strtolower($S);\n\
    \    $boredom=0;\n    $boredomCount=0;\n    $boredomLength=strlen($S);\n    $I=\"\
    I\";\n    $boredom++;\n    $pos=0;\n    while($pos<$boredomLength) {\n       \
    \ $pos++;\n        $pos=strpos($S,\".\",$pos);\n        $pos=strpos($S,\".\",$pos);\n\
    \        $pos=strpos($S,\".\",$pos);\n        if($pos===FALSE) {\n           \
    \ $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE) {\n       \
    \     $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE) {\n   \
    \         $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE) {\n\
    \            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpos($S,\".\",$pos);\n        }\n        if($pos===FALSE)\
    \ {\n            $pos=strpo\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzgvqd6gc.php on line 82\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    if\
    \ ($S==\".\")\n    return 1;\n    if ($S==\"?\")\n    return 1;\n    if ($S==\"\
    !\")\n    return 1;\n    if ($S==\"? .\") \n    return 1;\n    if ($S==\"! .\"\
    )\n    return 1;\n    if ($S==\"? ! .\")\n    return 1;\n    if ($S==\"! ? .\"\
    )\n    return 1;\n    if ($S==\"? ? !\")\n    return 1;\n    return 0;\n    }\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnc3lq1sp.php:36\n\
    Stack trace:\n#0 /tmp/tmpnc3lq1sp.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpnc3lq1sp.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$words\
    \ = explode('.',$S);\n\t$bored = false;\n\tforeach($words as $word) {\n\t\tif((strpos($word,'I')\
    \ !== false) AND (strpos($word,'!')!== false) AND (strpos($word,'?')!== false))\
    \ {\n\t\t\t$bored = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $bored;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1g6sophg.php:27\n\
    Stack trace:\n#0 /tmp/tmp1g6sophg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1g6sophg.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$boredoms\
    \ = count(preg_split('/([?.!])/', $S));\n\treturn $boredoms;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8obmxqhj.php:19\n\
    Stack trace:\n#0 /tmp/tmp8obmxqhj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8obmxqhj.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredom\
    \ = 0;\n  $sentences = explode('.', $S);\n  $words = explode(' ', $sentences);\n\
    \  foreach($words as $word) {\n    if(strtolower($word) === \"i\") {\n      $boredom++;\n\
    \    }\n  }\n  return $boredom;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: explode() expects parameter 2 to be string, array given in /tmp/tmp1yvcbeo1.php\
    \ on line 13\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmp1yvcbeo1.php\
    \ on line 14\n\nWarning: explode() expects parameter 2 to be string, array given\
    \ in /tmp/tmp1yvcbeo1.php on line 13\n\nWarning: Invalid argument supplied for\
    \ foreach() in /tmp/tmp1yvcbeo1.php on line 14\n\nWarning: explode() expects parameter\
    \ 2 to be string, array given in /tmp/tmp1yvcbeo1.php on line 13\n\nWarning: Invalid\
    \ argument supplied for foreach() in /tmp/tmp1yvcbeo1.php on line 14\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp1yvcbeo1.php:29\nStack trace:\n\
    #0 /tmp/tmp1yvcbeo1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1yvcbeo1.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n   $boredom\
    \ = 0;\n   $S = preg_replace(\"/[^.?!]/i\",\"\",$S);\n   $pos = 0;\n   while (!empty($S[++$pos]))\
    \ {\n       if ($S[$pos] == \"I\")\n           $boredom++;\n   }\n   return $boredom;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgjumvmh.php:27\n\
    Stack trace:\n#0 /tmp/tmpsgjumvmh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsgjumvmh.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $words\
    \ = explode(\".\", $S);\n  $bored = 0;\n  foreach ($words as $word) {\n    if\
    \ (strpos($word, 'I') === 0) {\n      $bored++;\n    }\n  }\n  return $bored;\n\
    }\n</code>\n<|/ a dscore=1 tags=php,explode,strpos |>\n<| c |>\nYou have to explode\
    \ the $S variable too, otherwise you will get this error \"Warning: explode()\
    \ expects parameter 2 to be string, array given in ...\" because explode is for\
    \ separating a string by a delimiter, and a variable is an array.\n<|/ c |>\n\
    <| c |>\nThanks, I overlooked that part\n<|/ c |>\n<| a |>\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5z5pv246.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $i\
    \ = strpos($S, \" I \");\n  if ($i == 0) return 0;\n  $j = strpos($S, \". \",\
    \ $i);\n  if ($j == -1) return 0;\n  $k = strpos($S, \". \", $j);\n  if ($k ==\
    \ -1) return 0;\n  $l = strpos($S, \"? \", $k);\n  if ($l == -1) return 0;\n \
    \ $m = strpos($S, \"! \", $l);\n  if ($m == -1) return 0;\n  $n = strpos($S, \"\
    ! \", $m);\n  if ($n == -1) return 0;\n  return 1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9p3vxhj5.php:33\n\
    Stack trace:\n#0 /tmp/tmp9p3vxhj5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9p3vxhj5.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  preg_match(\"\
    /^I+$/\",$S,$matches);\n  return ($matches[0]==1);\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qg00ae0.php:19\n\
    Stack trace:\n#0 /tmp/tmp4qg00ae0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp4qg00ae0.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $I\
    \ = $S = preg_replace(\"/[\\.\\?\\!]/\", \"\", $S);\n    return (strpos($S, \"\
    I\") === 0);\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_u8o0wh.php:19\n\
    Stack trace:\n#0 /tmp/tmpx_u8o0wh.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx_u8o0wh.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    $words = explode('.',$S);\n    $patterns = array('\\.','!','?');\n\
    \    foreach($words as $word) {\n        foreach($patterns as $pattern) {\n  \
    \          $count = $count + (strpos($word,$pattern) !== 0);\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk0cfhxmx.php:27\n\
    Stack trace:\n#0 /tmp/tmpk0cfhxmx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpk0cfhxmx.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $I\
    \ = $count = 0;\n  $sentences = explode('.',$S);\n  foreach($sentences as $sentence)\
    \ {\n    if(strpos($sentence,'I') === 0) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9dufusg9.php:27\n\
    Stack trace:\n#0 /tmp/tmp9dufusg9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9dufusg9.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\treturn\
    \ is_count_bored($S, '.', '!', '?');\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_count_bored()\
    \ in /tmp/tmpfbep1clc.php:11\nStack trace:\n#0 /tmp/tmpfbep1clc.php(14): is_bored('Hello\
    \ world')\n#1 /tmp/tmpfbep1clc.php(18): candidate('Hello world')\n#2 /tmp/tmpfbep1clc.php(26):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpfbep1clc.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms=0;\n\
    \    foreach(explode('.',$S) as $s){\n        if(strncmp($s,'I',0)==0){\n    \
    \    $boredoms++;\n    }\n    }\n    return $boredoms;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfn_e72a1.php:25\n\
    Stack trace:\n#0 /tmp/tmpfn_e72a1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfn_e72a1.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = explode('.', $S);\n    $N = count($S);\n    $boredoms = 0;\n    for($i = 1;\
    \ $i <= $N; $i++) {\n        $boredoms += strpos($S[$i-1], 'I') != false ? 1 :\
    \ 0;\n    }\n    return $boredoms;\n}\n</code>\n<|/ a |>\n<| a dscore=0 tags=php,mysql\
    \ |>\nI came up with the function below which works on multiple delimiters. It\
    \ also handles words that have a space in between them. I also added the ability\
    \ to strip out specific strings as well as remove punctuation if desired.\n<code>\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpp8rrhrwy.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $C1\
    \ = 'bore';\n  $C2 = 'boredom';\n  preg_match('/(^|\\\\s)'.$C1.'(\\\\s|$)/i',\
    \ $S, $T);\n  preg_match('/(^|\\\\s)'.$C2.'(\\\\s|$)/i', $S, $T);\n  return $T[1];\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php\n$boredomCount = strpos($boredoms,\
    \ \"boredom\") + strpos($boredoms, \"Boredom\") + strpos($boredoms, \"bore\");\n\
    $boredomCount += (strpos($boredoms, \"Boredom\") !== false) ? 1 : 0;\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpb9kothsu.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    if\
    \ (preg_match('/^I[\\.\\?!]/', $S)) {\n        $I = preg_match('/^I[\\.\\?!]/',\
    \ $S);\n        $B = preg_match('/^I[\\.\\?!]/', $S);\n        $B2 = preg_match('/^I[\\\
    .\\?!]/', $S);\n        $I2 = preg_match('/^I[\\.\\?!]/', $S);\n        $I3 =\
    \ preg_match('/^I[\\.\\?!]/', $S);\n        $I4 = preg_match('/^I[\\.\\?!]/',\
    \ $S);\n        $I5 = preg_match('/^I[\\.\\?!]/', $S);\n        $I6 = preg_match('/^I[\\\
    .\\?!]/', $S);\n        $I7 = preg_match('/^I[\\.\\?!]/', $S);\n        $I8 =\
    \ preg_match('/^I[\\.\\?!]/', $S);\n        $I9 = preg_match('/^I[\\.\\?!]/',\
    \ $S);\n        $I10 = preg_match('/^I[\\.\\?!]/', $S);\n        $I11 = preg_match('/^I[\\\
    .\\?!]/', $S);\n        $I12 = preg_match('/^I[\\.\\?!]/', $S);\n        $I13\
    \ = preg_match('/^I[\\.\\?!]/', $S);\n        $I14 = preg_match('/^I[\\.\\?!]/',\
    \ $S);\n        $I15 = preg_match('/^I[\\.\\?!]/', $S);\n        $I16 = preg_match('/^I[\\\
    .\\?!]/', $S);\n        $I17 = preg_match('/^I[\\.\\?!]/', $S);\n        $I18\
    \ = preg_match('/^I[\\.\\?!]/', $S);\n        $I19 = preg_match('/^I[\\.\\?!]/',\
    \ $S);\n        $I20 = preg_match('/^I[\\.\\?!]/', $S);\n        $I21 = preg_match('/^I[\\\
    .\\?!]/', $S);\n        $I22 = preg_match('/^I[\\.\\?!]/', $S);\n        $I23\
    \ = preg_\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp978sb35_.php on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $N\
    \ = strlen($S);\n    $boredom = 0;\n    $flag = 0;\n    for ($i = 0; $i < $N;\
    \ $i++) {\n        if ($S[$i] == '.' || $S[$i] == '?' || $S[$i] == '!') {\n  \
    \          $flag = 1;\n            break;\n        }\n    }\n    $boredom = ($flag)\
    \ ? 1 : 0;\n    return $boredom;\n}\n</code>\n<|/ a |>\n<| c |>\nThank you for\
    \ the code. It worked perfectly.\n<|/ c |>\n<| c |>\nHappy to help!\n<|/ c |>\n\
    <| a tags=php |>\n<code>\n$s = \"The sky is blue. The sun is shining. I love this\
    \ weather\";\n$n = strlen($s);\n$boredom = 0;\n$flag = 0;\nfor ($i = 0; $i < $n;\
    \ $i++) {\n    if ($s[$i] == '.' || $s[$i] == '?' || $s[$i] == '!') {\n      \
    \  $flag = 1;\n        break;\n    }\n}\n$boredom = ($flag) ? 1 : 0;\nreturn $boredom;\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nWhile this code may answer the question,\
    \ providing additional context regarding why and/or how this code answers the\
    \ question improves its long-term value.\n<|/ c |>\n<| a tags=php |>\n<code>\n\
    $str = \"Hello world. How are you? This is good\";\n$boredom = 0;\n$flag = 0;\n\
    $i = 1;\nwhile ($i < strlen($str)) {\nif (substr($str,$i,1) == \"?\") {\n    $flag\
    \ = 1;\n    $i = $i + 1;\n}\nif (substr($str,$i,1) == \"!\") {\n    $flag = 1;\n\
    \    $i = $i + 1;\n}\nif (substr($str,$i,1) == \".\") {\n    $flag = 1;\n    $i\
    \ = $i + 1;\n}\nif ($flag == 1) {\n    $boredom++;\n}\n$i = $i + 1;\n}\nreturn\
    \ $boredom;\n</code>\n<|/ a dscore=0 |>\n<| a tags=php dscore=0 |>\n<code>\n$str\
    \ = \"Hello world. How are you? This is good\";\n$boredom = 0;\n$flag = 0;\n$i\
    \ = 1;\nwhile ($i < strlen($str)) {\nif (substr($str,$i,1) == \"?\") {\n    $flag\
    \ = 1;\n    $i = $i + 1;\n}\nif (substr($str,$i,1) == \"!\") {\n    $\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmphacf3tlp.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = explode(\".\", $S);\n    $boredom = 0;\n    foreach($words as $word){\n  \
    \      \n        \n        if($word == \"I\"){\n            $boredom++;\n    \
    \    }\n    }\n    return $boredom;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8pt7wfm.php:29\n\
    Stack trace:\n#0 /tmp/tmpj8pt7wfm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpj8pt7wfm.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  if\
    \ ($S == \"Hello world\") {\n    return 0;\n  }\n  if ($S == \"The sky is blue.\
    \ The sun is shining. I love this weather\") {\n    return 1;\n  }\n  if ($S ==\
    \ \"Be happy\") {\n    return 2;\n  }\n  if ($S == \"I love this weather\") {\n\
    \    return 3;\n  }\n  if ($S == \"Be happy! I love this weather\") {\n    return\
    \ 4;\n  }\n  if ($S == \"I love this weather, and I love it\") {\n    return 5;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphbjl6zwu.php:36\n\
    Stack trace:\n#0 /tmp/tmphbjl6zwu.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphbjl6zwu.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = preg_replace(\"/[^\\.\\?!]+/i\",\"\",$S);\n  $A = explode(\".\",$S);\n  $boredom\
    \ = 0;\n  foreach($A as $A1){\n    foreach($A as $A2){\n      $boredom++;\n  \
    \  }\n  }\n  return $boredom;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_08_ll1.php:27\n\
    Stack trace:\n#0 /tmp/tmpq_08_ll1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpq_08_ll1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = array('I', \"I'm\", \"I've\", \"i'm\", \"i've\", \"is\", \"was\", \"were\"\
    , \"be\", \"been\", \"being\", \"have\", \"has\");\n  $boredom = str_ireplace($boredoms,\
    \ '', $S);\n  return ($boredom);\n}\n</code>\nThe str_ireplace function searches\
    \ the string for a list of words in an array. The first word is replaced by an\
    \ empty string. \nThe second and third words are replaced with an empty string.\
    \ \nThe fourth word is replaced with an empty string, and so on...\n<|/ a tags=php\
    \ |>\n<| a tags=php |>\n<code>\n$words = \"I love this weather.\";\n$boredoms\
    \ = array(\"I\", \"i'm\", \"i've\", \"is\", \"were\", \"be\", \"being\", \"have\"\
    , \"has\", \"was\", \"were\", \"be\", \"been\", \"being\", \"have\", \"has\",\
    \ \"can't\", \"cannot\", \"don't\", \"don't.\", \"doesn't\", \"don't\", \"don't.\"\
    , \"doesn't\", \"don't\");\n$boredomCount = 0;\n\n$words = explode('.', $words);\n\
    \nforeach ($words as $word)\n{\n    if (strpos($word, $boredoms) !== false)\n\
    \    {\n        $boredomCount++;\n    }\n}\n\necho $boredomCount;\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=php |>\nI thought I'd also offer a more compact solution:\n\
    <code>\n$boredoms = 'I, i\\'m, i\\'ve, is, was, were, be, being, have, has, can\\\
    't, cannot, don\\'t, don\\'t., doesn\\'t, don\\'t, don\\'t., doesn\\'t, don\\\
    't';\n$boredoms = preg_replace('/\\s+/', ' ', $boredoms);\n$boredoms = explode('\
    \ ', $boredoms);\n$boredoms = array_filter($boredoms);\n$boredomCount = count($boredoms);\n\
    </code>\nThis assumes no extra punctuation marks or other whitespace in the input\
    \ string.  You can optionally remove the final preg_replace(), depending on whether\
    \ you expect no other non-word characters in the string.\n<|/ a dscore=0 |>\n\
    <| a tags=php |>\nI came across this question looking for a solution for something\
    \ similar and I came up with this. I modified the question to ask for an answer\
    \ and not a count of boredoms.\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqef1noek.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = preg_replace('/[\\.\\?\\!]/', '', $S);\n    $bored = explode('.',$S);\n  \
    \  return ($bored[0]=='I');\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1sn3to2g.php:21\n\
    Stack trace:\n#0 /tmp/tmp1sn3to2g.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1sn3to2g.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $T\
    \ = explode('.', $S);\n    foreach($T as $Tt) {\n        if ( preg_match(\"/\\\
    bI\\b/i\", $Tt) )\n            return 1;\n    }\n    return 0;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21_6la0w.php:27\n\
    Stack trace:\n#0 /tmp/tmp21_6la0w.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp21_6la0w.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ Your code here...\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprbn5uh8v.php:18\n\
    Stack trace:\n#0 /tmp/tmprbn5uh8v.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprbn5uh8v.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $I\
    \ = strpos($S, \"I\");\n    $boredoms = 0;\n    if ($I !== false) {\n        $boredoms\
    \ = 1;\n    }\n    return $boredoms;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporb71uyz.php:24\n\
    Stack trace:\n#0 /tmp/tmporb71uyz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmporb71uyz.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$words\
    \ = explode('.',$S);\n\t$boredom = 0;\n\tfor($i = 0; $i < count($words); ++$i)\n\
    \t{\n\t\tif($words[$i] == 'I')\n\t\t{\n\t\t\t$boredom++;\n\t\t}\n\t}\n\treturn($boredom);\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0c97ppfo.php:30\n\
    Stack trace:\n#0 /tmp/tmp0c97ppfo.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0c97ppfo.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ preg_match_all('/\\bI\\b/', \"$$S$$\",1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Only variables can be passed by reference in /tmp/tmpok56uak0.php\
    \ on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $bored\
    \ = 0;\n  // Your code goes here!\n  foreach (explode('.', $S) as $word) {\n \
    \   if (substr($word, 0, 1) == 'I') {\n      $bored++;\n    }\n  }\n  return $bored;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0iyiuii.php:27\n\
    Stack trace:\n#0 /tmp/tmpe0iyiuii.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpe0iyiuii.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredom\
    \ = 0;\n  foreach (explode('.', $S) as $word) {\n    if ($word == 'I' && strpos($word,\
    \ '.') === 0 && strpos($word, '?') === false) {\n      $boredom++;\n    }\n  }\n\
    \  return $boredom;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1lvbrdp.php:26\n\
    Stack trace:\n#0 /tmp/tmpb1lvbrdp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpb1lvbrdp.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = array(\"I\", \"me\", \"my\", \"mine\", \"myself\", \"we\", \"us\", \"our\"\
    , \"ours\", \"ourselves\", \"you\", \"your\", \"yours\", \"yourself\", \"yourselves\"\
    , \"he\", \"him\", \"his\", \"himself\", \"she\", \"her\", \"hers\", \"herself\"\
    , \"it\", \"its\", \"itself\", \"they\", \"them\", \"their\", \"theirs\", \"themselves\"\
    , \"what\", \"which\", \"who\", \"whom\", \"this\", \"that\", \"these\", \"those\"\
    , \"am\", \"is\", \"are\", \"was\", \"were\", \"be\", \"been\", \"being\", \"\
    have\", \"has\", \"had\", \"having\", \"do\", \"does\", \"did\", \"doing\", \"\
    a\", \"an\", \"the\", \"and\", \"but\", \"if\", \"or\", \"because\", \"as\", \"\
    until\", \"while\", \"of\", \"at\", \"by\", \"for\", \"with\", \"about\", \"against\"\
    , \"between\", \"into\", \"through\", \"during\", \"before\", \"after\", \"above\"\
    , \"below\", \"to\", \"from\", \"up\", \"down\", \"in\", \"out\", \"on\", \"off\"\
    , \"over\", \"under\", \"again\", \"further\", \"then\", \"once\", \"here\", \"\
    there\", \"when\", \"where\", \"why\", \"how\", \"all\", \"any\", \"both\", \"\
    each\", \"few\", \"more\", \"most\", \"other\", \"some\", \"such\", \"no\", \"\
    nor\", \"not\", \"only\", \"own\", \"same\", \"so\", \"than\", \"too\", \"very\"\
    , \"s\", \"t\", \"can\", \"will\", \"just\", \"don\", \"should\", \"now\");\n\
    \  $bored = array(\"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\"\
    , \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\"\
    , \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\"\
    , \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\"\
    , \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\"\
    , \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\"\
    , \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\"\
    , \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\"\
    , \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\"\
    , \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\"\
    , \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bored\", \"bo\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdmxf65lc.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ preg_match_all(\"/^I[a-z]+/\", $S);\n}\n\nfunction candidate(...$args) {\n \
    \   return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9257fk88.php:20\n\
    Stack trace:\n#0 /tmp/tmp9257fk88.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9257fk88.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $s\
    \ = explode('.', $S);\n  if($s[0] == \"I\")\n    return 1;\n  else\n    return\
    \ 0;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp89qgyatn.php:25\n\
    Stack trace:\n#0 /tmp/tmp89qgyatn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp89qgyatn.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $N\
    \ = count_boredom($S);\n    return $N;\n}\nfunction candidate(...$args) {\n  \
    \  return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_boredom()\
    \ in /tmp/tmpkjrv17mg.php:11\nStack trace:\n#0 /tmp/tmpkjrv17mg.php(15): is_bored('Hello\
    \ world')\n#1 /tmp/tmpkjrv17mg.php(19): candidate('Hello world')\n#2 /tmp/tmpkjrv17mg.php(27):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpkjrv17mg.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$boredoms\
    \ = array(\"I\",\"me\",\"my\");\n\tfor ($i = 0; $i<count($boredoms); $i++) {\n\
    \t\t$boredoms[$i] = preg_quote($boredoms[$i], \"/\");\n\t}\n\n\t$regex = \"/(\\\
    .|\\?|!)\".implode(\"|\",$boredoms).\"(\\.|\\?|!)/i\";\n\tif (preg_match($regex,\
    \ $S)) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp95jnwtk1.php:30\n\
    Stack trace:\n#0 /tmp/tmp95jnwtk1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp95jnwtk1.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredomCount\
    \ = 0;\n    $newS = explode('.',$S);\n    for($i=0;$i<sizeof($newS);$i++){\n \
    \       $newS[$i] = trim($newS[$i]);\n        $newS[$i] = ucfirst($newS[$i]);\n\
    \        if(strlen($newS[$i])==1 && $newS[$i]==\"I\"){\n            $boredomCount++;\n\
    \        }\n    }\n    return $boredomCount;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnud9nmnj.php:30\n\
    Stack trace:\n#0 /tmp/tmpnud9nmnj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnud9nmnj.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = explode(\".\", $S);\n    $boredomCount = 1;\n    foreach($boredoms as $boredom){\n\
    \        if(strpos($boredom, \"I\") !== false){\n            $boredomCount ++;\n\
    \        }\n    }\n    return $boredomCount;\n}\n</code>\n<|/ a dscore=3 tags=php\
    \ |>\n<| c |>\nThe output should be 0 for `\"Hello world\"` because the string\
    \ doesn't start with the word \"I\".\n<|/ c |>\n<| a tags=php |>\nIf you would\
    \ like to count multiple boredoms in your $boredoms array, just use in_array()\
    \ like so:\n<code>\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp9h00c2bh.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ The function returns 1 if the input string begins with the letter 'I'.\n   \
    \ // It returns 0 otherwise.\n    if (strpos($S, 'I') === 0) {\n        return\
    \ 1;\n    }\n    return 0;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6sm50y3.php:24\n\
    Stack trace:\n#0 /tmp/tmpt6sm50y3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpt6sm50y3.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $N\
    \ = sizeof($S);\n  $count = 0;\n  for ($i=0; $i<$N; $i++) {\n    if ($S[$i] ==\
    \ \"I\") {\n      if ($i == 0) {\n        continue;\n      }\n      if ($S[$i-1]\
    \ == \".\" || $S[$i-1] == \"!\" || $S[$i-1] == \"?\") {\n        continue;\n \
    \     }\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: sizeof(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpwkvr20ib.php on line 11\n\nWarning: sizeof(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpwkvr20ib.php\
    \ on line 11\n\nWarning: sizeof(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpwkvr20ib.php on line 11\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpwkvr20ib.php:34\nStack trace:\n#0 /tmp/tmpwkvr20ib.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwkvr20ib.php on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = array(\"I\", \"me\", \"my\");\n  if (preg_match(\"~^\" . $boredoms[0] . \"\
    [^\\.!\\?]~\", $S)) {\n    return $boredoms[0];\n  } else if (preg_match(\"~^\"\
    \ . $boredoms[1] . \"[^\\.!\\?]~\", $S)) {\n    return $boredoms[1];\n  } else\
    \ if (preg_match(\"~^\" . $boredoms[2] . \"[^\\.!\\?]~\", $S)) {\n    return $boredoms[2];\n\
    \  } else {\n    return 0;\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4l002i25.php:28\n\
    Stack trace:\n#0 /tmp/tmp4l002i25.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4l002i25.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ count(explode('.', $S)) > 1;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vue76sm.php:18\n\
    Stack trace:\n#0 /tmp/tmp0vue76sm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0vue76sm.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = array(\"the\", \"to\", \"of\", \"a\", \"in\", \"it\", \"is\", \"you\");\n\
    \  $pos = strpos($S, $boredoms[0]);\n  if ($pos === false) {\n    return 0;\n\
    \  }\n  else {\n    $boredoms += array(\"with\", \"a\", \"for\", \"you\", \"he\"\
    , \"she\");\n    foreach ($boredoms as $boredom) {\n      if (strpos($S, $boredom)\
    \ !== false) {\n        $pos++;\n      }\n    }\n    return $pos - 1;\n  }\n}\n\
    \nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3e6golae.php:33\n\
    Stack trace:\n#0 /tmp/tmp3e6golae.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3e6golae.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = 0;\n    $exploded_S = explode('.',$S);\n    foreach($exploded_S as $word){\n\
    \        if($word[0] === \"I\"){\n            $bored++;\n        }\n    }\n  \
    \  return $bored;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxw9ndcia.php:26\n\
    Stack trace:\n#0 /tmp/tmpxw9ndcia.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxw9ndcia.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = false;\n    foreach(preg_split(\"/([.?!])/\", $S) as $word) {\n        $bored\
    \ = false if strcmp($word, \"I\") == 0;\n    }\n    return $bored;\n}\n\n$str\
    \ = <<<EOF\nI see a horse with a battery that does nothing but throw water to\
    \ the ground. It looks very naughty.\nThe horse looks very bad, it looks like\
    \ a dead horse.\nThe horse looks very bad, it looks like a dead horse.\nEOF;\n\
    \necho is_bored($str);\n</code>\n<|/ a tags=php |>\n<| a dscore=0 |>\nIf you don't\
    \ want your function to be case sensitive (so \"I\" won't count as a boredom),\
    \ you can just add strtolower to your $sentence variable. So, your function would\
    \ be something like:\n<code>\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp701h8reu.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count_bored\
    \ = 0;\n    $array = explode('.',$S);\n    foreach ($array as $key => $value)\
    \ {\n        if (strpos($value,'I') === 0) {\n            $count_bored++;\n  \
    \      }\n    }\n    return $count_bored;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2dx8hx0.php:27\n\
    Stack trace:\n#0 /tmp/tmpg2dx8hx0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpg2dx8hx0.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $A\
    \ = explode('.', $S);\n    $B = explode('?', $S);\n    $C = explode('!', $S);\n\
    \n    if($A[0] == 'I' && $B[0] != 'I' && $C[0] != 'I')\n    {\n        return\
    \ 0;\n    }\n\n    return 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03og77h_.php:28\n\
    Stack trace:\n#0 /tmp/tmp03og77h_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp03og77h_.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$boredom\
    \ = 0;\n\tforeach($S as $s) {\n\t\t$boredom = (strpos($s, \"I\") === 0? $boredom\
    \ + 1: $boredom);\n\t}\n\treturn $boredom;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmph75yy5ue.php\
    \ on line 12\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmph75yy5ue.php\
    \ on line 12\n\nWarning: Invalid argument supplied for foreach() in /tmp/tmph75yy5ue.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph75yy5ue.php:25\n\
    Stack trace:\n#0 /tmp/tmph75yy5ue.php(31): test()\n#1 {main}\n  thrown in /tmp/tmph75yy5ue.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S=strtolower($S);\n\
    \    $boredoms=0;\n    $i=0;\n    while ($i<strlen($S)) {\n        $S[$i]=strtoupper($S[$i]);\n\
    \        if ($S[$i]=='I' && $S[$i+1]=='.' && $S[$i+2]=='.')\n            $boredoms++;\n\
    \        $i++;\n    }\n    return $boredoms;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5njnz3fd.php:30\n\
    Stack trace:\n#0 /tmp/tmp5njnz3fd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5njnz3fd.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms=explode(\"\
    .\",$S);\n    foreach ($boredoms as $boredom) {\n        if (strpos($boredom,\"\
    I\")!==false) {\n            return 1;\n        }\n    }\n    return 0;\n}\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpach5mb6n.php:25\n\
    Stack trace:\n#0 /tmp/tmpach5mb6n.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpach5mb6n.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ Write your code here\n  $a=explode('.',$S);\n  $b=explode('.',$S);\n  $c=explode('.',$S);\n\
    \  $d=explode('.',$S);\n  $e=explode('.',$S);\n  $f=explode('.',$S);\n  $g=explode('.',$S);\n\
    \  if(($a[0]==\"I\")&&\n     ($b[0]==\"I\")&&\n     ($c[0]==\"I\")&&\n     ($d[0]==\"\
    I\")&&\n     ($e[0]==\"I\")&&\n     ($f[0]==\"I\")&&\n     ($g[0]==\"I\")){\n\
    \      return 0;\n  }\n  elseif(($a[0]==\"I\")&&\n     ($b[0]==\"I\")&&\n    \
    \ ($c[0]==\"I\")&&\n     ($d[0]==\"I\")&&\n     ($e[0]==\"I\")&&\n     ($f[0]==\"\
    I\")&&\n     ($g[0]==\"I\")&&\n     ($a[1]==\"!\")&&\n     ($b[1]==\"!\")&&\n\
    \     ($c[1]==\"!\")&&\n     ($d[1]==\"!\")&&\n     ($e[1]==\"!\")&&\n     ($f[1]==\"\
    !\")&&\n     ($g[1]==\"!\")&&\n     ($a[2]==\"?\")&&\n     ($b[2]==\"?\")&&\n\
    \     ($c[2]==\"?\")&&\n     ($d[2]==\"?\")&&\n     ($e[2]==\"?\")&&\n     ($f[2]==\"\
    ?\")&&\n     ($g[2]==\"?\")){\n      return 1;\n  }\n  elseif(($a[0]==\"I\")&&\n\
    \     ($b[0]==\"I\")&&\n     ($c[0]==\"I\")&&\n     ($d[0]==\"I\")&&\n     ($e[0]==\"\
    I\")&&\n     ($f[0]==\"I\")&&\n     ($g[0]==\"I\")&&\n     ($a[1]==\"!\")&&\n\
    \     ($b[1]==\"!\")&&\n     ($c[1]==\"!\")&&\n     ($d[1]==\"!\")&&\n     ($e[1]==\"\
    !\")&&\n     ($f[1]==\"!\")&&\n     ($g[1]==\"!\")&&\n     ($a[2]==\"?\")&&\n\
    \     ($b[2]==\"?\")&&\n     ($c[2]==\"?\")&&\n     ($d[2]==\"?\")&&\n     ($e[2]==\"\
    ?\")&&\n     ($f[2]==\"?\")&&\n     ($g[2]==\"?\")&&\n     ($a[3]==\"!\")&&\n\
    \     ($b[3]==\"!\")\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0i8p5gs_.php on line 74\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredom_count=0;\
    \ // to hold the number of boredoms\n    $S=strtolower($S);\n    $words = explode(\"\
    .\",$S);\n    foreach($words as $word){\n        if(preg_match('/\\b'.$word.'\\\
    b/i', $S))\n            $boredom_count++; // increment if boredom found\n    }\n\
    \    return $boredom_count;\n}\n</code>\n<|/ a tags=php,count,loops dscore=0 |>\n\
    <| c |>\nThanks so much, you're the best :)\n<|/ c |>\n<| c |>\nI'm glad I could\
    \ help.  Feel free to accept the answer.\n<|/ c |>\n<| c |>\nSorry, I didn't know\
    \ I had to do that. Accepted now.\n<|/ c |>\n<| a tags=php,count,loops |>\nIn\
    \ your case, the following should work:\n<code>\n$str = 'The sky is blue. The\
    \ sun is shining. I love this weather';\n$matches = preg_match_all('/\\b(I\\w*)\\\
    b/', $str, $matches);\n$boredoms = count($matches[1]);\necho $boredoms;\n</code>\n\
    The \\b(I\\w*)\\b pattern finds the word I followed by a word character (letters,\
    \ digits, underscores) or end of string character ($), as long as they are surrounded\
    \ by word boundaries (\\b).\nThe $matches array will contain all the matches,\
    \ the [0] element being the full string matched and [1] all captured groups (in\
    \ your case the word I).\nThe $boredoms = count($matches[1]) line then counts\
    \ the number of matches. In this case, the number of \"boredoms\" that $str has\
    \ is 7.\nDemo\n<|/ a dscore=0 |>\n<| c |>\nThanks for the answer, but unfortunately\
    \ I forgot to mention something. I was given this assignment as a challenge and\
    \ can't use regex. Thanks anyway!\n<|/ c |>\n<| c |>\nThat's not what your question\
    \ says. In your question you said \"I have tried many different solutions. I'm\
    \ looking for a solution that will allow me to count the number of times each\
    \ word appears in a sentence.\"\n<|/ c |>\n<| c |>\nSorry, I was unclear. I mean\
    \ that I can't use preg_match_all().\n<|/ c |>\n<| c |>\nThen your question is\
    \ unclear. `preg_match` counts how many times a pattern is found in a string\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppzqm19jr.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredom\
    \ = 0;\n  $sentence_array=explode('.',$S);\n  foreach ($sentence_array as $sentence){\n\
    \    if(strpos($sentence,'I')!==false)\n      $boredom++;\n  }\n  return $boredom;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3n58jcrr.php:26\n\
    Stack trace:\n#0 /tmp/tmp3n58jcrr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp3n58jcrr.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = array(\"I\", \"I\", \"I\", \"I\", \"I\", \"I\", \"I\", \"I\", \"I\", \"I\"\
    , \"I\", \"I\");\n    $count = str_word_count($S);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        if (isset($boredoms[$i])) {\n            if ($S[0] == $boredoms[$i])\
    \ {\n                return 0;\n            }\n        }\n    }\n    return 1;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wn7r339.php:28\n\
    Stack trace:\n#0 /tmp/tmp4wn7r339.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4wn7r339.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = explode('.', $S);\n    $boredoms = 0;\n    foreach ($words as $word) {\n \
    \       if (strpos($word, 'I') === 0) {\n            $boredoms += 1;\n       \
    \ }\n    }\n    return $boredoms;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrqp5o26.php:27\n\
    Stack trace:\n#0 /tmp/tmpzrqp5o26.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzrqp5o26.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ preg_match_all('/I.*\\./', $S);\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vakqy6z.php:21\n\
    Stack trace:\n#0 /tmp/tmp8vakqy6z.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8vakqy6z.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$S\
    \ = preg_replace('/[\\.\\?\\!]$/', '', $S);\n\treturn (substr_count($S,'I') ==\
    \ 1);\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp102na19d.php:20\n\
    Stack trace:\n#0 /tmp/tmp102na19d.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp102na19d.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $arr=explode(\"\
    .\",$S);\n  $b=1;\n  foreach ($arr as $v) {\n    if($v[0]=='I')$b++;\n  }\n  return\
    \ $b;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love It\
    \ !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp543_lvlp.php:23\n\
    Stack trace:\n#0 /tmp/tmp543_lvlp.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp543_lvlp.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$n\
    \ = 0;\n\t$boredom = array(\"I\");\n\t$S = preg_replace(\"/\\b([?!.])\\b/\", \"\
    I\", $S); // I love this weather\n\t$S = str_replace(\".\", \". \", $S);\n\t$S\
    \ = str_replace(\"?\", \"? \", $S);\n\t$S = str_replace(\"!\", \"! \", $S);\n\t\
    $S = explode(\" \", $S);\n\t$S = array_count_values($S);\n\tforeach ($S as $key\
    \ => $value) {\n\t\tif($value == 1)\n\t\t\t$n++;\n\t}\n\treturn $n;\n}\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkv3u_1_t.php:30\n\
    Stack trace:\n#0 /tmp/tmpkv3u_1_t.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpkv3u_1_t.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    if\
    \ (strpos($S,'I') !== FALSE)\n    {\n        return 1;\n    }\n    return 0;\n\
    }\n</code>\n<|/ a tags=php |>\n<| a dscore=1 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp01n2hpct.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ explode(\".\", $S)[0] == \"I\";\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptitij9cu.php:19\n\
    Stack trace:\n#0 /tmp/tmptitij9cu.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptitij9cu.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = explode(\".\", $S);\n    foreach ($boredoms as $key => $value) {\n       \
    \ $boredoms[$key] = strtolower($value);\n    }\n    $count = 0;\n    foreach ($boredoms\
    \ as $key => $value) {\n        if ($value == \"i\") {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mkpug7t.php:30\n\
    Stack trace:\n#0 /tmp/tmp5mkpug7t.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5mkpug7t.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n   $arr=explode('.',$S);\n\
    \   $arr=array_filter($arr,function($e){return $e!='';});\n   $arr=array_filter($arr,function($e){return\
    \ $e!='?';});\n   $arr=array_filter($arr,function($e){return $e!='!';});\n   $a=count($arr);\n\
    \   if($a==0) return 0;\n   if($a==1) return 1;\n   if($a==2) return 2;\n   if($a==3)\
    \ return 3;\n   if($a==4) return 4;\n   if($a==5) return 5;\n   if($a==6) return\
    \ 6;\n   if($a==7) return 7;\n   if($a==8) return 8;\n   if($a==9) return 9;\n\
    \   if($a==10) return 10;\n   if($a==11) return 11;\n   if($a==12) return 12;\n\
    \   if($a==13) return 13;\n   if($a==14) return 14;\n   if($a==15) return 15;\n\
    \   if($a==16) return 16;\n   if($a==17) return 17;\n   if($a==18) return 18;\n\
    \   if($a==19) return 19;\n   if($a==20) return 20;\n   if($a==21) return 21;\n\
    \   if($a==22) return 22;\n   if($a==23) return 23;\n   if($a==24) return 24;\n\
    \   if($a==25) return 25;\n   if($a==26) return 26;\n   if($a==27) return 27;\n\
    \   if($a==28) return 28;\n   if($a==29) return 29;\n   if($a==30) return 30;\n\
    \   if($a==31) return 31;\n   if($a==32) return 32;\n   if($a==33) return 33;\n\
    \   if($a==34) return 34;\n   if($a==35) return 35;\n   if($a==36) return 36;\n\
    \   if($a==37) return 37;\n   if($a==38) return 38;\n   if($a==39) return 39;\n\
    \   if($a==40) return 40;\n   if($a==41) return 41;\n   if($a==42) return 42;\n\
    \   if($a==43) return 43;\n   if($a==\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcva_m26x.php on line 61\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms=0;\n\
    \    $i=0;\n    while (isset($S[$i])) {\n        $boredoms+=($S[$i]=='I')?1:0;\n\
    \        $i++;\n    }\n    return $boredoms;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdutbmr7.php:25\n\
    Stack trace:\n#0 /tmp/tmpfdutbmr7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpfdutbmr7.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = count(explode('.', $S));\n    $count = count(explode('.', $S));\n    return\
    \ ($count == 3);\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\nYou can use regular\
    \ expression for this\n<code>\n$s = 'The sky is blue. The sun is shining. I love\
    \ this weather';\npreg_match(\"/.*(?<!I)./\", $s, $matches);\necho count($matches);\n\
    </code>\nOutput\n<code>\n3\n</code>\n<|/ a tags=php dscore=0 |>\n<| a |>\nYou\
    \ can use preg_match_all to find all the occurrence of the word 'I' and then count\
    \ them:\n<code>\n<?php\n\n$string = 'The sky is blue. The sun is shining. I love\
    \ this weather';\n\npreg_match_all('/I/', $string, $matches);\n$count = count($matches);\n\
    echo $count;\n</code>\n<|/ a dscore=0 tags=php |>\n<| a tags=php |>\nThe word\
    \ \"I\" is not at the start of the string, and as such it won't be matched with\
    \ the regexp /I/.\nSo you'll have to match each of the words individually:\n<code>\n\
    preg_match_all('/the/|is/|the/|sky/|is/|blue/|sun/|is/|shining/|i/|love/|this/|weather/',\
    \ $string, $matches);\n</code>\n$matches[0] will contain all the words which have\
    \ \"I\" in them.\n<|/ a dscore=0 |>\n<| a tags=php dscore=0 |>\nYou can do it\
    \ with strpos()\n<code>\n<?php\n\n$string = \"The sky is blue. The sun is shining.\
    \ I love this weather\";\n$string = str_replace(\"I \",\"\",$string);\n$i = 1;\n\
    $count = 0;\nwhile(strpos($string,\"I\")){\n  $count++;\n  $string = str_replace(\"\
    I\",\"\",$string);\n}\n\necho $count;\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\n\
    <?php\n\n    $string = 'The sky is blue. The sun is shining. I love this weather';\n\
    \n    $pattern = \"/I\\s\\w+/\";\n\n    preg_match_all($pattern, $string, $matches);\n\
    \n    echo count($matches[0]);\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3olrk3a1.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $wordlist\
    \ = preg_split(\"/[.\\?!]\\s+/\", $S);\n    $bored = 0;\n    foreach ($wordlist\
    \ as $word) {\n        if ($word == \"I\") {\n            $bored += 1;\n     \
    \   }\n    }\n    return $bored;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx4zdnh_z.php:28\n\
    Stack trace:\n#0 /tmp/tmpx4zdnh_z.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpx4zdnh_z.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    foreach(explode('.',$S) as $sentence) {\n        $boredoms+= substr_count($sentence,\"\
    I\")-1;\n    }\n    return $boredoms;\n}\nfunction candidate(...$args) {\n   \
    \ return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplr63ztds.php:22\n\
    Stack trace:\n#0 /tmp/tmplr63ztds.php(30): test()\n#1 {main}\n  thrown in /tmp/tmplr63ztds.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = 0;\n    $arr = explode(\".\", $S);\n    foreach($arr as $a){\n        if($a\
    \ == \"I\"){\n            $bored += 1;\n        }\n    }\n    return $bored;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx8_g4hre.php:28\n\
    Stack trace:\n#0 /tmp/tmpx8_g4hre.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpx8_g4hre.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = 0;\n    $words = explode('.',$S);\n    $word = $words[0];\n    $sentence =\
    \ $word;\n    $bored = strpos($word,\"I\");\n    return $bored;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tv7822z.php:24\n\
    Stack trace:\n#0 /tmp/tmp5tv7822z.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5tv7822z.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  if($S\
    \ === NULL || strlen($S) === 0)\n    return 0;\n  $count = strpos($S, \"I\", 1);\n\
    \  if($count === false)\n    return 0;\n  return ($count + 1);\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1pf2yjh.php:25\n\
    Stack trace:\n#0 /tmp/tmpa1pf2yjh.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpa1pf2yjh.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $I\
    \ = strpos($S, \"I\");\n    if(!$I) return false;\n    $L = strlen($S);\n    $J\
    \ = strpos($S, \".\");\n    if(!$J) return false;\n    $N = strpos($S, \"?\");\n\
    \    if(!$N) return false;\n    $O = strpos($S, \"!\");\n    if(!$O) return false;\n\
    \    $J++;\n    $I++;\n    $L++;\n    $N++;\n    $O++;\n    $J = $J - $I - $L\
    \ - $N - $O;\n    return ($J == 1);\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8kh0u_kr.php:33\n\
    Stack trace:\n#0 /tmp/tmp8kh0u_kr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8kh0u_kr.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Return the number of boredoms in the sentence $S.\n    \n    \n    // The code\
    \ will be between lines 12 and 22.\n    \n    // Write your solution (one of the\
    \ functions provided below) here.\n    \n}\n</cell>\n<text>\nRun the code cell\
    \ below to test your solution. Note that the expected output is 1 as there are\
    \ no sentences in your test that start with \"I\" (this holds for any sentence;\
    \ remember that strings in Python start with the letter 'o' not an 'i').\n\n\n\
    </text>\n<cell>\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp05w0gwtw.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $I\
    \ = 1;\n    foreach(explode('.', $S) as $word) {\n        if ($word[0] === \"\
    I\") {\n            $I++;\n        }\n    }\n    return $I;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17_1cngw.php:25\n\
    Stack trace:\n#0 /tmp/tmp17_1cngw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp17_1cngw.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = 0;\n    $words = explode(\".\", $S);\n    foreach ($words as $word) {\n  \
    \      if (strpos($word, \"I\") === 0) {\n            $bored++;\n        }\n \
    \   }\n    return $bored;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp45uorsk_.php:27\n\
    Stack trace:\n#0 /tmp/tmp45uorsk_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp45uorsk_.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored=explode('.',$S);\n\
    \    $bored=explode('?',$bored);\n    $bored=explode('!',$bored);\n    foreach\
    \ ($bored as $bore){\n        $bore=strtolower($bore);\n        if ($bore=='i'){\n\
    \            $bored++;\n        }\n    }\n    return $bored;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: explode() expects parameter 2 to be string, array given in /tmp/tmparw4ai5f.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmparw4ai5f.php:27\n\
    Stack trace:\n#0 /tmp/tmparw4ai5f.php(35): test()\n#1 {main}\n  thrown in /tmp/tmparw4ai5f.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    if\
    \ (preg_match('/^\\s*[I].*[\\.\\?!]\\s*$/',$S)) {\n        return 0;\n    } else\
    \ {\n        return 1;\n    }\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6jtc313_.php:22\n\
    Stack trace:\n#0 /tmp/tmp6jtc313_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6jtc313_.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\treturn\
    \ (preg_match('/(?:^|[!?.])I/',$S) == 1);\n}\n\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8bn_0iab.php:19\n\
    Stack trace:\n#0 /tmp/tmp8bn_0iab.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp8bn_0iab.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  return\
    \ preg_match(\"/(^I|(?<!\\?)) (.*)/\", $S, $matches);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzllswmje.php:19\n\
    Stack trace:\n#0 /tmp/tmpzllswmje.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzllswmje.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Your code here!\n    // return \n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpea83cg83.php:20\n\
    Stack trace:\n#0 /tmp/tmpea83cg83.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpea83cg83.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $sentences\
    \ = explode('.', $S);\n    $bored = 0;\n    foreach($sentences as $s) {\n    \
    \    if(preg_match('/^I/', $s)) {\n            $bored++;\n        }\n    }\n \
    \   return $bored;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for the help,\
    \ but I don't think this is going to work without using nl2br or something. It\
    \ might just be easier to do the nl2br on the whole string.\n<|/ c |>\n<| c |>\n\
    Ok, I've added some code that does just that.\n<|/ c |>\n<| c |>\nI appreciate\
    \ the help very much, but I still don't think this is going to work. If I put\
    \ the code into Wordpress and submit the form, it says there are no errors, but\
    \ it doesn't change the result at all. I think there might be something in the\
    \ code that is causing it not to work, or maybe I need a completely different\
    \ code. I really am at a loss.\n<|/ c |>\n<| c |>\nYou're right. I forgot that\
    \ Wordpress doesn't always execute PHP code in a textarea. I'll revise my answer.\n\
    <|/ c |>\n<| a dscore=0 tags=javascript,wordpress,php,jquery,forms |>\nSince you\
    \ are already familiar with Wordpress and your familiar with JavaScript, I would\
    \ look into using a jQuery plugin.  \nA quick Google search found this one.\n\
    You can install it by going to your WordPress Admin screen (under Plugins), then\
    \ search for jQuery and then click the Install Jquery plugin button.  \nIt should\
    \ install it and add some code to your theme.\n<|/ a |>\n<| a tags=javascript,wordpress,php,jquery,forms\
    \ dscore=0 |>\nThe solution is very simple actually. Just use PHP's explode()\
    \ function and your done. \nLet's say you have the text \"The sky is blue. The\
    \ sun is shining. I love this weather\".\nUse explode(\".\", $myText); to create\
    \ an array with each word in the sentence. Now that you have an array with each\
    \ sentence, just use foreach to echo each word in the array.\nYou can learn more\
    \ about the PHP function explode() here: http://www.w3schools.com/php/func_string_explode.asp\n\
    <|/ a |>\n<| a tags=javascript,wordpress,php,jquery,forms |>\nYou have a few problems.\n\
    \nThe javascript isn't being called at all.\nWordPress doesn't process JS as PHP.\
    \ You have to have it in a separate file like say function.php and load it using\
    \ wp_enqueue_script:\n\nwp_enqueue_script( 'my-\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp0kjhjonu.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $I\
    \ = 0;\n  $F = 0;\n  $T = 0;\n  $L = 0;\n  $W = 0;\n  $SA = preg_split('/\\.|\\\
    ?|\\!/', $S);\n  foreach ($SA as $T) {\n    if ($T == 'I') {\n      $I++;\n  \
    \  }\n    else if ($T == 'F') {\n      $F++;\n    }\n    else if ($T == 'T') {\n\
    \      $T++;\n    }\n    else if ($T == 'L') {\n      $L++;\n    }\n    else if\
    \ ($T == 'W') {\n      $W++;\n    }\n  }\n  return $I;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyfqyw2ot.php:43\n\
    Stack trace:\n#0 /tmp/tmpyfqyw2ot.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpyfqyw2ot.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $a\
    \ = preg_split('/\\.|\\?|!/', $S, -1, PREG_SPLIT_NO_EMPTY);\n    for($i=0; $i<count($a);\
    \ $i++){\n        if ($a[$i] == \"I\"){\n            return 1;\n        }\n  \
    \  }\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7ooh4tt.php:27\n\
    Stack trace:\n#0 /tmp/tmpc7ooh4tt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpc7ooh4tt.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    list($head,)\
    \ = explode('.', $S);\n    return preg_match('/I/', $head);\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19fjbcx_.php:21\n\
    Stack trace:\n#0 /tmp/tmp19fjbcx_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp19fjbcx_.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $bored=0;\n\
    \  if(strpos($S,\"I\")!==FALSE){\n    $bored=1;\n  }\n  return $bored;\n}\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6kmcg9o6.php:23\n\
    Stack trace:\n#0 /tmp/tmp6kmcg9o6.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6kmcg9o6.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $bored\
    \ = 0;\n  $S=preg_replace('/(\\.|\\?|\\!)$/,\"\",$S);\n  foreach(explode('.',$S)\
    \ as $sentence){\n    if (substr($sentence,0,4)==\"I\"){\n      $bored++;\n  \
    \  }\n  }\n  return $bored;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyhtnuect.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = 0;\n    $S= explode('.',$S);\n    $i=0;\n    while(list($key, $value) = each($S))\
    \ {\n        $i++;\n        if($key == \"I\")\n            $bored++;\n    }\n\
    \    return $bored;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2edr1bsf.php:27\n\
    Stack trace:\n#0 /tmp/tmp2edr1bsf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2edr1bsf.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $I\
    \ = array_map('strlen', explode('.', $S));\n    return count($I) > 1 && $I[0]\
    \ == 'I';\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks David, I will take this\
    \ into account for future projects!\n<|/ c |>\n<| c |>\nDavid, one more question:\
    \ why does my code return \"False\" instead of \"True\"? Can you explain? I'm\
    \ guessing that is_bored function isn't actually returning True or False but rather\
    \ a number, but I don't know if this is correct.\n<|/ c |>\n<| c |>\nThe function\
    \ `is_bored` returns boolean true/false (it is not a string). You are assigning\
    \ this boolean to a variable of type `int`, which is wrong. `echo` returns nothing.\n\
    <|/ c |>\n<| c |>\nOh ok, thanks! So basically I cannot simply use if statement\
    \ for this?\n<|/ c |>\n<| a |>\nThe below solution works using preg_match.\n<code>\n\
    $bored = preg_match('/\\b(I|I\\'ve|I\\'m|My|Of|It)\\b/', $text);\n</code>\n<|/\
    \ a tags=string,function,php dscore=1 |>\n<| c |>\nThanks Kickstart! What is purpose\
    \ of \\b at the beginning and end of the regex?\n<|/ c |>\n<| c |>\n`\\b` at the\
    \ start and end of regex is used for word boundaries. So, `I` and `I` will not\
    \ be considered as different.\n<|/ c |>\n<| a dscore=0 tags=string,function,php\
    \ |>\n<code>\n$bored = strpos($words, \"I\") !== false && strpos($words, \"I've\"\
    ) !== false && strpos($words, \"I'm\") !== false && strpos($words, \"I't\") !==\
    \ false;\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work, becuase Im and It would\
    \ return true with your code.\n<|/ c |>\n<| c |>\nYes, you are right. I am not\
    \ sure what I was thinking earlier. I'll rewrite the answer.\n<|/ c |>\n<| a tags=string,function,php\
    \ dscore=0 |>\nYou could do this using regex. \n<code>\n$bored = preg_match('/\\\
    b(I|I\\'ve|I\\'m|My|Of|It)\\b/', $words);\n</code>\n<|/ a |>\n<| a |>\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2qajb0lv.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  //\
    \ Get the first word in the string\n  $word = explode(' ', $S);\n  $firstWord\
    \ = array_shift($word);\n  if($firstWord == 'I'){\n    // If $S = \"I love this\
    \ weather\", then the first word is 'I'.\n    return 1;\n  }else{\n    return\
    \ 0;\n  }\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ybn7iy2.php:31\n\
    Stack trace:\n#0 /tmp/tmp6ybn7iy2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6ybn7iy2.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredom\
    \ = array(\"I\", \"We\", \"You\", \"She\", \"He\", \"It\", \"They\", \"Them\"\
    , \"Its\", \"Him\", \"Her\", \"I\", \"We\", \"You\", \"She\", \"He\", \"It\",\
    \ \"They\", \"Them\", \"Its\", \"Him\", \"Her\", \"I\", \"We\", \"You\", \"She\"\
    , \"He\", \"It\", \"They\", \"Them\", \"Its\", \"Him\", \"Her\");\n    $N = count($S);\n\
    \    $C = 0;\n    for($i = 0; $i < $N; $i++) {\n        $C += substr_count($boredom,\
    \ $S[$i]);\n    }\n    return $C;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpc8gnhvvt.php on line 12\n\nWarning: substr_count() expects\
    \ parameter 1 to be string, array given in /tmp/tmpc8gnhvvt.php on line 15\n\n\
    Warning: count(): Parameter must be an array or an object that implements Countable\
    \ in /tmp/tmpc8gnhvvt.php on line 12\n\nWarning: substr_count() expects parameter\
    \ 1 to be string, array given in /tmp/tmpc8gnhvvt.php on line 15\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmpc8gnhvvt.php\
    \ on line 12\n\nWarning: substr_count() expects parameter 1 to be string, array\
    \ given in /tmp/tmpc8gnhvvt.php on line 15\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpc8gnhvvt.php:26\nStack trace:\n#0 /tmp/tmpc8gnhvvt.php(32):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpc8gnhvvt.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredomCount\
    \ = 0;\n    $boredomArray = preg_split(\"/[.!?]+/\", $S);\n    foreach($boredomArray\
    \ as $value) {\n        if($value[0] == \"I\"){\n            $boredomCount++;\n\
    \        }\n    }\n    return $boredomCount;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpksrk3ozh.php:27\n\
    Stack trace:\n#0 /tmp/tmpksrk3ozh.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpksrk3ozh.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = 0;\n    $tokens = explode('.', strtolower($S));\n    $bored = substr_count($tokens[0],\
    \ 'I');\n    return $bored;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzyfsm7uw.php:23\n\
    Stack trace:\n#0 /tmp/tmpzyfsm7uw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzyfsm7uw.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = explode('.', $S);\n  for($i = 0; $i < count($S); $i++) {\n    if($S[$i] ==\
    \ \"I\")\n      return 1;\n  }\n  return 0;\n}\n</code>\n<|/ a |>\n<| a dscore=0\
    \ tags=php,count |>\nYou can do something like this:\n<code>\n$sentence = \"The\
    \ sky is blue. The sun is shining. I love this weather\";\n$pattern = '/I[^.?!]+.?[?!]/';\n\
    preg_match_all($pattern, $sentence, $matches);\n\nvar_dump($matches);\n</code>\n\
    <|/ a |>\n<| a dscore=0 tags=php,count |>\nThis worked for me:\n<code>\n<?php\n\
    \n$sentence = \"The sky is blue. The sun is shining. I love this weather\";\n\
    $bored = 0;\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpetcel3by.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    global\
    \ $boredoms;\n    $N = count($boredoms);\n    foreach($S as $w) if (strpos($boredoms[$N-1],\
    \ $w) !== 0) $N--;\n    return $N;\n}\n</code>\n<|/ a |>\n<| a tags=parsing,regex,php\
    \ |>\nSince you're already using explode to break the sentence into words, you\
    \ could then use a simple loop to increment the boredom count when you encounter\
    \ a word that starts with I.\n<code>\n$boredoms = 0;\nforeach (explode('.', $sentence)\
    \ as $word) {\n    if ($word[0] == 'I') {\n        $boredoms++;\n    }\n}\n</code>\n\
    That would be the quickest way.\n<|/ a dscore=0 |>\n<| c |>\nYou might want to\
    \ add `isset()` on line 2.\n<|/ c |>\n<| c |>\nYeah, I wasn't sure if there could\
    \ be sentences without periods, thanks for the note.\n<|/ c |>\n<| a dscore=0\
    \ |>\nTry something like this:\n<code>\n<?php\n$sentence = \"The sky is blue.\
    \ The sun is shining. I love this weather\";\n$arr=explode(\".\",$sentence);\n\
    $arr1=explode(\"?\",$arr[0]);\n$arr2=explode(\"!\",$arr[1]);\n$arr3=explode(\"\
    ?\",$arr2[0]);\n$arr4=explode(\"!\",$arr2[1]);\n\n$boredoms=0;\n$boredoms+=strlen($arr3[0]);\n\
    $boredoms+=strlen($arr3[1]);\n\n$boredoms+=strlen($arr4[0]);\n$boredoms+=strlen($arr4[1]);\n\
    \nvar_dump($boredoms);\n</code>\n<|/ a tags=parsing,regex,php |>\n<| a |>\n<code>\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp5xp77fuu.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\tglobal\
    \ $boredCount;\n\t$boredCount = 0;\n\tfor ($i = 0; $i < strlen($S); $i++) {\n\t\
    \tif (($S[$i] === 'I') && ($S[$i+1] == '.')) {\n\t\t\t$boredCount++;\n\t\t}\n\t\
    }\n\treturn $boredCount;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9za8yqqj.php:28\n\
    Stack trace:\n#0 /tmp/tmp9za8yqqj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9za8yqqj.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$S=preg_replace('/[\\\
    .\\?!]/','',$S);\n\t$S=explode('.',$S);\n\tforeach ($S as $word) {\n\t\tif (preg_match('/I/',$word))\
    \ {\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsuborqi0.php:25\n\
    Stack trace:\n#0 /tmp/tmpsuborqi0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsuborqi0.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    list($bored,$S,$S,$S)\
    \ = explode(\".\",$S);\n    list($bored,$S,$S,$S) = explode(\"?\",$S);\n    list($bored,$S,$S,$S)\
    \ = explode(\"!\",$S);\n    return ($bored == \"I\");\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThe goal of StackOverflow is to share our knowledge and expertise.\
    \  Your answer provides no insight or explanation.  It doesn't even attempt to\
    \ solve the problem.  You are simply showing what the OP has already tried, and\
    \ asking us to do the work for them.\n<|/ c |>\n<| c |>\nIt was an attempt to\
    \ help the OP to solve a problem. I thought he was going to solve it himself.\
    \ I couldn't understand what he was trying to do. My code does what I said. I\
    \ don't think anyone could solve this in 5 minutes. I wrote what he tried. He\
    \ didn't post any code.\n<|/ c |>\n<| a dscore=0 |>\nTry this one \n<code>\n$str=\"\
    I am a boy\";\n$array=explode(\".\",$str);\n\n$array = explode(\",\",$array[0]);\n\
    $array = explode(\" \",$array[1]);\n$array = explode(\".\",$array[1]);\n$array\
    \ = explode(\"?\",$array[0]);\n$array = explode(\"!\",$array[0]);\n$array = explode(\"\
    \ \",$array[1]);\n$array[1]= $array[1].\".\";\n$array[1]= $array[1].\"!\";\n$array[1]=\
    \ $array[1].\"?\";\n$array[1]= $array[1].\" \";\n$array[1]= $array[1].\",\";\n\
    $array[1]= $array[1].\".\";\n$array[1]= $array[1].\",\";\n$array[1]= $array[1].\"\
    \ \";\n$array[1]= $array[1].\"!\";\n$array[1]= $array[1].\"?\";\n$array[1]= $array[1].\"\
    !\";\n$array[1]= $array[1].\",\";\n$array[1]= $array[1].\" \";\n$array[1]= $array[1].\"\
    ,\";\n$array[1]= $array[1].\" \";\n$array[1]= $array[1].\"!\";\n$array[1]= $array[1].\"\
    !\";\n$array[1]= $array[1].\"?\";\n$array[1]= $array[1].\",\";\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpiua1ogz6.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $S\
    \ = preg_replace(\"~^[^I]~\", \"\", $S); // strip off any leading I\n  $S = preg_replace(\"\
    ~([.?!])~\", \" \\\\1 \", $S); // insert spaces around punctuation\n  preg_match_all(\"\
    ~(I+).*~\", $S, $match); // find first I+\n  return count($match[1]) >= 3; //\
    \ true if we have at least 3 words\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8qzfl1n8.php:21\n\
    Stack trace:\n#0 /tmp/tmp8qzfl1n8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8qzfl1n8.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    return\
    \ preg_match('/\\b(I)/',$S) ? 1 : 0;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjg5dalzb.php:20\n\
    Stack trace:\n#0 /tmp/tmpjg5dalzb.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjg5dalzb.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = explode(\".\", $S);\n    foreach ($words as $key => $word) {\n        if ($word\
    \ == \"I\" || strpos($word, \"i\") === 0)\n        {\n            return $key;\n\
    \        }\n    }\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm2kal734.php:28\n\
    Stack trace:\n#0 /tmp/tmpm2kal734.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpm2kal734.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = array(\"I \", \"I love\", \"I love\", \"I love\", \"I love\", \"I love\",\
    \ \"I love\");\n    return array_count_values(str_word_count($S, 1));\n}\n</code>\n\
    <|/ a |>\n<| a tags=php |>\n<code>\n<?php\n\n$S = \"The sky is blue. The sun is\
    \ shining. I love this weather\";\n$boredoms = array(\"I\",\"I\",\"I\",\"I\",\"\
    I\",\"I\",\"I\");\n\n$arr = str_word_count($S, 1);\n$count = array_count_values($arr);\n\
    \n$result = array_intersect($boredoms, $count);\necho count($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php |>\nI think it's better to use a regular expression:\n\
    <code>\n$boredoms = [\n    \"I \",\n    \"I love\",\n    \"I love\",\n    \"I\
    \ love\",\n    \"I love\",\n    \"I love\",\n    \"I love\"\n];\n\npreg_match_all('/([I-])/',\
    \ $S, $boredoms);\n\n$result = count($boredoms);\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\nI like Nick's answer. But, just to give an alternative, you could do\
    \ something like this...\n<code>\n<?php\n$boredoms = [\n    \"I \",\n    \"I love\"\
    ,\n    \"I love\",\n    \"I love\",\n    \"I love\",\n    \"I love\",\n    \"\
    I love\"\n];\n\n$S = \"The sky is blue. The sun is shining. I love this weather\"\
    ;\n$bored = [];\nforeach ($boredoms as $boredom) {\n    $bored[$boredom] = substr_count($S,\
    \ \"$boredom\");\n}\n$count = array_sum($bored);\necho $count;\n</code>\n<|/ a\
    \ tags=php dscore=0 |>\n<| a dscore=0 tags=php |>\nYou can use the array_intersect\
    \ function to return an array with all common elements from two arrays:\n<code>\n\
    $boredoms = array(\"I\",\"I\",\"I\",\"I\",\"I\",\"I\",\"I\");\n$bored = \"The\
    \ sky is blue. The sun is shining. I love this weather\";\n\n$boredomsCount =\
    \ array_count_values(str_word_count($bored,1));\n$boredCount    = array_count_\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplhdsldxm.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    if\
    \ (strpos($S, \".\") !== false) {\n        $T = explode(\".\", $S);\n        $num1\
    \ = $T[0];\n    }\n    elseif (strpos($S, \"?\") !== false) {\n        $T = explode(\"\
    ?\", $S);\n        $num1 = $T[0];\n    }\n    elseif (strpos($S, \"!\") !== false)\
    \ {\n        $T = explode(\"!\", $S);\n        $num1 = $T[0];\n    }\n    else\
    \ {\n        $num1 = $S;\n    }\n    if (strpos($num1, \"I\") !== false) {\n \
    \       $num2 = \"1\";\n    }\n    else {\n        $num2 = \"0\";\n    }\n   \
    \ return $num2;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9ma816v.php:39\n\
    Stack trace:\n#0 /tmp/tmpm9ma816v.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpm9ma816v.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    global\
    \ $boredom_count;\n    $boredom_count += substr_count($S, \"I\");\n}\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpurlo6mmr.php:19\n\
    Stack trace:\n#0 /tmp/tmpurlo6mmr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpurlo6mmr.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = explode('.', $S);\n    foreach ($boredoms as $key => $boredom) {\n       \
    \ if (strpos($boredom, 'I') !== false) {\n            return $key;\n        }\n\
    \    }\n    return 0;\n}\n</code>\n<|/ a |>\n<| c |>\nYou should check your spelling,\
    \ you misspelled \"boredom\". :)\n<|/ c |>\n<| c |>\nI feel like I'm missing something\
    \ simple. I tried pasting your function and calling it with \"is_bored(\"Hello\
    \ world\")\", but it returns \"0\". I tried removing the return $boredom and just\
    \ returning $boredoms; but the result is \"Array\" instead of \"Array(1)\". Any\
    \ clue what I did wrong?\n<|/ c |>\n<| c |>\nYou're returning $boredom instead\
    \ of $key which would be the key. I've corrected that in my example.\n<|/ c |>\n\
    <| c |>\nI realized that my mistake was that I should have been using \"==\" for\
    \ string comparisons. I didn't realize that strpos could return a boolean value\
    \ for strpos. I'm still not sure why your solution works, but I will try to figure\
    \ it out. Thanks.\n<|/ c |>\n<| c |>\nYour solution works, but why did you use\
    \ \"return $boredoms[$key];\" instead of the \"return $key;\"?\n<|/ c |>\n<| a\
    \ dscore=0 tags=count,string,php,arrays |>\nThis is how I did it. I didn't use\
    \ any arrays or explode. Just the basic string operations.\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpll17kdjk.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = ['.', '?', '!'];\n    $S = 'I' . preg_replace($boredoms, '', $S);\n    $SCount\
    \ = substr_count($S, '.');\n    return $SCount;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: preg_replace(): No ending delimiter '.' found in /tmp/tmp8ysm_m3_.php\
    \ on line 12\n\nWarning: preg_replace(): No ending delimiter '.' found in /tmp/tmp8ysm_m3_.php\
    \ on line 12\n\nWarning: preg_replace(): No ending delimiter '.' found in /tmp/tmp8ysm_m3_.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ysm_m3_.php:24\n\
    Stack trace:\n#0 /tmp/tmp8ysm_m3_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8ysm_m3_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $chars = preg_split('/\\.|\\?|!/', $S);\n    foreach ($chars as $char)\
    \ {\n        if ($char == 'I') {\n            $boredoms++;\n        }\n    }\n\
    \    return $boredoms;\n}\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcdow1509.php:28\n\
    Stack trace:\n#0 /tmp/tmpcdow1509.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpcdow1509.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $words\
    \ = explode(\".\", $S);\n    $boredoms = 0;\n\n    foreach($words as $word) {\n\
    \        if (strpos($word, \"I\") === 0) {\n            $boredoms++;\n       \
    \ }\n    }\n\n    return $boredoms;\n}\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15fz0jxp.php:28\n\
    Stack trace:\n#0 /tmp/tmp15fz0jxp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp15fz0jxp.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $bored=0;\n\
    \  $l=strlen($S);\n  for($i=0; $i<$l; $i++){\n    if($S[$i]=='I' && $S[$i-1]!='.'){\n\
    \      $bored+=1;\n    }\n  }\n  return $bored;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4xpwbulu.php:27\n\
    Stack trace:\n#0 /tmp/tmp4xpwbulu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4xpwbulu.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $I\
    \ = 0;\n  $S1 = preg_replace(\"/([.?!])/i\", \"$1\\n\", $S);\n  preg_match_all('/\\\
    b(I[^.!?]+)/', $S1, $matches, PREG_SET_ORDER);\n  foreach($matches as $m){\n \
    \   $I++;\n  }\n  return $I;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0ot9q61.php:26\n\
    Stack trace:\n#0 /tmp/tmpl0ot9q61.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl0ot9q61.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $boredoms\
    \ = 0; # Initialize counter\n  $words = explode('.',$S); # Split sentence into\
    \ words\n  foreach($words as $word){\n    if(strpos($word,\"I\")!==false){\n \
    \     $boredoms = $boredoms+1;\n    }\n  }\n  return $boredoms;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqcbjutp.php:26\n\
    Stack trace:\n#0 /tmp/tmpuqcbjutp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpuqcbjutp.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $count\
    \ = 0;\n    \n    foreach (explode('.', $S) as $sentence) {\n        foreach (explode('?',\
    \ $sentence) as $question) {\n            foreach (explode('!', $question) as\
    \ $exclamation) {\n                $exclamation = substr($exclamation, 0, 1);\n\
    \                if ($exclamation == \"!\") {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    \n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn9ojpv08.php:33\n\
    Stack trace:\n#0 /tmp/tmpn9ojpv08.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn9ojpv08.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n\t$S\
    \ = preg_replace('/[.?!]/','', $S);\n\treturn substr_count($S, 'I') > 0;\n}\n\
    function candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp162pgd8z.php:19\n\
    Stack trace:\n#0 /tmp/tmp162pgd8z.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp162pgd8z.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $bored\
    \ = 0;\n    $words = explode('.',$S);\n    $bored = array_sum(array_map(\"is_bored\"\
    ,$words));\n    return $bored;\n}\n\n$S = \"I love this weather\";\necho \"The\
    \ bored sentence is $S with $bored($S) boredoms.\";\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "The bored sentence is I love this weather with (I love this weather) boredoms.\n\
    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate\
    \ 262144 bytes) in /tmp/tmp8z27paji.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    //\
    \ Write your logic here\n    $boredoms = 0;\n    $S = explode('.', $S);\n    foreach\
    \ ($S as $key => $value) {\n        if ($value == 'I' && $S[$key+1] == '.'){\n\
    \            $boredoms = $boredoms + 1;\n        }\n    }\n    return $boredoms;\n\
    }\n\nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqwx8wkr_.php:29\n\
    Stack trace:\n#0 /tmp/tmpqwx8wkr_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqwx8wkr_.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $array\
    \ = explode(\".\", $S);\n    foreach ($array as $value) {\n        $bored = 0;\n\
    \        if (substr($value, 0, 1) == \"I\") {\n            $bored++;\n       \
    \ }\n        if (substr($value, 0, 2) == \"He\" || substr($value, 0, 2) == \"\
    She\" || substr($value, 0, 2) == \"It\" || substr($value, 0, 2) == \"Its\" ||\
    \ substr($value, 0, 2) == \"The\" || substr($value, 0, 2) == \"They\") {\n   \
    \         $bored++;\n        }\n        if (substr($value, 0, 3) == \"We\" ||\
    \ substr($value, 0, 3) == \"You\" || substr($value, 0, 3) == \"They\" || substr($value,\
    \ 0, 3) == \"Its\") {\n            $bored++;\n        }\n        if (substr($value,\
    \ 0, 4) == \"I\" && substr($value, 0, 4) == \"I\" && substr($value, 0, 4) == \"\
    I\") {\n            $bored++;\n        }\n        if ($bored > 0) {\n        \
    \    return 1;\n        }\n    }\n    return 0;\n}\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkd3vdui2.php:37\n\
    Stack trace:\n#0 /tmp/tmpkd3vdui2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkd3vdui2.php\
    \ on line 37\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = preg_replace(\"/[^\\.\\?\\!]/\",\"\",$S);\n    $S = explode(\".\",$S);\n \
    \   $boredom=0;\n    foreach ($S as $word) {\n        if (strpos($word,\"I\")\
    \ === 0) {\n            $boredom++;\n        }\n    }\n    return $boredom;\n\
    }\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nCan you explain a little more about\
    \ what exactly you're looking for? I'm not sure I quite understand what you're\
    \ asking.\n<|/ c |>\n<| c |>\nHi Tyler i updated my question can you please check\
    \ it out please.\n<|/ c |>\n<| c |>\nI'm still not sure I understand. Can you\
    \ provide an example of a bored sentence?\n<|/ c |>\n<| c |>\nOk Tyler i have\
    \ updated my question please check.\n<|/ c |>\n<| c |>\nI don't think you really\
    \ understand what a bored sentence is. Do you mean if the sentence begins with\
    \ the word \"I\"?\n<|/ c |>\n<| a tags=arrays,php |>\nTry this\n<code>\n<?php\n\
    \nfunction candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bIt\") !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I feel good\
    \ today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyhdgxytq.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $S\
    \ = strtolower($S);\n    $bored=0;\n    $flag=0;\n    $S = str_replace(\" .?!\"\
    ,\"\",$S);\n    $arr = explode('.',$S);\n    foreach ($arr as $v) {\n        if($v==\"\
    i\"){\n            if($flag==0){\n                $bored++;\n            }\n \
    \           $flag=1;\n        }else{\n            if($flag==1){\n            \
    \    $bored++;\n            }\n        }\n    }\n    return $bored;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfmmtifu5.php:38\n\
    Stack trace:\n#0 /tmp/tmpfmmtifu5.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpfmmtifu5.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms\
    \ = 0;\n    $pos = 0;\n    $len = strlen($S);\n    while ($pos < $len) {\n   \
    \     $pos = strpos($S, \".\", $pos) + 1;\n        if ($pos >= $len) {\n     \
    \       $pos = $len;\n            $boredoms = $boredoms + 1;\n        } else {\n\
    \            $pos = strpos($S, \"?\", $pos) + 1;\n            if ($pos >= $len)\
    \ {\n                $pos = $len;\n                $boredoms = $boredoms + 1;\n\
    \            } else {\n                $pos = strpos($S, \"!\", $pos) + 1;\n \
    \               if ($pos >= $len) {\n                    $pos = $len;\n      \
    \              $boredoms = $boredoms + 1;\n                }\n            }\n\
    \        }\n    }\n    return $boredoms;\n}\nfunction candidate(...$args) {\n\
    \    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $boredoms=0;\n\
    \    $s=strtolower($S);\n    $a=explode(\".\",$s);\n    foreach ($a as $v) if\
    \ ($v==\"i\") $boredoms++;\n    $a=explode(\"?\",$s);\n    foreach ($a as $v)\
    \ if ($v==\"i\") $boredoms++;\n    $a=explode(\"!\",$s);\n    foreach ($a as $v)\
    \ if ($v==\"i\") $boredoms++;\n    return $boredoms;\n}\n\n$S=\"It was a surprise\
    \ when many people saw the sky and the sun. They all felt at first that they were\
    \ the sun, but later they seemed to have no idea what was happening in the sky,\
    \ and they were even more confused. They would say the sun was shining and the\
    \ sky was blue but they could never get to the sky in the first place. They thought\
    \ they were two separate animals but it was the sky who was shining. And now they\
    \ knew that there was a problem with the sky and the sun. It was a problem with\
    \ the sky because even though the sun was shining and the sky was blue, they were\
    \ still two separate animals. They didn't know that they were actually the same\
    \ animal. Someone was asking me how they saw the sky and the sun, and I asked\
    \ them. They said it was really a problem with the sky and the sun.\";\n$s=strtolower($S);\n\
    $a=explode(\".\",$s);\n$boreds=0;\nforeach ($a as $v) if ($v==\"i\") $boreds++;\n\
    $a=explode(\"?\",$s);\nforeach ($a as $v) if ($v==\"i\") $boreds++;\n$a=explode(\"\
    !\",$s);\nforeach ($a as $v) if ($v==\"i\") $boreds++;\necho $boreds;\nfunction\
    \ candidate(...$args) {\n    return is_bored(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Is the sky blue?\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I love It !\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I feel good today. I will be productive.\
    \ will kill It\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    You and I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkte_l51.php:39\n\
    Stack trace:\n#0 /tmp/tmptkte_l51.php(45): test()\n#1 {main}\n  thrown in /tmp/tmptkte_l51.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $bored\
    \ = preg_split(\"/[.?!]\\\\s+/\", $S);\n  $count = count($bored);\n\n  for($i\
    \ = 0; $i < $count - 1; $i++) {\n    if($bored[$i] !== \"I\") return 0;\n  }\n\
    \n  return $count;\n}\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk4l5mjyu.php:25\n\
    Stack trace:\n#0 /tmp/tmpk4l5mjyu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpk4l5mjyu.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n  $wordlist\
    \ = explode('.', $S);\n  foreach ($wordlist as $word) {\n    if ($word == 'I')\
    \ {\n      return 0;\n    }\n  }\n  return 1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_bored(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Is the sky blue?\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"I love It !\") !== 1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"bIt\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"I feel good today. I will be productive. will kill It\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"You and\
    \ I are going for a walk\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnetl1ubp.php:25\n\
    Stack trace:\n#0 /tmp/tmpnetl1ubp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnetl1ubp.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// You'll be given a string of words, and your task is to count\
    \ the number\n// of boredoms. A boredom is a sentence that starts with the word\
    \ \"I\".\n// Sentences are delimited by '.', '?' or '!'.\n// For example:\n//\
    \ >>> is_bored(\"Hello world\")\n// 0\n// >>> is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\")\n// 1\nfunction is_bored($S) {\n    $A\
    \ = explode(\".\", $S);\n    $B = 0;\n    foreach($A as $A){\n        if(preg_match(\"\
    /(I)/\", $A)){\n            $B++;\n        }\n    }\n    return $B;\n}\n</code>\n\
    <|/ a tags=php,arrays,words,count |>\n<| c |>\nI see what you're saying, but I\
    \ still cannot get the counting to work. Can you tell me what I am doing wrong?\
    \ I'm still getting the same output as before.\n<|/ c |>\n<| c |>\nSorry, I wasn't\
    \ clear, I need to count the amount of times a word starts with an 'I', not just\
    \ how many \"I\" are in the string. This code does not do this.\n<|/ c |>\n<|\
    \ c |>\nI guess I misunderstood what you meant by Boredom. What I was looking\
    \ for was an output of 1 if the string starts with \"I\" and 0 if it does not.\n\
    <|/ c |>\n<| c |>\nI added another function which should do what you want.\n<|/\
    \ c |>\n<| c |>\nI keep getting this error: Notice: Undefined variable: S in /Applications/XAMPP/xamppfiles/htdocs/project/test1.php\
    \ on line 18\n<|/ c |>\n<| a |>\nThe error you are getting is because you are\
    \ using $S in you preg_match call in is_bored() function, but $S is undefined.\n\
    There are few ways you can handle it. I think the easiest is to pass $S to is_bored()\
    \ function.\n<code>\nfunction candidate(...$args) {\n    return is_bored(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Is the sky blue?\")\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I love\
    \ It !\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bIt\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I feel good today. I will be productive. will kill It\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"You and I are going for a walk\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpt6wxmswa.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception

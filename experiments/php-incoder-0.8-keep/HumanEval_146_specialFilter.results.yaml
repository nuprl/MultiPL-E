name: HumanEval_146_specialFilter
language: php
results:
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = count($nums);\n\
    \    $result = -1;\n    for($i = 0; $i < $count; $i++){\n        if ($nums[$i]\
    \ > 10){\n            continue;\n        }\n        if( ( $nums[$i] & 1 ) !==\
    \ 0 && ( $nums[$i] & 1 ) !== ($nums[$i-1] & 1) ){\n            $result++;\n  \
    \      }\n    }\n    return $result;\n}\n\n$result = specialFilter([15, -73, 14,\
    \ -15]);\necho \"Count of odd numbers in a list is $result\\n\";\necho \"Number\
    \ of odd numbers in [15, -73, 14, -15] is \" . specialFilter($nums) . \"\\n\"\
    ;\n\n$result = specialFilter([33, -2, -3, 45, 21, 109]);\necho \"Count of odd\
    \ numbers in a list is $result\\n\";\necho \"Number of odd numbers in [33, -2,\
    \ -3, 45, 21, 109] is \" . specialFilter($nums) . \"\\n\";\n</code>\n<|/ a tags=php,arrays\
    \ dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php \n\n$lista = [2, -5, 6, 0, 9, -9];\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp59z6ytub.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    foreach ($nums\
    \ as $number) {\n        if ($number > 10) {\n            $odd_first = ($number\
    \ % 10 == 1);\n            $odd_last  = ($number % 10 == 9);\n            if ($odd_first\
    \ == true && $odd_last == true) {\n                $count++;\n            }\n\
    \        }\n    }\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvj21ph8q.php:25\n\
    Stack trace:\n#0 /tmp/tmpvj21ph8q.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvj21ph8q.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\tforeach($nums\
    \ as $num) {\n\t\tif((is_numeric($num)) && ($num > 10) && ($num % 2 != 0) && ($num\
    \ % 10 == 1)) {\n\t\t\t$total++;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfc58xwpv.php:21\n\
    Stack trace:\n#0 /tmp/tmpfc58xwpv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfc58xwpv.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ 'is_odd')) + count(array_filter($nums, 'is_even_odd'));\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'is_odd' not found or invalid function name in /tmp/tmprdwuvy7f.php on line\
    \ 9\n\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmprdwuvy7f.php on line 9\n\nWarning: array_filter() expects\
    \ parameter 2 to be a valid callback, function 'is_even_odd' not found or invalid\
    \ function name in /tmp/tmprdwuvy7f.php on line 9\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmprdwuvy7f.php\
    \ on line 9\n\nWarning: array_filter() expects parameter 2 to be a valid callback,\
    \ function 'is_odd' not found or invalid function name in /tmp/tmprdwuvy7f.php\
    \ on line 9\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmprdwuvy7f.php on line 9\n\nWarning: array_filter()\
    \ expects parameter 2 to be a valid callback, function 'is_even_odd' not found\
    \ or invalid function name in /tmp/tmprdwuvy7f.php on line 9\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmprdwuvy7f.php\
    \ on line 9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprdwuvy7f.php:18\n\
    Stack trace:\n#0 /tmp/tmprdwuvy7f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprdwuvy7f.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Solution\
    \ 1 \n    $nums = array_filter($nums, function($v) { return $v > 10; });\n   \
    \ $nums = array_filter($nums, function($v) { return $v % 2 === 1; }); \n    $nums\
    \ = array_filter($nums, function($v) { return $v % 2 === 0; });\n    \n    //\
    \ Solution 2\n    foreach($nums as &$v) {\n        if ($v > 10) {\n          \
    \  $v = false;\n        }\n        if ($v % 2 === 1) {\n            $v = false;\n\
    \        }\n        if ($v % 2 === 0) {\n            $v = false;\n        }\n\
    \    }\n    unset($v);\n}\nspecialFilter([33, -22, -3, 45, 21, 109]);\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtzterce.php:34\n\
    Stack trace:\n#0 /tmp/tmpxtzterce.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxtzterce.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  return specialArrayFilter($nums,\
    \ function($num){\n    return ($num > 10 && $num % 2 === 0);\n  });\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function specialArrayFilter()\
    \ in /tmp/tmp249uihsf.php:9\nStack trace:\n#0 /tmp/tmp249uihsf.php(15): specialFilter(Array)\n\
    #1 /tmp/tmp249uihsf.php(19): candidate(Array)\n#2 /tmp/tmp249uihsf.php(28): test()\n\
    #3 {main}\n  thrown in /tmp/tmp249uihsf.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return array_sum(array_filter(\n\
    \        $nums, \n        function ($num) {\n            return ($num > 10) &&\
    \ ($num % 2 === 1);\n        }\n    ));\n}\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a |>\nHere is an example of a function that does what you need:\n<code>\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpt919us5g.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $numbers =\
    \ array_map(\"intval\", $nums);\n    return count(array_filter($numbers, function($num)\
    \ use ($numbers) {\n        return $num > 10 && $num % 2 === 0 && $nums[$num-1]\
    \ % 2 === 0;\n    }));\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2gg0h8vy.php:22\n\
    Stack trace:\n#0 /tmp/tmp2gg0h8vy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2gg0h8vy.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  // Write your\
    \ code here\n  $count=0;\n  foreach ($nums as $num){\n    if ($num > 10){\n  \
    \    if ($num % 2 != 0 && $num % 2 != 1){\n        $count++;\n      }\n    }\n\
    \  }\n  echo $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp1x1n_0i.php:26\n\
    Stack trace:\n#0 /tmp/tmpp1x1n_0i.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp1x1n_0i.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Your code\
    \ here\n    $count = 1;\n    for($i = 0; $i < count($nums); $i++) {\n        if($nums[$i]\
    \ >= 10 && $nums[$i] % 2 != 0 && $nums[$i] % 3 != 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkic1_kdt.php:24\n\
    Stack trace:\n#0 /tmp/tmpkic1_kdt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkic1_kdt.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // code here\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxmd1zvvd.php:17\n\
    Stack trace:\n#0 /tmp/tmpxmd1zvvd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxmd1zvvd.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\
    \ \n    foreach ($nums as $num) {\n        if($num > 10 && ($num % 2) == 1) {\n\
    \            $count++; \n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1avn2dju.php:25\n\
    Stack trace:\n#0 /tmp/tmp1avn2dju.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1avn2dju.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  array_walk($nums,\
    \ 'specialFilter');\n  return count($nums);\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: array_walk() expects parameter 1 to be array, int given in /tmp/tmptoc2fdrk.php\
    \ on line 9\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmptoc2fdrk.php on line 10\n\nWarning: array_walk()\
    \ expects parameter 1 to be array, int given in /tmp/tmptoc2fdrk.php on line 9\n\
    \nWarning: count(): Parameter must be an array or an object that implements Countable\
    \ in /tmp/tmptoc2fdrk.php on line 10\n\nWarning: array_walk() expects parameter\
    \ 1 to be array, int given in /tmp/tmptoc2fdrk.php on line 9\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmptoc2fdrk.php\
    \ on line 10\n\nWarning: array_walk() expects parameter 1 to be array, int given\
    \ in /tmp/tmptoc2fdrk.php on line 9\n\nWarning: count(): Parameter must be an\
    \ array or an object that implements Countable in /tmp/tmptoc2fdrk.php on line\
    \ 10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptoc2fdrk.php:18\n\
    Stack trace:\n#0 /tmp/tmptoc2fdrk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptoc2fdrk.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $odds = array_filter($nums,\
    \ function($num) {\n    if ($num % 2 === 0) {\n      return $num % 2 === 1;\n\
    \    }\n    return false;\n  });\n  return count($odds) + count(array_filter($nums,\
    \ function($num) {\n    return $num < 0;\n  }));\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpga9rlk2f.php:25\n\
    Stack trace:\n#0 /tmp/tmpga9rlk2f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpga9rlk2f.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  // Write your code\n  foreach ($nums as $num) {\n    if ($num > 10 && $num\
    \ % 2 == 0 && $num % 2 == 1) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n\n$numbers = [-4, -3, 0, 1, 3, 10, 2, 9, -4, -6];\n$result = specialFilter($numbers);\n\
    echo \"Number of even numbers that are odd in the array are: $result\";\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Number of even numbers that are odd in the array are: 0\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpzm_xp18_.php:28\nStack trace:\n#0 /tmp/tmpzm_xp18_.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzm_xp18_.php on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    \n    // Write\
    \ your code here\n    $result = 0;\n    $length  = count($nums);\n    for($i =\
    \ 0; $i < $length; $i++) {\n        if ($nums[$i] > 10 && $nums[$i] % 2 != 0 &&\
    \ $nums[$i-1] % 2 == 1 && $nums[$i+1] % 2 == 1) {\n            $result++;\n  \
    \      }\n    }\n    \n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ahxsqca.php:27\n\
    Stack trace:\n#0 /tmp/tmp3ahxsqca.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3ahxsqca.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  foreach($nums\
    \ as $num){\n    if ($num > 10 and $num % 2 != 0){\n      if ($num % 2 == 1){\n\
    \        $nums[$num]++;\n      }\n    }\n  }\n  $count = count($nums);\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptt6yb_vz.php:25\n\
    Stack trace:\n#0 /tmp/tmptt6yb_vz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptt6yb_vz.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  $firstOdd = $lastOdd = -1;\n  $checkOdd = function($number) {\n    if ($number\
    \ % 2 === 1) {\n      return $number;\n    }\n    return -1;\n  };\n  foreach\
    \ ($nums as $number) {\n    if ($checkOdd($number) > 0 && $number > 10) {\n  \
    \    $firstOdd = $checkOdd($number);\n    }\n    if ($checkOdd($number) > 0 &&\
    \ $number > 10 && $firstOdd === $checkOdd($number)) {\n      $lastOdd = $checkOdd($number);\n\
    \    }\n    $count++;\n  }\n  return $count;\n}\n\n$numbers = array('10', '2',\
    \ '12', '32', '42', '14', '4');\n$result = specialFilter($numbers);\n\necho \"\
    The numbers are $result\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "The numbers are 7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gctba27.php:38\n\
    Stack trace:\n#0 /tmp/tmp_gctba27.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp_gctba27.php\
    \ on line 38\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $countArr =\
    \ [];\n    foreach ($nums as $key => $value) {\n        $countArr[$key] = count(array_filter($nums,\
    \ function ($x) use ($value) {\n            return $x > $value && ($x % 2 ===\
    \ 1 || ($x % 10 === 1 && $x % 100 != 11));\n        }));\n    }\n    return $countArr;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp69m8bouo.php:23\n\
    Stack trace:\n#0 /tmp/tmp69m8bouo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp69m8bouo.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach($nums as $num) {\n        if ($num > 10 && $num % 2 == 0 && $num\
    \ % 2 != 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mfngepr.php:25\n\
    Stack trace:\n#0 /tmp/tmp8mfngepr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8mfngepr.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    foreach($nums\
    \ as $num) {\n        if ($num > 10 && (($num % 2) == 1 && (($num % 10) == 1 ||\
    \ ($num % 10) == 9))) {\n            return 1;\n        } elseif ($num > 10 &&\
    \ (($num % 2) == 1 && (($num % 10) != 1 || ($num % 10) != 9))) {\n           \
    \ return 2;\n        } elseif ($num > 10 && (($num % 2) == 0 && (($num % 10) ==\
    \ 1 || ($num % 10) == 9))) {\n            return 3;\n        } elseif ($num >\
    \ 10 && (($num % 2) == 0 && (($num % 10) != 1 || ($num % 10) != 9))) {\n     \
    \       return 4;\n        } elseif ($num > 10 && (($num % 2) == 1 && (($num %\
    \ 10) == 1 || ($num % 10) == 9))) {\n            return 5;\n        } elseif ($num\
    \ > 10 && (($num % 2) == 1 && (($num % 10) != 1 || ($num % 10) != 9))) {\n   \
    \         return 6;\n        } elseif ($num > 10 && (($num % 2) == 0 && (($num\
    \ % 10) == 1 || ($num % 10) == 9))) {\n            return 7;\n        } elseif\
    \ ($num > 10 && (($num % 2) == 0 && (($num % 10) != 1 || ($num % 10) != 9))) {\n\
    \            return 8;\n        } elseif ($num > 10 && (($num % 2) == 1 && (($num\
    \ % 10) == 1 || ($num % 10) == 9))) {\n            return 9;\n        } elseif\
    \ ($num > 10 && (($num % 2) == 1 && (($num % 10) != 1 || ($num % 10) != 9))) {\n\
    \            return 0;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm73yp2fl.php:39\n\
    Stack trace:\n#0 /tmp/tmpm73yp2fl.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpm73yp2fl.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // code here\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqwrnhv52.php:17\n\
    Stack trace:\n#0 /tmp/tmpqwrnhv52.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqwrnhv52.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $numCount =\
    \ count($nums);\n    $oddSum = 0;\n    $oddOdd = 0;\n    $evenSum = 0;\n    $evenEven\
    \ = 0;\n    \n    // Write your PHP code here. \n    // Iterate through the numbers\
    \ array and calculate the odd sum and \n    // even sum of the number. \n    \n\
    \    \n    \n    // Return the number of elements greater than 10 and both \n\
    \    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n    return\
    \ $oddSum + $oddEven + $evenSum + $evenEven;\n}\n\necho specialFilter([-15, 7,\
    \ -14, -33, 9, -7, -15, -7, 3, 11, -7, -15]);\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcflsl5yp.php:33\n\
    Stack trace:\n#0 /tmp/tmpcflsl5yp.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcflsl5yp.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count($nums)\
    \ - ( \n        (array_sum(array_map(\"odd\", $nums)) % 2)\n        ? ((array_sum(array_map(\"\
    odd\", array_reverse($nums))) % 2))\n        : 0\n    );\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThe `array_sum` is unnecessary, you can just `count($nums) - ...`.\
    \ Also, `array_filter` will return the same number of elements as `array_filter`\
    \ if the callback doesn't return anything. The `array_map` calls can be replaced\
    \ with `array_filter($nums, 'odd')`. Also, why not `return count($nums) - ...`?\n\
    <|/ c |>\n<| c |>\nThanks Phil for all the suggestions. I've updated my answer\
    \ based on your suggestions.\n<|/ c |>\n<| a |>\nYou want to filter out numbers\
    \ that don't have 2 or more odd digits, so:\n<code>\n$oddDigitCount = array_filter($numbers,\
    \ function($number) { return $number{0} & 1 })\n</code>\n<|/ a dscore=0 tags=php,array-filter\
    \ |>\n<| c |>\nYou have to check all digits for odd or no? That doesn't seem to\
    \ work.\n<|/ c |>\n<| c |>\n: Yes, I misread your requirements. I thought you\
    \ wanted odd *or* no.\n<|/ c |>\n<| a |>\nThis should do it\n<code>\n$nums = array(\n\
    \    array(1, 5, 7, 11, 13),\n    array(6, 7, 8, 13, 14),\n    array(13, 14, 17,\
    \ 18, 19),\n    array(17, 17, 18, 19, 20),\n);\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpes7pm0z6.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $total = 0;\n\
    \    foreach ($nums as $num) {\n        $total += $num;\n    }\n    return $total;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd2pdc6qk.php:21\n\
    Stack trace:\n#0 /tmp/tmpd2pdc6qk.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd2pdc6qk.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  return array_filter($nums,\
    \ function($v){\n    return ($v > 10) && (($v % 2 == 1) && (($v & 1) == 1));\n\
    \  });\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkjsm8m9.php:18\n\
    Stack trace:\n#0 /tmp/tmpxkjsm8m9.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxkjsm8m9.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Your code\
    \ goes here\n    $result = 0;\n    foreach($nums as $num) {\n        if ($num\
    \ > 10) {\n            if ($num % 2 == 0) {\n                $result++;\n    \
    \        }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl_9vffwz.php:27\n\
    Stack trace:\n#0 /tmp/tmpl_9vffwz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl_9vffwz.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$isOdd = $num % 2 === 1;\n\t\t$isFirstOdd = $num\
    \ >= 10 && $num < 100;\n\t\t$isLastOdd = $num >= 10 && $num < 100;\n\t\tif ($isOdd\
    \ && $isFirstOdd && $isLastOdd) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0l9u3pz4.php:27\n\
    Stack trace:\n#0 /tmp/tmp0l9u3pz4.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0l9u3pz4.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count($nums);\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxufpsj0.php:17\n\
    Stack trace:\n#0 /tmp/tmplxufpsj0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplxufpsj0.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    if (!is_array($nums))\
    \ {\n        return 0;\n    }\n    $res = 0;\n    foreach ($nums as $num) {\n\
    \        if (is_int($num)) {\n            $res += $num > 10;\n            if ($num\
    \ % 2) {\n                $res += $num % 2 != 0;\n            }\n            $res\
    \ += ($num % 10 == 1 && $num % 100 != 11) ? 1 : 0;\n        }\n    }\n    return\
    \ $res;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ddw5ui9.php:29\n\
    Stack trace:\n#0 /tmp/tmp7ddw5ui9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7ddw5ui9.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach($nums as $num) {\n        if ($num > 10 && $num % 2 == 1 && $num\
    \ % 3 == 1 && $num % 5 == 1) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfqlpvgid.php:24\n\
    Stack trace:\n#0 /tmp/tmpfqlpvgid.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpfqlpvgid.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $num_length\
    \ = count($nums);\n    $odd_count = 0;\n    $even_count = 0;\n    for ($i=0; $i<$num_length;\
    \ $i++) {\n        if ($nums[$i] > 10 && $nums[$i] % 2 === 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n\n    return $odd_count\
    \ + $even_count;\n}\n</code>\n<|/ a |>\n<| c |>\nYes this works great! But is\
    \ it possible to make it so it only counts up to the first 10, like in your example\
    \ where it stops at 10 but only counts up to the first 10?\n<|/ c |>\n<| c |>\n\
    Yes it is! Simply change `< 10` to `< 10 && $i < 10` in the for-loop.\n<|/ c |>\n\
    <| c |>\nBut that would not work if it stops at 10 but counts up to the first\
    \ 10\n<|/ c |>\n<| c |>\nWhat exactly do you mean by that? Do you want the array\
    \ to count up to the first 10 instead of counting down?\n<|/ c |>\n<| c |>\nI\
    \ do not want it to count up to the first 10, I want to count up to 10 and stop\
    \ counting down at 10. Your code does count up to 10, but does count down. So\
    \ if my array is: [15, -73, 14, -15] I want it to count up to 10 and stop at 10,\
    \ which it does in the code I posted. It does count up to 10 and stop at 7, but\
    \ I want it to count up to 10 and stop at 10.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    $input = [15, -73, 14, -15];\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpltcj2oo8.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Only change\
    \ code below this line\n    $lengthOfArray = sizeof($nums);\n    for($i=0; $i\
    \ < $lengthOfArray; $i++)\n    {\n        if($nums[$i] > 10 && is_odd($nums[$i])\
    \ && is_odd($nums[$i-1]) && is_odd($nums[$i-2])) \n        {\n            return\
    \ $i;\n        }\n    }\n    return 0;\n}\n\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_odd() in /tmp/tmpoorgeq14.php:13\n\
    Stack trace:\n#0 /tmp/tmpoorgeq14.php(22): specialFilter(Array)\n#1 /tmp/tmpoorgeq14.php(27):\
    \ candidate(Array)\n#2 /tmp/tmpoorgeq14.php(35): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpoorgeq14.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // We will\
    \ use isset() to check the array exists and then \n    // length() to count the\
    \ number of elements in the array.\n    if (isset($nums) && count($nums) > 0)\
    \ {\n        // We will use isset() to check the array exists and then \n    \
    \    // length() to count the number of elements in the array.\n        if (isset($nums[0])\
    \ && count($nums[0]) > 0) {\n            // We will use isset() to check the first\
    \ element in the array exists and\n            // then to check that the element\
    \ is a number.\n            if (isset($nums[0][0]) && is_numeric($nums[0][0]))\
    \ {\n                // We will use isset() to check the last element in the array\
    \ exists and\n                // then to check that the element is a number.\n\
    \                if (isset($nums[count($nums) - 1][0]) && is_numeric($nums[count($nums)\
    \ - 1][0])) {\n                    // We will use array_walk() to run a callback\
    \ function on each \n                    // element in the array. The callback\
    \ function will check if \n                    // the first and last digits are\
    \ odd.\n                    array_walk($nums, function(&$value) {\n          \
    \              $value += 0;\n                        if ($value % 2 === 1) {\n\
    \                            if ($value % 10 === 1) {\n                      \
    \          if ($value % 100 === 0) {\n                                    if ($value\
    \ % 1000 === 0) {\n                                        if ($value % 10000\
    \ === 0) {\n                                            if ($value % 100000 ===\
    \ 0) {\n                                                return $value;\n     \
    \                                       }\n                                  \
    \      }\n                                    }\n                            \
    \    }\n                            }\n                        }\n           \
    \         });\n                    return count($nums);\n                }\n \
    \           }\n        }\n    }\n    return 0;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpx1kejs81.php on line 14\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpx1kejs81.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1kejs81.php:53\n\
    Stack trace:\n#0 /tmp/tmpx1kejs81.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpx1kejs81.php\
    \ on line 53\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  return specialFilterCount($nums,\
    \ 10, 1, true);\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function specialFilterCount()\
    \ in /tmp/tmpupu5gl49.php:9\nStack trace:\n#0 /tmp/tmpupu5gl49.php(13): specialFilter(Array)\n\
    #1 /tmp/tmpupu5gl49.php(17): candidate(Array)\n#2 /tmp/tmpupu5gl49.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpupu5gl49.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  $odd = false;\n  foreach($nums as $num) {\n    $odd = !$odd;\n    if($num >\
    \ 10) {\n      $count++;\n      if($odd && $num % 2 != 0) {\n        $count++;\n\
    \      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7j44c4k.php:29\n\
    Stack trace:\n#0 /tmp/tmpl7j44c4k.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpl7j44c4k.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count($nums)>10\
    \ && is_array($nums) && \n        $nums[0]%2==1 && $nums[count($nums)-1]%2==1\
    \ \n        && specialFilter(array_slice($nums, 1, count($nums)-1))\n}\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfyw4nnc1.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count1 = array_filter($nums,\
    \ function($num) {\n\t\t$firstDigit = intval($num / 10);\n\t\treturn $num > 10\
    \ && ($firstDigit % 2 === 1);\n\t});\n\treturn count($nums) - count($count1);\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhegp4sr.php:20\n\
    Stack trace:\n#0 /tmp/tmpbhegp4sr.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbhegp4sr.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    foreach ($nums\
    \ as $key => $num) {\n        $nums[$key] = ($num < 10) ? $num : $num - 10;\n\
    \        $nums[$key] = ($num % 2 == 1) ? $nums[$key] + 1 : $nums[$key];\n    \
    \    $nums[$key] = ($nums[$key] > 10 && $nums[$key] % 2 == 1) ? $nums[$key] +\
    \ 1 : $nums[$key];\n    }\n    return count($nums); \n}\n</code>\n<|/ a tags=arrays,php\
    \ dscore=0 |>\n<| c |>\nI realize this is a very old thread but thank you for\
    \ the response. I don't see how this solves the problem. The code you provided\
    \ is still giving me 4 as a result, it seems to just be filtering the even numbers\
    \ which is strange.\n<|/ c |>\n<| c |>\nI've added some code which does exactly\
    \ what you want.\n<|/ c |>\n<| c |>\nI appreciate the help, this worked perfectly.\
    \ Thank you.\n<|/ c |>\n<| c |>\nI'm glad it helped. Please consider accepting\
    \ the answer if it was helpful.\n<|/ c |>\n<| c |>\nSorry I'm very new to this\
    \ site and to stackoverflow, I will make sure to accept the answer when I am able\
    \ to. Thank you again!\n<|/ c |>\n<| a tags=arrays,php |>\nHere is a solution\
    \ for you:\n<code>\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpub0ai8ua.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // TODO: Write\
    \ code here.\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplasg39fq.php:18\n\
    Stack trace:\n#0 /tmp/tmplasg39fq.php(27): test()\n#1 {main}\n  thrown in /tmp/tmplasg39fq.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ function($num) {\n        return $num >= 10 && $num % 2 == 1 && $num % 2 ==\
    \ 1;\n    }));\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    \n$arr =  array(1,2,3,4,5,6);\n\n$newArr = array_filter($arr,function($x){\n \
    \ return $x>1 && $x%2==1;\n});\n\necho \"<pre>\";print_r($newArr);\n</code>\n\
    <|/ a tags=filtering,arrays,php |>\n<| c |>\nWhile this code may answer the question,\
    \ it would be better to explain how it works and why it does so.\n<|/ c |>\n<|\
    \ a tags=filtering,arrays,php dscore=0 |>\nI came up with this:\n<code>\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpf7uei6vq.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $nums2 = array_map(function\
    \ ($x) { return intval($x); }, $nums);\n    $a = array_filter($nums2);\n    return\
    \ count($a);\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmg_snjrg.php:18\n\
    Stack trace:\n#0 /tmp/tmpmg_snjrg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmg_snjrg.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n   $count = 0;\n\
    \   foreach ($nums as $num) {\n      if ($num > 10 && $num % 2 === 0 && $num %\
    \ 2 === 1 && $num % 2 === 3 && $num % 2 === 5)\n         $count++;\n   }\n   return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6p_9qsqe.php:23\n\
    Stack trace:\n#0 /tmp/tmp6p_9qsqe.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6p_9qsqe.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \n    foreach ($nums as $num) {\n        $isOdd = $num % 2;\n\n        if ($isOdd\
    \ == 1) {\n            $first = $num / 2;\n            if ($first % 2 == 1) {\n\
    \                $num = $num / 2;\n            }\n\n            $second = $num\
    \ / 2;\n            if ($second % 2 == 1) {\n                $num = $num / 2;\n\
    \            }\n        }\n\n        if ($isOdd && $first % 2 != 1 && $second\
    \ % 2 != 1) {\n            $result++;\n        }\n    }\n\n    return $result;\n\
    }\n\necho \"There are $specialFilter([15, -73, 14, -15]) numbers<br>\";\necho\
    \ \"There are $specialFilter([33, -2, -3, 45, 21, 109]) numbers<br>\";\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "There are ([15, -73, 14, -15]) numbers<br>There are ([33, -2, -3, 45, 21,\
    \ 109]) numbers<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18bldjjm.php:41\n\
    Stack trace:\n#0 /tmp/tmp18bldjjm.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp18bldjjm.php\
    \ on line 41\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Code goes\
    \ here\n    $size = count($nums);\n    $odds = 0;\n    $evens = 0;\n    for($i=0;$i<$size;$i++)\
    \ {\n        if($nums[$i]%2==0){\n            $evens++;\n        }\n        if($nums[$i]%2!=0){\n\
    \            $odds++;\n        }\n    }\n    if($evens>$odds) {\n        return\
    \ $evens;\n    } else {\n        return $odds;\n    }\n}\n$result = specialFilter([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10]);\necho \"$result\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfksxqjh6.php:34\n\
    Stack trace:\n#0 /tmp/tmpfksxqjh6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfksxqjh6.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    foreach ($nums\
    \ as $num) {\n        if ($num > 10 && $num % 2 == 1 && $num % 2 == 1) {\n   \
    \         return 1;\n        }\n    }\n}\n</code>\nNow we can use it like so:\n\
    <code>\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzxyb9snn.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\
    \ // initialize return variable\n    foreach ($nums as $num) {\n        if ($num\
    \ > 10) { // if the number is greater than 10\n            if ($num % 2 == 1)\
    \ { // and if the first and last digits are odd\n                $count++; //\
    \ increase the count by 1\n            }\n        }\n    }\n    return $count;\n\
    }\n</code>\nIf you wanted to use array_filter instead, you could do:\n<code>\n\
    $count = array_filter($nums, function($num) {\n    return $num > 10 && $num %\
    \ 2 == 1;\n}, ARRAY_FILTER_USE_BOTH);\n</code>\nHowever, that would only count\
    \ odd numbers that are greater than 10. If you wanted to include even numbers\
    \ that were greater than 10 but the first and last digits were odd, you would\
    \ just do:\n<code>\n$count = array_filter($nums, function($num) {\n    return\
    \ $num > 10 && $num % 2 == 1 && $num % 10 == 1;\n}, ARRAY_FILTER_USE_BOTH);\n\
    </code>\nIf you want to include numbers with odd first digits, even last digits,\
    \ and even middle digits, you could do:\n<code>\n$count = array_filter($nums,\
    \ function($num) {\n    return $num > 10 && $num % 2 == 1 && $num % 10 == 2 &&\
    \ $num % 100 == 0;\n}, ARRAY_FILTER_USE_BOTH);\n</code>\nIf you want to include\
    \ even numbers that aren't greater than 10, but that have even last digits, then\
    \ you could do:\n<code>\n$count = array_filter($nums, function($num) {\n    return\
    \ $num % 2 == 0 && $num % 10 == 0;\n}, ARRAY_FILTER_USE_BOTH);\n</code>\nIf you\
    \ want to include even numbers that aren't greater than 10, but that have even\
    \ last digits, even middle digits, then you could do:\n<code>\n$count = array_filter($nums,\
    \ function($num) {\n    return $num % 2 == 0 && $num % 10 == 2 && $num % 100 ==\
    \ 0;\n}, ARRAY_FILTER_USE_BOTH);\n</code>\nIf you want to include even numbers\
    \ that aren't greater than 10, but that have even last digits, odd middle digits,\
    \ then you could do:\n<code>\n$count = array_filter($nums, function($num) {\n\
    \    return $num % 2 == 0 && $num % 10 == 2 && $num % 100 == 1;\n}, ARRAY_FILTER_USE_BOTH);\n\
    </code>\nIf you want to include even numbers that aren't greater than 10, but\
    \ that have even last digits, even middle digits, and odd first digits, then you\
    \ could do:\n<code>\n$count = array_filter($nums, function($num) {\n    return\
    \ $num % 2 == 0 && $num % 10 == 2 && $num % 100 == 1 && $num % 10 == 0;\n}, ARRAY\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpmox0vrmc.php on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Your code\
    \ here\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptto5sjhi.php:18\n\
    Stack trace:\n#0 /tmp/tmptto5sjhi.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptto5sjhi.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Your code\
    \ here\n    $nums = array_reverse($nums);\n    foreach ($nums as $k => $v) {\n\
    \        if ($v >= 10) {\n            if ($v % 2 == 1) {\n                $nums[$k]\
    \ = 0;\n            }\n        } else {\n            if ($v % 2 == 0) {\n    \
    \            $nums[$k] = 0;\n            }\n        }\n    }\n    return array_filter($nums,\
    \ null, function($num) {\n        return ($num % 2 == 1) && ($num % 2 == 0);\n\
    \    });\n}\n\n$result = specialFilter($nums);\n$result = array_unique($result);\n\
    echo '<pre>';\nprint_r($result);\necho '</pre>';\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThank you but this still does not seem to work properly. Some of\
    \ my values are returning as a number instead of string. Any ideas?\n<|/ c |>\n\
    <| c |>\nWhat is your expected output?\n<|/ c |>\n<| c |>\nI want the array to\
    \ return only values that are both odd and both first and last digits of the number\
    \ are odd.\n<|/ c |>\n<| a dscore=0 tags=php,arrays |>\n<code>\n<?php\n$nums =\
    \ [15, -73, 14, -15, 33, -2, -3, 45, 21, 109];\n$filteredArray = [];\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp1p7cy7gh.php on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  if (count($nums)\
    \ === 0) {\n    return 0;\n  }\n  $count = 0;\n  foreach ($nums as $number) {\n\
    \    if ($number > 10 && $number % 2 == 1) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4523l2e0.php:28\n\
    Stack trace:\n#0 /tmp/tmp4523l2e0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4523l2e0.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\tglobal $specialFilter;\n\
    \treturn $specialFilter($nums, $nums);\n}\n\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Function name must be a string in /tmp/tmphgohaspo.php:10\n\
    Stack trace:\n#0 /tmp/tmphgohaspo.php(14): specialFilter(Array)\n#1 /tmp/tmphgohaspo.php(18):\
    \ candidate(Array)\n#2 /tmp/tmphgohaspo.php(27): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmphgohaspo.php on line 10\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    for($i=0; $i<count($nums);\
    \ $i++) { \n        if ($nums[$i] > 10 && $nums[$i] % 2 === 1 && $nums[$i-1] %\
    \ 2 === 1) { \n            return $i; \n        }\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4_4bnju.php:21\n\
    Stack trace:\n#0 /tmp/tmpp4_4bnju.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpp4_4bnju.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $total = 0;\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        $first = $nums[$i];\n  \
    \      $last  = $nums[$i];\n\n        if ($first > 10) {\n            if ($last\
    \ % 2 !== 0) {\n                $total++;\n            }\n        }\n\n      \
    \  if ($last > 10) {\n            if ($first % 2 !== 0) {\n                $total++;\n\
    \            }\n        }\n    }\n    return $total;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tmo2n3o.php:35\n\
    Stack trace:\n#0 /tmp/tmp4tmo2n3o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4tmo2n3o.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return $nums[array_search($nums[0],\
    \ array_reverse($nums))] - $nums[0];\n}\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe8yzqk5o.php:16\n\
    Stack trace:\n#0 /tmp/tmpe8yzqk5o.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpe8yzqk5o.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            if ($num\
    \ % 2 == 0 && $num % 10 == 1) {\n                $result++;\n            }\n \
    \       }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n   \
    \ return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0tn_b49.php:25\n\
    Stack trace:\n#0 /tmp/tmps0tn_b49.php(33): test()\n#1 {main}\n  thrown in /tmp/tmps0tn_b49.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $filtered = 0;\n\
    \  foreach($nums as $num) {\n    if ($num >= 10 && $num % 2 === 1 && $num % 10\
    \ === 1) {\n      $filtered++;\n    }\n  }\n  return $filtered;\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjwgfah_.php:24\n\
    Stack trace:\n#0 /tmp/tmpyjwgfah_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpyjwgfah_.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    array_walk($nums,\
    \ function(&$num) { \n        $num *= -1; \n    });\n    return count(array_filter($nums,\
    \ function($num) { \n        return $num >= 10 && $num % 2 === 1; \n    }));\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqge4ewyt.php:23\n\
    Stack trace:\n#0 /tmp/tmpqge4ewyt.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqge4ewyt.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    if (empty($nums))\
    \ {\n        return 0;\n    }\n\n    $count = 0;\n    foreach ($nums as $num)\
    \ {\n        if (($num > 10 && $num % 2 == 0) || ($num > 10 && $num % 2 != 0)\
    \ && $num % 1 != 0) {\n            $count++;\n        }\n    }\n\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg12g49bw.php:30\n\
    Stack trace:\n#0 /tmp/tmpg12g49bw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg12g49bw.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    foreach ($nums\
    \ as $num) {\n        if ((($num % 2 == 1) && ($num % 10 % 2 == 1)) || (($num\
    \ % 2 != 0) && ($num % 10 % 2 != 0))) {\n            // return only odd numbers\n\
    \            return $num;\n        }\n    }\n}\n\n$nums = array(15, -73, 14, -15);\n\
    echo \"Number of odd numbers greater than 10 and first and last digits of even\
    \ numbers are odd: \" . specialFilter($nums) . \"\\n\";\n\n$nums = array(33, -2,\
    \ -3, 45, 21, 109);\necho \"Number of odd numbers greater than 10 and first and\
    \ last digits of even numbers are odd: \" . specialFilter($nums) . \"\\n\";\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Number of odd numbers greater than 10 and first and last digits of even\
    \ numbers are odd: 15\nNumber of odd numbers greater than 10 and first and last\
    \ digits of even numbers are odd: 33\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpdpvmjnjb.php:27\nStack trace:\n#0 /tmp/tmpdpvmjnjb.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdpvmjnjb.php on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  foreach ($nums\
    \ as $n) {\n    if ($n > 10 && $n % 2 == 1 && $n % 2 == 0) {\n      return count($nums);\n\
    \    }\n  }\n}\n</code>\n<|/ a tags=php |>\n<| a tags=php |>\nMy Solution\n<code>\n\
    <?php\n\n$nums = [1,2,3,4,5,6,7,8,9,10];\n$num = special_filter($nums);\necho\
    \ $num;\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqi6zceev.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  if (empty($nums))\
    \ return 0;\n  $odd_count  = 0;\n  $even_count = 0;\n  foreach ($nums as $num)\
    \ {\n    if (is_int($num)) $num = (int) $num;\n    if ($num > 10 && $num % 2 !=\
    \ 0) {\n      $even_count++;\n    } else {\n      $odd_count++;\n    }\n  }\n\
    \  return ($even_count > $odd_count) ? $even_count : $odd_count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihvh03pp.php:28\n\
    Stack trace:\n#0 /tmp/tmpihvh03pp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpihvh03pp.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    for($i=0;$i<count($nums);$i++)\
    \ {\n        if ($nums[$i] > 10) {\n            $n=$i;\n            break;\n \
    \       }\n    }\n    $odds=0;\n    $even=0;\n    for($j=0;$j<count($nums);$j++)\
    \ {\n        if ($j==$n || $nums[$j] % 2 != 0) {\n            $even++;\n     \
    \   } else {\n            $odds++;\n        }\n    }\n    return $odds+$even;\n\
    }\n</code>\n<|/ a |>\n<| a dscore=0 |>\nHere's a short and simple solution:\n\
    <code>\n$result = array_filter($array, function($item){\n    return !is_numeric($item);\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n`is_numeric` will prevent from\
    \ checking for empty values. `is_int` will do nothing at all. Both will return\
    \ an empty array\n<|/ c |>\n<| c |>\nNo, it will prevent the array from being\
    \ filtered.\n<|/ c |>\n<| c |>\nNo, it won't. `array_filter` always returns an\
    \ array with items filtered from the original\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\nAnother solution\n<code>\n$array = array('5', '9', '13', '0', '0', '0',\
    \ '0', '2', '5');\n$result = array_filter($array, function($e){\n    return !is_numeric($e);\n\
    });\n</code>\n<|/ a dscore=0 |>\n<| c |>\n`is_numeric` will prevent from checking\
    \ for empty values. `is_int` will do nothing at all. Both will return an empty\
    \ array\n<|/ c |>\n<| c |>\n`is_numeric` will prevent from checking for empty\
    \ values. `is_int` will do nothing at all. Both will return an empty array\n<|/\
    \ c |>\n<| c |>\n`is_numeric` will prevent from checking for empty values. `is_int`\
    \ will do nothing at all. Both will return an empty array\n<|/ c |>\n<| c |>\n\
    `is_numeric` will prevent from checking for empty values. `is_int` will do nothing\
    \ at all. Both will return an empty array\n<|/ c |>\n<| c |>\n`is_numeric` will\
    \ prevent from checking for empty values. `is_int` will do nothing at all. Both\
    \ will return an empty array\n<|/ c |>\n<| a dscore=0 |>\nI dont know if this\
    \ is what you are looking for:\n<code>\n<?php\n$a = array('5', '9', '13', '0',\
    \ '0', '\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp8rbpt6up.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    foreach ($nums\
    \ as $num) {\n        if ($num > 10 && $num % 2 === 1 && $num % 10 % 2 === 1)\
    \ return count($nums);\n    }\n    return count($nums);\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8k43tbtu.php:19\n\
    Stack trace:\n#0 /tmp/tmp8k43tbtu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp8k43tbtu.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $first = $nums[0]\
    \ % 10;\n    $last = (int)$nums[count($nums) - 1] % 10;\n    if ($first == $last)\
    \ {\n        return count($nums) - (int)$nums[0];\n    }\n    return count($nums);\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplbhk0v29.php:22\n\
    Stack trace:\n#0 /tmp/tmplbhk0v29.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplbhk0v29.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n   $specialNum\
    \ = count($nums); \n   $finalNum = count($nums); \n   for($i=0; $i<$specialNum;\
    \ $i++){\n      $firstNum = intval($nums[$i]);\n      if($firstNum % 2 == 0){\
    \ \n         if($firstNum > 10 and intval($nums[$i]) % 2 == 1){\n            $finalNum--;\n\
    \         }\n      }\n   }\n   return $finalNum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23uaqk8k.php:27\n\
    Stack trace:\n#0 /tmp/tmp23uaqk8k.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp23uaqk8k.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Your code\
    \ here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvfsoybx.php:17\n\
    Stack trace:\n#0 /tmp/tmphvfsoybx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmphvfsoybx.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  // Code here\
    \ ...\n}\n</cell>\n<cell>\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpyxf510ym.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach($nums as $num) {\n        if($num > 10 && $num % 2 == 1 && $num %\
    \ 3 == 1 && $num % 5 == 1) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\necho \"Number of odd numbers greater than 10: \" . specialFilter($nums)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpahtvxe8d.php\
    \ on line 10\nNumber of odd numbers greater than 10: 0\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpahtvxe8d.php:26\nStack trace:\n#0 /tmp/tmpahtvxe8d.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpahtvxe8d.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    for ($i = 0; $i < count($nums); ++$i) {\n        $num = abs($nums[$i]);\n\
    \        if ($num > 10) {\n            $nums[$i] = $nums[$i] % 10;\n         \
    \   if ($nums[$i] < 0) {\n                ++$nums[$i];\n            }\n      \
    \      if ($nums[$i] % 2 == 1) {\n                $count++;\n            }\n \
    \       }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ygufmyi.php:31\n\
    Stack trace:\n#0 /tmp/tmp6ygufmyi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6ygufmyi.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Write your\
    \ code here\n    $result = 0;\n    foreach ($nums as $n) {\n        if ($n > 10\
    \ & $n%2 === 1) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpczmphcxf.php:25\n\
    Stack trace:\n#0 /tmp/tmpczmphcxf.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpczmphcxf.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    foreach($nums\
    \ as $key => $val) {\n        if ($val > 10) {\n            if ($val % 2 != 0\
    \ && $val % 2 != 1) {\n                return $key;\n            }\n        }\
    \ else {\n            return $key;\n        }\n    }\n    return $nums;\n}\n\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjv2ie2o1.php:28\n\
    Stack trace:\n#0 /tmp/tmpjv2ie2o1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjv2ie2o1.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $nums = array_filter($nums,\
    \ function($n){\n        return ($n > 10);\n    });\n    $nums = array_filter($nums,\
    \ function($n){\n        return ($n%2 === 1);\n    });\n    return count($nums);\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxh2azsqp.php:25\n\
    Stack trace:\n#0 /tmp/tmpxh2azsqp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpxh2azsqp.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Your code\
    \ here\n    $count  = count($nums);\n    $filter = $count - 1;\n    for ($x =\
    \ 0; $x < $count; $x++) {\n        if ($nums[$x] > 10) {\n            $count--;\n\
    \        } else {\n            if ($nums[$x] % 2 != 0) {\n                $filter\
    \ = $x;\n            } else {\n                $filter = $filter - 1;\n      \
    \      }\n        }\n    }\n\n    return $filter;\n}\n\n$input = [15, -73, 14,\
    \ -15];\necho specialFilter($input);\n</code>\n<|/ a tags=php,arrays |>\n<| c\
    \ |>\nThis is exactly what I was looking for. Thank you for your time. I'll look\
    \ into this in the morning.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n$array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n$output = array_filter($array,\
    \ function($element) use ($array){\n    return $element > 10 && $array[array_search($element,\
    \ array_keys($array))] % 2 != 0;\n});\nprint_r($output);\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a |>\nThe simplest solution would be to use array_search and array_key_first.\n\
    <code>\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpqrvu_8pz.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // TODO: Implement\
    \ function here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9r7hp2c.php:17\n\
    Stack trace:\n#0 /tmp/tmpq9r7hp2c.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq9r7hp2c.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n   $count = 0;\n\
    \   $firstOdd = array_filter(\n     $nums,\n     'is_odd',\n   );\n   $lastOdd\
    \ = array_filter(\n     $nums,\n     'is_odd',\n     array($nums, SORT_NUMERIC),\n\
    \     SORT_NUMERIC,\n   );\n   $firstEven = array_filter(\n     $nums,\n     'is_even',\n\
    \   );\n   $lastEven = array_filter(\n     $nums,\n     'is_even',\n     array($nums,\
    \ SORT_NUMERIC),\n     SORT_NUMERIC,\n   );\n   $firstOdd = count($firstOdd);\n\
    \   $lastOdd = count($lastOdd);\n   $firstEven = count($firstEven);\n   $lastEven\
    \ = count($lastEven);\n   if ($firstOdd > $lastOdd && $firstEven > $lastEven)\
    \ {\n     $count = $firstOdd + 1;\n   } else {\n     $count = $firstOdd + $lastOdd\
    \ + $firstEven + $lastEven;\n   }\n   return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'is_odd' not found or invalid function name in /tmp/tmp_beevw0c.php on line\
    \ 12\n\nWarning: array_filter() expects at most 3 parameters, 4 given in /tmp/tmp_beevw0c.php\
    \ on line 18\n\nWarning: array_filter() expects parameter 2 to be a valid callback,\
    \ function 'is_even' not found or invalid function name in /tmp/tmp_beevw0c.php\
    \ on line 22\n\nWarning: array_filter() expects at most 3 parameters, 4 given\
    \ in /tmp/tmp_beevw0c.php on line 28\n\nWarning: count(): Parameter must be an\
    \ array or an object that implements Countable in /tmp/tmp_beevw0c.php on line\
    \ 30\n\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp_beevw0c.php on line 31\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp_beevw0c.php\
    \ on line 32\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp_beevw0c.php on line 33\n\nWarning: array_filter()\
    \ expects parameter 2 to be a valid callback, function 'is_odd' not found or invalid\
    \ function name in /tmp/tmp_beevw0c.php on line 12\n\nWarning: array_filter()\
    \ expects at most 3 parameters, 4 given in /tmp/tmp_beevw0c.php on line 18\n\n\
    Warning: array_filter() expects parameter 2 to be a valid callback, function 'is_even'\
    \ not found or invalid function name in /tmp/tmp_beevw0c.php on line 22\n\nWarning:\
    \ array_filter() expects at most 3 parameters, 4 given in /tmp/tmp_beevw0c.php\
    \ on line 28\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp_beevw0c.php on line 30\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp_beevw0c.php\
    \ on line 31\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp_beevw0c.php on line 32\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp_beevw0c.php\
    \ on line 33\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_beevw0c"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = $length\
    \ = 0;\n    $nums = array_filter($nums, function ($num) {\n        $count++;\n\
    \        return $num > 10;\n    });\n    $nums = array_filter($nums, function\
    \ ($num) {\n        $length++;\n        return $num % 2 === 1;\n    });\n    return\
    \ $count * $length;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_e_0cik.php:27\n\
    Stack trace:\n#0 /tmp/tmpm_e_0cik.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpm_e_0cik.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $nums = array_filter($nums,\
    \ 'is_numeric');\n    return count($nums) ? count($nums) : 0;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wxicy34.php:17\n\
    Stack trace:\n#0 /tmp/tmp6wxicy34.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6wxicy34.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && (intval($num[0]) & 1) && \n\t\
    \t    (intval($num[strlen($num)-1]) & 1)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6vffluaf.php:24\n\
    Stack trace:\n#0 /tmp/tmp6vffluaf.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6vffluaf.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $filtered =\
    \ array_filter($nums, function($num) {\n        return ($num >= 10 && $num % 2\
    \ == 1 && $num % 7 == 1);\n    });\n    echo count($filtered);\n}\nspecialFilter($nums);\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 1 to be array, null given in\
    \ /tmp/tmpaku9jk_x.php on line 11\n\nWarning: count(): Parameter must be an array\
    \ or an object that implements Countable in /tmp/tmpaku9jk_x.php on line 12\n\
    00\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaku9jk_x.php:20\n\
    Stack trace:\n#0 /tmp/tmpaku9jk_x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpaku9jk_x.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count($nums)\
    \ === 0 || $nums[0] > 10 && $nums[count($nums) - 1] % 2 === 1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2mffx32y.php:17\n\
    Stack trace:\n#0 /tmp/tmp2mffx32y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2mffx32y.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num >= 10 && $num % 2 === 0 && $num\
    \ % 10 !== 0 && $num % 10 % 2 === 0) {\n            $count++;\n        }\n   \
    \ }\n    return $count;\n}\n\n$array = array('15', '7', '9');\n$count = specialFilter($array);\n\
    echo $count; // 2\n\n$array = array('33', '-2', '-3', '45', '21', '109');\n$count\
    \ = specialFilter($array);\necho $count; // 3\n\n$array = array('15', '7', '9',\
    \ '33', '-2', '-3', '45', '21', '109');\n$count = specialFilter($array);\necho\
    \ $count; // 4\n</code>\n<|/ a tags=php |>\n<| a dscore=0 |>\nThis is another\
    \ one\n<code>\n<?php\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpcrb1pexa.php on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$counts = array();\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num % 2 != 0 && $num % 1 !=\
    \ 0 ) {\n\t\t\t$counts[] = $num;\n\t\t}\n\t}\n\treturn count($counts);\n}\n\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeo4_buov.php:24\n\
    Stack trace:\n#0 /tmp/tmpeo4_buov.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeo4_buov.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $odds = [];\n\
    \    $evens = [];\n    $number = 0;\n    foreach ($nums as $num) {\n        if\
    \ ($num > 10) {\n            if ($number % 2 === 0) {\n                $evens[]\
    \ = $num;\n            } else {\n                $odds[] = $num;\n           \
    \ }\n        }\n        $number++;\n    }\n    return count(array_filter($evens,\
    \ function ($num) { return in_array($num, range(1, 9)); }));\n}\n\n$numbers =\
    \ [15, -73, 14, -15];\n$result = specialFilter($numbers);\necho $result;\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp81p6voxv.php:34\n\
    Stack trace:\n#0 /tmp/tmp81p6voxv.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp81p6voxv.php\
    \ on line 34\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $filtered =\
    \ array();\n    foreach($nums as $num) {\n        if($num > 10 && $num % 2 ===\
    \ 1 && $num % 5 === 1){\n            array_push($filtered, $num);\n        }\n\
    \    }\n    return count($filtered);\n}\n\nfunction candidate(...$args) {\n  \
    \  return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5i2v0lg6.php:24\n\
    Stack trace:\n#0 /tmp/tmp5i2v0lg6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5i2v0lg6.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $count++;\n\
    \            if ($num % 2 != 0 && $num % 3 != 0) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjbvch8oa.php:26\n\
    Stack trace:\n#0 /tmp/tmpjbvch8oa.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjbvch8oa.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\tfor ($i = 0;\
    \ $i < sizeof($nums); $i++) {\n\t\t$num = $nums[$i];\n\t\tif ($num > 10 && $num\
    \ % 2 != 0 && $num % 2 != 1) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tix8zyg.php:23\n\
    Stack trace:\n#0 /tmp/tmp6tix8zyg.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6tix8zyg.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $special =\
    \ 0;\n    foreach($nums as $num) {\n        if ($num > 10 && ($num % 2 == 1 ||\
    \ $num % 2 ==0)) {\n            $special += 1;\n        }\n    }\n    return $special;\n\
    }\n\n$specialCount = specialFilter($nums);\n$oddCount = count($nums) - $specialCount;\n\
    $count = $oddCount;\n$count += specialFilter($nums2);\n$count += specialFilter($nums3);\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: Invalid argument supplied for foreach() in /tmp/tmpk6vl69kc.php\
    \ on line 10\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmpk6vl69kc.php on line 19\n\nWarning: Invalid\
    \ argument supplied for foreach() in /tmp/tmpk6vl69kc.php on line 10\n\nWarning:\
    \ Invalid argument supplied for foreach() in /tmp/tmpk6vl69kc.php on line 10\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6vl69kc.php:29\nStack\
    \ trace:\n#0 /tmp/tmpk6vl69kc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpk6vl69kc.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\
    \ // Initialize counter to 0\n    foreach ($nums as $key => $val) {\n        if\
    \ ($val > 10) {\n            if ($val % 2 == 0) {\n                if ($val >\
    \ 100) {\n                    $count++;\n                } else {\n          \
    \          $count++;\n                }\n            } else {\n              \
    \  $count++;\n            }\n        } else {\n            $count++;\n       \
    \ }\n    }\n    return $count;\n}\n$nums = array(15, -73, 14, -15);\n$count =\
    \ specialFilter($nums);\necho $count; // 1\n\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5xbt1md.php:36\n\
    Stack trace:\n#0 /tmp/tmph5xbt1md.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph5xbt1md.php\
    \ on line 36\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $length = count($nums);\n\
    \  $count = 0;\n  for ($i = 0; $i < $length; $i++) {\n    $value = $nums[$i];\n\
    \    if ($value > 10) {\n      $count += 1;\n      continue;\n    }\n    if ($i\
    \ % 2 == 1 && $value % 2 == 1) {\n      $count += 1;\n    }\n  }\n  return $count;\n\
    }\necho \"Number of values greater than 10 and first and last digits are odd:\
    \ \" .\n    specialFilter($nums) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpsve0okk0.php on line 9\nNumber of values greater than 10\
    \ and first and last digits are odd: 0\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpsve0okk0.php:31\nStack trace:\n#0 /tmp/tmpsve0okk0.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsve0okk0.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $n = count($nums);\n\
    \    if ($n === 0) {\n        return 0;\n    }\n    if ($n <= 1) {\n        return\
    \ $n;\n    }\n\n    $oddsFirst = true;\n    $oddsLast = true;\n\n    $sum = 0;\n\
    \n    for ($i = 0; $i < $n; ++$i) {\n        $sumOfDigits = array_sum(str_split($nums[$i]));\n\
    \        if ($oddsFirst) {\n            $sumOfDigits += $sumOfDigits % 2;\n  \
    \      }\n        if ($oddsLast) {\n            $sumOfDigits += $sumOfDigits %\
    \ 2;\n        }\n\n        if ($sumOfDigits > 9) {\n            $oddsFirst = false;\n\
    \            $oddsLast = false;\n            $sum++;\n        }\n        else\
    \ {\n            $oddsFirst = true;\n            $oddsLast = true;\n        }\n\
    \    }\n\n    return $sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,math,algorithm\
    \ |>\nHere's a simple Python solution. Since it's Python, you can test it here:\
    \ http://www.trypython.net/\n<code>\ndef specialFilter(nums):\n    sum = 0\n \
    \   for item in nums:\n        sum += sum([int(item[i : i+1]) for i in range(len(item)\
    \ - 1)])\n        if sum > 9:\n            return sum\n    return 0\n\nprint specialFilter([15,\
    \ -73, 14, -15]) # => 1 \nprint specialFilter([33, -2, -3, 45, 21, 109]) # =>\
    \ 2\nprint specialFilter([-15, -33, 14, 15]) # => 0\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\n<code>\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvnqaai6v.php on line 44\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $number) {\n    if ($number > 10 && $number % 2 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph13jd0p8.php:24\n\
    Stack trace:\n#0 /tmp/tmph13jd0p8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmph13jd0p8.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  return array_filter($nums,\
    \ function($num) {\n    return $num > 10 &&\n      $num % 2 === 1 &&\n      $num\
    \ % 7 % 2 === 1;\n  });\n}\n$result = specialFilter([15, -73, 14, -15]);\necho\
    \ 'Number of elements that are greater than 10 and both first and last digits\
    \ of an element are odd: ' . count($result) . PHP_EOL;\n$result = specialFilter([33,\
    \ -2, -3, 45, 21, 109]);\necho 'Number of elements that are greater than 10 and\
    \ both first and last digits of an element are odd: ' . count($result) . PHP_EOL;\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Number of elements that are greater than 10 and both first and last digits\
    \ of an element are odd: 1\nNumber of elements that are greater than 10 and both\
    \ first and last digits of an element are odd: 2\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp_lnuy_g3.php:24\nStack trace:\n#0 /tmp/tmp_lnuy_g3.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_lnuy_g3.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if (is_int($num)) {\n            if ($num\
    \ > 10) {\n                if ($num % 2 == 1 && $num % 100 != 11) {\n        \
    \            $count++;\n                }\n            }\n        }\n    }\n \
    \   return $count;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4bcuqqvc.php:28\n\
    Stack trace:\n#0 /tmp/tmp4bcuqqvc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4bcuqqvc.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $num_count\
    \ = 1;\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i] > 10)\
    \ {\n            if ($i % 2 == 1 && $nums[$i - 1] % 2 == 1 && $nums[$i + 1] %\
    \ 2 == 1) {\n                $num_count++;\n            }\n        }\n    }\n\
    \    return $num_count;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi17e9_w0.php:24\n\
    Stack trace:\n#0 /tmp/tmpi17e9_w0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpi17e9_w0.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $nums = array_filter($nums);\n\
    \    $nums = array_map(function ($num) { return (is_int($num)) ? $num : -$num;\
    \ }, $nums);\n    $nums = array_filter($nums);\n\n    foreach ($nums as &$num)\
    \ {\n        if ($num > 10 && $num % 2 && ($num % 100 || $num % 1000) && $num\
    \ % 400) {\n            return count($nums);\n        }\n    }\n    return count($nums);\n\
    }\n\n$nums = [15, -73, 14, -15];\necho specialFilter($nums) . PHP_EOL;\n</code>\n\
    Output:\n<code>\n1\n</code>\nDemo on 3v4l.org\n<|/ a tags=arrays,count,php,math\
    \ |>\n<| c |>\nThanks for the answer! I ran it through the code and it seems to\
    \ be working but I am not getting the right number. Could you please take a look\
    \ at the code I edited into my original question? I am getting a result of 2 for\
    \ an array like [-45, -85, 56, -14, 93]. I'm not sure where I went wrong.\n<|/\
    \ c |>\n<| c |>\nI have added a link to a PHP sandbox showing the code working\
    \ for me. I can't see what you are doing differently. I would suggest you run\
    \ it through your IDE and make sure that you do not have any syntax errors before\
    \ running it through the interpreter.\n<|/ c |>\n<| c |>\nThanks I appreciate\
    \ it. I'll run it through with an IDE but I'm guessing it might not be the issue\
    \ here.\n<|/ c |>\n<| c |>\nI ran it through and I definitely had some errors.\
    \ I ran it through an IDE and it seemed to run fine but I'm still getting a value\
    \ of 2 for an array like [-45, -85, 56, -14, 93] when I am expecting a result\
    \ of 1. Is there something wrong with my code that I am missing?\n<|/ c |>\n<|\
    \ c |>\nI just added some more information in the original question. It looks\
    \ like something is wrong with my math logic but I'm not sure what. Would you\
    \ happen to know what it is?\n<|/ c |>\n<| a |>\nYou could use array_filter with\
    \ a callback that checks if $num is greater than 10 and both first and last digits\
    \ are odd and return count of found odd numbers:\n<code>\n$arr = [15, -73, 14,\
    \ -15];\n\n$count = array_filter($arr, function($num) {\n    return (is_int($num)\
    \ && $num > 10 && $num % 2 && ($num % 100 || $num % 1000) && $num % 400);\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfdw8hmtt.php on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach($nums as $num) {\n        if ($num > 10 && $num % 2 == 1 && $num\
    \ % 2 != 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjtfucvv4.php:24\n\
    Stack trace:\n#0 /tmp/tmpjtfucvv4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjtfucvv4.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  return count($nums)\
    \ > 0 && is_numeric(array_pop($nums)) && \n         is_numeric(array_pop($nums))\
    \ &&\n         array_pop($nums) >= 10 && array_pop($nums) % 2 === 1;\n}\n$nums\
    \ = [15, -73, 14, -15];\necho specialFilter($nums);\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7z6g_na.php:20\n\
    Stack trace:\n#0 /tmp/tmpo7z6g_na.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpo7z6g_na.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    foreach ($nums\
    \ as $num) {\n        if ($num >= 10 && $num % 2 === 0 && $num % 10 === 1 && $num\
    \ % 100 != 11) {\n            return $num;\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpibtp2f4r.php:22\n\
    Stack trace:\n#0 /tmp/tmpibtp2f4r.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpibtp2f4r.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  // Your code\
    \ goes here\n  return count($nums) - 1;\n}\n\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbt3omc4r.php:18\n\
    Stack trace:\n#0 /tmp/tmpbt3omc4r.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbt3omc4r.php\
    \ on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Your code\
    \ here\n    $result = 0;\n    foreach ($nums as $key => $number) {\n        if\
    \ ($number > 10) {\n            if ($number[0] % 2 == 1 && $number[0] % 2 != 0)\
    \ {\n                $result ++;\n            }\n            if ($number[0] %\
    \ 2 != 0 && $number[0] % 2 != 1) {\n                $result ++;\n            }\n\
    \            if ($number[1] % 2 == 1 && $number[1] % 2 != 0) {\n             \
    \   $result ++;\n            }\n            if ($number[1] % 2 != 0 && $number[1]\
    \ % 2 != 1) {\n                $result ++;\n            }\n        }\n    }\n\
    \    return $result;\n}\n\nprint_r(specialFilter($numbers));\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nI did it like this \nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmptoznk65v.php on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    if (empty($nums))\
    \ {\n        return 0;\n    }\n    $first = getFirst($nums);\n    $last = getLast($nums);\n\
    \    if ($first > 10 && $last % 2 === 0) {\n        return count($nums) - 1;\n\
    \    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function getFirst() in\
    \ /tmp/tmpuply2oyp.php:12\nStack trace:\n#0 /tmp/tmpuply2oyp.php(22): specialFilter(Array)\n\
    #1 /tmp/tmpuply2oyp.php(26): candidate(Array)\n#2 /tmp/tmpuply2oyp.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpuply2oyp.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num%2 === 1 && $num%10\
    \ === 1) $result++;\n    }\n    return $result;\n}\n</code>\nNow that we've solved\
    \ this problem, we can begin to build off of our foundations to solve the challenge.\
    \ Here are some challenges you might want to consider:\n\nWhat is the most popular\
    \ programming language to solve this challenge? \nWhat are some common programming\
    \ techniques that will help you solve the challenge?\nWhat are some common programming\
    \ techniques that will help you solve the challenge if the challenge is rephrased\
    \ as \"Find the number of numbers in the array that meet the criteria\"?\n<|/\
    \ a |>\n<| c |>\nThank you for this solution.  One question - I do not understand\
    \ how you got it to work.\n<|/ c |>\n<| c |>\nIf you look at the first code block,\
    \ you notice that we are using the function `specialFilter()` to check each number\
    \ in the array that meets the criteria. We then increment the counter `$result`\
    \ every time we find a number that is greater than 10 and is odd (`%2` is 1, `%10`\
    \ is 1).\n<|/ c |>\n<| a dscore=0 |>\nSolution in PHP:\n<code>\n$array = [\n \
    \   \"1,5,8,3,9,6,5\",\n    \"3,0,4,2,3,9,1,0\",\n    \"5,7,0,9,3,6,0,0\",\n \
    \   \"9,2,3,0,6,4,0\",\n    \"5,7,7,3,0,3,0\",\n    \"1,9,2,3,5,0,4\",\n    \"\
    9,2,0,5,5,7,1,0\",\n    \"6,3,9,1,3,6,5,0\",\n];\n\n$odd_array_elements = array_filter(\n\
    \    $array,\n    function($el) use ($odd) {\n        return is_odd($el);\n  \
    \  }\n);\n\n$odd_array_elements_count = count($odd_array_elements);\n\necho \"\
    Odd elements count: \" . $odd_array_elements_count;\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpat24ij1x.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  foreach($nums\
    \ as $num) {\n    if (($num > 10) && ($num % 2 == 0) && (($num % 10 == 1) && ($num\
    \ % 100 != 11))) {\n      return (sizeof($nums));\n    }\n  }\n  return (0);\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp74v51ssh.php:23\n\
    Stack trace:\n#0 /tmp/tmp74v51ssh.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp74v51ssh.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num%2 == 0 && $num >\
    \ floor(sqrt($num))) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrm8ay4a.php:24\n\
    Stack trace:\n#0 /tmp/tmpnrm8ay4a.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnrm8ay4a.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    if (is_array($nums)\
    \ === false) {\n        return false;\n    }\n    \n    $result = 0;\n    \n \
    \   foreach ($nums as $num) {\n        if (is_int($num) === true) {\n        \
    \    $result = $result + 1;\n            if ($num > 10) {\n                if\
    \ ($num % 2 === 1) {\n                    if ($num % 2 === 1) {\n            \
    \            $result = $result + 1;\n                    }\n                }\n\
    \            }\n        }\n    }\n    \n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqliso6xn.php:35\n\
    Stack trace:\n#0 /tmp/tmpqliso6xn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpqliso6xn.php\
    \ on line 35\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$i = 0;\n\twhile\
    \ ($i < count($nums)) {\n\t\tif ($nums[$i] >= 10 && $nums[$i] % 2 != 0 && $nums[$i-1]\
    \ % 2 != 0 && $nums[$i+1] % 2 != 0) {\n\t\t\t$i++;\n\t\t} else {\n\t\t\tunset($nums[$i]);\n\
    \t\t}\n\t}\n\treturn count($nums);\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // your code\
    \ here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmdwjp4fs.php:17\n\
    Stack trace:\n#0 /tmp/tmpmdwjp4fs.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmdwjp4fs.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // your code\
    \ here\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb87xyhbc.php:16\n\
    Stack trace:\n#0 /tmp/tmpb87xyhbc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpb87xyhbc.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  // Write your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgsio34q9.php:17\n\
    Stack trace:\n#0 /tmp/tmpgsio34q9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgsio34q9.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 != 0 && $num\
    \ % 2 != 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6eltwzs.php:24\n\
    Stack trace:\n#0 /tmp/tmpc6eltwzs.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpc6eltwzs.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $len = count($nums);\n\
    \  for($i = 0; $i < $len; $i++) {\n    if ($nums[$i] > 10 && $nums[$i] % 2 ==\
    \ 1 && $nums[$i-1] % 2 == 1) {\n      return $i+1;\n    }\n  }\n  return 0;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7n6w81e1.php:24\n\
    Stack trace:\n#0 /tmp/tmp7n6w81e1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7n6w81e1.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $odd = array_filter($nums,\
    \ function($num) {\n        return $num % 2 === 0;\n    });\n    $first = array_filter($nums,\
    \ function($num) {\n        return $num % 2 === 0;\n    });\n    $last = array_filter($nums,\
    \ function($num) {\n        return $num % 2 === 1;\n    });\n\n    return count($odd)\
    \ + count($first) + count($last);\n}\n</code>\n<|/ a dscore=0 tags=arrays,php\
    \ |>\n<| a tags=arrays,php |>\n<code>\n$arr = array(-7, -7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp4v8vdlz3.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count($nums)\
    \ > 0 ? count(array_filter($nums, function($num) {\n        return $num > 10 &&\
    \ preg_match('/^\\(?(?:1[0-4]\\d|[1-9])\\)?[-\\s]*\\d{4}$/', $num) && preg_match('/^\\\
    (?(?:31|32|33|34|35|36|37|38|39|40|41)\\)?[-\\s]*\\d{4}$/', $num) && preg_match('/^\\\
    (?(?:3[45]|0[1-9]\\)|\\(?[3-9]\\d?\\)?[-\\s]*\\d{4}$/', $num);\n    })) : 0;\n\
    }\n\n$arr1= [15, -73, 14, -15];\necho \"Array with odd first and last digits -\
    \ {$specialFilter($arr1)} elements\" . PHP_EOL;\n\n$arr2 = [33, -2, -3, 45, 21,\
    \ 109];\necho \"Array with odd first and last digits - {$specialFilter($arr2)}\
    \ elements\" . PHP_EOL;\n\n$arr3 = [-7, 3, -9, -10, 0, -10, 15, -15, 20, -15,\
    \ 21, -22, 25, -29, 33];\necho \"Array with odd first and last digits - {$specialFilter($arr3)}\
    \ elements\" . PHP_EOL;\n</code>\nThe output:\n<code>\nArray with odd first and\
    \ last digits - 1 elements\nArray with odd first and last digits - 2 elements\n\
    Array with odd first and last digits - 2 elements\n</code>\n<|/ a tags=filtering,arrays,php\
    \ |>\n<| a tags=filtering,arrays,php dscore=1 |>\nTry this, it will work perfectly\
    \ for your problem.\n<code>\n<?php\n$a = [15, -73, 14, -15];\n$b = array();\n\
    foreach($a as $a1){\nif($a1>=10 && $a1%2==1 && $a1+$a1<10 && $a1+$a1%2==1)\n{\n\
    $b[]=$a1;\n}\n}\n\necho \"<pre/>\";\nprint_r($b);\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp3khzpecu.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    foreach($nums\
    \ as $num) {\n        if ($num > 10) {\n            if ($num % 2 == 1) {\n   \
    \             return $num;\n            }\n        }\n    }\n}\n\n$num = specialFilter([15,\
    \ -73, 14, -15]);\necho \"The number of numbers greater than 10 and first and\
    \ last digits of odd numbers are: \";\necho $num;\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "The number of numbers greater than 10 and first and last digits of odd\
    \ numbers are: 15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3g4jfxf.php:26\n\
    Stack trace:\n#0 /tmp/tmpo3g4jfxf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo3g4jfxf.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 === 0 && $num % 10\
    \ === 1 &&\n        $num / 10 === floor($num / 10) && $num / 100 !== $num / 100)\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\n\necho \"The number $nums\
    \ has $count numbers that satisfy this criteria.\\n\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "The number  has  numbers that satisfy this criteria.\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpat5sjj1y.php:26\nStack trace:\n#0 /tmp/tmpat5sjj1y.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpat5sjj1y.php on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  // code here\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffeq6svn.php:17\n\
    Stack trace:\n#0 /tmp/tmpffeq6svn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpffeq6svn.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Write your\
    \ code here\n    $result = 0;\n    foreach ($nums as $key => $value) {\n     \
    \   if ($value > 10) {\n            $result = $result + 1;\n        }\n    }\n\
    \    return $result;\n}\n</code>\n<|/ a dscore=0 tags=php,laravel,laravel-5,arrays\
    \ |>\n<| c |>\nBut you only return 1 if the array has more than 10 elements.\n\
    <|/ c |>\n<| a tags=php,laravel,laravel-5,arrays dscore=0 |>\n<code>\n/**\n *\
    \ $arr\n * int\n */\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpa06hee3p.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $len = count($nums);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $d = $nums[$i];\n        $f = $nums[$i];\n\
    \        if ($d > 10 && $f % 2 == 1) {\n            $f = $f + 10;\n        }\n\
    \        if ($d > 10 && $f % 2 == 1) {\n            $f = $f + 10;\n        }\n\
    \        if ($f % 2 == 1) {\n            $f = $f + 1;\n        }\n        $nums[$i]\
    \ = $f;\n    }\n    return $len;\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjtzcl0nr.php:32\n\
    Stack trace:\n#0 /tmp/tmpjtzcl0nr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjtzcl0nr.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $filtered =\
    \ [];\n    foreach ($nums as $num) {\n        if ($num >= 10 && $num % 2 === 0\
    \ && $num % 10 !== 1) {\n            $filtered[] = $num;\n        }\n    }\n \
    \   return count($filtered);\n}\n</code>\n<|/ a dscore=0 tags=php,arrays,sorting,filtering,function\
    \ |>\n<| c |>\nWhy did you use the **&** in the foreach line? And also, I don't\
    \ understand where I should put the function. I need to filter only those numbers\
    \ that have the first and last digit of an odd number, so, if I put this in my\
    \ script, I need to put a lot of \"if\"s inside my script, and I wouldn't prefer\
    \ that. Can you give me more suggestions about where to put the function?\n<|/\
    \ c |>\n<| c |>\nThe `&` means that you pass the value by reference. This means\
    \ that the function can modify your original array instead of having to return\
    \ a new array with the values you want.\n<|/ c |>\n<| c |>\nThe `if` statements\
    \ need to be put inside your loop. I'm not sure what you're expecting because\
    \ you're not giving us much to work with. You need to show us your entire script,\
    \ not just snippets. Try editing your question to provide your entire code.\n\
    <|/ c |>\n<| c |>\nI updated the question with the full script\n<|/ c |>\n<| c\
    \ |>\nOkay, so you want me to put all that ifs inside this foreach loop? I thought\
    \ it was possible to put that inside another function, I didn't know about that\
    \ &. Thanks so much for your help, I appreciate it!\n<|/ c |>\n<| a dscore=0 |>\n\
    I have modified your code a little bit. Check this out\n<code>\n<?php\n$array1\
    \ = [15, -73, 14, -15, 22, -5];\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp2zjj09ts.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    $odd = false;\n    foreach ($nums as $num) {\n        if ($num > 10 && $odd\
    \ === false) {\n            $odd = true;\n            $count++;\n        } else\
    \ if ($num > 10 && $odd === true) {\n            $odd = false;\n        }\n  \
    \  }\n    return $count;\n}\n\nspecialFilter([15, -73, 14, -15]);\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr85xpjd.php:31\n\
    Stack trace:\n#0 /tmp/tmpmr85xpjd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmr85xpjd.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // code goes\
    \ here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3gffb612.php:17\n\
    Stack trace:\n#0 /tmp/tmp3gffb612.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp3gffb612.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $len = count($nums);\n\
    \    \n    for ($i=0; $i < $len; $i++) {\n        if ($nums[$i] > 10) {\n    \
    \        if ($nums[$i] % 2 != 0) {\n                return $len;\n           \
    \ }\n        }\n    }\n    \n    return 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpboyw5r6a.php:28\n\
    Stack trace:\n#0 /tmp/tmpboyw5r6a.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpboyw5r6a.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $total = 0;\n\
    \    $odd = true;\n    foreach ($nums as $num) {\n        if ($num > 10 && $odd\
    \ == true) {\n            if ($num % 2 == 1 && $num % 2 == 1) {\n            \
    \    $odd = false;\n            }\n        }\n        if ($num > 10 && $odd ==\
    \ false) {\n            if ($num % 2 == 1 && $num % 2 == 0) {\n              \
    \  $odd = true;\n            }\n        }\n        $total++;\n    }\n    return\
    \ $total;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpan7dtjo_.php:31\n\
    Stack trace:\n#0 /tmp/tmpan7dtjo_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpan7dtjo_.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    if (!count($nums))\
    \ {\n        return 0;\n    }\n    \n    // Write your answer here\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgbpalbvf.php:21\n\
    Stack trace:\n#0 /tmp/tmpgbpalbvf.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpgbpalbvf.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    if (!isset($nums)\
    \ || !is_array($nums)) return 0;\n    $count = 0;\n    foreach ($nums as $num)\n\
    \    {\n        if ($num > 10 && $num % 2 == 1 && $num % 3 == 0 && $num % 5 ==\
    \ 1)\n            $count++;\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1j7i2kwu.php:24\n\
    Stack trace:\n#0 /tmp/tmp1j7i2kwu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1j7i2kwu.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Write your\
    \ PHP solution below:\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw48v1zwb.php:16\n\
    Stack trace:\n#0 /tmp/tmpw48v1zwb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw48v1zwb.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = count($nums);\n\
    \    $count = 0;\n    $first_odd = $last_odd = 0;\n\n    foreach($nums as $num)\
    \ {\n        if ($num > 10 && $num % 2 === 1 && $num % 100 != 11) {\n        \
    \    $count++;\n        }\n        if ($num > 10 && $num % 2 === 0 && $num % 10\
    \ % 2 === 1) {\n            $count++;\n        }\n        if ($num > 10 && $num\
    \ % 2 === 1 && $num % 10 >= 11) {\n            $count++;\n        }\n        if\
    \ ($num > 10 && $num % 2 === 0 && $num % 10 < 11) {\n            $count++;\n \
    \       }\n        if ($num > 10 && $num % 2 === 0 && $num % 100 > 9) {\n    \
    \        $count++;\n        }\n        if ($num > 10 && $num % 2 === 0 && $num\
    \ % 100 < 9) {\n            $count++;\n        }\n        if ($num > 10 && $num\
    \ % 2 === 1 && $num % 10 > 1) {\n            $count++;\n        }\n        if\
    \ ($num > 10 && $num % 2 === 1 && $num % 10 < 1) {\n            $count++;\n  \
    \      }\n        if ($num > 10 && $num % 2 === 0 && $num % 100 >= 1) {\n    \
    \        $count++;\n        }\n        if ($num > 10 && $num % 2 === 0 && $num\
    \ % 100 < 1) {\n            $count++;\n        }\n    }\n\n    return $count;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nYou beat me to it. My answer was a quick solution\
    \ and wouldn't be too performant with a large data set. You should definitely\
    \ use the power of array_filter and array_reduce to streamline the solution. Good\
    \ job!\n<|/ c |>\n<| c |>\nAh yes, I've been looking at array_reduce and array_filter\
    \ but can't quite get it to work the way I want it.  Maybe I need a new question\
    \ on how to get it to work.\n<|/ c |>\n<| c |>\nThis doesn't work. Try it with\
    \ the two example arrays I put in my question and you will see that this function\
    \ returns `1` instead of `2`.\n<|/ c |>\n<| c |>\nThis does work. I tried it with\
    \ your example arrays. I've updated my answer with new version and new comments\
    \ on how it works now.\n<|/ c |>\n<| c |>\nWhoops, I forgot to update my first\
    \ comment when I posted my answer.  I think I understand now, and I'm happy with\
    \ the solution now!\n<|/ c \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpoga5aolz.php on line 48\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        $first_num = $num % 10;\n        $last_num\
    \ = (int)($num / 10);\n        if ($first_num == $last_num % 2 == 1) {\n     \
    \       $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpt_pb593f.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $countArray =\
    \ array();\n  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 == 0 &&\
    \ $num % 2 == 1) {\n      $countArray[] = $num;\n    }\n  }\n  return count($countArray);\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkql5u2gb.php:24\n\
    Stack trace:\n#0 /tmp/tmpkql5u2gb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkql5u2gb.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ function($item) use ($nums) {\n        return ($item >= 10 && $item % 2 ===\
    \ 1) || ($item >= 10 && $item % 2 === 0 && $item > $nums[count($nums) - 1] % 2);\n\
    \    }));\n}\n</code>\n<|/ a tags=arrays,php dscore=1 |>\n<| a dscore=0 |>\nThis\
    \ solution works by iterating through the array and maintaining a variable to\
    \ track the odd/even numbers. Once the odd number reaches 1, then it checks to\
    \ see if the last number is odd. At that point it realizes that the last number\
    \ should be added to a new array.\n<code>\n$odd = 1;\n$new_arr = array();\nforeach\
    \ ($array as $item) {\n    if ($item % 2 != 0 && $item < 10) {\n        $new_arr[]\
    \ = $item;\n        $odd = 1;\n    } else {\n        $odd = 0;\n        if ($item\
    \ % 2 == 0 && $item > 10) {\n            $new_arr[] = $item;\n        }\n    }\n\
    }\n\nprint_r($new_arr);\n</code>\nHere's an example in action: https://3v4l.org/iIu4Z\n\
    <|/ a tags=arrays,php |>\n<| c |>\nThis solution doesn't take into account the\
    \ requirement that the last number needs to be a multiple of 2.\n<|/ c |>\n<|\
    \ c |>\nThat was a pretty straightforward modification. I'll leave it up to OP\
    \ to fix it if need be.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpixxs5e1j.php on line 13\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count($nums);\
    \ \n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq8_x7kcm.php:17\n\
    Stack trace:\n#0 /tmp/tmpq8_x7kcm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq8_x7kcm.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 1;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $count++;\n\
    \        }\n        $firstOdd = 0;\n        $lastOdd = 0;\n        if (is_array($num))\
    \ {\n            if (isset($num[0])) {\n                if ($num[0] % 2 != 0)\
    \ {\n                    $firstOdd = 1;\n                }\n            }\n  \
    \          if (isset($num[count($num) - 1])) {\n                if ($num[count($num)\
    \ - 1] % 2 != 0) {\n                    $lastOdd = 1;\n                }\n   \
    \         }\n        } else {\n            if ($num % 2 != 0) {\n            \
    \    $firstOdd = 1;\n            }\n        }\n        if ($firstOdd && $lastOdd)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvakb7a36.php:43\n\
    Stack trace:\n#0 /tmp/tmpvakb7a36.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpvakb7a36.php\
    \ on line 43\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return specialFilter($nums,\
    \ true);\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -11
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    foreach($nums\
    \ as $num) {\n        if (is_array($num) && count($num) == 1 && $num[0] > 10)\
    \ {\n            $odd_first = floor($num[0] / 2);\n            $odd_last = floor($num[0]\
    \ / 2);\n            $odd = $odd_first * 2 + $odd_last;\n            if ($num[0]\
    \ % 2 == 1 && $odd > 1) {\n                return count($nums);\n            }\n\
    \        }\n    }\n    return 0;\n}\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaonu47q1.php:27\n\
    Stack trace:\n#0 /tmp/tmpaonu47q1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpaonu47q1.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ 'is_int')) > 0 &&\n        array_reduce($nums, 'is_int', true) &&\n        array_reduce($nums,\
    \ 'is_odd', true) &&\n        array_reduce($nums, 'is_odd', true) && \n      \
    \  array_reduce($nums, 'is_odd', true); \n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| c |>\nThank you, I'll try this one\n<|/ c |>\n<| a dscore=0 tags=php,arrays,multidimensional-array\
    \ |>\nYou could do with array_reduce\n<code>\n<?php\n$arr = [\n    [15],\n   \
    \ [-73, 14, -15],\n    [33, -2, -3, 45, 21, 109],\n];\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmp08hgyjgf.php on line 15\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $nums = array_reverse($nums);\n\
    \    $nums = array_merge($nums);\n    $nums = array_filter($nums, function($num)\
    \ {\n        return $num > 10 && $num % 2 === 1;\n    });\n    return count($nums);\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd03qq9aw.php:24\n\
    Stack trace:\n#0 /tmp/tmpd03qq9aw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpd03qq9aw.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    sort($nums);\n\
    \    \n    $count = count($nums);\n    \n    if($count == 0) return 0;\n    \n\
    \    for($i = 0; $i < $count; $i++) {\n        if($nums[$i] < 10) {\n        \
    \    $nums[$i] = 0;\n        } else {\n            $nums[$i] = 1;\n        }\n\
    \    }\n    \n    $evens = array_filter($nums, function($num) {\n        return\
    \ $num % 2 === 0;\n    });\n    \n    $odds = array_filter($nums, function($num)\
    \ {\n        return $num % 2 !== 0;\n    });\n    \n    return count(array_merge($odds,\
    \ $evens)) / count($nums);\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66i2hkj0.php:39\n\
    Stack trace:\n#0 /tmp/tmp66i2hkj0.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp66i2hkj0.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Code here\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdpxz7euz.php:17\n\
    Stack trace:\n#0 /tmp/tmpdpxz7euz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdpxz7euz.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Write your\
    \ implementation here\n    foreach ($nums as $num) {\n        if ($num > 10 &&\
    \ is_odd($num) && is_odd($num - 3)) {\n            return 1;\n        }\n    }\n\
    \    return 0;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_odd() in /tmp/tmpwpyo2lgg.php:11\n\
    Stack trace:\n#0 /tmp/tmpwpyo2lgg.php(18): specialFilter(Array)\n#1 /tmp/tmpwpyo2lgg.php(23):\
    \ candidate(Array)\n#2 /tmp/tmpwpyo2lgg.php(31): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpwpyo2lgg.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = count($nums);\n\
    \    foreach ($nums as $key => $value) {\n        if ($value > 10) {\n       \
    \     if ($key > 0 && $key < $count - 1) {\n                if ($nums[$key - 1]\
    \ % 2 == 1 && $nums[$key + 1] % 2 == 1) {\n                    $count--;\n   \
    \             }\n            }\n        } else {\n            $count = 0;\n  \
    \      }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n   \
    \ return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_r0mu8tu.php:30\n\
    Stack trace:\n#0 /tmp/tmp_r0mu8tu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_r0mu8tu.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return specialFilterHelper($nums,\
    \ 0, count($nums)-1);\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function specialFilterHelper()\
    \ in /tmp/tmpf8tpv7px.php:9\nStack trace:\n#0 /tmp/tmpf8tpv7px.php(13): specialFilter(Array)\n\
    #1 /tmp/tmpf8tpv7px.php(17): candidate(Array)\n#2 /tmp/tmpf8tpv7px.php(26): test()\n\
    #3 {main}\n  thrown in /tmp/tmpf8tpv7px.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    $odd = false;\n    foreach($nums as $number) {\n        if ($number > 10)\
    \ {\n            if ($odd && $number % 2 != 1) {\n                $count++;\n\
    \            }\n            $odd = !$odd;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp83j5y27y.php:29\n\
    Stack trace:\n#0 /tmp/tmp83j5y27y.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp83j5y27y.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach($nums as $num) {\n        $first = $num % 10;\n        $last = $num\
    \ % 1000;\n        $odd = $first % 2 != $last % 2 ? 1 : 0;\n        if($num >\
    \ 10 && $odd && $first%2 == $last%2) {\n            $count++;\n        }\n   \
    \ }\n    return $count;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19onmyhi.php:26\n\
    Stack trace:\n#0 /tmp/tmp19onmyhi.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp19onmyhi.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = count($nums);\n\
    \    for($i = 0; $i < $count; $i++) {\n        if ($nums[$i] > 10 && $nums[$i]\
    \ % 2 != 0 && $nums[$i] % 3 != 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpq5t3fjrt.php on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $numCount =\
    \ count($nums);\n    $oddCount = 0;\n    $evenCount = 0;\n    for ($i = 0; $i\
    \ < $numCount; $i++) {\n        $num = $nums[$i];\n        if (is_int($num)) {\n\
    \            if (($num > 10) && ($num % 2 != 0)) {\n                $oddCount++;\n\
    \            } else {\n                $evenCount++;\n            }\n        }\
    \ else {\n            throw new Exception('All array elements must be integers.');\n\
    \        }\n    }\n    return $numCount - ($oddCount * 2) + ($evenCount * 2);\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuyi_qkvv.php:32\n\
    Stack trace:\n#0 /tmp/tmpuyi_qkvv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpuyi_qkvv.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\
    \ \n    foreach ($nums as $num){\n        if ($num > 10 && $num % 2 == 0 && $num\
    \ % 3 != 0) $count++;\n    }\n    return $count;\n}\n\n$nums = [15, -73, 14, -15];\n\
    $nums2 = [33, -2, -3, 45, 21, 109];\n\necho \"Count of numbers in array that are\
    \ greater than 10 and both first and last digits are odd: \" . specialFilter($nums);\n\
    echo \"\\n\\nCount of numbers in array that are greater than 10 and first and\
    \ last digits are odd: \" . specialFilter($nums2);\n</code>\nThis should provide\
    \ you with the logic you need.\n<|/ a dscore=0 tags=php,arrays |>\n<| c |>\nthank\
    \ you for the reply. but my question is different as i want a result like count\
    \ of array elements that are greater than 10 and first and last digits are odd.\n\
    <|/ c |>\n<| a tags=php,arrays |>\nTry this way\n<code>\n$array = [15, -73, 14,\
    \ -15];\n$array2 = [33, -2, -3, 45, 21, 109];\n$result = [];\n$result2 = [];\n\
    \nfor($i = 0; $i < sizeof($array); $i++){\n    if($array[$i] > 10 && $array[$i]\
    \ % 2 == 0 && $array[$i] % 3 != 0){\n        $result[] = $array[$i];\n    }\n\
    }\n\nfor($j = 0; $j < sizeof($array2); $j++){\n    if($array2[$j] > 10 && $array2[$j]\
    \ % 2 == 0 && $array2[$j] % 3 != 0){\n        $result2[] = $array2[$j];\n    }\n\
    }\n\necho $result . \"<br>\";\necho $result2;\n</code>\n<|/ a dscore=0 |>\n<|\
    \ c |>\nThank you\n<|/ c |>\n<| a tags=php,arrays dscore=0 |>\n<code>\n<?php\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpzzsj10do.php on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  \n  // Return\
    \ 0 if empty array\n  if(!$nums) return 0;\n  \n  // Write your code below\n \
    \ $even = 0;\n  $odd = 0;\n  foreach($nums as $num){\n    if($num > 10){\n   \
    \   if($num % 2 === 1){\n        $even++;\n      }\n      if($num % 2 === 0){\n\
    \        $odd++;\n      }\n    }\n  }\n  return $even + $odd;\n}\n\n$nums = [-15,\
    \ 7, -14, -20, -50, 18, 15, -16, -6, -12, -9, -7, -17, 2, -46, 4];\n$nums = [33,\
    \ 2, -3, 45, 21, 109];\n$nums = [-5, -4, -2, 10, -52, -19, 3, -14];\necho \"Number\
    \ of odd numbers greater than 10 is \".specialFilter($nums);\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "Number of odd numbers greater than 10 is 0\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpgijwqjbk.php:39\nStack trace:\n#0 /tmp/tmpgijwqjbk.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgijwqjbk.php on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$odd = array_filter($nums,\
    \ \"odd\");\n\t$odd = count($odd);\n\t$firstOdd = array_shift($odd);\n\t$firstOdd\
    \ = $firstOdd % 2;\n\t$lastOdd = array_pop($odd);\n\t$lastOdd = $lastOdd % 2;\n\
    \tif ($firstOdd && $lastOdd) {\n\t\treturn $odd;\n\t} else {\n\t\treturn 0;\n\t\
    }\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'odd' not found or invalid function name in /tmp/tmp4qnvs_ni.php on line 9\n\
    \nWarning: count(): Parameter must be an array or an object that implements Countable\
    \ in /tmp/tmp4qnvs_ni.php on line 10\n\nWarning: array_shift() expects parameter\
    \ 1 to be array, int given in /tmp/tmp4qnvs_ni.php on line 11\n\nWarning: array_pop()\
    \ expects parameter 1 to be array, int given in /tmp/tmp4qnvs_ni.php on line 13\n\
    \nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'odd' not found or invalid function name in /tmp/tmp4qnvs_ni.php on line 9\n\
    \nWarning: count(): Parameter must be an array or an object that implements Countable\
    \ in /tmp/tmp4qnvs_ni.php on line 10\n\nWarning: array_shift() expects parameter\
    \ 1 to be array, int given in /tmp/tmp4qnvs_ni.php on line 11\n\nWarning: array_pop()\
    \ expects parameter 1 to be array, int given in /tmp/tmp4qnvs_ni.php on line 13\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qnvs_ni.php:27\nStack\
    \ trace:\n#0 /tmp/tmp4qnvs_ni.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4qnvs_ni.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach($nums as $num) {\n        $first = (int)$num;\n        $last = floor($num);\n\
    \        $even = (int)$num % 2;\n        if($first > 10 && $last % 2 == 0 && !$even)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy064aw1y.php:27\n\
    Stack trace:\n#0 /tmp/tmpy064aw1y.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpy064aw1y.php\
    \ on line 27\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = count($nums);\n\
    \    \n    for($x = 0; $x <= $count; $x++) {\n        if($nums[$x] > 10 && \n\
    \            $nums[$x] % 2 != 0 && $nums[$x] % 2 != 1) {\n            $count--;\n\
    \        }\n    }\n    \n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg1e5npfo.php:26\n\
    Stack trace:\n#0 /tmp/tmpg1e5npfo.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpg1e5npfo.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  return array_filter($nums,\
    \ function($num) {\n    return $num > 10 && ($num % 2 === 1 && $num % 3 === 1);\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpfu6ora.php:19\n\
    Stack trace:\n#0 /tmp/tmpbpfu6ora.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbpfu6ora.php\
    \ on line 19\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach($nums as $num) {\n        if($num > 10 && $num % 2 != 0) {\n    \
    \        $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplhmj6rux.php:25\n\
    Stack trace:\n#0 /tmp/tmplhmj6rux.php(32): test()\n#1 {main}\n  thrown in /tmp/tmplhmj6rux.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 != 0 && $num\
    \ % 2 != 1 && $num % 2 != 3) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd6ay447y.php:24\n\
    Stack trace:\n#0 /tmp/tmpd6ay447y.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpd6ay447y.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    if ($nums ==\
    \ null) return null;\n    foreach ($nums as $num) {\n        if ($num >= 10 &&\
    \ $num % 2 === 1 && $num % 10 !== 10) {\n            return $num;\n        }\n\
    \    }\n    return null;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87hjeqlo.php:22\n\
    Stack trace:\n#0 /tmp/tmp87hjeqlo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp87hjeqlo.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach($nums as $num) {\n    if ($num > 10 && $num % 2 == 0 && $num % 1 !=\
    \ 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8_61f7i.php:24\n\
    Stack trace:\n#0 /tmp/tmpb8_61f7i.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpb8_61f7i.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $i = 0;\n \
    \   while($i < count($nums))\n    {\n        if($nums[$i] > 10 && $nums[$i-1]\
    \ % 2 === 0 && $nums[$i+1] % 2 === 0) \n        {\n            $i++;\n       \
    \ }\n        else \n        {\n            $i++;\n        }\n    }\n    return\
    \ $i;\n}\n\n$numbers = [15, -73, 14, -15];\necho specialFilter($numbers) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1ibrtz0.php:31\n\
    Stack trace:\n#0 /tmp/tmpc1ibrtz0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpc1ibrtz0.php\
    \ on line 31\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n   $result = array_reduce($nums,\
    \ function($carry, $item) {\n      $odd1 = ($item & 1)  !== 0;\n      $odd2 =\
    \ ($item & 2) !== 0;\n      return $odd1 & $odd2 ? $carry + 1 : $carry;\n   },\
    \ 0);\n   \n   return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3e516ohl.php:23\n\
    Stack trace:\n#0 /tmp/tmp3e516ohl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3e516ohl.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    if (count($nums)\
    \ === 0) {\n        return 0;\n    }\n    $odds = specialFilter(array_filter($nums,\
    \ \"is_odd\"));\n    $evens = specialFilter(array_filter($nums, \"is_even\"));\n\
    \    return count($nums) - count($odds) - count($evens);\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'is_odd' not found or invalid function name in /tmp/tmp6bigf9oz.php on line\
    \ 12\n\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmp6bigf9oz.php on line 9\n\nWarning: array_filter() expects\
    \ parameter 2 to be a valid callback, function 'is_even' not found or invalid\
    \ function name in /tmp/tmp6bigf9oz.php on line 13\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmp6bigf9oz.php\
    \ on line 9\n\nWarning: count(): Parameter must be an array or an object that\
    \ implements Countable in /tmp/tmp6bigf9oz.php on line 14\n\nWarning: count():\
    \ Parameter must be an array or an object that implements Countable in /tmp/tmp6bigf9oz.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bigf9oz.php:22\n\
    Stack trace:\n#0 /tmp/tmp6bigf9oz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6bigf9oz.php\
    \ on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = count($nums);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        if ($nums[$i] > 10 && $nums[$i]\
    \ % 2 != 0 && $nums[$i] % 3 != 0) {\n            $count = $count + 1;\n      \
    \  }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkwsygbfr.php:23\n\
    Stack trace:\n#0 /tmp/tmpkwsygbfr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkwsygbfr.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = [];\n\
    \    foreach($nums as $num) {\n        $digits = str_split($num);\n        $odd\
    \ = isset($digits[0][0]) ? $digits[0][0] : 1;\n        $even = isset($digits[0][1])\
    \ ? $digits[0][1] : 1;\n        $first = isset($digits[0][0]) ? $digits[0][0]\
    \ : 1;\n        $last = isset($digits[count($digits)-1][1]) ? $digits[count($digits)-1][1]\
    \ : 1;\n        $count[$num] = (\n            ($num > 10 && $odd and $even) or\
    \ ($num > 10 && $odd and $first and $last)\n        );\n    }\n    return $count;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nI didn't know that \"array_count_values\" existed.\
    \ It's quite cool to have that function already available on my system. Thanks\
    \ for that hint! :-)\n<|/ c |>\n<| c |>\nThanks for the answer. I tried it and\
    \ it seems to be working well. Thank you very much. By the way, is it possible\
    \ to apply the filter to the array in the php code instead of declaring it in\
    \ another script?\n<|/ c |>\n<| c |>\nThe second argument to `array_count_values`\
    \ can be an anonymous function, e.g. `array_count_values($arr,function($v) { return\
    \ $v > 10; });`.\n<|/ c |>\n<| a tags=php,algorithm,arrays |>\nYou don't need\
    \ any sorting at all. Just traverse the array and test each element:\n<code>\n\
    $a = [10,4,21,3,44,0,-2,14,11,3,56,15,12,8,9,2,9,21,13,-22,17,9,6,7];\n\nforeach\
    \ ($a as $x) {\n    if ($x > 10 && $x % 2 == 1 && ($x % 10 == 1 || $x % 10 ==\
    \ 0)) {\n        ++$count;\n    }\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThat\
    \ won't handle negative numbers.\n<|/ c |>\n<| c |>\nThanks for the answer. I\
    \ tried it and it seems to be working well. Thank you very much. By the way, is\
    \ it possible to apply the filter to the array in the php code instead of declaring\
    \ it in another script?\n<|/ c |>\n<| c |>\nSorry, I meant to say \"is it possible\
    \ to apply the filter to the array in the php code instead of declaring it in\
    \ another script?\". Sorry for the confusion.\n<|/ c |>\n<| c |>\nIt can be done\
    \ in php but you need a function somewhere. For example \nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmplucbnxy6.php on line 22\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\
    \ \n    foreach($nums as $num) {\n        if ($num > 10) {\n            $count\
    \ = 0;\n            break;\n        }\n        if ($num % 2 == 0) {\n        \
    \    $count++;\n            if ($num % 2 != 0 && $num % 3 != 0 && $num % 5 !=\
    \ 0) {\n                $count++;\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqwnnja04.php:29\n\
    Stack trace:\n#0 /tmp/tmpqwnnja04.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqwnnja04.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 == 0) {\n  \
    \          $count++;\n        } elseif ($num > 10 && $num % 2 != 0) {\n      \
    \      $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4cfjeokp.php:25\n\
    Stack trace:\n#0 /tmp/tmp4cfjeokp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4cfjeokp.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Your code\
    \ here\n    return count($nums) >= 1 && count($nums) >= count($nums) % 2 ? count($nums)\
    \ : 0;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI am unsure of how to implement\
    \ this into my code above. Could you elaborate on how I would implement this?\
    \ Thanks\n<|/ c |>\n<| c |>\nAdded a sample that uses `specialFilter`.\n<|/ c\
    \ |>\n<| c |>\nThank you, this is exactly what I was looking for.\n<|/ c |>\n\
    <| a |>\nYou can use this function:\n<code>\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpdrtwmsf4.php on line 12\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    foreach($nums\
    \ as $num) {\n        if ($num > 10 && $num % 2 == 0 && $num % 2 != 0) {\n   \
    \         $nums[] = $num;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(15,\
    \ -73, 14, -15);\necho specialFilter($nums) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "Array\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkf57afs7.php:24\n\
    Stack trace:\n#0 /tmp/tmpkf57afs7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkf57afs7.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t\n}\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt5qajkps.php:16\n\
    Stack trace:\n#0 /tmp/tmpt5qajkps.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpt5qajkps.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count  = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            if ($num\
    \ % 2 == 1 && $num % 2 != 0) {\n                $count += 1;\n            }\n\
    \            if ($num % 2 != 0 && $num % 2 == 0) {\n                $count +=\
    \ 1;\n            }\n            if ($num % 2 == 0 && $num % 2 != 1) {\n     \
    \           $count += 1;\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7cfjtf6e.php:32\n\
    Stack trace:\n#0 /tmp/tmp7cfjtf6e.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7cfjtf6e.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    if (is_array($nums))\
    \ {\n        $count = count($nums);\n        for ($i = 0; $i < $count; $i++) {\n\
    \            if ($nums[$i] > 10 && $nums[$i] % 2 === 1 && $nums[$i-1] % 2 ===\
    \ 1 && $nums[$i+1] % 2 === 1) {\n                return $count + 1;\n        \
    \    }\n        }\n    }\n    return 0;\n}\n\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62ar6h4m.php:26\n\
    Stack trace:\n#0 /tmp/tmp62ar6h4m.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp62ar6h4m.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\tfor ($i = 0;\
    \ $i < count($nums); $i++) {\n\t\tif ($nums[$i] > 10 && $nums[$i] % 2 == 0 &&\
    \ $nums[$i] % 2 == 1) {\n\t\t\treturn $i;\n\t\t}\n\t}\n\treturn count($nums);\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8dvny33.php:21\n\
    Stack trace:\n#0 /tmp/tmpa8dvny33.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpa8dvny33.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $filtered =\
    \ array();\n    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 ===\
    \ 0 && $num % 5 === 0) {\n            array_push($filtered, $num);\n        }\n\
    \    }\n    return count($filtered);\n}\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3qe57qng.php:23\n\
    Stack trace:\n#0 /tmp/tmp3qe57qng.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3qe57qng.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $odd_sum =\
    \ array_sum($nums) % 2 == 1;\n    $sum = $odd_sum ? array_sum($nums) : $nums[0];\n\
    \    $odds = array_filter($nums, function($n) use (&$sum) { return ($n % 2 !=\
    \ 0); });\n    return ($odd_sum ? count($odds) : count(array_filter($odds, function($n)\
    \ { return ($n % 2 === 0); }))) + 1;\n}\n\nfunction candidate(...$args) {\n  \
    \  return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7bwjuf2.php:20\n\
    Stack trace:\n#0 /tmp/tmpl7bwjuf2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpl7bwjuf2.php\
    \ on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $odd = ($nums[0]\
    \ % 2 == 1) ? 1 : 0;\n    $odd_first = ($nums[0] % 2 == 1 && $nums[0] > 10) ?\
    \ 1 : 0;\n    $odd_last = ($nums[count($nums) - 1] % 2 == 1 && $nums[count($nums)\
    \ - 1] > 10) ? 1 : 0;\n    if ($odd && $odd_first && $odd_last) return 1;\n  \
    \  return count($nums) - specialFilter($nums);\n}\n\n$nums = [-15, -73, 14, -15,\
    \ 2, -34, 0, 8, 0, -3, 0, 3, -33, 0, 4, -1, -34, -5, 45, -21, -109];\n$num_arr\
    \ = explode(', ', $nums);\n$num_arr = array_map('trim', $num_arr);\nvar_dump(specialFilter($num_arr));\n\
    </code>\n<|/ a tags=arrays,php,recursion dscore=0 |>\n<| a |>\nHere's one way\
    \ to do it. It's not that fancy though, but will get the job done.\n<code>\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfv9nq9tb.php on line 20\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = count($nums);\n\
    \    $sum = 0;\n    foreach($nums as $num){\n        if ($num > 10 and $num %\
    \ 2 == 0 and $num % 2 != 0){\n            $sum += $count;\n        }\n    }\n\
    \    return $sum;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpakui5x1k.php:24\n\
    Stack trace:\n#0 /tmp/tmpakui5x1k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpakui5x1k.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n\t$len = count($nums);\n\
    \tif ($len == 0)\n\t\treturn;\n\tfor ($i = 0; $i < $len; ++$i) {\n\t\t$cur = $nums[$i];\n\
    \t\tfor ($j = 0; $j < $len; ++$j) {\n\t\t\tif ($i == $j || $nums[$j] > 10)\n\t\
    \t\t\tbreak;\n\t\t\t$cur *= 2;\n\t\t\tif ($cur > 100)\n\t\t\t\treturn $len;\n\t\
    \t}\n\t\tif ($j == $len - 1)\n\t\t\treturn $i + 1;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewoilnvv.php:30\n\
    Stack trace:\n#0 /tmp/tmpewoilnvv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpewoilnvv.php\
    \ on line 30\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    array_walk($nums,\
    \ function(&$num) {\n        if ($num > 10 && $num % 2 === 1 && $num % 3 === 0)\
    \ {\n            $num++;\n        }\n    });\n    return count($nums);\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nYou might want to explain your code a little\
    \ bit, it's easier to understand it that way.\n<|/ c |>\n<| c |>\nI agree with\
    \ you but I'm just wondering why not use `in_array()`?\n<|/ c |>\n<| c |>\n, I\
    \ don't think you can pass a callback to `in_array()` -- it only accepts a single\
    \ value -- so you would need `array_walk()`.\n<|/ c |>\n<| c |>\nAh yes, I see\
    \ now. Thanks\n<|/ c |>\n<| c |>\n: I wanted to use `array_filter()`, but the\
    \ example was just too simple to show that. I think I may have forgotten something\
    \ when I tried to implement the code using `array_filter()` -- I guess I should\
    \ have tested it before posting\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpfvw5af9n.php on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  // Loop through each element in nums\n  foreach ($nums as $num) {\n    // If\
    \ first and last digits of number are odd, increment the counter\n    // and move\
    \ on\n    if (is_array($num) && count($num) == 2 && ($num[0] % 2 === 1 && $num[1]\
    \ % 2 === 1)) {\n      $count++;\n      continue;\n    }\n    // If number is\
    \ greater than 10, increment counter and move on\n    if (is_array($num) && count($num)\
    \ == 1 && $num[0] > 10) {\n      $count++;\n      continue;\n    }\n  }\n  return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsk5ylrqk.php:32\n\
    Stack trace:\n#0 /tmp/tmpsk5ylrqk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsk5ylrqk.php\
    \ on line 32\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \n    foreach ($nums as $num) {\n        if ($num > 10) {\n            if ($num\
    \ % 2 == 1) {\n                $result++;\n            }\n        }\n    }\n\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafa0129p.php:29\n\
    Stack trace:\n#0 /tmp/tmpafa0129p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpafa0129p.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $filtered = array_filter($nums,\
    \ function($value) {\n    return $value > 10 and (odd($value) or even($value));\n\
    \  });\n  return count($filtered);\n}\n</code>\n<|/ a tags=php,arrays,if-statement\
    \ dscore=0 |>\n<| a tags=php,arrays,if-statement |>\nFor those who would like\
    \ to use a more readable way, here is an example \n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmph926xrxk.php on line 14\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // your code\
    \ here\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_zo_at0.php:16\n\
    Stack trace:\n#0 /tmp/tmpy_zo_at0.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy_zo_at0.php\
    \ on line 16\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    return $nums_array->filter->filter(function($value)\
    \ use ($num_array) { \n    return $num_array->where->filter->filter(function($num_value)\
    \ use ($value) { \n    if ($value % 2 === 0){\n    return ($num_value % 2 ===\
    \ 0);\n    }\n    if ($num_value % 2 !== 0) {\n    return ($num_value > 10 &&\
    \ $num_value % 2 === 1);\n    }\n    return ($num_value > 10 && $num_value % 2\
    \ === 0);\n    });\n    });\n    }\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to a member function filter() on null\
    \ in /tmp/tmp5mf_4312.php:9\nStack trace:\n#0 /tmp/tmp5mf_4312.php(22): specialFilter(Array)\n\
    #1 /tmp/tmp5mf_4312.php(26): candidate(Array)\n#2 /tmp/tmp5mf_4312.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5mf_4312.php on line 9\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 == 0 && $num\
    \ % 2 != 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4j7r1gxj.php:24\n\
    Stack trace:\n#0 /tmp/tmp4j7r1gxj.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4j7r1gxj.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    foreach ($nums as $num) {\n        if (($num > 10) && ($num % 2 === 1) &&\
    \ ($num % 2 === 0)) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }\n\n$numbers = [15, -73, 14, -15, -33, -2, -3, 4, 45, 21, 109];\n$answer = 0;\n\
    $count = specialFilter($numbers);\necho $count;\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk950q13x.php:28\n\
    Stack trace:\n#0 /tmp/tmpk950q13x.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk950q13x.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Write your\
    \ function here\n    $result = 0;\n    foreach($nums as $num) {\n        if($num\
    \ > 10 && $num % 2 != 0 && $num % 1 != 0 && $num % 3 == 0) {\n            $result++;\n\
    \        }\n    }\n    return $result;\n}\n</code>\n<|/ a dscore=0 tags=arrays,php\
    \ |>\n<| c |>\nIf this is an assignment, please mark as homework first.\n<|/ c\
    \ |>\n<| c |>\nNot sure what that means. What do you mean by homework?\n<|/ c\
    \ |>\n<| c |>\nIt's a homework assignment. It's not an assignment in any meaning.\n\
    <|/ c |>\n<| c |>\nMy apologies if I offended you with that. I am new to this\
    \ and still trying to wrap my head around the logic behind this and why it works.\
    \ Also, I don't really understand why you took away the if statement. Could you\
    \ elaborate?\n<|/ c |>\n<| c |>\nThe if statement checks if the number is even.\
    \ Even numbers have an even first and last digit. Even numbers are also divisible\
    \ by 3. The if statement returns true if the number is greater than 10 and both\
    \ first and last digits are odd.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n\
    <?php\n$array = array(15, -73, 14, -15);\necho \"There are $array[0] values that\
    \ are even and first and last digits are odd\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmppwz6doga.php on line 18\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // TODO: Implement\
    \ specialFilter here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ao4xl5o.php:17\n\
    Stack trace:\n#0 /tmp/tmp6ao4xl5o.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6ao4xl5o.php\
    \ on line 17\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    // Write your\
    \ code here\n    $count=0;\n    foreach($nums as $num){\n        if($num>10 &&\
    \ $num%2==0 && $num>($num/2)+1){\n            $count++;\n        }\n    }\n  \
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_a9x1rz5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_a9x1rz5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_a9x1rz5.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $filteredArray\
    \ = array();\n    foreach ($nums as $num) {\n        if ($num > 10 && preg_match('/[13579]/',\
    \ $num)) {\n            $filteredArray[] = $num;\n        }\n    }\n    return\
    \ count($filteredArray);\n}\n\n$myList = [5, 15, -73, 14, -15, 33, -2, -3, 45,\
    \ 21, 109];\n$myCount = specialFilter($myList);\n$myCount = specialFilter($myList);\n\
    $myCount = specialFilter($myList);\n$myCount = specialFilter($myList);\n$myCount\
    \ = specialFilter($myList);\n$myCount = specialFilter($myList);\n$myCount = specialFilter($myList);\n\
    $myCount = specialFilter($myList);\n$myCount = specialFilter($myList);\n$myCount\
    \ = specialFilter($myList);\n$myCount = specialFilter($myList);\n$myCount = specialFilter($myList);\n\
    \necho $myCount;\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0854q0m1.php:40\n\
    Stack trace:\n#0 /tmp/tmp0854q0m1.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp0854q0m1.php\
    \ on line 40\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = $result\
    \ = $length = 1;\n    foreach ($nums as $n) {\n        if ($n > 10 && $n % 2 !=\
    \ 0 && $n % 1 != $nums[$i - 1]) {\n            $count++;\n        } else {\n \
    \           $result++;\n            $length++;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpww9mx9et.php:25\n\
    Stack trace:\n#0 /tmp/tmpww9mx9et.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpww9mx9et.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $i = 0;\n \
    \   $oddSum = 0;\n    while ($i < count($nums)) {\n        if ($nums[$i] > 10\
    \ && $nums[$i] % 2 == 0 && $nums[$i - 1] % 2 == 0) {\n            $oddSum += 1;\n\
    \        }\n        $i++;\n    }\n    return $oddSum;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojp4ngxm.php:25\n\
    Stack trace:\n#0 /tmp/tmpojp4ngxm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpojp4ngxm.php\
    \ on line 25\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    foreach($nums as $num) {\n        if ($num > 10 && is_odd($num) && is_odd($num\
    \ % 10)) {\n            $result++;\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_odd() in /tmp/tmpmwgv5l_4.php:11\n\
    Stack trace:\n#0 /tmp/tmpmwgv5l_4.php(19): specialFilter(Array)\n#1 /tmp/tmpmwgv5l_4.php(24):\
    \ candidate(Array)\n#2 /tmp/tmpmwgv5l_4.php(32): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpmwgv5l_4.php on line 11\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n   $count = $odd\
    \ = 0;\n   foreach ($nums as $num) {\n      if($num > 10 && $num % 2 == 0 && $num\
    \ % 2 != 0) {\n         $count++;\n      }\n      if($num > 10 && $num % 2 ==\
    \ 1 && $num % 2 != 0) {\n         $odd++;\n      }\n   }\n   return $count * $odd;\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdch3b8_r.php:26\n\
    Stack trace:\n#0 /tmp/tmpdch3b8_r.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdch3b8_r.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    foreach ($nums\
    \ as $num) {\n        if ($num > 10 && $num % 2 == 1 && $num % 2 == 0) {\n   \
    \         $result[] = $num;\n        }\n    }\n    return count($result);\n}\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpuuacqtcm.php on line 14\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmpuuacqtcm.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuuacqtcm.php:23\n\
    Stack trace:\n#0 /tmp/tmpuuacqtcm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpuuacqtcm.php\
    \ on line 23\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n   $lengthArray\
    \ = count($nums);\n   $oddArray = array_filter($nums, \"odd\");\n   $firstArray\
    \ = array_filter($nums, \"odd\", \"first\");\n   $lastArray = array_filter($nums,\
    \ \"odd\", \"last\");\n   return $lengthArray - array_sum($oddArray) - array_sum($firstArray)\
    \ - array_sum($lastArray);\n}\necho \"The number of numbers that are greater than\
    \ 10 and both first and last digits are odd: \" . specialFilter([15, -73, 14,\
    \ -15]);\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'odd' not found or invalid function name in /tmp/tmpkw5dh92d.php on line 10\n\
    \nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'odd' not found or invalid function name in /tmp/tmpkw5dh92d.php on line 11\n\
    \nWarning: array_filter() expects parameter 2 to be a valid callback, function\
    \ 'odd' not found or invalid function name in /tmp/tmpkw5dh92d.php on line 12\n\
    \nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpkw5dh92d.php\
    \ on line 13\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpkw5dh92d.php on line 13\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpkw5dh92d.php on line 13\nThe number of\
    \ numbers that are greater than 10 and both first and last digits are odd: 4\n\
    Warning: array_filter() expects parameter 2 to be a valid callback, function 'odd'\
    \ not found or invalid function name in /tmp/tmpkw5dh92d.php on line 10\n\nWarning:\
    \ array_filter() expects parameter 2 to be a valid callback, function 'odd' not\
    \ found or invalid function name in /tmp/tmpkw5dh92d.php on line 11\n\nWarning:\
    \ array_filter() expects parameter 2 to be a valid callback, function 'odd' not\
    \ found or invalid function name in /tmp/tmpkw5dh92d.php on line 12\n\nWarning:\
    \ array_sum() expects parameter 1 to be array, null given in /tmp/tmpkw5dh92d.php\
    \ on line 13\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpkw5dh92d.php on line 13\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpkw5dh92d.php on line 13\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpkw5dh92d.php:21\nStack trace:\n\
    #0 /tmp/tmpkw5dh92d.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpkw5dh92d.php\
    \ on line 21\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $newNums =\
    \ [];\n    foreach($nums as $num) {\n        if (is_int($num)) {\n           \
    \ $newNums[] = $num;\n        } elseif (is_float($num)) {\n            $newNums[]\
    \ = $num;\n        } elseif (is_string($num)) {\n            $newNums[] = $num;\n\
    \        }\n    }\n    return count($newNums);\n}\n\n$nums = [-15, 0, 45, 33,\
    \ 21, 10, 19, 23, -7, 14, -9, -19, 12, -29, 14, -12, 10, -8, -3, 12, -39, -20,\
    \ -29, -7, 9, -10, 5, -24, 33, -8, 23, -50, -20, -9];\necho specialFilter($nums)\
    \ . \"\\n\";\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\nOk, here is a solution\
    \ that uses the filter function in PHP. This is a simple function that should\
    \ return an array with all the elements below 10 that have an even first digit\
    \ and an even last digit.\n<code>\n<?php\nfunction candidate(...$args) {\n   \
    \ return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nParse error: syntax error in /tmp/tmpvegtlrql.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 === 1 && $num % 100\
    \ === 11) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_7ydm9q.php:24\n\
    Stack trace:\n#0 /tmp/tmp5_7ydm9q.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5_7ydm9q.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $first = 0;\n\
    \    $last = 0;\n    $sum = 0;\n    \n    foreach ($nums as $num) {\n        if\
    \ ($num > 10) {\n            $sum += 1;\n        }\n        if ($num > 0) {\n\
    \            $first = $num;\n        }\n        if ($num < 0) {\n            $last\
    \ = $num;\n        }\n    }\n    \n    if ($sum < 2) {\n        return 0;\n  \
    \  }\n    else {\n        return ($sum - 1) * (($first + 1) % 2) + ($sum - 1)\
    \ * $last + $sum;\n    }\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zdhij2j.php:39\n\
    Stack trace:\n#0 /tmp/tmp3zdhij2j.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp3zdhij2j.php\
    \ on line 39\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $result = 0;\n\
    \    foreach($nums as $num) {\n        if($num > 10 && $num % 2 == 1 && $num %\
    \ 2 != 0) {\n            $result++;\n        }\n    }\n    return $result;\n}\n\
    $nums = [15, -73, 14, -15];\necho specialFilter($nums) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb3cnsz06.php:26\n\
    Stack trace:\n#0 /tmp/tmpb3cnsz06.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpb3cnsz06.php\
    \ on line 26\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = count($nums);\n\
    \    for($i=0; $i < $count; $i++) {\n        if ($nums[$i] > 10 && $nums[$i] %\
    \ 2 != 0) {\n            $even = true;\n            $first = $nums[$i] % 10;\n\
    \            for($j=$i; $j < $count; $j++) {\n                if ($nums[$j] >\
    \ 10 && $nums[$j] % 2 != 0 && $first == $nums[$j] % 10) {\n                  \
    \  $even = false;\n                    break;\n                }\n           \
    \ }\n            if ($even && $first % 2 != 0) {\n                $count--;\n\
    \            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbywabo4m.php:33\n\
    Stack trace:\n#0 /tmp/tmpbywabo4m.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpbywabo4m.php\
    \ on line 33\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $n = count($nums);\n\
    \    $result = 0;\n    foreach ($nums as $k=>$v)\n        if ($v > 10 && $k %\
    \ 2 != 0 && $k % 1 != 0)\n            $result++;\n    return $result;\n}\necho\
    \ \"Number of odd numbers that have a first and last digit that are odd are \"\
    .specialFilter($nums).\"\\n\";\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpt2hirgrl.php on line 9\n\nWarning: Invalid argument supplied\
    \ for foreach() in /tmp/tmpt2hirgrl.php on line 11\nNumber of odd numbers that\
    \ have a first and last digit that are odd are 0\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpt2hirgrl.php:24\nStack trace:\n#0 /tmp/tmpt2hirgrl.php(32):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt2hirgrl.php on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    foreach ($nums\
    \ as $key => $value) {\n        if ($value > 10) {\n            $temp = explode('-',\
    \ $value);\n            list($first, $last) = explode('-', $temp[0]);\n      \
    \      if ($first & 1) $first += 1;\n            if ($last & 1) $last += 1;\n\
    \            if ($first == $last) {\n                $results[] = $value;\n  \
    \          }\n        }\n    }\n    return count($results);\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmprmqze3dc.php on line 20\n\nWarning: count(): Parameter\
    \ must be an array or an object that implements Countable in /tmp/tmprmqze3dc.php\
    \ on line 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprmqze3dc.php:29\n\
    Stack trace:\n#0 /tmp/tmprmqze3dc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprmqze3dc.php\
    \ on line 29\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num%2 == 0 && $num%2\
    \ != 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppp8rbaym.php:24\n\
    Stack trace:\n#0 /tmp/tmppp8rbaym.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppp8rbaym.php\
    \ on line 24\n"
  stderr: ''
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// specialFilter([15, -73, 14, -15]) => 1 \n// specialFilter([33,\
    \ -2, -3, 45, 21, 109]) => 2\nfunction specialFilter($nums) {\n  // This solution\
    \ was suggested by Jonathan Wage at https://gist.github.com/jonathanwage/497341\n\
    \  $n = count($nums);\n  for ($i = 0; $i < $n; ++$i) {\n    $firstDigit = $nums[$i]\
    \ % 10;\n    $lastDigit = $nums[$i] / 10;\n\n    if ($firstDigit % 2 == 0 && $lastDigit\
    \ % 2 != 0) {\n      return $n;\n    }\n  }\n\n  return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqd7jnli.php:28\n\
    Stack trace:\n#0 /tmp/tmpcqd7jnli.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcqd7jnli.php\
    \ on line 28\n"
  stderr: ''
  exit_code: 255
  status: Exception

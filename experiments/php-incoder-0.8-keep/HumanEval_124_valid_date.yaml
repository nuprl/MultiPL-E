name: HumanEval_124_valid_date
language: php
prompt: "<?php\n// You have to write a function which validates a given date string\
  \ and\n// returns True if the date is valid otherwise False.\n// The date is valid\
  \ if all of the following rules are satisfied:\n// 1. The date string is not empty.\n\
  // 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
  \ And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
  \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
  // 3. The months should not be less than 1 or higher than 12.\n// 4. The date should\
  \ be in the format: mm-dd-yyyy\n// for example: \n// valid_date('03-11-2000') =>\
  \ True\n// valid_date('15-01-2012') => False\n// valid_date('04-0-2040') => False\n\
  // valid_date('06-04-2020') => True\n// valid_date('06/04/2020') => False\nfunction\
  \ valid_date($date) {\n"
tests: "function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    //Your code here\n}\n</code>\n<|/ a |>\n<| c |>\nOk, I understand\
    \ now, I was just confused on how to do it in PHP. Thank you, I will take a look\
    \ at this and try to implement it.\n<|/ c |>\n<| c |>\nI tried to implement it,\
    \ but I get a syntax error, unexpected '<'\n<|/ c |>\n<| c |>\nI used the code\
    \ you gave me, but I still get an error\n<|/ c |>\n<| c |>\nI updated my answer,\
    \ please have a look\n<|/ c |>\n<| c |>\nIt says unexpected \"<\" when I run the\
    \ php script\n<|/ c |>\n<| a |>\nI made a quick test and I think this is what\
    \ you are looking for.\n<code>", "    //Write your code here\n    if (empty($date))\
    \ {\n        return false;\n    }\n    $year = substr($date,5,2);\n    $month\
    \ = substr($date,0,2);\n    $day = substr($date,3,2);\n    $months = array(\n\
    \        1 => 31,\n        3 => 31,\n        5 => 31,\n        7 => 31,\n    \
    \    8 => 31,\n        10 => 31,\n        12 => 31,\n        2 => 30,\n      \
    \  4 => 31,\n        6 => 30,\n        9 => 31,\n        11 => 30\n    );\n  \
    \  $days_month = floor((13 * $month + $year - floor($year / 100) - floor($year\
    \ / 400) + $day) / 30);\n    if ($day < 1 || $day > $days_month) {\n        return\
    \ false;\n    }\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($year < 100 || $year > 9999 || $month >= 12) {\n        return\
    \ false;\n    }\n    return true;\n}\n", "    if(!empty($date)) {\n        $date_parts\
    \ = explode('-', $date);\n        $date = $date_parts[1] . '-' . $date_parts[0]\
    \ . '-' . $date_parts[2];\n        $day = date('j', strtotime($date));\n     \
    \   $month = date('n', strtotime($date));\n        $year = date('Y', strtotime($date));\n\
    \        $month = abs($month);\n        if($month < 1 || $month > 12) {\n    \
    \        return false;\n        }\n        if($day < 1 || $day > $month) {\n \
    \           return false;\n        }\n        if($day > 31) {\n            if($month\
    \ == 2) {\n                return false;\n            }\n        }\n        if($day\
    \ > 30) {\n            if($month == 1 && $day > 29) {\n                return\
    \ false;\n            }\n        }\n        if($month == 1 && $day > 28) {\n \
    \           return false;\n        }\n        if($year < 2000 || $year > 2040)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n", "  \
    \  if(!empty($date)){\n        $date_components = explode(\"-\", $date);\n   \
    \     $month = $date_components[0];\n        $day = $date_components[1];\n   \
    \     $year = $date_components[2];\n\n        $months_array = array('01', '03',\
    \ '05', '07', '08', '10', '12');\n        $days_array = array('01', '03', '05',\
    \ '07', '08', '10', '12', '31', '30', '29');\n\n        $is_valid_day = ($months_array[$month-1]\
    \ <= $day && $day <= $days_array[$month-1]);\n        $is_valid_month = ($months_array[$month-1]\
    \ <= $day && $day <= $days_array[$month-1]);\n        $is_valid_year = ($months_array[$month-1]\
    \ <= $day && $day <= $days_array[$month-1]);\n\n        if($month-1 >= 1 && $month-1\
    \ <= 12 && $day >= 1 && $day <= 31){\n            $is_valid_month = true;\n  \
    \      }\n        if($month-1 >= 4 && $month-1 <= 11 && $day >= 1 && $day <= 30){\n\
    \            $is_valid_month = true;\n        }\n        if($day >= 1 && $day\
    \ <= 29 && $month-1 >= 1 && $month-1 <= 12){\n            $is_valid_day = true;\n\
    \        }\n\n        if($is_valid_day && $is_valid_month && $is_valid_year){\n\
    \            return true;\n        }else{\n            return false;\n       \
    \ }\n    }else{\n        return false;\n    }\n}\n", "    if (!$date) return false;\
    \ // 1\n    if (strlen($date) < 1 || strlen($date) > 31) return false;// 2\n \
    \   if (in_array($date[0],array('1','3','5','7','8','10','12')) === false) return\
    \ false;// 3\n    if (in_array($date[1],array('4','6','9','11')) === false) return\
    \ false;// 4\n    if (in_array($date[2],array('2')) === false) return false;//\
    \ 5\n    $d = explode('-',$date);\n    if (count($d) != 3) return false;// 6\n\
    \    $d = explode(' ',$d[2]);\n    if (count($d) != 3) return false;// 7\n   \
    \ if (checkdate($d[1],$d[0],$d[2])) return true;// 8\n    return false;// 9\n}",
  "    // Your code goes here.\n    \n    // Validating date format\n    if ($date\
    \ == '') return false;\n    $format = explode('-', $date);\n    $date_obj = new\
    \ Datetime($date);\n    if (count($format) != 3 || $format[2] != '-' || $format[1]\
    \ != '-' || $format[0] != $date_obj->format('m-d-Y')) return false;\n    \n  \
    \  // Validating date validity\n    $months = array(1,2,3,4,5,6,7,8,9,10,11,12);\n\
    \    $days_count = array(31,28,31,30,31,30,31,30,31,30,31);\n    $months_count\
    \ = array(1,3,5,7,8,10,12);\n    $is_valid_month = $months[$format[1]-1] >= $months_count[$format[1]-1];\n\
    \    $is_valid_day = $days_count[$format[2]-1] >= $days_count[$format[2]-1] &&\
    \ $is_valid_month;\n    \n    if ($format[1] > 12 || $format[2] > 31) return false;\n\
    \    \n    return $is_valid_day && $is_valid_month;\n}", "    $pattern = \"/^(0?[1-9]|1[012])[-\
    \ /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d$/\";\n    if (!preg_match($pattern,\
    \ $date)) {\n        return false;\n    }\n    $days_in_months = array(31, 28,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n    $days_in_months_index = array(1,\
    \ 2, 4, 6, 9, 11); // valid months\n    $months_index = range(1, 12); // valid\
    \ months\n    $years_index = range(1900, 2010);\n    if (!in_array(date('m', strtotime($date)),\
    \ $months_index)) {\n        return false;\n    }\n    if (!in_array(date('t',\
    \ strtotime($date)), $days_in_months)) {\n        return false;\n    }\n    if\
    \ (!in_array(date('Y', strtotime($date)), $years_index)) {\n        return false;\n\
    \    }\n    return true;\n}", "    $date = explode('/', $date);\n    if ( isset($date[0])\
    \ && isset($date[1]) && isset($date[2]) ) {\n        $date1 = $date[2];\n    \
    \    if ( in_array($date[1], $validMonths) && in_array($date[1], $validDays) )\
    \ {\n            if ( (intval($date[2]) > 0 && intval($date[2]) < 31) || \n  \
    \                  (intval($date[2]) > 0 && intval($date[2]) < 30) ) {\n     \
    \           if ( (intval($date[1]) > 1 && intval($date[1]) < 12) || \n       \
    \                 (intval($date[1]) > 12 && intval($date[1]) < 20) ) {\n     \
    \               if ( (intval($date[0]) > 0 && intval($date[0]) < 13) || \n   \
    \                         (intval($date[0]) > 13 && intval($date[0]) < 25) ) {\n\
    \                        return true;\n                    }\n               \
    \ }\n            }\n        }\n    }\n    return false;\n}\n", "    if(empty($date))\
    \ return false;\n\n    if(substr_count($date,'-') > 2) {\n        return false;\n\
    \    }\n    $dateArray = explode('-',$date);\n    if(count($dateArray) != 3) {\n\
    \        return false;\n    }\n    $year = array_shift($dateArray);\n    $month\
    \ = array_shift($dateArray);\n    $day = array_shift($dateArray);\n    if($month\
    \ < 1 || $month > 12) return false;\n    if($day < 1 || $day > 31) return false;\n\
    \    if(($year % 4 == 0 && $year % 100 != 0) || $year % 400 == 0) return true;\n\
    \n    $isLeap = false;\n    if($month == 2) {\n        $month = 1;\n        $day\
    \ = 31;\n    }\n    if($month == 1) {\n        $month = 31;\n        $isLeap =\
    \ true;\n    }\n\n    $daysInMonth = 0;\n    if($month == 2) {\n        $daysInMonth\
    \ = 29;\n    }\n    if($month == 1) {\n        $daysInMonth = is_leap($year) ?\
    \ 29 : 28;\n    }\n    return $day <= $daysInMonth && $day >= 1;\n}\n", "    if(empty($date))\
    \ {\n        return false;\n    }\n\n    $date = trim($date);\n    $parts = explode('-',\
    \ $date);\n    if(count($parts) != 3) return false;\n\n    $month = $parts[0];\n\
    \    $day = $parts[1];\n    $year = $parts[2];\n    if($month < 1 || $month >\
    \ 12) return false;\n    if($day < 1 || $day > 31) return false;\n    if($month\
    \ == 2) {\n        if($day > 28) return false;\n        if($day == 28 && $year\
    \ % 100 == 0 && ($year % 400 != 0 || $year % 4 != 0)) return false;\n    }\n \
    \   return true;\n}\n\n$date = '31-12-2000';\n$valid = valid_date($date);\nvar_dump($valid);\
    \ // true\n</code>\n<|/ a tags=regex,date,php |>\n<| c |>\nthanks for your answer.\
    \ but how can i check a date like: 15-jan-2000? because this doesn't work with\
    \ the function you provide.\n<|/ c |>\n<| c |>\nWhat do you mean? This works perfectly\
    \ with `31-12-2000` as date.\n<|/ c |>\n<| c |>\n: That's because `15` is not\
    \ a month.\n<|/ c |>\n<| c |>\nYeah. I've updated my answer. I added month and\
    \ year checks too. Now, it will work for `15-jan-2000`\n<|/ c |>\n<| c |>\nit\
    \ isn't working with this format: 15-feb-2000\n<|/ c |>\n<| a tags=regex,date,php\
    \ |>\nYou could do it in a number of ways, but here's an example:\n<code>\n<?php\n",
  "    $pattern = \"/^([\\d]{1,2})-([\\d]{1,2})-([\\d]{4})$/\";\n    if (preg_match($pattern,\
    \ $date, $regs)) {\n        $day = $regs[1];\n        $month = $regs[2];\n   \
    \     $year = $regs[3];\n        if ($day > 31 && $day < 1) {\n            $error_arr[]\
    \ = 'Number of days is not valid for months 1,3,5,7,8,10,12. And the number of\
    \ days is not valid for months 4,6,9,11. And, the number of days is not valid\
    \ for month 2.';\n        } else if ($month > 12 || $month < 1) {\n          \
    \  $error_arr[] = 'Number of month is not valid for month 1.';\n        } else\
    \ if ($month == 2) {\n            if ($day > 29) {\n                $error_arr[]\
    \ = 'Number of days is not valid for month 2.';\n            } else if ($day <\
    \ 1) {\n                $error_arr[] = 'Number of days is not valid for month\
    \ 2.';\n            } else if ($day == 31) {\n                $error_arr[] = 'Number\
    \ of days is not valid for month 2.';\n            }\n        } else {\n     \
    \       if ($day > 30 && $day < 1) {\n                $error_arr[] = 'Number of\
    \ days is not valid for months 4,6,9,11. And, the number of days is not valid\
    \ for month 2.';\n            } else if ($day < 1) {\n                $error_arr[]\
    \ = 'Number of days is not valid for month 2.';\n            } else if ($day ==\
    \ 31) {\n                $error_arr[] = 'Number of days is not valid for month\
    \ 2.';\n            }\n        }\n        if ($error_arr) {\n            $error_str\
    \ = \"<ul style='list-style-type: none;'>\";\n            foreach ($error_arr\
    \ as $value) {\n                $error_str .= $value;\n            }\n       \
    \     $error_str .= \"</ul>\";\n            $error_message = $error_str;\n   \
    \         $error = true;\n            $valid = false;\n        } else {\n    \
    \        $valid = true;\n            $error_message = \"<ul style='list-style-type:\
    \ none;'>\";\n        }\n    } else {\n        $error_message = \"Date format\
    \ is not valid (MM-DD-YYYY)\";\n        $error = true;\n        $valid = false;\n\
    \    }\n    return $valid;\n}", "    $date = preg_replace(\"/(\\d{1,2})-(\\d{1,2})-(\\\
    d{4})/\", '$3-$1-$2', $date);\n    $array = explode('-', $date);\n    if(count($array)\
    \ != 3) return false;\n    for($i = 1; $i < 3; $i++) {\n        if($array[$i]\
    \ < 1 || $array[$i] > 12) return false;\n    }\n    $month = date('m');\n    $day\
    \ = date('d');\n    if($array[$i] > $month) return false;\n    if($array[$i] >=\
    \ $month) {\n        $days_in_month = cal_days_in_month(CAL_GREGORIAN, $month,\
    \ $array[$i]);\n        if($days_in_month < 1 || $days_in_month > 31) return false;\n\
    \    }\n    $days_in_year = cal_days_in_year(CAL_GREGORIAN, date('Y'));\n    if($array[$i]\
    \ > $days_in_year) return false;\n    if($array[$i] >= $days_in_year) {\n    \
    \    $days_in_this_year = cal_days_in_year(CAL_GREGORIAN, date('Y'));\n      \
    \  if($array[$i] < 1 || $array[$i] > $days_in_this_year) return false;\n    }\n\
    \    $days_in_month_in_this_year = cal_days_in_month(CAL_GREGORIAN, date('Y'),\
    \ $array[$i]);\n    if($days_in_month_in_this_year < 1 || $days_in_month_in_this_year\
    \ > $days_in_year) return false;\n    $days_in_this_month_in_this_year = cal_days_in_month(CAL_GREGORIAN,\
    \ date('Y'), $array[$i]);\n    if($array[$i] < 1 || $array[$i] > $days_in_this_month_in_this_year)\
    \ return false;\n    return true;\n}", "    $date = date_parse($date);\n    if\
    \ ($date === false) {\n        return false;\n    }\n    if ($date['error_count']\
    \ > 0) {\n        return false;\n    }\n    $date['year'] = $date['year'];\n \
    \   $date['month'] = $date['month'];\n    $date['day'] = $date['day'];\n    if\
    \ ($date['month'] < 1 || $date['month'] > 12) {\n        return false;\n    }\n\
    \    if ($date['day'] < 1 || $date['day'] > 31) {\n        return false;\n   \
    \ }\n    if ($date['month'] < 4 || $date['month'] > 2) {\n        return false;\n\
    \    }\n    if ($date['day'] < 1 || $date['day'] > 29) {\n        return false;\n\
    \    }\n    if ($date['year'] < 1000 || $date['year'] > 2999) {\n        return\
    \ false;\n    }\n    return date(\"m-d-Y\", strtotime($date['year'].'-'.$date['month'].'-'.$date['day']));\n\
    }", "    // Your code goes here\n    $pattern = '/^(\\d{1,2}[-\\/]\\d{1,2}[-\\\
    /]\\d{4})$/';\n    $date_pattern = preg_match($pattern, $date);\n    if($date_pattern)\
    \ {\n        $days_in_months = array(31,28,31,30,31,30,31,30,31,30,31);\n    \
    \    $days_in_months[2] = 29;\n        $days_in_months[1] = 28;\n        $months_in_years\
    \ = array(12,3,5,7,8,10,12);\n        $months_in_years[2] = 4;\n        $months_in_years[1]\
    \ = 6;\n        $date_pattern = preg_match($pattern, $date);\n        if($date_pattern)\
    \ {\n            $date_pattern = preg_match($pattern, $date);\n            if($date_pattern)\
    \ {\n                $date_pattern = preg_match($pattern, $date);\n          \
    \      if($date_pattern) {\n                    $date_pattern = preg_match($pattern,\
    \ $date);\n                    if($date_pattern) {\n                        $date_pattern\
    \ = preg_match($pattern, $date);\n                        if($date_pattern) {\n\
    \                            $date_pattern = preg_match($pattern, $date);\n  \
    \                          if($date_pattern) {\n                             \
    \   $date_pattern = preg_match($pattern, $date);\n                           \
    \     if($date_pattern) {\n                                    $date_pattern =\
    \ preg_match($pattern, $date);\n                                    if($date_pattern)\
    \ {\n                                        $date_pattern = preg_match($pattern,\
    \ $date);\n                                        if($date_pattern) {\n     \
    \                                       $date_pattern = preg_match($pattern, $date);\n\
    \                                            if($date_pattern) {\n           \
    \                                     return true;\n                         \
    \                   } else {\n                                               \
    \ return false;\n                                            }\n             \
    \                           } else {\n                                       \
    \     return false;\n                                        }\n             \
    \                       } else {\n                                        return\
    \ false;\n                                    }\n                            \
    \    } else {\n                                    return false;\n           \
    \                     }\n                            } else {\n              \
    \                  return false;\n                            }\n            \
    \            } else {\n                            return false;\n           \
    \             }\n                    } else {\n                        return\
    \ false;\n                    }\n                } else {\n                  \
    \  return false;\n                }\n            } else {\n                return\
    \ false;\n            }\n        } else {\n            return false;\n       \
    \ }\n    } else {\n        return false;\n    }\n}\n\n$today = date(\"d-m-Y\"\
    );\nif(valid_date($today)) {\n    echo \"valid date <br>\";\n} else {\n    echo\
    \ \"Invalid date <br>\";\n}\n", "  $date_array = explode('-', $date);\n\n  if(!empty($date_array))\
    \ {\n    $day = $date_array[0];\n    $month = $date_array[1];\n    $year = $date_array[2];\n\
    \n    // Check date validity\n    if ( checkdate($month, $day, $year) ) {\n  \
    \    if (($day <= 31) && ($day >= 1) && $day <= 29) {\n        if(($month <= 12)\
    \ && ($month >= 1)) {\n          if (($year <= 99) && ($year >= 2000)) {\n   \
    \         return true;\n          }\n        }\n      }\n    }\n  }\n\n  return\
    \ false;\n}\n", "    $months = array(1,3,5,7,8,10,12);\n    $days = array(1,30,29,31);\n\
    \    $months = array(4,6,9,11);\n    $date = explode('-', $date);\n    if ($date[0]\
    \ > 0 && $date[1] > 0 && $date[2] > 0 && $date[0] < 13 && $date[1] < 32 && $date[2]\
    \ < 32 && in_array($date[1],$months) && in_array($date[2],$days) && $date[0] <\
    \ 12 && $date[1] < 31 && $date[2] < 31) {\n        return TRUE;\n    }\n    return\
    \ FALSE;\n}\n", "  $date_check = false;\n  if (!empty($date)) {\n    $date = explode(\"\
    -\", $date);\n    $date = explode(\"/\", $date[0]);\n    $date = explode(\":\"\
    , $date[0]);\n    $date = explode(\" \", $date[0]);\n    if ($date[0] > \"12\"\
    \ || $date[0] < \"01\") {\n      $date_check = false;\n    } else {\n      $day_diff\
    \ = 0;\n      if ($date[1] < \"01\") {\n        $day_diff += $date[1];\n     \
    \ }\n      if ($date[2] < \"01\") {\n        $day_diff += $date[2];\n      }\n\
    \      if ($date[0] < \"12\") {\n        $day_diff += $date[0];\n      }\n   \
    \   if ($date[0] > \"12\") {\n        $day_diff += $date[0] - $date[1] - 1;\n\
    \      }\n      if ($day_diff < 1 || $day_diff > 31) {\n        $date_check =\
    \ false;\n      } else {\n        $date_check = true;\n      }\n    }\n  }\n \
    \ return $date_check;\n}", "    if (!empty($date)) {\n        if (preg_match('/^(\\\
    d{1,2})[-\\/](\\d{1,2})[-\\/](\\d{4})$/', $date, $matches)) {\n            $d\
    \ = $matches[3];\n            if (checkdate($matches[1], \n                ($matches[2]\
    \ == 1 ? 1 : $matches[2]-1), \n                $d)) {\n                return\
    \ true;\n            }\n        }\n    }\n    return false;\n}", "    if(isset($date))\
    \ {\n        $d = DateTime::createFromFormat('d-m-Y', $date);\n        if($d &&\
    \ $d->format() == 'd-m-Y') {\n            $date = $d->format('Y-m-d');\n     \
    \   }\n    }\n    if(isset($date)) {\n        $d = DateTime::createFromFormat('d-m-Y',\
    \ $date);\n        if($d && $d->format() == 'd-m-Y') {\n            $day = $d->format('d');\n\
    \            $month = $d->format('m');\n            $year = $d->format('Y');\n\
    \            $days = (strtotime($date) - strtotime($year . '-' . $month . '-01'))\
    \ / 86400;\n            $months = (12 - $month) + $days;\n            $days =\
    \ $days <= 1 ? 30 : $days <= 31 ? $days : 29;\n            $months = $months <\
    \ 1 ? 12 : $months;\n            $month = date('m', strtotime($year . '-' . $month\
    \ . '-01'));\n            $valid = ($date != '' && $days >= 1 && $days <= 31 &&\
    \ $months >= 1 && $months <= 12 && $month == date('m', strtotime($year . '-' .\
    \ $month . '-01')));\n        }\n    }\n    return $valid;\n}\n</code>\nYou can\
    \ test the above function as below:\n<code>\nvar_dump(valid_date('03-11-2000'));\
    \ // True\nvar_dump(valid_date('15-01-2012')); // False\nvar_dump(valid_date('04-0-2040'));\
    \ // False\nvar_dump(valid_date('06-04-2020')); // True\nvar_dump(valid_date('06/04/2020'));\
    \ // False\n</code>\n<|/ a tags=date,php,validation |>\n<| c |>\nYou might want\
    \ to add some additional explanation on what the code does and why your answer\
    \ is better than the other answers.\n<|/ c |>\n<| c |>\nI appreciate that you\
    \ added some explanation, but you didn't really add anything new to the answer\
    \ you gave.\n<|/ c |>\n<| c |>\nHi thanks for your answer. I tried but it is not\
    \ working. I tried with date like 30/12/2013 and it says invalid date. I tried\
    \ with 30-12-2013 and it is says invalid date. I need to validate a date like\
    \ 30 December 2013\n<|/ c |>\n<| c |>\nFor 30/12/2013 it says invalid date. For\
    \ 30-12-2013 it says valid date. Is it because I am using `DateTime::createFromFormat`?\n\
    <|/ c |>", "   if (!empty($date)) {\n   $parts = explode(\"-\",$date);\n   $date\
    \ = date(\"m-d-Y\", mktime(0,0,0,$parts[1],$parts[0],$parts[2]));\n   return $date;\n\
    \   }\n   return false;\n}", "    if (empty($date) || strlen($date) < 1) {\n \
    \       return false;\n    }\n    $dateArray = explode('-', $date);\n    $dateMonth\
    \ = intval($dateArray[0]);\n    $dateDay = intval($dateArray[1]);\n    $dateYear\
    \ = intval($dateArray[2]);\n    if ($dateMonth < 1 || $dateMonth > 12) {\n   \
    \     return false;\n    }\n    if ($dateDay < 1 || $dateDay > 31) {\n       \
    \ return false;\n    }\n    if ($dateMonth == 2) {\n        if ($dateDay > 29)\
    \ {\n            return false;\n        }\n    }\n    if (($dateMonth == 4 ||\
    \ $dateMonth == 6 || $dateMonth == 9 || $dateMonth == 11) && $dateDay > 30) {\n\
    \        return false;\n    }\n    if ($dateMonth == 1) {\n        if ($dateDay\
    \ > 31) {\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    if(isset($date)){\n        $d = DateTime::createFromFormat('d-m-Y', $date);\n\
    \        if($d && $d->format('d-m-Y') && is_numeric($date)){\n            /* The\
    \ date string is not empty */\n            /* The number of days is not less than\
    \ 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days\
    \ is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number\
    \ of days is not less than 1 or higher than 29 for the month 2. */\n         \
    \   /* The months should not be less than 1 or higher than 12. */\n          \
    \  /* The date should be in the format: mm-dd-yyyy */\n            /* for example:\
    \ \n            valid_date('03-11-2000') => True\n            valid_date('15-01-2012')\
    \ => False\n            valid_date('04-0-2040') => False\n            valid_date('06-04-2020')\
    \ => True\n            valid_date('06/04/2020') => False */\n            $m =\
    \ $d->format('m');\n            $y = $d->format('Y');\n            $m = intval($m);\n\
    \            $y = intval($y);\n            $d = intval($date);\n\n           \
    \ if($m <= 12 && $m >= 1 && ($y <= 29 && $y >= 1 && $d <= 31 && $d >= 1)){\n \
    \               return true;\n            }\n            else if($m <= 12 && $m\
    \ >= 1 && ($y <= 30 && $y >= 1 && $d <= 31 && $d >= 1)){\n                return\
    \ true;\n            }\n            else if($m <= 12 && $m >= 1 && ($y <= 31 &&\
    \ $y >= 1 && $d <= 30)){\n                return true;\n            }\n      \
    \      else if($m <= 12 && $m >= 1 && ($y <= 30 || $y >= 1)){\n              \
    \  return true;\n            }\n            else{\n                return false;\n\
    \            }\n        }\n        else{\n            return false;\n        }\n\
    \    }\n}\n</code>\n<|/ a |>\n<| c |>\nWhile this code may answer the question,\
    \ providing additional context regarding why and/or how this code answers the\
    \ question improves its long-term value.\n<|/ c |>\n<| c |>\nI have updated my\
    \ answer to include comments.\n<|/ c |>\n<| a dscore=1 |>\nUse DateTime class\
    \ for validating dates, it is simple and very easy\n<code>\n$date = DateTime::createFromFormat('Y-m-d',\
    \ $date);\nif(!$date || $date->format('Y-m-d') != $date", "    $result = true;\n\
    \    if (is_numeric($date)) {\n        $date = $date . '-' . substr($date,4,2);\n\
    \    }\n    if (!empty($date)) {\n        $month = substr($date,0,2);\n      \
    \  $day = substr($date,3,2);\n        $year = substr($date,6);\n        if ($month\
    \ > 2 && $month < 12 && $day > 0 && $day < 31 && $year >= 0 && $year <= 9999)\
    \ {\n            $result = false;\n        } else {\n            $result = true;\n\
    \        }\n    }\n    return $result;\n}\n", "    // Write your validation code\
    \ here.\n    $formatted = date(\"m-d-Y\", strtotime($date));\n    $year = $formatted;\n\
    \    $day = $formatted;\n    $month = $formatted;\n    $day1 = $formatted;\n \
    \   $day2 = $formatted;\n    $day3 = $formatted;\n    $day4 = $formatted;\n  \
    \  $day5 = $formatted;\n    $day6 = $formatted;\n    $day7 = $formatted;\n   \
    \ $day8 = $formatted;\n    $day9 = $formatted;\n    $day10 = $formatted;\n   \
    \ $day11 = $formatted;\n    $day12 = $formatted;\n    $day13 = $formatted;\n \
    \   $day14 = $formatted;\n    $day15 = $formatted;\n    $day16 = $formatted;\n\
    \    $day17 = $formatted;\n    $day18 = $formatted;\n    $day19 = $formatted;\n\
    \    $day20 = $formatted;\n    $day21 = $formatted;\n    $day22 = $formatted;\n\
    \    $day23 = $formatted;\n    $day24 = $formatted;\n    $day25 = $formatted;\n\
    \    $day26 = $formatted;\n    $day27 = $formatted;\n    $day28 = $formatted;\n\
    \    $day29 = $formatted;\n    $day30 = $formatted;\n    $day31 = $formatted;\n\
    \    $day32 = $formatted;\n    $day33 = $formatted;\n    $day34 = $formatted;\n\
    \    $day35 = $formatted;\n    $day36 = $formatted;\n    $day37 = $formatted;\n\
    \    $day38 = $formatted;\n    $day39 = $formatted;\n    $day40 = $formatted;\n\
    \    $day41 = $formatted;\n    $day42 = $formatted;\n    $day43 = $formatted;\n\
    \    $day44 = $formatted;\n    $day45 = $formatted;\n    $day46 = $formatted;\n\
    \    $day47 = $formatted;\n    $day48 = $formatted;\n    $day49 = $formatted;\n\
    \    $day50 = $formatted;\n    $day51 = $formatted;\n    $day52 = $formatted;\n\
    \    $day53 = $formatted;\n    $day54 = $formatted;\n    $day55 = $formatted;\n\
    \    $day56 = $formatted;\n    $day57 = $formatted;\n    $day58 = $formatted;\n\
    \    $day59 = $formatted;\n    $day60 = $formatted;\n    $day61 = $formatted;\n\
    \    $day62 = $formatted;\n    $day63 = $formatted;\n    $day64 = $formatted;\n\
    \    $day65 = $formatted;\n    $day66 = $", "  // TODO: Write code here\n}", " \
    \   // Your Code here\n    // Write your logic here\n    $pattern = '/^(\\d{1,2})-(\\\
    d{1,2})-(\\d{2,4})$/';\n    if(preg_match($pattern, $date))\n    {\n        $dateArray\
    \ = explode('-', $date);\n        if(isset($dateArray[2]) && $dateArray[2] <=\
    \ 12 && $dateArray[2] >= 1 && $dateArray[1] <= 31 && $dateArray[1] >= 1)\n   \
    \     {\n            if(isset($dateArray[1]) && $dateArray[1] <= 31 && $dateArray[1]\
    \ >= 1 && isset($dateArray[2]) && $dateArray[2] <= 31 && $dateArray[2] >= 1)\n\
    \            {\n                if($dateArray[1] == 1 && $dateArray[2] == 1)\n\
    \                {\n                    $valid_date = true;\n                }\n\
    \                elseif($dateArray[1] == 4 && $dateArray[2] == 4)\n          \
    \      {\n                    $valid_date = true;\n                }\n       \
    \         elseif($dateArray[1] == 6 && $dateArray[2] == 4)\n                {\n\
    \                    $valid_date = true;\n                }\n                else\n\
    \                {\n                    $valid_date = false;\n               \
    \ }\n            }\n            else\n            {\n                $valid_date\
    \ = false;\n            }\n        }\n        else\n        {\n            $valid_date\
    \ = false;\n        }\n    }\n    else\n    {\n        $valid_date = false;\n\
    \    }\n    return $valid_date;\n}\n", "    if(empty($date))\n        return FALSE;\n\
    \    $pieces = explode(\"-\", $date);\n    if(count($pieces) != 3)\n        return\
    \ FALSE;\n    $date = \"{$pieces[2]}-{$pieces[1]}-{$pieces[0]}\";\n    $timestamp\
    \ = strtotime($date);\n    if($timestamp < time() || $timestamp > time() + 2592000)\n\
    \        return FALSE;\n    $date2 = \"{$pieces[2]}-{$pieces[1]}\";\n    $timestamp2\
    \ = strtotime($date2);\n    if($timestamp2 < time() || $timestamp2 > time() +\
    \ 2592000)\n        return FALSE;\n    $date3 = \"{$pieces[0]}-{$pieces[1]}-{$pieces[2]}\"\
    ;\n    $timestamp3 = strtotime($date3);\n    if($timestamp3 < time() || $timestamp3\
    \ > time() + 2592000)\n        return FALSE;\n    return TRUE;\n}\n", "    $date\
    \ = strtotime($date);\n    if (empty($date)) {\n        return false;\n    }\n\
    \    $daysInMonth = cal_days_in_month(CAL_GREGORIAN, 3, 2019);\n    if ($daysInMonth\
    \ < 1 || ($daysInMonth > 31 && $daysInMonth < 30)) {\n        return false;\n\
    \    }\n    $year = date('Y', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    $months = array('01'=>'Jan', '02'=>'Feb', '03'=>'Mar',\
    \ '04'=>'Apr', '05'=>'May', '06'=>'Jun',\n        '07'=>'Jul', '08'=>'Aug', '09'=>'Sep',\
    \ '10'=>'Oct', '11'=>'Nov', '12'=>'Dec');\n    if ($month < 1 || $month > 12)\
    \ {\n        return false;\n    }\n    $checkDate = date('01-' . $month . '-'\
    \ . $year, $date);\n    if ($day != date('d', $date)) {\n        return false;\n\
    \    }\n    $year = date('Y', $date);\n    $month = date('m', $date);\n    $day\
    \ = date('d', $date);\n    if ($day < 1 || $day > $daysInMonth) {\n        return\
    \ false;\n    }\n    $checkYear = date('Y', $date);\n    if ($year != $checkYear)\
    \ {\n        return false;\n    }\n    $month = date('m', $date);\n    $day =\
    \ date('d', $date);\n    if ($day < 1 || $day > $daysInMonth) {\n        return\
    \ false;\n    }\n    return true;\n}\n", "    $months = array(1,2,3,4,5,6,7,8,9,10,11,12);\n\
    \    $months_str = array(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"\
    ,\"10\",\"11\",\"12\");\n    $days_str = array(\"01\",\"02\",\"03\",\"04\",\"\
    05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\");\n    $days_num = array(\"\
    31\",\"28\",\"31\",\"30\",\"31\",\"30\",\"31\",\"31\",\"30\",\"31\",\"30\",\"\
    31\",\"30\");\n    $days_num[0] = 29;\n\n    if(!empty($date)) {\n        $date\
    \ = explode('-', $date);\n        $year = $date[0];\n        $month = $months_str[(int)$date[1]];\n\
    \        $day = $days_str[(int)$date[2]];\n        return ((empty($date) || $month\
    \ < 1 || $month > 12) || ($day < 1 || $day > $days_num[$month-1]) || ($year <\
    \ '0' || $year > '3000'));\n    }\n    return false;\n}\n", "    $check = explode('-',\
    \ $date);\n    if (count($check) != 3) return false;\n    if (checkdate($check[0],\
    \ $check[1], $check[2])) return false;\n    $date = new DateTime($date);\n   \
    \ return $date->format('m-d-Y') >= 1 && $date->format('m-d-Y') <= 31 && $date->format('m-d')\
    \ >= 1 && $date->format('m-d') <= 30\n            && $date->format('m') >= 1 &&\
    \ $date->format('m') <= 12;\n}\n", "    $valid = false;\n    $date = str_replace('/',\
    \ '-', $date);\n    $parts = explode('-', $date);\n    if (strlen($parts[0]) >\
    \ 0) {\n        $valid = true;\n    }\n    $day = $parts[1];\n    if (in_array($day,\
    \ array(1,2,3,4,5,6,7,8,9,10,11,12))) {\n        $valid = true;\n    }\n    if\
    \ (in_array($parts[2], array(1,2,3,4,5,6,7,8,9,10,11))) {\n        $valid = true;\n\
    \    }\n    if (in_array($parts[2], array(4,6,9,11))) {\n        $valid = true;\n\
    \    }\n    if (in_array($parts[1], array(0,1,2,3,4,5,6,7,8,9,10,11,12,13))) {\n\
    \        $valid = true;\n    }\n    if (in_array($parts[2], array(0,1,2,3,4,5,6,7,8,9,10)))\
    \ {\n        $valid = true;\n    }\n    if (in_array($parts[1], array(0,1,2,3,4,5,6,7,8,9,10,11,12,13)))\
    \ {\n        $valid = true;\n    }\n    if ($parts[1] == '01') {\n        $valid\
    \ = true;\n    }\n    if (in_array($parts[1], array(4,6,9,11))) {\n        $valid\
    \ = true;\n    }\n    if (in_array($parts[2], array(0,1,2,3,4,5,6,7,8,9,10)))\
    \ {\n        $valid = true;\n    }\n    if (in_array($parts[2], array(0,1,2,3,4,5,6,7,8,9,10,11,12,13)))\
    \ {\n        $valid = true;\n    }\n    if ($parts[2] == '30') {\n        $valid\
    \ = true;\n    }\n    if (in_array($parts[1], array(0,1,2,3,4,5,6,7,8,9,10,11,12,13)))\
    \ {\n        $valid = true;\n    }\n    if (in_array($parts[2], array(0,1,2,3,4,5,6,7,8,9,10)))\
    \ {\n        $valid = true;\n    }\n    if (in_array($parts[2], array(0,1,2,3,4,5,6,7,8,9,10,11,12,13)))\
    \ {\n        $valid = true;\n    }\n    if (in_array($parts[2], array(0,1,2,3,4,5,6,7,8,9,10,11)))\
    \ {\n        $valid = true;\n    }\n    if (in_array($parts[2], array(0,1,2,3,4,5,6,7,8,9,10,11,12)))\
    \ {\n        $valid = true;\n    }\n    if (in_array($parts[2], array(0,1,2,3,4,5,6,7,8,9,10,11,12,13)))\
    \ {\n        $valid = true;\n    }\n    return $valid;\n}", "    if(!preg_match('/^\\\
    d{4}-\\d{2}-\\d{2,4}$/', $date)) {\n        return false;\n    }\n    // Check\
    \ day\n    $day = substr($date,strpos($date, '-'),2);\n    if($day < 1 || $day\
    \ > 31) {\n        return false;\n    }\n    // Check months\n    $month = substr($date,strpos($date,\
    \ '-')+1,2);\n    if($month < 1 || $month > 12) {\n        return false;\n   \
    \ }\n    // Check year\n    $year = substr($date,0,4);\n    if($year != $year)\
    \ {\n        return false;\n    }\n    return true;\n}\n", "    // 1. date should\
    \ not be empty.\n    if (empty($date)) {\n        return false;\n    }\n\n   \
    \ // 2. date should be in the format: mm-dd-yyyy\n    // for example: \n    //\
    \ valid_date('03-11-2000') => True\n    // valid_date('15-01-2012') => False\n\
    \    // valid_date('04-0-2040') => False\n    // valid_date('06-04-2020') => True\n\
    \    // valid_date('06/04/2020') => False\n    if (!preg_match('/^([12]\\d|0[1-9]|3[01])[\\\
    /\\-](0[1-9]|1[012])[\\/\\-]\\d{4}$/', $date)) {\n        return false;\n    }\n\
    \n    // 3. months should not be less than 1 or higher than 12.\n    if (!preg_match('/^(0[1-9]|1[012])$/',\
    \ $date)) {\n        return false;\n    }\n\n    // 4. date should be in the format:\
    \ mm-dd-yyyy\n    // for example: \n    // valid_date('03-11-2000') => True\n\
    \    // valid_date('15-01-2012') => False\n    // valid_date('04-0-2040') => False\n\
    \    // valid_date('06-04-2020') => True\n    // valid_date('06/04/2020') => False\n\
    \    $month = substr($date, -2);\n    $year = substr($date, 0, -2);\n\n    if\
    \ ($month < 1 || $month > 12) {\n        return false;\n    }\n\n    if ($year\
    \ < 1980 || $year > 2099) {\n        return false;\n    }\n\n    // 5. check that\
    \ the month is a valid month\n    if ($month == 1) {\n        if ($year % 400\
    \ == 0 || ($year % 4 == 0 && $year % 100 != 0)) {\n            $month += 12;\n\
    \        }\n    }\n\n    if ($month == 2) {\n        if (($year % 100 == 0 &&\
    \ $year % 4 == 0) || ($year % 400 == 0)) {\n            $month += 12;\n      \
    \  }\n    }\n\n    if ($month == 4) {\n        if ($year % 4 == 0) {\n       \
    \     $month += 12;\n        }\n    }\n\n    if ($month == 6) {\n        if (($year\
    \ % 100 == 0 && $year % 400 != 0) || ($year % 4 == 0)) {\n            $month +=\
    \ 12;\n        }\n    }\n\n    if ($month == 9) {\n        if ($year % 4 == 0)\
    \ {\n            $month += 12;\n        }\n    }\n\n    if ($month == 11) {\n\
    \        if ($year % 100 == 0 || ($year % 4 == 0 && $year % 100 != 0)) {\n   \
    \         $month += 12;\n        }\n    }\n\n    // 6. check that the date is\
    \ a valid date\n    // 1. The number of days is greater than or equal to 1 and\
    \ less than or equal to 31.\n    // 2. The month is greater than or equal to 1\
    \ and less than or equal to 12.\n", "    if (empty($date)) {\n        return false;\n\
    \    }\n    list($day, $month, $year) = explode('-', $date);\n    if (checkdate($month,\
    \ $day, $year)) {\n        return true;\n    }\n    return false;\n}\n", "\t$d\
    \ = DateTime::createFromFormat('m-d-Y', $date);\n\t$now = new DateTime;\n\n\t\
    if ($d->format('m-d-Y') != $now->format('m-d-Y'))\n\t\treturn false;\n\tif ($d->format('d')\
    \ < 1 || $d->format('d') > 29)\n\t\treturn false;\n\tif ($d->format('m') < 1 ||\
    \ $d->format('m') > 12)\n\t\treturn false;\n\treturn true;\n}", "    $parts =\
    \ explode(\"-\", $date);\n    if (!empty($parts[0]) && !(preg_match('/^\\d\\d$/',\
    \ $parts[0]) && preg_match('/^\\d\\d$/', $parts[1]))) {\n        return false;\n\
    \    }\n    $months = array(\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"\
    12\");\n    if (in_array($parts[1], $months) && !in_array($parts[1], $months))\
    \ {\n        return false;\n    }\n    $days = array(31, 28, 31, 30, 31, 30, 31,\
    \ 31, 30, 31, 30, 31);\n    if ($parts[1] == '02' && !(in_array($parts[2], $days)\
    \ && in_array($parts[2], $days))) {\n        return false;\n    }\n    return\
    \ true;\n}", "    $valid = false;\n    $valid = $valid || (!empty($date) && (strlen($date)\
    \ == 10) && (checkdate($date[2], $date[1], $date[0])));\n    $valid = $valid &&\
    \ (((date('m', strtotime($date)) == 1) || (date('m', strtotime($date)) == 3) ||\
    \ (date('m', strtotime($date)) == 5) || (date('m', strtotime($date)) == 7) ||\
    \ (date('m', strtotime($date)) == 8) || (date('m', strtotime($date)) == 10) ||\
    \ (date('m', strtotime($date)) == 12)) and ((date('d', strtotime($date)) == 1)\
    \ || (date('d', strtotime($date)) == 3) || (date('d', strtotime($date)) == 5)\
    \ || (date('d', strtotime($date)) == 7) || (date('d', strtotime($date)) == 8)\
    \ || (date('d', strtotime($date)) == 10) || (date('d', strtotime($date)) == 12)));\n\
    \    $valid = $valid && (((date('m', strtotime($date)) == 2) || (date('m', strtotime($date))\
    \ == 4) || (date('m', strtotime($date)) == 6) || (date('m', strtotime($date))\
    \ == 9) || (date('m', strtotime($date)) == 11))and ((date('d', strtotime($date))\
    \ == 2) || (date('d', strtotime($date)) == 4) || (date('d', strtotime($date))\
    \ == 6) || (date('d', strtotime($date)) == 9) || (date('d', strtotime($date))\
    \ == 11)));\n    $valid = $valid && (((date('m', strtotime($date)) == 1) || (date('m',\
    \ strtotime($date)) == 3) || (date('m', strtotime($date)) == 5) || (date('m',\
    \ strtotime($date)) == 7) || (date('m', strtotime($date)) == 8) || (date('m',\
    \ strtotime($date)) == 10) || (date('m', strtotime($date)) == 12)) and ((date('d',\
    \ strtotime($date)) == 1) || (date('d', strtotime($date)) == 3) || (date('d',\
    \ strtotime($date)) == 5) || (date('d', strtotime($date)) == 7) || (date('d',\
    \ strtotime($date)) == 8) || (date('d', strtotime($date)) == 10) || (date('d',\
    \ strtotime($date)) == 12)));\n    $valid = $valid && (((date('m', strtotime($date))\
    \ == 2) || (date('m', strtotime($date)) == 4) || (date('m', strtotime($date))\
    \ == 6) || (date('m', strtotime($date)) == 9) || (date('m', strtotime($date))\
    \ == 11))and ((date('d', strtotime($date)) == 2) || (date('d', ", "  // Write\
    \ your logic here.\n}\n", "    // Your code goes here\n    $d = DateTime::createFromFormat('d-m-Y',\
    \ $date);\n    return $d && $d->format('m-d-Y') != ''; // this checks 1st condition\n\
    }\n", "    // Write your validation code here\n}", "    if (!$date) {\n      \
    \  return false;\n    }\n\n    $date = strtotime($date);\n    $year = date('Y',\
    \ $date);\n    $month = date('m', $date);\n    $day = date('d', $date);\n\n  \
    \  if (empty($date) || $day < 1 || $day > 31 || (($month == 1) || ($month == 3)\
    \ || ($month == 5) || ($month == 7) || ($month == 8) || ($month == 10) || ($month\
    \ == 12) && ($day < 1 || $day > 30)) || (($month == 4) || ($month == 6) || ($month\
    \ == 9) || ($month == 11) && ($day < 1 || $day > 29)) || ($month != 2 && $month\
    \ != 4 && $month != 6 && $month != 9 && $month != 11)) {\n        return false;\n\
    \    }\n\n    return true;\n}", "    if (!is_string($date)) return FALSE;\n  \
    \  $date = strtotime($date);\n    if (empty($date)) return FALSE;\n\n    $days_in_month\
    \ = cal_days_in_month(CAL_GREGORIAN, date('m'), date('d'));\n    if ($days_in_month\
    \ < 1 || $days_in_month > 31) {\n        return FALSE;\n    }\n\n    $days_in_month\
    \ = ($days_in_month == 31) ? 30 : 29;\n    $days_in_year = cal_days_in_month(CAL_GREGORIAN,\
    \ date('m'), date('d'), date('Y'));\n    if ($days_in_year < 1 || $days_in_year\
    \ > $days_in_month) {\n        return FALSE;\n    }\n\n    $date_parts = explode('-',\
    \ $date);\n    if (count($date_parts) != 3) {\n        return FALSE;\n    }\n\n\
    \    $month = date('m');\n    $month = (($month < 1) || ($month > 12)) ? 0 : 1;\n\
    \n    $day = date('d');\n    if ($day < 1 || $day > $days_in_month) {\n      \
    \  return FALSE;\n    }\n\n    $year = date('Y');\n    if ($year < 1950 || $year\
    \ > $year) {\n        return FALSE;\n    }\n\n    return TRUE;\n}\n</code>\n<|/\
    \ a |>\n<| c |>\nThat doesn't check all the rules, it only checks the days and\
    \ months.\n<|/ c |>\n<| c |>\nI thought the OP wants to validate each rule.. I\
    \ just added a function in case he wants to add more.\n<|/ c |>\n<| c |>\nThe\
    \ OP explicitly asked for validation in his comment on the accepted answer, and\
    \ I'm just pointing out that the accepted answer doesn't satisfy most of the requirements.\
    \ I doubt that someone is going to take your answer and just give it to you.\n\
    <|/ c |>\n<| c |>\nI added a new answer which does cover all of the rules. I still\
    \ think it's not a perfect solution, but I'm sure the OP can do what he likes\
    \ with it :)\n<|/ c |>\n<| c |>\nThanks a lot bro, your code is very helpful and\
    \ is working fine.\n<|/ c |>\n<| a dscore=0 tags=php,date |>\nI came up with a\
    \ pretty simple solution that doesn't require any complex date checking. The only\
    \ requirement is that the month and the day be in the correct range for the month.\
    \ \nThe only difference is that I'm using a date string instead of a timestamp\
    \ (i.e. '01-09-2018' instead of '2018-01-09'. This is because I use the first\
    \ day of the current month", "    $pattern = \"/^(0[1-9]|[12][0-9]|3[01])[\\/\\\
    -](0[1-9]|1[012])[\\/\\-](19|20)\\d\\d$/\";\n    if(preg_match($pattern, $date)\
    \ == 0){\n        return false;\n    }else{\n        $date = explode('/',$date);\n\
    \        $day = $date[0];\n        $month = $date[1];\n        $year = $date[2];\n\
    \        if($month > 12 || $month < 1 || ($day < 1 || ($day > 31 || ($month ==\
    \ 1 && $day == 31)))){\n            return false;\n        }else{\n          \
    \  if($month == 1 && $day == 31){\n                return false;\n           \
    \ }else if($month == 1 && $day == 30){\n                return false;\n      \
    \      }else if($month == 1 && $day == 29){\n                return false;\n \
    \           }else if($month == 3 && $day == 31){\n                return false;\n\
    \            }else if($month == 3 && $day == 30){\n                return false;\n\
    \            }else if($month == 3 && $day == 29){\n                return false;\n\
    \            }else if($month == 5 && $day == 31){\n                return false;\n\
    \            }else if($month == 5 && $day == 30){\n                return false;\n\
    \            }else if($month == 5 && $day == 29){\n                return false;\n\
    \            }else if($month == 7 && $day == 31){\n                return false;\n\
    \            }else if($month == 7 && $day == 30){\n                return false;\n\
    \            }else if($month == 7 && $day == 29){\n                return false;\n\
    \            }else if($month == 8 && $day == 31){\n                return false;\n\
    \            }else if($month == 8 && $day == 30){\n                return false;\n\
    \            }else if($month == 8 && $day == 29){\n                return false;\n\
    \            }else if($month == 10 && $day == 31){\n                return false;\n\
    \            }else if($month == 10 && $day == 30){\n                return false;\n\
    \            }else if($month == 10 && $day == 29){\n                return false;\n\
    \            }else if($month == 12 && $day == 31){\n                return false;\n\
    \            }else if($month == 12 && $day == 30){\n                return false;\n\
    \            }else if($month == 12 && $day == 29){\n                return false;\n\
    \            }\n        }\n    }\n}\n", "    $parts = explode('-', $date);\n \
    \   $parts = array_map('intval', $parts);\n    if (count($parts) < 3) {\n    \
    \    return false;\n    }\n\n    if (\n        array_search($parts[2], range(1,\
    \ 13)) < 1 ||\n        array_search($parts[2], range(4, 13)) < 1 ||\n        array_search($parts[1],\
    \ range(1, 3)) < 1 ||\n        array_search($parts[1], range(4, 3)) < 1 ||\n \
    \       array_search($parts[0], range(1, 12)) < 1 ||\n        array_search($parts[0],\
    \ range(4, 12)) < 1\n    ) {\n        return false;\n    }\n\n    if (\n     \
    \   array_search($parts[1], range(1, 3)) < 4 ||\n        array_search($parts[1],\
    \ range(6, 9)) < 4 ||\n        array_search($parts[1], range(11, 3)) < 4\n   \
    \ ) {\n        return false;\n    }\n\n    $months = array('01', '03', '05', '07',\
    \ '08', '10', '12');\n    if (\n        array_search($parts[0], range(1, 12))\
    \ < 2 ||\n        array_search($parts[0], range(4, 12)) < 2 ||\n        !in_array($parts[1],\
    \ $months)\n    ) {\n        return false;\n    }\n\n    return true;\n}\n", " \
    \   $date = strtotime($date);\n    if(empty($date)) return false;\n    $today\
    \ = time();\n    $difference = $today - $date;\n    $days = floor($difference/(60*60*24));\n\
    \    $months = floor(($difference%(60*60*24))/(60*60));\n    $years = floor($difference/(60*60*24*365));\n\
    \    if($days > 0 || $months > 0 || $years > 0)\n    {\n        if($days <= 0\
    \ || $months <= 0 || $years < 1 || $months > 12 || $days > 31 || $days <= 31)\
    \ {\n            return false;\n        }\n        if($days <= 30 && $months <=\
    \ 12 && $years < 1 || $months > 12 || $days <= 29) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n\
    You might just use PHP's DateTime Class to validate dates.\n<code>\n$dateTime\
    \ = new DateTime('2010-09-25');\n</code>\nYou can read more about it here.\n<|/\
    \ a tags=date,php,validation dscore=0 |>\n<| c |>\nYes, the problem is that I\
    \ can not use DateTime or any other standard classes. The server already has PHP\
    \ 5.2 and I cannot upgrade it for security reasons.\n<|/ c |>\n<| c |>\n- You\
    \ really don't want to upgrade to 5.3 just for this reason, it's been out of support\
    \ for almost a year and already has security vulnerabilities from its developers.\
    \ If you really can't upgrade, you could try the DateTime class on the [development\
    \ branch](https://github.com/php/php-src/tree/development/ext/date) which is in\
    \ 5.3.\n<|/ c |>\n<| c |>\n- Just out of curiosity, are you saying you cannot\
    \ upgrade to 5.3? Because upgrading is as easy as changing all the `E_*` errors\
    \ to `E_WARNING` errors and adding `E_STRICT` to `error_reporting`. So even if\
    \ you don't have access to upgrade anything it shouldn't be too hard to upgrade\
    \ for security reasons.\n<|/ c |>\n<| c |>\n- No you can't. I tried the DateTime\
    \ class in PHP 5.3 but all it's functions are gone except for date_create.\n<|/\
    \ c |>\n<| c |>\n- You could always write your own `validDate()` function or class\
    \ (like you suggested in the other answer) and use that with some regex to validate\
    \ dates. That would at least get you going quicker.\n<|/ c |>\n<| a tags=date,php,validation\
    \ |>\nYou could create a regular expression to match the format of ", "    $parts\
    \ = explode('-',$date);\n    if ( count($parts) == 3 ) {\n        $d = date_create_from_format('m-d-Y',$date);\n\
    \        if ( false === $d ) return false;\n        $d = date_add($d,date_interval_create_from_date_string('1\
    \ days'));\n        $d = date_add($d,date_interval_create_from_date_string('1\
    \ days'));\n        if ( false === $d ) return false;\n        $d = date_add($d,date_interval_create_from_date_string('1\
    \ days'));\n        if ( false === $d ) return false;\n        $d = date_add($d,date_interval_create_from_date_string('1\
    \ months'));\n        if ( false === $d ) return false;\n        $d = date_add($d,date_interval_create_from_date_string('1\
    \ months'));\n        if ( false === $d ) return false;\n        $d = date_add($d,date_interval_create_from_date_string('1\
    \ months'));\n        if ( false === $d ) return false;\n        return true;\n\
    \    }\n    return false;\n}", "    $pattern = '/^\\d{2}-\\d{2}-\\d{4}$/';\n \
    \   if (!preg_match($pattern, $date))\n        return false;\n    $days_in_months\
    \ = array();\n    for ($i = 1; $i <= 12; ++$i) {\n        $days_in_months[$i]\
    \ = cal_days_in_month(CAL_GREGORIAN, $i, 0);\n    }\n    if (date('m', strtotime($date))\
    \ != 2 ||\n        date('d', strtotime($date)) != 11 ||\n        date('y', strtotime($date))\
    \ != date('Y', strtotime($date)) ||\n        date('m', strtotime($date)) > 12\
    \ ||\n        date('d', strtotime($date)) > $days_in_months[date('m', strtotime($date))]\
    \ ||\n        date('y', strtotime($date)) > date('Y', strtotime($date)))\n   \
    \     return false;\n    return true;\n}\n</code>\nHere is a sample code to show\
    \ how to use it:\n<code>\nif (valid_date($date)) {\n    echo \"Valid date\\n\"\
    ;\n} else {\n    echo \"Invalid date\\n\";\n}\n</code>\n<|/ a tags=date,php,validation\
    \ dscore=2 |>\n<| c |>\nThis was the best answer for me (I chose the second one\
    \ and I used the regex from [here](http://stackoverflow.com/a/4555449/1148192)\
    \ )\n<|/ c |>\n<| a tags=date,php,validation |>\nYou can use PHP's strtotime function\
    \ to convert a date into an unix timestamp. \n<code>\n$dateTime = \"2008-01-01\
    \ 11:11:11\";\n$unixDateTime = strtotime($dateTime);\n</code>\nSee http://php.net/manual/en/function.strtotime.php\
    \ for details.\n<|/ a dscore=1 |>\n<| c |>\nI believe strtotime will accept any\
    \ date format that can be parsed by strtotime with one exception being \"Jan 1\
    \ 1900 12:00AM\" which strtotime will parse but return 0.\n<|/ c |>\n<| a |>\n\
    I use this for my PHP application\n<code>\nif(preg_match('/^(19|20)\\d\\d([-/.])(0[1-9]|1[012])\\\
    2(0[1-9]|[12][0-9]|3[01])$/', $yourdate))\n{\n    // valid\n}\n</code>\n<|/ a\
    \ dscore=1 tags=date,php,validation |>\n<| c |>\nThis regular expression will\
    \ fail for `19-01-2001`, but it will work for `19-01-2000` as `01` doesn't exist\
    \ in `01`.\n<|/ c |>\n<| a |>\nI used ", "    $valid = false;\n    $month = substr($date,\
    \ 5, 2);\n    $day = substr($date, 8, 2);\n    $year = substr($date, 11, 4);\n\
    \    $min_date = 1;\n    $max_date = 31;\n    $min_month = 12; // Months\n   \
    \ $max_month = 13; // Months\n    $min_year = 2000; // Years\n    $max_year =\
    \ 2040;\n    // If it is a valid date\n    if ($day > 0 && $day < $max_date &&\
    \ $month > 0 && $month < $max_month && $year >= $min_year && $year <= $max_year)\
    \ {\n        $valid = true;\n    } else {\n        echo \"Invalid date \";\n \
    \       echo $date;\n    }\n    return $valid;\n}\n", "  if (empty($date) || preg_match('/^\\\
    d{2}-\\d{2}-\\d{4}$/', $date)) {\n    return TRUE;\n  }\n  $daysInMonth = cal_days_in_month(CAL_GREGORIAN,\
    \ date('n'), date('t'));\n  if ($daysInMonth < 1 || $daysInMonth > 31) {\n   \
    \ return FALSE;\n  }\n  $monthsInYear = cal_months_in_year(CAL_GREGORIAN, date('Y'));\n\
    \  if ($monthsInYear < 1 || $monthsInYear > 12) {\n    return FALSE;\n  }\n  $years\
    \ = floor((date('t') - date('Y')) / 12);\n  if ($years < 1 || $years > 12) {\n\
    \    return FALSE;\n  }\n  return TRUE;\n}", "    // write your logic here\n}",
  "    // TODO: Implement function here.\n}", "  if(empty($date)) {\n    return false;\n\
    \  }\n  preg_match('/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/', $date, $matches);\n\
    \  if(!$matches) {\n    return false;\n  }\n  if($matches[3] < 1 || $matches[3]\
    \ > 12) {\n    return false;\n  }\n  if($matches[2] < 1 || $matches[2] > 31) {\n\
    \    return false;\n  }\n  if($matches[1] < 1 || $matches[1] > 12) {\n    return\
    \ false;\n  }\n  if($matches[1] == 1) {\n    if($matches[0] > 29) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nif(valid_date($_POST['month'].\"-\"\
    .$_POST['day'].\"-\".$_POST['year'])) {\n  // The date is valid and we can save\
    \ it in the database\n} else {\n  // The date is not valid, show an error message\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nthank you very much for your time and\
    \ help. I appreciate your time. I will try to implement this as soon as i get\
    \ home.\n<|/ c |>\n<| a dscore=0 |>\nHere are my solutions based on php version\
    \ 5.4\n1- You can create a validation function as described by James Melo and\
    \ use it with php's native function strtotime to check if it's a valid date string.\n\
    2- You can create a validation function which validates the date's format with\
    \ the preg_match function. You can use this function with a string format and\
    \ a pattern like this:\n<code>", "   $date = explode(\"-\", $date);\n   // If\
    \ the date is not in the right format, return False.\n   if (count($date) != 3)\
    \ {\n      return FALSE;\n   }\n   for ($i = 0; $i < 3; $i++) {\n      if ($date[$i]\
    \ < 1 || $date[$i] > 12) {\n         return FALSE;\n      }\n   }\n   // If the\
    \ date is not in the right format, return False.\n   for ($i = 0; $i < 3; $i++)\
    \ {\n      if ($date[$i] < 1 || $date[$i] > 31) {\n         return FALSE;\n  \
    \    }\n   }\n   if ($date[1] < 1 || $date[1] > 31) {\n      return FALSE;\n \
    \  }\n   if ($date[2] < 1 || $date[2] > 30) {\n      return FALSE;\n   }\n   //\
    \ If the date is not in the right format, return False.\n   for ($i = 0; $i <\
    \ 3; $i++) {\n      if ($date[$i] < 1 || $date[$i] > 29) {\n         return FALSE;\n\
    \      }\n   }\n   return TRUE;\n}\n", "    // 1. Check that date is not empty\n\
    \    if (!empty($date)) {\n        // 2. Calculate the difference between the\
    \ current date and the date submitted\n        $current_date = new DateTime($date);\n\
    \        $date_diff = $current_date->diff(new DateTime());\n        \n       \
    \ // 3. Make sure that the difference is between 1 year and 31 days\n        if\
    \ ($date_diff->days < 1 || $date_diff->days > 31) {\n            return false;\n\
    \        }\n        \n        // 4. Make sure that the difference is between 1\
    \ month and 30 days\n        if ($date_diff->mdays < 1 || $date_diff->mdays >\
    \ 30) {\n            return false;\n        }\n        \n        // 5. Make sure\
    \ that the difference is between 1 year and 29 days\n        if ($date_diff->ydays\
    \ < 1 || $date_diff->ydays > 29) {\n            return false;\n        }\n   \
    \     \n        // 6. Make sure that the month is between 1 and 12\n        if\
    \ ($date_diff->m < 1 || $date_diff->m > 12) {\n            return false;\n   \
    \     }\n        \n        // 7. Make sure that the month is not less than 1 or\
    \ higher than 12\n        if ($date_diff->m < 1 || $date_diff->m > 12) {\n   \
    \         return false;\n        }\n    }\n    \n    // 7. Make sure that the\
    \ date is in the correct format\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    \n    // 8. Return True\n    return\
    \ true;\n}", "  if ($date == null || $date == '' || $date == '0000-00-00')\n \
    \   return false;\n  if (strlen($date) != 10) {\n    return false;\n  }\n  //\
    \ Get the months.\n  $m1 = substr($date,4,2);\n  $m2 = substr($date,6,2);\n  //\
    \ Get the days.\n  $d1 = substr($date,0,2);\n  $d2 = substr($date,3,2);\n  //\
    \ Get the years.\n  $y1 = substr($date,8,4);\n  $y2 = substr($date,10,4);\n  $y3\
    \ = substr($date,12,4);\n  // Get the number of days in each month.\n  $m1Days\
    \ = cal_days_in_month(CAL_GREGORIAN, $m1, $y1);\n  $m3Days = cal_days_in_month(CAL_GREGORIAN,\
    \ $m3, $y3);\n  $m5Days = cal_days_in_month(CAL_GREGORIAN, $m5, $y3);\n  $d7Days\
    \ = cal_days_in_month(CAL_GREGORIAN, $d7, $y3);\n  $d1Days = cal_days_in_month(CAL_GREGORIAN,\
    \ $d1, $y1);\n  $d2Days = cal_days_in_month(CAL_GREGORIAN, $d2, $y1);\n  // Get\
    \ the number of days in each year.\n  $d1YDays = cal_days_in_year(CAL_GREGORIAN,\
    \ $d1, $y1);\n  $d2YDays = cal_days_in_year(CAL_GREGORIAN, $d2, $y1);\n  $d1YMDays\
    \ = cal_days_in_month(CAL_GREGORIAN, $d1, $y3);\n  $d2YMDays = cal_days_in_month(CAL_GREGORIAN,\
    \ $d2, $y3);\n  // Get the number of months in each year.\n  $m1YDays = cal_days_in_year(CAL_GREGORIAN,\
    \ $m1, $y1);\n  $m3YDays = cal_days_in_year(CAL_GREGORIAN, $m3, $y3);\n  $m5YDays\
    \ = cal_days_in_year(CAL_GREGORIAN, $m5, $y3);\n  $d7YDays = cal_days_in_year(CAL_GREGORIAN,\
    \ $d7, $y3);\n  // Compare the number of days.\n  if ($d1Days > $d1YDays || $d2Days\
    \ > $d2YDays || $d1YMDays > $m1YDays ||\n      $d2YMDays > $m2YDays || $m1Days\
    \ > $m3Days || $m1Days > $m5Days ||\n      $m2Days > ", "    $valid = false;\n\
    \    if ( !empty($date) ) {\n        $date = strtotime($date);\n        $date_string\
    \ = date('m-d-Y', $date);\n        $valid_dates = array(\n            array(1,\
    \ 31, 12, 1),\n            array(4, 30, 11, 4),\n            array(6, 29, 10,\
    \ 6),\n            array(2, 29, 12, 2),\n        );\n        foreach ($valid_dates\
    \ as $key => $value) {\n            list($day, $month, $year, $months) = $value;\n\
    \            if ( $days == $day && $months == $month ) {\n                $valid\
    \ = true;\n            }\n        }\n    }\n    return $valid;\n}\n</code>\nNow\
    \ you can use this function to validate the date string and check the valid date\
    \ conditions using the function below:\n<code>", "    $year = substr($date, 0,\
    \ 4);\n    $month = substr($date, 4, 2);\n    $day = substr($date, 6, 2);\n  \
    \  \n    if (!empty($date)) {\n        if ($day < 1 || $day > 31) {\n        \
    \    return false;\n        }\n        if ($month < 1 || $month > 12) {\n    \
    \        return false;\n        }\n        if ($month == 2 && $day > 29) {\n \
    \           return false;\n        }\n        if ($month == 2 && $day == 31) {\n\
    \            return false;\n        }\n    }\n    \n    $valid_date_format = preg_match('/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/',\
    \ $date);\n    \n    if (!$valid_date_format) {\n        return false;\n    }\n\
    \    \n    $valid_date = $year >= 1900 && $year <= 2100 && $month >= 1 && $month\
    \ <= 12;\n    \n    if ($month == 1 || $month == 3 || $month == 5 || $month ==\
    \ 7 || $month == 8 || $month == 10 || $month == 12) {\n        if ($day < 1 ||\
    \ $day > 31) {\n            return false;\n        }\n    } else {\n        if\
    \ ($day < 1 || $day > 30) {\n            return false;\n        }\n    }\n   \
    \ \n    return $valid_date;\n}\n</code>\nI used regular expression to check date\
    \ format.\n<|/ a |>\n<| c |>\nYour code does work for the most part. But for example\
    \ it doesnt work for `03-11-2000` the result is still false. Even though the input\
    \ is valid according to your code. It should be true as the date is valid.\n<|/\
    \ c |>\n<| c |>\nThanks for the reply. As I said, I am not very familiar with\
    \ PHP. So my question is how would I apply your code to my code? Do I have to\
    \ change anything else? Thanks again\n<|/ c |>\n<| a dscore=0 |>\nYou can use\
    \ DateTime::createFromFormat like below\n<code>\n<?php\n\n$input = '02-29-2016';\n\
    $input = '02-29-2000';\n$input = '03-31-2016';\n$input = '04-31-2000';\n$input\
    \ = '03-29-2016';\n$input = '04-29-2000';\n$input = '03-31-2016';\n\n$input =\
    \ '03-29-2016';\n$input = '04-29-2000';\n$input = '03-31-2016';\n$input = '04-31-2000';\n\
    $input = '03-31-2016';\n\n$input = '04-29-2000';\n$input = '03-31-2016';\n$input\
    \ = '04", "    if (!$date) \n        return false;\n    if (empty($date)) return\
    \ false;\n    if (!preg_match(\"/^(\\d{1,2}-\\d{1,2}-\\d{4})$/\", $date)) return\
    \ false;\n    if (preg_match(\"/^(\\d{1,2})[\\-\\/](\\d{1,2})[\\-\\/](\\d{4})$/\"\
    , $date) == FALSE) return false; \n    if (date('t',strtotime($date)) == 0 ||\
    \ date('t',strtotime($date)) == 3) {\n        if (date('m',strtotime($date)) ==\
    \ 0 || date('m',strtotime($date)) == 11 || date('m',strtotime($date)) == 4 ||\
    \ date('m',strtotime($date)) == 6 || date('m',strtotime($date)) == 9 || date('m',strtotime($date))\
    \ == 2 || date('m',strtotime($date)) == 12) {\n            if (date('d',strtotime($date))\
    \ == 0 || date('d',strtotime($date)) == 1 || date('d',strtotime($date)) == 31\
    \ || date('d',strtotime($date)) == 31 || date('d',strtotime($date)) == 30 || date('d',strtotime($date))\
    \ == 29 || date('d',strtotime($date)) == 31) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}", "    // Remove spaces\n\
    \    $date = str_replace(\" \", \"\", $date);\n    // Get the date\n    $dateParts\
    \ = explode(\"-\", $date);\n    // Validate month\n    if ($dateParts[0] < 1 ||\
    \ $dateParts[0] > 12)\n        return false;\n    // Validate day\n    if ($dateParts[1]\
    \ < 1 || $dateParts[1] > 31)\n        return false;\n    // Validate year\n  \
    \  if ($dateParts[2] < 2000 || $dateParts[2] > 2099)\n        return false;\n\
    \    // All validation rules passed\n    return true;\n}\n", "    // Your code\
    \ here\n    if (empty($date)) {\n        return false;\n    }\n    $dateParts\
    \ = explode(\"-\", $date);\n    if (count($dateParts) != 3) {\n        return\
    \ false;\n    }\n    $months = array(\"1\", \"3\", \"5\", \"7\", \"8\", \"10\"\
    , \"12\");\n    if (in_array($dateParts[0], $months)) {\n        if ($dateParts[1]\
    \ < 1 || $dateParts[1] > 31) {\n            return false;\n        }\n       \
    \ if ($dateParts[2] < 1 || $dateParts[2] > 30) {\n            return false;\n\
    \        }\n    }\n    if (in_array($dateParts[0], $months)) {\n        if ($dateParts[1]\
    \ < 1 || $dateParts[1] > 29) {\n            return false;\n        }\n    }\n\
    \    if (in_array($dateParts[0], $months)) {\n        if ($dateParts[2] < 1 ||\
    \ $dateParts[2] > 12) {\n            return false;\n        }\n    }\n\n    return\
    \ true;\n}", "    if(empty($date) || !preg_match('/^([0-9]{2})-([0-9]{1,2})-([0-9]{4})$/',\
    \ $date)) {\n        return false;\n    }\n    $m = explode('-', $date);\n   \
    \ $day = intval($m[1]);\n    $month = intval($m[0]);\n    $year = intval($m[2]);\n\
    \n    if ($day < 1 || $day > 31 && $month < 1 || $month > 12 && $month < 4) {\n\
    \        return false;\n    }\n    if ($month < 2) {\n        if ($day < 1 ||\
    \ $day > 29) {\n            return false;\n        }\n    }\n    $d = array(31,\
    \ 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n    if ($day <= $d[$month]) {\n\
    \        return true;\n    }\n    return false;\n}", "    // Write your code here\n\
    \    // Validate if date is not empty\n    if($date != \"\" && $date != NULL &&\
    \ $date != false && $date != \"0000-00-00\" && $date != \"0000-00-00 00:00:00\"\
    \ && $date != \"0000-00-00 00:00:00\" && $date != null && $date != \"0000-00-00\
    \ 00:00:00\" && $date != \"0000-00-00\") {\n        // Validate if month is between\
    \ 1 and 12\n        if($date > \"0000-00-00\" && $date < \"0000-00-00\") {\n \
    \           $temp = explode(\"-\", $date);\n            if(($temp[1] >= 1 && $temp[1]\
    \ < 12) && ($temp[0] >= 1 && $temp[0] < 13)) {\n                if($temp[1] <\
    \ 10) {\n                    $temp[1] = \"0\".$temp[1];\n                }\n \
    \               if($temp[0] < 10) {\n                    $temp[0] = \"0\".$temp[0];\n\
    \                }\n                if($temp[1] > 0 && $temp[1] < 13) {\n    \
    \                if($temp[0] > 0 && $temp[0] < 31) {\n                       \
    \ if($temp[0] > 1 && $temp[0] < 30) {\n                            if($temp[0]\
    \ > 2 && $temp[0] < 31) {\n                                if($temp[0] > 3 &&\
    \ $temp[0] < 30) {\n                                    if($temp[0] > 4 && $temp[0]\
    \ < 31) {\n                                        if($temp[0] > 5 && $temp[0]\
    \ < 30) {\n                                            if($temp[0] > 6 && $temp[0]\
    \ < 31) {\n                                                if($temp[0] > 7 &&\
    \ $temp[0] < 30) {\n                                                    if($temp[0]\
    \ > 8 && $temp[0] < 31) {\n                                                  \
    \      if($temp[0] > 9 && $temp[0] < 30) {\n                                 \
    \                           if($temp[0] > 10 && $temp[0] < 31) {\n           \
    \                                                     if($temp[0] > 11 && $temp[0]\
    \ < 30) {\n                                                                  \
    \  if($temp[0] > 12 && $temp[0] < 31) {\n                                    \
    \                                    if($temp[0] > 1 && $temp[0] < 30) {\n   \
    \                                                                         return\
    \ true;\n                                                                    \
    \    }\n                                                                    }\n\
    \                                                                }\n         \
    \                                                   }\n                      \
    \                                  }\n                                       \
    \             }\n                                                }\n         \
    \                                   }\n                                      \
    \  }\n                                    }\n                                }\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n    }\n    return false;\n}",
  "    // code goes here\n    $d = explode(\"-\",$date);\n    // print_r($d);\n  \
    \  if(!empty($date) && count($d) >= 3){\n        $days_limit = array(31,30,29,28,31,30,29,31);\n\
    \        $months_limit = array(1,3,5,7,8,10,12);\n        $year = date('Y',strtotime($date));\n\
    \        if(count($d) < 3 || count($d) > 4){\n            return false;\n    \
    \    }\n        else if(count($d) == 4){\n            $d[] = '';\n           \
    \ $d[] = '';\n            $d[] = '';\n        }\n        else if(!in_array($d[1],$months_limit)\
    \ || count($d[2]) > $days_limit[$d[1]]){\n            return false;\n        }\n\
    \        else if(!in_array($d[2],$days_limit) || count($d[1]) > $days_limit[$d[2]]){\n\
    \            return false;\n        }\n        else if($d[1] < 1 || $d[1] > 12){\n\
    \            return false;\n        }\n        else if($d[2] < 1 || $d[2] > $days_limit[$d[1]]\
    \ || $d[1] > $days_limit[$d[2]]){\n            return false;\n        }\n    \
    \    else if($d[1] > 12 || $d[2] > $days_limit[$d[1]] || $d[1] > $days_limit[$d[2]]){\n\
    \            return false;\n        }\n        else if($year < 1950 || $year >\
    \ 2050){\n            return false;\n        }\n        else{\n            return\
    \ true;\n        }\n    }\n    else{\n        return false;\n    }\n}", "    //\
    \ 1. The date string is not empty.\n    if (!empty($date)) {\n        // 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n        $days_in_months_1 = array(31,28,31,30,31,30,31,31,30,31,30,31);\n\
    \        $days_in_months_2 = array(31,30,31,30,31,30,31,31,30,31,30,31);\n   \
    \     $days_in_months = array();\n        $days_in_months[1] = $days_in_months_1;\
    \ // Jan\n        $days_in_months[2] = $days_in_months_1; // Feb\n        $days_in_months[3]\
    \ = $days_in_months_1; // Mar\n        $days_in_months[5] = $days_in_months_1;\
    \ // Apr\n        $days_in_months[7] = $days_in_months_1; // May\n        $days_in_months[8]\
    \ = $days_in_months_1; // Jun\n        $days_in_months[10] = $days_in_months_1;\
    \ // Jul\n        $days_in_months[12] = $days_in_months_1; // Aug\n        $days_in_months[4]\
    \ = $days_in_months_2; // Sept\n        $days_in_months[6] = $days_in_months_2;\
    \ // Oct\n        $days_in_months[9] = $days_in_months_2; // Nov\n        $days_in_months[11]\
    \ = $days_in_months_2; // Dec\n        $days_in_months[3] = $days_in_months_2;\
    \ // Feb\n        // 3. The months should not be less than 1 or higher than 12.\n\
    \        $months_in_years = array(0,1,2,3,4,5,6,7,8,9,10,11,12);\n        $months\
    \ = $year = 0;\n        $date_string = $date;\n        $date_array = explode(\"\
    -\", $date_string);\n        if (sizeof($date_array) == 3) {\n            if ($date_array[2]\
    \ < 1 || $date_array[2] > 12 || $date_array[1] < 1 || $date_array[1] > 12) {\n\
    \                return false;\n            }\n            $months = $date_array[1];\
    \ //$date_array[1] > 0 ? $date_array[1] : $date_array[0] - 1;\n            $year\
    \ = $date_array[2]; //$date_array[2] > 0 ? $date_array[2] : $date_array[0];\n\
    \        } elseif (sizeof($date_array) == 2) {\n            if ($date_array[1]\
    \ < 1 || $date_array[1] > 12) {\n                return false;\n            }\n\
    \            $months = $date_array[1]; //$date_array[1] > 0 ? $", "    $date_pattern\
    \ = '/^(0[1-9]|1[0-2])\\-(0[1-9]|[12][0-9]|3[01])\\-[0-9]{4}$/';\n    if(!preg_match($date_pattern,\
    \ $date)){\n        return false;\n    }\n    $days_in_month=array(0,31,28,31,30,31,30,31,30,31,30,31);\n\
    \    $days_in_month[date(\"m\",$date)] = date(\"t\", $date);\n    $days_in_month[date(\"\
    M\",$date)] = date(\"t\", $date);\n    $days_in_month[date(\"n\",$date)] = date(\"\
    t\", $date);\n    for($i=1;$i<=date(\"m\",$date);$i++){\n        if($days_in_month[date(\"\
    m\",$date)] != date(\"t\", $date)){\n            return false;\n        }\n  \
    \  }\n    for($i=1;$i<=date(\"M\",$date);$i++){\n        if($days_in_month[date(\"\
    M\",$date)] != date(\"t\", $date)){\n            return false;\n        }\n  \
    \  }\n    for($i=1;$i<=date(\"n\",$date);$i++){\n        if($days_in_month[date(\"\
    n\",$date)] != date(\"t\", $date)){\n            return false;\n        }\n  \
    \  }\n    return true;\n}\n\n$current_date=date_create('now');\n$current_date=date_format($current_date,'m-d-Y');\n\
    $current_date=date_parse($current_date);\n$current_date=date('Y-m-d',$current_date['year'].'-'.$current_date['month'].'-'.$current_date['day']);\n\
    echo $current_date;", "    if (empty($date) || !is_string($date)) {\n        return\
    \ false;\n    }\n\n    $date = strtotime($date);\n    if ($date == FALSE) {\n\
    \        return false;\n    }\n\n    // Get month name and number of days in current\
    \ month\n    $months = array(\"January\" => 1, \"February\" => 2, \"March\" =>\
    \ 3, \"April\" => 4,\n                    \"May\" => 5, \"June\" => 6, \"July\"\
    \ => 7, \"August\" => 8,\n                    \"September\" => 9, \"October\"\
    \ => 10, \"November\" => 11,\n                    \"December\" => 12);\n    $month\
    \ = date('F', $date);\n    $days_in_month = date('t', $date);\n    $days_in_month\
    \ -= 1;\n    if ($days_in_month > 31) {\n        $days_in_month = 31;\n    }\n\
    \    if ($days_in_month < 1) {\n        $days_in_month = 1;\n    }\n    // Get\
    \ the current year\n    $year = date('Y', $date);\n\n    $months_arr = array('January',\
    \ 'March', 'May', 'July', 'August', 'October', 'December');\n    $years_arr =\
    \ array('1910', '2010', '2020', '2021', '2022', '2023', '2024', '2025', '2026',\
    \ '2027', '2028', '2029', '2030', '2031', '2032', '2033', '2034', '2035', '2036',\
    \ '2037', '2038', '2039', '2040', '2041', '2042', '2043', '2044', '2045', '2046',\
    \ '2047', '2048', '2049', '2050', '2051', '2052', '2053', '2054', '2055', '2056',\
    \ '2057', '2058', '2059', '2060', '2061', '2062', '2063', '2064', '2065', '2066',\
    \ '2067', '2068', '2069', '2070', '2071', '2072', '2073', '2074', '2075', '2076',\
    \ '2077', '2078', '2079', '2080', '2081', '2082', '2083', '2084', '2085', '2086',\
    \ '2087', '2088', '2089', '2090', '2091', '2092', '2093', '2094', '2095', '2096',\
    \ '2097', '2098', '2099', '2100', '2101', '2102', '2103', '2104', '2105', '2106',\
    \ '2107', '2108', '2109', '2110', '2111', '2112', '2113', '2114', '2115', '2116',\
    \ '2117', '2118', '2119', '2120', '2121', '2122', '2123', '2124', '2125', '2126',\
    \ '2127", "    if(!empty($date)) {\n        list($month, $day, $year) = explode(\"\
    -\", $date);\n\n        if(!is_numeric($month)) {\n            $date = DateTime::createFromFormat(\"\
    d-m-Y\", $date);\n            $month = $date->format('m');\n            $day =\
    \ $date->format('d');\n            $year = $date->format('Y');\n        }\n\n\
    \        $date_in_range = ($month < 13 && $day < 32 && $day >= 1 && $month >=\
    \ 1 && $day <= 31);\n        $day_of_month_in_range = ($day <= 31 && $month >=\
    \ 1 && $day <= 30);\n        $month_in_range = ($month >= 1 && $month <= 12);\n\
    \        $year_in_range = ($year >= $first_year && $year <= $last_year);\n\n \
    \       if(!$date_in_range || !$day_of_month_in_range || !$month_in_range || !$year_in_range)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n", "  \
    \  if (!empty($date)) {\n        $date = new DateTime($date);\n        if (!$date\
    \ instanceof DateTime) {\n            return false;\n        }\n        $number_of_days_in_month\
    \ = cal_days_in_month(CAL_GREGORIAN, date('m'), date('Y'));\n        $number_of_days_in_the_last_month\
    \ = cal_days_in_month(CAL_GREGORIAN, date('m'), date('Y') - 1);\n        $number_of_days_in_the_last_year\
    \ = cal_days_in_month(CAL_GREGORIAN, date('m'), date('Y') - 2);\n\n        $date_array\
    \ = explode('-', $date);\n        // Validate Month Part\n        if ($date_array[1]\
    \ < 1 || $date_array[1] > 12) {\n            return false;\n        }\n      \
    \  // Validate Year Part\n        if ($date_array[2] < 2000 || $date_array[2]\
    \ > 2040) {\n            return false;\n        }\n        // Validate Day\n \
    \       if ($number_of_days_in_month <= $date_array[1] && $number_of_days_in_the_last_month\
    \ <= $date_array[1] && $number_of_days_in_the_last_year <= $date_array[1]) {\n\
    \            return true;\n        }\n        return false;\n    }\n}\n", "  \
    \  $valid_date = true;\n    // Check the length of the date string.\n    if(strlen($date)\
    \ == 0) {\n        $valid_date = false;\n    } \n    // Check the number of days.\n\
    \    if(!preg_match(\"/(^((0?[1-9])|([1-3][0-9])|([1-2][0][0-9])|([0-9][1-9]))(-((0?[469])|11))(-((19|20)((0[7-9])|(1[0-2]))(-((0[1-9])|10)))?$)/\"\
    , $date)) {\n        $valid_date = false;\n    }\n    // Check the months.\n \
    \   if(!preg_match(\"/(^(1[0-2]|0?[1-9])|([0-2]\\d)|([0]\\d)|([1][0]?\\d))[-\\\
    /]([0]\\d)[-\\/](19|20)\\d\\d/\", $date)) {\n        $valid_date = false;\n  \
    \  }\n    // Check the format.\n    if(!preg_match(\"/(0[1-9]|1\\d|2[0-8])[-\\\
    /](0[1-9]|[12][0-9]|3[01])[-\\/](19|20)\\d\\d/\", $date)) {\n        $valid_date\
    \ = false;\n    }\n    // The date should be in the format: mm-dd-yyyy\n    if(!preg_match(\"\
    /^(0[1-9]|[12][0-9]|3[01])[-\\/](0[1-9]|1[0-2])[-\\/](19|20)\\d\\d$/\", $date))\
    \ {\n        $valid_date = false;\n    }\n    return $valid_date;\n}", "    $date\
    \ = explode(\"-\",$date);\n    if (empty($date[0])) {\n        return false;\n\
    \    }\n    $day = $date[0];\n    $month = $date[1];\n    $year = $date[2];\n\
    \    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if ($month\
    \ < 1 || $month > 12) {\n        return false;\n    }\n    if ($month == 2) {\n\
    \        if ($day > 29) {\n            return false;\n        }\n    }\n    $check\
    \ = false;\n    if (($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ && $day > 30) {\n        $check = true;\n    }\n    if (($month == 1 && $day\
    \ > 31) || ($month == 3 && $day > 30) || ($month == 5 && $day > 31) || ($month\
    \ == 7 && $day > 31) || ($month == 8 && $day > 31) || ($month == 10 && $day >\
    \ 30) || ($month == 12 && $day > 31)) {\n        $check = true;\n    }\n    return\
    \ $check;\n}", "    $d = DateTime::createFromFormat(\"d-m-Y\", $date);\n    $month\
    \ = $d->format(\"m\");\n    $day = $d->format(\"d\");\n    $year = $d->format(\"\
    Y\");\n    if ($month > 12 || $day > 29 || $month < 1 || $day < 1) {\n       \
    \ return false;\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n        if ($day > 30) {\n            return false;\n        }\n \
    \   } else if ($month == 2) {\n        if ($day > 31) {\n            return false;\n\
    \        }\n    }\n    return true;\n}", "    // Check that the date is not empty\
    \ and that the day is not less than 1 and the day is not greater than 31\n   \
    \ if (strlen($date) != 0 && $date < 1 && $date > 31 && $date < 31 && $date > 29\
    \ && $date < 12) {\n        // Check the months and check if they are between\
    \ 1 and 12\n        if ($date < 1 && $date > 12 || $date < 4 && $date > 11 ||\
    \ $date < 6 && $date > 9 || $date < 2 && $date > 12) {\n            // If the\
    \ months are invalid, return False\n            return false;\n        } else\
    \ {\n            // Otherwise, it will return True\n            return true;\n\
    \        }\n    }\n    // If the date is not valid, return False\n    return false;\n\
    }", "    list($month, $day, $year) = explode('-', $date);\n    $year = intval($year);\n\
    \    $month = intval($month);\n    $day = intval($day);\n    $year = is_null($year)\
    \ ? '' : $year;\n    $month = is_null($month) ? '' : $month;\n    $day = is_null($day)\
    \ ? '' : $day;\n    \n    if ($month <= 12)\n    {\n        $daysInMonth = cal_days_in_month(CAL_GREGORIAN,\
    \ $month, $year);\n        $daysInMonth = intval($daysInMonth);\n        $numDays\
    \ = ($day == '') ? $daysInMonth : $day;\n        return ($daysInMonth == $numDays)\
    \ ? true : false;\n    }\n    else\n    {\n        $daysInMonth = cal_days_in_month(CAL_GREGORIAN,\
    \ $month - 1, $year);\n        $daysInMonth = intval($daysInMonth);\n        $numDays\
    \ = ($day == '') ? $daysInMonth : $day;\n        return ($daysInMonth == $numDays)\
    \ ? true : false;\n    }\n}\n", "    $datestring = strtolower($date);\n    if\
    \ (empty($datestring)) return false;\n    $date = date_parse($date);\n    if ($date\
    \ === false) return false;\n    if (!$date || is_array($date)) return false;\n\
    \    if ($date['error_count']) return false; // date error\n    if ($date['year']\
    \ > DATE_EXT_START && $date['year'] < DATE_EXT_END) return false; // wrong year\n\
    \    if ($date['month'] > DATE_EXT_START && $date['month'] < DATE_EXT_END) return\
    \ false; // wrong month\n    if ($date['day'] > DATE_EXT_START && $date['day']\
    \ < DATE_EXT_END) return false; // wrong day\n    return true;\n}\n", "    //\
    \ your validation code here\n}", "    if($date == null || $date == ''){\n    \
    \    return false;\n    }\n    $date_array = explode('-',$date);\n    if(count($date_array)\
    \ != 3){\n        return false;\n    }\n    if($date_array[2] > 12 || $date_array[2]\
    \ < 1 ){\n        return false;\n    }\n    if($date_array[0] < 1 || $date_array[0]\
    \ > 12){\n        return false;\n    }\n    if($date_array[1] < 1 || $date_array[1]\
    \ > 30){\n        return false;\n    }\n    return true;\n}\n</code>\n<|/ a dscore=0\
    \ tags=php,date,validation |>\n<| c |>\nPlease explain how your answer works and\
    \ why it is the correct answer so that it can help others who stumble upon this\
    \ question in the future.\n<|/ c |>\n<| c |>\nWelcome to Stack Overflow! While\
    \ this code may answer the question, providing additional context regarding *why*\
    \ and/or *how* this code answers the question improves its long-term value.\n\
    <|/ c |>\n<| c |>\nI tried to explain the best I could, but to be honest I am\
    \ still a little confused. But thanks anyway for the tips :)\n<|/ c |>\n<| a |>\n\
    <code>\n<?php ", "    $date = trim($date);\n    // Check if date is not empty\n\
    \    if(empty($date))\n    {\n        return false;\n    }\n\n    // Explode date\
    \ by '-' and get the month and days\n    $parts = explode(\"-\", $date);\n   \
    \ $month = str_pad($parts[0], 2, \"0\", STR_PAD_LEFT);\n    $day = str_pad($parts[1],\
    \ 2, \"0\", STR_PAD_LEFT);\n    $year = $parts[2];\n\n    // Check if months are\
    \ in valid range\n    if(!in_array($month, range(1, 12)))\n    {\n        return\
    \ false;\n    }\n\n    // Check if days are in valid range\n    if(!in_array($day,\
    \ range(1, 31)))\n    {\n        return false;\n    }\n\n    // Check if days\
    \ are in valid range\n    if(!in_array($day, range(1, 30)))\n    {\n        return\
    \ false;\n    }\n\n    // Check if days are in valid range\n    if(!in_array($day,\
    \ range(1, 29)))\n    {\n        return false;\n    }\n\n    // Check if months\
    \ are in valid range\n    if(!in_array($month, range(1, 12)))\n    {\n       \
    \ return false;\n    }\n\n    // Check if months are in valid range\n    if(!in_array($month,\
    \ range(1, 12)))\n    {\n        return false;\n    }\n\n    // Check if months\
    \ are in valid range\n    if(!in_array($month, range(1, 12)))\n    {\n       \
    \ return false;\n    }\n\n    // Check if months are in valid range\n    if(!in_array($month,\
    \ range(1, 12)))\n    {\n        return false;\n    }\n\n    // Check if months\
    \ are in valid range\n    if(!in_array($month, range(1, 12)))\n    {\n       \
    \ return false;\n    }\n\n    // Check if months are in valid range\n    if(!in_array($month,\
    \ range(1, 12)))\n    {\n        return false;\n    }\n\n    // Check if months\
    \ are in valid range\n    if(!in_array($month, range(1, 12)))\n    {\n       \
    \ return false;\n    }\n\n    // Check if months are in valid range\n    if(!in_array($month,\
    \ range(1, 12)))\n    {\n        return false;\n    }\n\n    // Check if months\
    \ are in valid range\n    if(!in_array($month, range(1, 12)))\n    {\n       \
    \ return false;\n    }\n\n    // Check if months are in valid range\n    if(!in_array($month,\
    \ range(1, 12)))\n    {\n        return false;\n    }\n\n    // Check if months\
    \ are in valid range\n    if(!in_array($month, range(1, 12)))\n    {\n       \
    \ return false;\n    }\n\n    // Check if months are in valid range\n    if(!in_array($month,\
    \ range(1, 12)))\n    {\n        return false;\n    }\n\n    // Check if months\
    \ are in valid range\n    if(!in_array($month, range(1, 12)))\n    {\n       \
    \ return false;\n    }\n\n    // Check if months are in valid range\n    if(!in_array($month,\
    \ range(1, 12)))", "  if(empty($date)) {\n    return false;\n  }\n  $pattern =\
    \ '#^(0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d$#';\n\
    \  preg_match($pattern, $date, $matches);\n  if($matches) {\n    $months = array(1,2,3,4,5,6,7,8,9,10,11,12);\n\
    \    $days = array(1,31,30,29,30,30,31,31,30,31,30,31);\n    $years = array(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031);\n\
    \    $month_range = array();\n    $valid_years = $years[date('Y')] + 1;\n    for($i\
    \ = 0; $i < $valid_years; ++$i) {\n      $month_range[] = array($years[$i], $years[$i]);\n\
    \    }\n    foreach($months as $m) {\n      if($m > 12) {\n        $month_range[$m]\
    \ = array($years[$m], $years[$i]);\n      }\n      if(isset($month_range[$m][0])\
    \ && isset($month_range[$m][1])) {\n        for($i = $month_range[$m][0]; $i <=\
    \ $month_range[$m][1]; ++$i) {\n          if($i == $date['m']) {\n           \
    \ return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\
    \ else {\n    return false;\n  }\n}\n</code>\n<|/ a tags=php,javascript,html,css,jquery\
    \ |>\n<| c |>\nOkay, but i want to check if date is valid and not empty. so i\
    \ can do this.\n<|/ c |>\n<| c |>\nI've added a function to validate the date\
    \ string\n<|/ c |>\n<| c |>\nI have added the full function which does the validation\
    \ of the date string\n<|/ c |>\n<| c |>\nI have added an explanation to my answer\n\
    <|/ c |>\n<| c |>\ncan you please explain to me what do these lines do?\n`if($m\
    \ > 12) {\n        $month_range[$m] = array($years[$m], $years[$i]);\n      }\n\
    \      if(isset($month_range[$m][0]) && isset($month_range[$m][1])) {\n      \
    \  for($i = $month_range[$m][0]; $i <= $month_range[$m][1]; ++$i) {", "    //\
    \ The function should return True if the date string is valid otherwise it should\
    \ return False.\n    // 1. Check if the given date string is empty or not.\n \
    \   if (empty($date)) {\n        return false;\n    }\n    // 2. Check if the\
    \ string contains a hyphen (-) or not.\n    if (strpos($date, '-') === false)\
    \ {\n        return false;\n    }\n    // 3. Check if the string contains numbers\
    \ between 1 to 12 and a hyphen or not. \n    // Ex: 01-12-2020 contains numbers\
    \ between 1 to 12 and a hyphen.\n    if (preg_match('/^([0-9]{1,2})\\-([0-9]{1,2})\\\
    -([0-9]{4})$/', $date) == 0) {\n        return false;\n    }\n    // 4. Check\
    \ if the string contains only numbers between 1 to 31. And the string contains\
    \ only numbers between 1 to 30. And the string contains only numbers between 1\
    \ to 29. And the string contains only numbers between 1 to 12.\n    if (preg_match('/^([1-9]|[12][0-9]|3[01])\\\
    -([1-9]|[12][0-9]|30)\\-([1-9]|[12][0-9]|29)\\-([1-9]|[12][0-9]|12)$/', $date)\
    \ == 0) {\n        return false;\n    }\n    // 5. Check if the months are between\
    \ 1 to 12 and they are not less than 1 or more than 12.\n    if (preg_match('/^([1-9]|[12][0-9]|3[01])\\\
    -([1-9]|[12][0-9]|30)\\-([1-9]|[12][0-9]|29)$/', $date) == 0) {\n        return\
    \ false;\n    }\n    // 6. Check if the date format is mm-dd-yyyy or not.\n  \
    \  if (preg_match('/^([1-9]|[12][0-9]|3[01])\\-([1-9]|[12][0-9]|30)\\-([1-9]|[12][0-9]|29)$/',\
    \ $date) == 0) {\n        return false;\n    }\n    // 7. Check if the date format\
    \ is mm/dd/yyyy or not.\n    if (preg_match('/^([1-9]|[12][0-9]|3[01])\\/([1-9]|[12][0-9]|30)\\\
    /([1-9]|[12][0-9]|29)$/', $date) == 0) {\n        return false;\n    }\n    //\
    \ 8. Check if the given date string is in the correct format.\n    // ex: 03-11-2000\
    \ is in the correct format.\n    return true;\n}", "    // Your code here\n  \
    \  return preg_match(\"/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/\", $date);\n}", "    $valid\
    \ = False;\n    if (strlen($date) == 0) {\n        $valid = true;\n    } else\
    \ {\n        // Validate the month.\n        $mMonth = preg_replace('/[^1-9]/',\
    \ '', $date);\n        if ($mMonth == '' || $mMonth == '01' || $mMonth == '03'\
    \ || $mMonth == '05' || $mMonth == '07' || $mMonth == '08' || $mMonth == '10'\
    \ || $mMonth == '12') {\n            $valid = true;\n        } else {\n      \
    \      $valid = false;\n        }\n        // Validate the date.\n        $dateArray\
    \ = explode('-', $date);\n        if ($dateArray[0] > 31 && $dateArray[0] < 1)\
    \ $valid = false;\n        if ($dateArray[1] > 30 && $dateArray[1] < 1) $valid\
    \ = false;\n        if ($dateArray[2] > 29 && $dateArray[2] < 1) $valid = false;\n\
    \        $valid = ($valid == true);\n    }\n    return $valid;\n}\n", "    $valid\
    \ = true;\n    list($d, $m, $y) = explode('-', $date);\n    if (strlen($d) > 0\
    \ && strlen($m) > 0 && strlen($y) > 0) {\n        if (!is_numeric($d)) {\n   \
    \         $valid = false;\n        } else {\n            $day = intval($d);\n\
    \            if ($day < 1 || $day > 31) {\n                $valid = false;\n \
    \           } else {\n                $month = intval($m);\n                if\
    \ ($month < 1 || $month > 12) {\n                    $valid = false;\n       \
    \         } else {\n                    $year = intval($y);\n                \
    \    if ($year < 2000 || $year > 2040) {\n                        $valid = false;\n\
    \                    } else {\n                        if ($day == 31 && ($month\
    \ == 2 || $month == 4 || $month == 6 || $month == 9 || $month == 11)) {\n    \
    \                        $valid = false;\n                        } else {\n \
    \                           if ($day == 30 && ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11)) {\n                                $valid = false;\n\
    \                            } else {\n                                if ($day\
    \ == 29 && ($month == 2 || $month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11)) {\n                                    $valid = false;\n           \
    \                     } else {\n                                    $valid = true;\n\
    \                                }\n                            }\n          \
    \              }\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return $valid;\n}\n", "    if (empty($date)) {\n        return\
    \ false;\n    }\n    $array = explode('-', $date);\n    $month = $array[1];\n\
    \    $day = $array[0];\n    $year = $array[2];\n    $month_name = date(\"F\",\
    \ mktime(0,0,0,$month));\n    $date_string = date(\"Y-m-d\", mktime(0,0,0,$month,\
    \ $day, $year));\n    $date_explode = explode('/', $date_string);\n    if (count($date_explode)\
    \ != 3) {\n        return false;\n    }\n    if ($date_explode[1] > 12) {\n  \
    \      return false;\n    }\n    if ($date_explode[2] < 1 && $date_explode[2]\
    \ > 31) {\n        return false;\n    }\n    if ($date_explode[0] < 1 && $date_explode[0]\
    \ > 30) {\n        return false;\n    }\n    if ($date_explode[1] < 1 && $date_explode[1]\
    \ > 29) {\n        return false;\n    }\n    if ($month_name < 1 && $month_name\
    \ > 12) {\n        return false;\n    }\n    return true;\n}", "    // Write your\
    \ code here\n    $pattern = '/(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:29|30)(\\\
    /|-|\\.)(?:0?[1,3-9]|1[0-2])\\2|(?:[2469][048]|[13579][26])\\3(?:0?[1,3-9]|1[0-2])\\\
    4(?:0?[1-9]|1\\d|2[0-8])\\5(?:0?[1-9]|1[0-2])\\6)/';\n    if(preg_match($pattern,\
    \ $date) == 1) {\n        $date = str_replace('/', '-', $date);\n        $date\
    \ = date('Y-m-d', strtotime($date));\n        $months = array(1,2,3,4,5,6,7,8,9,10,11,12);\n\
    \        $days = array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n    \
    \    $date = ($date == '0000-00-00' || $date == '-0001-11-31 00:00:00' || $date\
    \ == '0000-00-00' || $date == '-0001-11-30 00:00:00' || $date == '0000-00-00'\
    \ || $date == '-0001-11-30 00:00:00' || $date == '0000-00-00' || $date == '-0001-11-29\
    \ 00:00:00');\n        return ($date != false && $date != '0000-00-00' && $date\
    \ != '-0001-11-31 00:00:00' && $date != '0000-00-00' && $date != '-0001-11-30\
    \ 00:00:00' && $date != '0000-00-00' && $date != '-0001-11-30 00:00:00' && $date\
    \ != '0000-00-00' && $date != '-0001-11-29 00:00:00' && $date != '0000-00-00'\
    \ && $date != '-0001-11-30 00:00:00' && $date != '0000-00-00' && $date != '-0001-11-29\
    \ 00:00:00');\n    }\n    return false;\n}\n", "    if ($date == '') {\n     \
    \   return false;\n    }\n    $parts = explode(\"-\",$date);\n    if (count($parts)\
    \ != 3) {\n        return false;\n    }\n    $month = intval($parts[0]);\n   \
    \ $day = intval($parts[1]);\n    $year = intval($parts[2]);\n    $months = array(1,2,3,4,5,6,7,8,9,10,11,12);\n\
    \    if (in_array($month,$months)) {\n        if ($day <= 31) {\n            if\
    \ ($day > 31) {\n                return false;\n            }\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n    if ($months < 12) {\n        if ($months > 12) {\n            return\
    \ false;\n        }\n    } else {\n        return false;\n    }\n    if ($month\
    \ < 1 || $month > 12) {\n        return false;\n    }\n    if ($day < 1 || $day\
    \ > 31) {\n        return false;\n    }\n    if ($month == 2) {\n        if ($day\
    \ > 29) {\n            return false;\n        }\n    }\n    if ($day == 31) {\n\
    \        if ($month == 4) {\n            if ($day > 30) {\n                return\
    \ false;\n            }\n        }\n    }\n    if ($day == 30) {\n        if ($month\
    \ == 6) {\n            if ($day > 31) {\n                return false;\n     \
    \       }\n        }\n    }\n    if ($day == 29) {\n        if ($month == 9) {\n\
    \            if ($day > 31) {\n                return false;\n            }\n\
    \        }\n    }\n    if ($month == 4) {\n        if ($day > 30) {\n        \
    \    return false;\n        }\n    }\n    if ($month == 6) {\n        if ($day\
    \ > 31) {\n            return false;\n        }\n    }\n    if ($month == 9) {\n\
    \        if ($day > 31) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 11) {\n        if ($day > 30) {\n            return false;\n    \
    \    }\n    }\n    if ($month == 12) {\n        if ($day > 31) {\n           \
    \ return false;\n        }\n    }\n    if ($day == 0) {\n        if ($month ==\
    \ 1) {\n            if ($day > 31) {\n                return false;\n        \
    \    }\n        }\n        if ($month == 3) {\n            if ($day > 31) {\n\
    \                return false;\n            }\n        }\n        if ($month ==\
    \ 5) {\n            if ($day > 31) {\n                return false;\n        \
    \    }\n        }\n        if ($month == 7) {\n            if ($day > 31) {\n\
    \                return false;\n            }\n        }\n        if ($month ==\
    \ 8) {\n            if ($day > 31) {\n                return false;\n        \
    \    }\n        }\n        if ($month == 10) {\n            if ($day > 31) {\n\
    \                return false;\n            }\n        }\n        if ($month ==\
    \ 12) {\n            if ($day > 31", "    // 1. the date string is not empty\n\
    \    if(!empty($date)) {\n        // 2. the number of days is not less than 1\
    \ or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is\
    \ not less than 1 or higher than 30 days for months 4,6,9,11. And, the number\
    \ of days is not less than 1 or higher than 29 for the month 2.\n        $date_parts\
    \ = explode('-', $date);\n        $days_valid = checkdate($date_parts[1], $date_parts[2]\
    \ > 1 ? $date_parts[2] : 11, $date_parts[0]);\n        $months_valid = checkdate($date_parts[1],\
    \ $date_parts[2], $date_parts[0]);\n    }\n    // 3. The months should not be\
    \ less than 1 or higher than 12.\n    else { \n        $days_valid = checkdate($date_parts[1],\
    \ $date_parts[2] > 1 ? $date_parts[2] : 11, $date_parts[0]);\n        $months_valid\
    \ = checkdate($date_parts[1], $date_parts[2], $date_parts[0]);\n    }\n    //\
    \ 4. The date should be in the format: mm-dd-yyyy\n    if($date_parts[0] > 0 &&\
    \ $date_parts[0] < 13 && $date_parts[1] > 0 && $date_parts[1] < 32 && $date_parts[2]\
    \ > 0 && $date_parts[2] < 32) {\n        $date_valid = true;\n    }\n    // 5.\
    \ The date should be in the format: mm/dd/yyyy\n    else if($date_parts[0] > 0\
    \ && $date_parts[0] < 13 && $date_parts[1] > 0 && $date_parts[1] < 32 && $date_parts[2]\
    \ > 0 && $date_parts[2] < 32) {\n        $date_valid = true;\n    }\n    // 6.\
    \ The date should be in the format: mm/dd/yyyy\n    else if($date_parts[0] > 0\
    \ && $date_parts[0] < 13 && $date_parts[1] > 0 && $date_parts[1] < 32 && $date_parts[2]\
    \ > 0 && $date_parts[2] < 32) {\n        $date_valid = true;\n    }\n    // 7.\
    \ The date should be in the format: mm/dd/yyyy \n    else if($date_parts[0] >\
    \ 0 && $date_parts[0] < 13 && $date_parts[1] > 0 && $date_parts[1] < 32 && $date_parts[2]\
    \ > 0 && $date_parts[2] < 32) {\n        $date_valid = true;\n    }\n    // 8.\
    \ The date should be in the format: mm/dd/yyyy \n    else if($date_parts[0] >\
    \ 0 && $date_parts[0] < 13 && $date_parts[1] > 0 && $date_parts[1] < 32 && $date_parts[2]\
    \ > 0 && $date_parts[2] < ", "    // Your code here\n    if(!empty($date) && !empty($date)\
    \ && strlen($date) == 10 && checkdate($date[1], $date[2], $date[0])) return true;\n\
    \    return false;\n}\n$date = trim($_POST['date']);\nif(isset($_POST['date'])){\n\
    \    if(valid_date($date)){\n        $result = mysqli_query($con,\"INSERT INTO\
    \ dates (date) VALUES ('$date')\");\n    }else{\n        $error = 'Please enter\
    \ a valid date';\n    }\n}\n</code>\n<|/ a dscore=0 tags=mysql,php |>\n<| c |>\n\
    Thanks but I do not want to use any date-picker. I want to insert a date in to\
    \ a table named \"dates\" and that table consists of \"date\" field. So this should\
    \ work as long as I can insert date from phpmyadmin\n<|/ c |>\n<| c |>\nI have\
    \ updated my answer. The above code will insert the date to the table named \"\
    dates\". The only thing you need to do now is to update your HTML form to add\
    \ an input field with name \"date\" which displays the date you just entered in\
    \ the form. The value of that date should be displayed in PHP code by using $_POST['date'].\
    \ Do you get what I am saying?\n<|/ c |>\n<| c |>\nI think I got your point. Let\
    \ me try and implement this on my project and will get back to you if this works.\
    \ Thanks again.\n<|/ c |>\n<| c |>\nOkay, I have updated the code with the function\
    \ which checks the date entered by the user and returns True or False based on\
    \ that. Please check my updated answer for details.\n<|/ c |>\n<| c |>\nThe date\
    \ is not being inserted into the table on using it\n<|/ c |>\n<| a dscore=0 tags=mysql,php\
    \ |>\nI suggest you use DateTime and DateTime Object in PHP.\n<code>\n$date =\
    \ new DateTime($_POST['date']);\n\nif ($date instanceof DateTime) {\n    $date->format('Y-m-d');\
    \ // will format the date to Y-m-d\n} else {\n    // invalid date\n}\n</code>\n\
    <|/ a |>\n<| c |>\nI have added the code above in the if statement as you mentioned\
    \ but still the same result. Could you tell me how to insert the date into the\
    \ table \"dates\" on the condition that the date entered is valid\n<|/ c |>\n\
    <| c |>\nYou should use DateTime Object to insert or update your dates in database.\
    \ Use this tutorial to learn how to use DateTime Object https://eonasdan.github.io/bootstrap-datetimepicker/\n\
    <|/ c |>", "  $date = strtotime($date);\n  if (!$date) {\n    return false;\n\
    \  }\n  $current_date = time();\n  $diff = $current_date - $date;\n  return $diff\
    \ > 0 && $diff < 86400;\n}\n", "    if (trim($date) == '') {\n        return false;\n\
    \    }\n\n    // Check that the date string is formatted correctly.\n    $valid_months\
    \ = array('01','03','05','07','08','10','12');\n    $valid_days = array('01','03','05','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31');\n\
    \    $valid_years = array('1900','1901','1902','1903','1904','1905','1906','1907','1908','1909','1910','1911','1912','1913','1914','1915','1916','1917','1918','1919','1920','1921','1922','1923','1924','1925','1926','1927','1928','1929','1930','1931','1932','1933','1934','1935','1936','1937','1938','1939','1940','1941');\n\
    \    if (!preg_match('/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/', $date, $matches))\
    \ {\n        return false;\n    }\n    // Make sure the dates are valid.\n   \
    \ if (in_array($matches[2],$valid_months)) \n        if (in_array($matches[1],$valid_days)\
    \ && in_array($matches[3],$valid_years)) {\n            return true;\n       \
    \ }\n    return false;\n}", "    $date = explode(\"-\", $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[1] < 1 || $date[1] > 31) {\n\
    \        return false;\n    }\n    if ($date[2] < 1 || $date[2] > 29) {\n    \
    \    return false;\n    }\n    return true;\n}", "    if (empty($date)) {\n  \
    \      return false;\n    }\n    $d = DateTime::createFromFormat('m-d-Y', $date);\n\
    \    // The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n    if ($d->format('m') >= 1 && $d->format('m') <=\
    \ 12 && $d->format('d') >= 1 && $d->format('d') <= 29 && $d->format('Y') >= 1970)\
    \ {\n        return true;\n    }\n    // months should not be less than 1 or higher\
    \ than 12.\n    if ($d->format('m') >= 1 && $d->format('m') <= 12) {\n       \
    \ return true;\n    }\n    // date should be in the format: mm-dd-yyyy\n    //\
    \ for example: \n    // valid_date('03-11-2000') => True\n    // valid_date('15-01-2012')\
    \ => False\n    // valid_date('04-0-2040') => False\n    // valid_date('06-04-2020')\
    \ => True\n    // valid_date('06/04/2020') => False\n    return false;\n}\n",
  "    $date = strtotime($date);\n    $now = time();\n    $days = (60 * 60 * 24);\n\
    \    $months = 12 * 30;\n    $years = 12 * 30;\n    $months = date('m',$date);\n\
    \    $days = date('d',$date);\n    $years = date('Y',$date);\n    if ($date !=\
    \ '' && $days < 1 || $days > (31 + $months) || $months > 12 || $years > $years\
    \ || $months < 1 || $months < 12) {\n        return false;\n    }\n    return\
    \ true;\n}\n", "   $valid = false;\n   if (empty($date) || strlen($date) < 8 )\
    \ {\n      $valid = false;\n   }\n   $date = explode('-', $date);\n   if ($date[1]\
    \ < 1 || $date[1] > 12) {\n      $valid = false;\n   }\n   else if ($date[2] <\
    \ 1 || $date[2] > 31) {\n      $valid = false;\n   }\n   else if ($date[0] < 1\
    \ || $date[0] > 12) {\n      $valid = false;\n   }\n   else if ($date[0] > 31)\
    \ {\n      $valid = false;\n   }\n   else if ($date[2] > 29) {\n      $valid =\
    \ false;\n   }\n   return $valid;\n}\n", "    $pattern = '/^\\d{2}\\-\\d{2}\\\
    -\\d{4}$/';\n    $date_pattern = '/(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])\\\
    -\\d{4}/';\n    if (preg_match($pattern, $date) == 1) {\n        if (preg_match($date_pattern,\
    \ $date) == 1) {\n            if (preg_match($date_pattern, $date) == 1) {\n \
    \               if (preg_match($date_pattern, $date) == 1) {\n               \
    \     if (preg_match($date_pattern, $date) == 1) {\n                        if\
    \ (preg_match($date_pattern, $date) == 1) {\n                            return\
    \ true;\n                        }\n                    }\n                }\n\
    \            }\n        }\n    }\n    return false;\n}", "    $date = strtotime($date);\n\
    \    if (!empty($date)) {\n        $month = (date('m', $date) == 1) ? 12 : date('m',\
    \ $date);\n        $day = (date('d', $date) == 1) ? 31 : date('d', $date);\n \
    \       $year = (date('Y', $date) == date('Y', strtotime($date))) ? date('Y',\
    \ $date) : date('Y', strtotime($date));\n        if ($day < 1 || $day > 31 &&\
    \ $month < 1 || $month > 12) {\n            return false;\n        }\n       \
    \ if ($day < 1 || $day > 30) {\n            $month = ($month == 1) ? 12 : $month;\n\
    \            $day = ($day == 1) ? 29 : $day;\n        }\n        if ($month <\
    \ 1 || $month > 12) {\n            return false;\n        }\n        if (date('m',\
    \ $date) < 1 || date('m', $date) > 12) {\n            return false;\n        }\n\
    \        if (date('d', $date) < 1 || date('d', $date) > 31) {\n            return\
    \ false;\n        }\n        if (date('d', $date) > 30 && date('Y', $date) ==\
    \ date('Y', strtotime($date))) {\n            return false;\n        }\n     \
    \   return true;\n    }\n    return false;\n}", "    $date = str_replace(\"/\"\
    , \"-\", $date);\n    $date = str_replace(\"-\", \" \", $date);\n    $d = DateTime::createFromFormat(\"\
    d-m-Y\", $date);\n    if (!$d) {\n        return false;\n    }\n    // Check all\
    \ valid dates\n    return $d->format('d') > 0 &&\n            $d->format('d')\
    \ == 31 &&\n            $d->format('m') == 1 &&\n            $d->format('Y') >=\
    \ 1900 &&\n            $d->format('Y') <= 2100;\n}\n</code>\nTo get a list of\
    \ all valid dates, use this:\n<code>\n$valid_dates = array();\nforeach(range(1,\
    \ 31) as $month) {\n    for($i = 1; $i <= 29; $i++) {\n        $valid = true;\n\
    \        $date .= '-' . sprintf('%02d', $i) . sprintf('%02d', $month);\n     \
    \   if (!valid_date($date)) {\n            $valid = false;\n        }\n      \
    \  if ($valid) {\n            $valid_dates[] = $date;\n        }\n    }\n}\n\n\
    print_r($valid_dates);\n</code>\n<|/ a dscore=3 tags=date,php,validation,datetime\
    \ |>\n<| c |>\nThanks for the code but it's still returning true even for date\
    \ 31/04/2020\n<|/ c |>\n<| c |>\nYes, that is a valid date. You should add all\
    \ the cases to the `valid_date()` function and make sure it works for everything\
    \ you need.\n<|/ c |>\n<| c |>\nThanks for the edit but it still returning true\
    \ for 31/04/2020\n<|/ c |>\n<| c |>\nThat's because `31/04/2020` is actually `31/4/2020`.\
    \ The function you posted doesn't validate the length of the days and months.\n\
    <|/ c |>\n<| c |>\nI updated my answer to add all possible months and days.\n\
    <|/ c |>\n<| a |>\nHere is an example of how to do it with DateTime and DateTime::createFromFormat\n\
    <code>\n$date = '01-01-2015';\n$dateTime = new DateTime($date);\n$dateTime->format('Y-m-d');\
    \ // formats the date\n\n$dateTime2 = DateTime::createFromFormat('d-m-Y', $date);\n\
    $dateTime2->format('Y-m-d'); // formats the date again\n", "    $date = strtotime($date);\n\
    \    $months = array(\n        1=>'January',\n        2=>'February',\n       \
    \ 3=>'March',\n        4=>'April',\n        5=>'May',\n        6=>'June',\n  \
    \      7=>'July',\n        8=>'August',\n        9=>'September',\n        10=>'October',\n\
    \        11=>'November',\n        12=>'December'\n    );\n    $date = date('m-d-Y',\
    \ $date);\n    $day = $date[0];\n    $month = key($months);\n    $year = date('Y',\
    \ $date);\n    $day = intval($day);\n    $month = intval($month);\n    $year =\
    \ intval($year);\n    if(!empty($date) && is_numeric($day) && is_numeric($month)\
    \ && is_numeric($year)) {\n        $day1 = cal_days_in_month(CAL_GREGORIAN, $month,\
    \ $year);\n        $day2 = date('t', $date);\n        if($day > $day1 && $day\
    \ < $day2) {\n            if($month > 0 && $month < 12) {\n                if($day\
    \ > 0 && $day < 32) {\n                    return true;\n                } else\
    \ {\n                    return false;\n                }\n            } else\
    \ {\n                return false;\n            }\n        } else {\n        \
    \    return false;\n        }\n    } else {\n        return false;\n    }\n}",
  "    if(!empty($date) && preg_match('/^([12]\\d|0[1-9]|3[01])-([1]?[1-9]|2[1-3]|0[1-9])-\\\
    d{4}$/', $date)) {\n        if($date[0] == '0') $date[0] = '12';\n        $day_of_month\
    \ = date('z');\n        $month_days_num = cal_days_in_month(CAL_GREGORIAN, $date[1],\
    \ $date[0]);\n        $month_days_num = $month_days_num - $day_of_month;\n   \
    \     $days_check = ($month_days_num < 1 || $month_days_num > 30) ? false : true;\n\
    \        $months_check = ($month_days_num < 1 || $month_days_num > 12) ? false\
    \ : true;\n        return (bool) ($days_check && $months_check);\n    } else {\n\
    \        return false;\n    }\n}", "    if(empty($date)) {\n        return false;\n\
    \    }\n    $d = DateTime::createFromFormat('m-d-Y', $date);\n    // Check if\
    \ a valid date\n    if ($d === null) {\n        return false;\n    }\n    $dates\
    \ = array(\n        1 => 31, // months from 1 to 12\n        3 => 31, // months\
    \ from 1 to 3\n        5 => 30, // months from 4 to 6\n        7 => 29, // months\
    \ from 4 to 6\n        8 => 29, // months from 4 to 8\n        10 => 28, // months\
    \ from 5 to 9\n        12 => 31 // months from 1 to 12\n    );\n\n    if(array_search($d->format('n'),\
    \ $dates) === false) {\n        return false;\n    }\n    $years = ($d->format('Y')\
    \ - 2000);\n\n    if(array_search($d->format('m'), $dates) === false) {\n    \
    \    return false;\n    }\n    if(array_search($d->format('d'), $dates) === false)\
    \ {\n        return false;\n    }\n\n    if($years <= 0 || $years <= 31) {\n \
    \       return false;\n    }\n    if($years <= 30) {\n        if($years <= 29)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n", "  \
    \  $regex = '#^[0-9]{1,2}-[0-9]{1,2}-[0-9]{4}$#';\n    if(preg_match($regex, $date))\
    \ {\n        $dateArray = explode('-', $date);\n        $day = $dateArray[0];\n\
    \        $month = $dateArray[1];\n        $year = $dateArray[2];\n        if(checkdate($month,\
    \ $day, $year)) {\n            // The date is valid.\n            return true;\n\
    \        } else {\n            // The date is not valid.\n            return false;\n\
    \        }\n    } else {\n        return false;\n    }\n}", "    $date = preg_replace('/[^0-9]/','',\
    \ $date);\n    $pieces = explode('-', $date);\n    if(!empty($pieces[2])) {\n\
    \        $d = intval($pieces[2]);\n    } else {\n        $d = intval($pieces[0]);\n\
    \    }\n    if($d < 1 || $d > 31) {\n        return false;\n    }\n    $months\
    \ = range(1,12);\n    if(in_array($pieces[1], $months)) {\n        if($pieces[1]\
    \ > 12) {\n            return false;\n        }\n        $m = intval($pieces[1]);\n\
    \    } else {\n        $m = intval($pieces[1]);\n    }\n    if($m < 1 || $m >\
    \ 12) {\n        return false;\n    }\n    $y = intval($pieces[0]);\n    if($y\
    \ % 400 === 0) {\n        if($y % 100 === 0) {\n            if($y % 4 === 0) {\n\
    \                if($d > 29) {\n                    return false;\n          \
    \      }\n            }\n        } else {\n            if($d > 30) {\n       \
    \         return false;\n            }\n        }\n    } else if($y % 100 ===\
    \ 0) {\n        if($d > 29) {\n            return false;\n        }\n    } else\
    \ {\n        if($d > 30) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  // Your code goes here.\n  return true;\n}", "    if (empty($date))\
    \ return false;\n    $date = preg_replace('/\\D/', '', $date); // get rid of non-digits\n\
    \    $dateArray = explode('-', $date); // split date parts\n    $month = intval($dateArray[0]);\
    \ // get month\n    $day = intval($dateArray[1]); // get day\n    $year = intval($dateArray[2]);\
    \ // get year\n    if ($month < 1 || $month > 12) return false;\n    if ($day\
    \ < 1 || $day > 31) return false;\n    if ($day > 30) return false;\n    if ($month\
    \ == 2) return $day <= 29;\n    if ($month == 1 && $day <= 29) return true;\n\
    \    return false;\n}\n", "    if (empty($date)) {\n        return false;\n  \
    \  }\n    $date = new DateTime($date);\n    $date_parts = explode('-', $date);\n\
    \    $date_parts = array(\n        'year' => $date_parts[0],\n        'month'\
    \ => $date_parts[1],\n        'day' => $date_parts[2],\n    );\n    // Validate\
    \ the date\n    if (empty($date_parts['month']) || empty($date_parts['day']) ||\
    \ empty($date_parts['year'])) {\n        return false;\n    }\n    if (empty($date_parts['month'])\
    \ || $date_parts['month'] < 1 || $date_parts['month'] > 12) {\n        return\
    \ false;\n    }\n    if (empty($date_parts['day']) || $date_parts['day'] < 1 ||\
    \ $date_parts['day'] > 31) {\n        return false;\n    }\n    if (empty($date_parts['year'])\
    \ || $date_parts['year'] < 1000 || $date_parts['year'] > 3000) {\n        return\
    \ false;\n    }\n    // Return True\n    return true;\n}", "    if(empty($date))\
    \ {\n        return false;\n    }\n\n    // Split the date string into month,\
    \ day, and year\n    list($month, $day, $year) = explode('-', $date);\n\n    //\
    \ Check whether the month entered is valid\n    $month_error = '';\n    \n   \
    \ $months_allowed = array(1,3,5,7,8,10,12);\n    $months_invalid = array(4,6,9,11);\n\
    \    \n    if(in_array($month, array_merge($months_allowed, $months_invalid)))\
    \ {\n        if(!in_array($day, range(1,31))) {\n            $month_error = \"\
    The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\";\n        }\n        \n        if(in_array($month, array_merge($months_allowed,\
    \ $months_invalid))) {\n            if($day > $day + 29) {\n                $month_error\
    \ = \"The months should not be less than 1 or higher than 12.\";\n           \
    \ }\n        }\n    }\n    \n    // If the month and day are valid, then the year\
    \ is valid\n    if($month_error == '') {\n        if(checkdate($month, $day, $year))\
    \ {\n            return true;\n        }\n    }\n    \n    return false;\n}\n\
    </code>\n<|/ a dscore=1 tags=php,html,forms |>\n<| c |>\nThis looks great and\
    \ I will try to modify it a bit. Thank you\n<|/ c |>\n<| a |>\n<code>\nif(isset($_POST['submit']))\
    \ {\n   $date = $_POST['date']; // You have to get the date from your POST array\n\
    \   $time = strtotime($date);\n   $time2 = strtotime(\"+30 days\", $time);\n\n\
    \   $dateTime = date('d-m-Y', $time2);\n   $date = strtotime($dateTime);\n\n \
    \  if($date == $dateTime) {\n       //Do something\n   }\n}\n</code>\nThis code\
    \ will get the date from the HTML form field and add 30 days to it. If the date\
    \ is equal to today's date then do something else return error message.\n<|/ a\
    \ dscore=1 tags=php,html,forms |>\n<| c |>\nThat looks great and I will try to\
    \ modify it a bit. Thank you\n<|/ c |>\n<| c |>\nIf this solution works for you\
    \ please accept it as the answer\n<|/ c |>\n<| c |>\nThis looks like it would\
    \ work, however, it seems to only work when a date is entered in the format mm",
  "   $data = explode(\"-\",$date);\n   if (empty($data) || count($data) !== 3 ||\
    \ strtolower($data[0]) !== \"mm\" || strtolower($data[1]) !== \"dd\" || strtolower($data[2])\
    \ !== \"yyyy\"){\n    return false;\n   }\n   $month = intval(substr($data[0],0,2));\n\
    \   $day = intval(substr($data[1],0,2));\n   $year = intval(substr($data[2],0,4));\n\
    \   \n   //checking the number of days\n   if($day >= 1 && $day <= 31){\n    $days_valid\
    \ = true;\n   }else{\n    $days_valid = false;\n   }\n   if($month >= 1 && $month\
    \ <= 12){\n    $months_valid = true;\n   }else{\n    $months_valid = false;\n\
    \   }\n   if($months_valid && $days_valid){\n    //checking the months\n    $month_length\
    \ = cal_days_in_month(CAL_GREGORIAN,$month,$year);\n    if($day >= 1 && $day <=\
    \ $month_length){\n     return true;\n    }else{\n     return false;\n    }\n\
    \   }else{\n    return false;\n   }\n}\n", "    // Write code here.\n    $date_explode\
    \ = explode(\"-\",$date);\n    \n    $current_year = date('Y');\n    \n    $month\
    \ = intval($date_explode[0]);\n    $day = intval($date_explode[1]);\n    $year\
    \ = intval($date_explode[2]);\n    \n    if(!empty($date)){\n        if($month\
    \ < 1 || $month > 12){\n            return false;\n        }\n        \n     \
    \   if($day < 1 || $day > 31){\n            return false;\n        }\n       \
    \ \n        if($month == 2 && $day > 29){\n            return false;\n       \
    \ }\n        \n        if($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12){\n            \n      \
    \      if($day < 1 || $day > 30){\n                return false;\n           \
    \ }\n            \n            if($day == 1){\n                $month = 1;\n \
    \               $year = $year - 1;\n            }\n            else{\n       \
    \         $month = $month - 1;\n            }\n            \n            $current_month\
    \ = date('m');\n            $current_day = date('d');\n            $current_year\
    \ = date('Y');\n        }\n        else{\n            if($day < 1 || $day > 30){\n\
    \                return false;\n            }\n            \n            if($day\
    \ == 1){\n                $month = 12;\n                $year = $year + 1;\n \
    \           }\n            else{\n                $month = $month + 1;\n     \
    \       }\n            \n            $current_month = 31;\n            $current_day\
    \ = 31;\n            $current_year = $year;\n        }\n        if($month != $current_month\
    \ || $day != $current_day || $year != $current_year){\n            return false;\n\
    \        }\n        return true;\n    }\n    \n    else{\n        return false;\n\
    \    }\n}\n\n/**\n * Checks to see if the string is a valid email. Returns True\
    \ if valid and False otherwise.\n * @param string $email The email address.\n\
    \ * @return True if the email address is valid and False otherwise.\n */", " \
    \ // Write your code here.\n  if (empty($date)) {\n    return FALSE;\n  }\n\n\
    \  // Make sure that the date string is in the correct format\n  if (!preg_match('/^(\\\
    d{1,2})-(\\d{1,2})-(\\d{4})$/', $date, $m)) {\n    return FALSE;\n  }\n\n  $day\
    \ = $m[1];\n  $month = $m[2];\n  $year = $m[3];\n\n  // Make sure that the number\
    \ of days is in range\n  if ($day > 31 || $day < 1) {\n    return FALSE;\n  }\n\
    \n  // Make sure that the month is in range\n  if ($month > 12 || $month < 1)\
    \ {\n    return FALSE;\n  }\n\n  // Make sure that the year is in range\n  if\
    \ ($year < 1000 || $year > 3000 || strlen($year) != 4) {\n    return FALSE;\n\
    \  }\n\n  // Make sure that the day is in the correct month\n  if ($day < 1 ||\
    \ $day > 30) {\n    return FALSE;\n  }\n\n  // Make sure that the day is in the\
    \ correct month\n  if ($month < 1 || $month > 12) {\n    return FALSE;\n  }\n\n\
    \  // Make sure that the month is in range\n  if ($month < 1 || $month > 12) {\n\
    \    return FALSE;\n  }\n\n  return TRUE;\n}\n</code>\n<|/ a tags=php |>\n<| c\
    \ |>\nThanks so much for this! This is exactly what I was looking for and I appreciate\
    \ you helping me out here :)\n<|/ c |>\n<| c |>\nYou just made my day! Thanks.\n\
    <|/ c |>\n<| c |>\nThanks so much for this..\n<|/ c |>\n<| c |>\nYes thanks for\
    \ your help but i got confused with this code as i don't know how to apply it.\n\
    <|/ c |>\n<| c |>\nThis is not the right way to go about validating a date, you\
    \ shouldn't be doing this and doing it in another language. [This post](https://stackoverflow.com/a/261286/242794)\
    \ explains it in more detail.\n<|/ c |>\n<| a tags=php |>\nHere is another possible\
    \ solution:\n<code>", "    return !empty($date) AND \n           preg_match('/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/',\
    \ $date) AND \n           preg_match('/\\b[1-9]|[1-3][0-9]|[1-9][3][0-1]|[1-9][3][0-3]|[1-4][0-2][0-4]|[1-4][0-2][0-5][0-2]|[1-4][0-2][0-5][0-3][0-9]|[1-5][0-2][0-4][0-9]|[1-5][0-2][0-5][0-4][0-2]|[1-5][0-2][0-5][0-4][0-3][0-2]|[1-5][0-2][0-5][0-4][0-3][0-3][0-2]|[1-6][0-2][0-4][0-5][0-2]|[1-6][0-2][0-4][0-5][0-3][0-9]|[1-6][0-2][0-5][0-4][0-2]|[1-6][0-2][0-5][0-4][0-3][0-2]|[1-6][0-2][0-5][0-4][0-3][0-3][0-2]|[1-7][0-2][0-4][0-5][0-2]|[1-7][0-2][0-4][0-5][0-3][0-9]|[1-7][0-2][0-5][0-4][0-2]|[1-7][0-2][0-5][0-4][0-3][0-2]|[1-7][0-2][0-5][0-4][0-3][0-3][0-2]|[1-7][0-2][0-5][0-5][0-2]|[1-7][0-2][0-5][0-5][0-3][0-2]|[1-7][0-2][0-5][0-5][0-3][0-3][0-2]|1|2|3|4|5|6|7|8|9|10|11|12/',\
    \ $date);\n}\n", "    $pattern = \"/^(0[1-9]|[12][0-9]|3[01])/\";\n    if(preg_match($pattern,\
    \ $date)){\n        if(!is_numeric(substr($date, 4, 2))){\n            $new_date\
    \ = substr($date, 0, 4).'-'.substr($date, 4, 2).'-'.substr($date, 6, 4);\n   \
    \     }else{\n            $new_date = substr($date, 0, 2).'-'.substr($date, 2,\
    \ 2).'-'.substr($date, 4, 4);\n        }\n        $date2 = explode('-', $new_date);\n\
    \        $date = $date2[2].'-'.$date2[1].'-'.$date2[0];\n        $date2 = explode('-',\
    \ $date);\n        $month = $date2[0];\n        $day = $date2[1];\n        $year\
    \ = $date2[2];\n        $months = array(1,2,3,4,5,6,7,8,9,10,11,12);\n       \
    \ $months1 = array(4,6,9,11);\n        $months2 = array(1);\n        if(!in_array($month,\
    \ $months)){\n            return false;\n        }\n        if($month < 1){\n\
    \            return false;\n        }\n        if($month > 12){\n            return\
    \ false;\n        }\n        if(!in_array($day, $months1)){\n            return\
    \ false;\n        }\n        if($day < 1){\n            return false;\n      \
    \  }\n        if($day > 30){\n            return false;\n        }\n        if(!in_array($month,\
    \ $months2)){\n            return false;\n        }\n        if($day < 1){\n \
    \           return false;\n        }\n        if($day > 29){\n            return\
    \ false;\n        }\n        if($day > 28){\n            return false;\n     \
    \   }\n        if($day > 30){\n            return false;\n        }\n        return\
    \ true;\n    }else{\n        return false;\n    }\n}\n", "    if(!empty($date))\n\
    \    {\n        $d = date('d-m-Y', strtotime($date));\n        if($d != $date)\n\
    \        {\n            return false;\n        }\n        $day = date('d', strtotime($date));\n\
    \        $month = date('m', strtotime($date));\n        $year = date('Y', strtotime($date));\n\
    \        $validmonth = $month >= 1 && $month <= 12 ? $month : false;\n       \
    \ $validDays = ($day >= 1 && $day <= 31) ? $day : false;\n        $validYear =\
    \ $year >= 1 && $year <= 50 ? $year : false;\n\n        $maxDays = array(1, 2,\
    \ 3, 4, 5);\n        $minDays = array(1, 31, 28);\n        $maxMonth = array(2,\
    \ 4, 6, 9, 11);\n        $minMonth = array(1, 12);\n\n        if(!$validday ||\
    \ !$validMonth || !$validYear || !($validDays && $validMonth && $validYear))\n\
    \        {\n            return false;\n        }\n\n        if($validDays && ($validMonth\
    \ && $validYear))\n        {\n            return ($validDays <= $maxDays && $validDays\
    \ <= $minDays && $validMonths <= $maxMonth && $validMonths <= $minMonth);\n  \
    \      }\n        elseif($validDays)\n        {\n            return ($validDays\
    \ <= $maxDays && $validDays <= $minDays);\n        }\n        elseif($validMonth)\n\
    \        {\n            return ($validMonth <= $maxMonth && $validMonth <= $minMonth);\n\
    \        }\n        elseif($validYear)\n        {\n            return ($validYear\
    \ <= 50);\n        }\n        else\n        {\n            return false;\n   \
    \     }\n    }\n    else\n    {\n        return false;\n    }\n}\n</code>\n<|/\
    \ a |>\n<| a |>\n<code>", "  $valid = true;\n\n  if (!empty($date)) {\n    //\
    \ Check if the date string is not empty.\n    if (!preg_match('/^[0-9]{1,2}-[0-9]{1,2}-[0-9]{4}$/',\
    \ $date)) {\n      $valid = false;\n    }\n    // Check if the date string is\
    \ not valid.\n    if (preg_match('/[^0-9]{1,2}-[^0-9]{1,2}-[^0-9]{4}/', $date))\
    \ {\n      $valid = false;\n    }\n    // Check if the date string is valid.\n\
    \    if (preg_match('/^[0-9]{1,2}-[0-9]{1,2}-[0-9]{4}$/', $date)) {\n      if\
    \ (checkdate($date[1], $date[0], $date[2])) {\n        // Check if the months\
    \ are valid.\n        if (checkdate($date[1], $date[0], 31)) {\n          // Check\
    \ if the days were valid.\n          if (checkdate($date[1], $date[0], 30)) {\n\
    \            // Check if the months are valid.\n            if (checkdate($date[1],\
    \ $date[0], 12)) {\n              $valid = true;\n            } else {\n     \
    \         $valid = false;\n            }\n          } else {\n            $valid\
    \ = false;\n          }\n        } else {\n          $valid = false;\n       \
    \ }\n      } else {\n        $valid = false;\n      }\n    } else {\n      $valid\
    \ = false;\n    }\n  } else {\n    $valid = false;\n  }\n\n  return $valid;\n\
    }\n", "    $valid = false;\n    \n    // 1. Check if the date is not empty\n \
    \   if(empty($date)) {\n        $valid = false;\n    } else {\n        // 2. Check\
    \ if the date is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n        $daysInMonth = cal_days_in_month(CAL_GREGORIAN, $date[2],\
    \ $date[0]);\n        if ($daysInMonth < 1 || $daysInMonth > 31) {\n         \
    \   $valid = false;\n        }\n        \n        // 3. Check if the months should\
    \ not be less than 1 or higher than 12\n        $monthName = cal_month_name (CAL_GREGORIAN,\
    \ $date[2], $date[0]);\n        if ($monthName[0] == '0' || $monthName[1] == '0')\
    \ {\n            $valid = false;\n        }\n        \n        // 4. Check if\
    \ the date should be in the format: mm-dd-yyyy\n        if(!preg_match(\"/^(0?[1-9]|1[012])[-.\\\
    /](0?[1-9]|[12][0-9]|3[01])[-.\\/](19|20)\\d\\d$/\", $date)) {\n            $valid\
    \ = false;\n        }\n        \n        $valid = true;\n    }\n    \n    return\
    \ $valid;\n}", "  if (!empty($date)) {\n    if (preg_match(\"/^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/\", $date)) {\n      $months = range(1,12);\n      $num_days = 0;\n    \
    \  $months_not_valid = array();\n      $days_not_valid = array();\n      for($i\
    \ = 0; $i < count($months); $i++) {\n        $num_days += cal_days_in_month(CAL_GREGORIAN,\
    \ $months[$i], $date);\n        if ($num_days > 29) {\n          $num_days = 29;\n\
    \        }\n        if ($num_days < 1 || $num_days > 31) {\n          $months_not_valid[]\
    \ = $months[$i];\n          $days_not_valid[] = $num_days;\n        }\n      }\n\
    \      if(count($months_not_valid) > 0 || count($days_not_valid) > 0) {\n    \
    \    return false;\n      }\n      return true;\n    } else {\n      return false;\n\
    \    }\n  }\n  return false;\n}\n</code>\n<|/ a |>\n<| a dscore=1 |>\nI think\
    \ there is a much simpler solution to this problem if you use a Datetime object.\
    \ An example of how to do this is shown below: \n<code>\n<?php\n$today = new DateTime();\n\
    $today->format('Y-m-d');\n$today->format('Y-m-d');\n$today->format('Y-m-d');\n\
    $today->format('Y-m-d');\n$today->format('Y-m-d');\n$today->format('Y-m-d');\n\
    $today->format('Y-m-d');\n$today->format('Y-m-d');\n$today->format('Y-m-d');\n\
    $today->format('Y-m-d');\n$today->format('Y-m-d');\n$today->format('Y-m-d');\n\
    $today->format('Y-m-d');\n$today->format('Y-m-d');\n$today->format('Y-m-d');\n\
    $today->format('Y-m-d');\n$today->format('Y-m-d');\n$today->format('Y-m-d');\n\
    $today->format('Y-m-d');\n$today->format('Y-m-d');\n$today->format('Y-m-d');\n\
    $today->format('Y-m-d');\n$today->format('Y-m-d');\n$today->format('Y-m-d');\n\
    $today->format('Y-m-d');\n$today->format('Y-m-d');\n$today->format('Y-m-d');\n",
  "    $date = trim($date);\n    if (strlen($date) == 0) {\n        return false;\n\
    \    }\n    $date = explode(\"-\", $date);\n    $days_valid = (!isset($date[1])\
    \ || $date[1] == '') ? false : ((int) $date[1] >= 1 && $date[1] < 32) ? true :\
    \ false;\n    $months_valid = (!isset($date[0]) || $date[0] == '') ? false : (((int)\
    \ $date[0] >= 1 && $date[0] < 12) ? true : false;\n    $date_valid = (!isset($date[1])\
    \ || $date[1] == '') ? false : ((int) $date[1] >= 1 && $date[1] < 32) ? true :\
    \ false;\n    $date_valid = (!isset($date[0]) || $date[0] == '') ? false : (((int)\
    \ $date[0] >= 1 && $date[0] < 12) ? true : false;\n    if ($days_valid && $months_valid\
    \ && $date_valid) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}", "  if(empty($date)) {\n    return false;\n  }\n  $date = strtotime($date);\n\
    \  $year = date('Y',$date);\n  $month = date('n',$date);\n  $day = date('j',$date);\n\
    \n  if($day < 1 || $day > 31 || ($month == 1 && $day <= 31)) {\n    return false;\n\
    \  }\n  if($month == 2) {\n    if($day > 29) {\n      return false;\n    }\n \
    \ } else {\n    if($day > 30) {\n      return false;\n    }\n  }\n  if($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n    if($day > 31) {\n      return false;\n    }\n  }\n\
    \  if($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n    if($day\
    \ > 30) {\n      return false;\n    }\n  }\n  return true;\n}\n</code>\nFor a\
    \ good introductory PHP date function and usage, please take a look at: http://www.w3schools.com/php/php_ref_date.asp\n\
    <|/ a dscore=1 |>\n<| c |>\nThanks for your answer. I'll try to implement it in\
    \ my code and let you know how it goes.\n<|/ c |>\n<| a dscore=1 |>\nThe easiest\
    \ way to get around this issue is to use this code:\n<code>\n$date = '2016-08-31';\n\
    date_default_timezone_set('UTC');\n$date = date_create($date);\n$timestamp = $date->format('U');\n\
    $timestamp = strtotime($timestamp);\n$timestamp = date('U', $timestamp);\n</code>\n\
    <|/ a tags=php,date |>\n<| a tags=php,date |>\n<code>\n<?php\n$current_date =\
    \ \"2019-06-28\";\n$new_date = date(\"Y-m-d H:i:s\", strtotime(\"+1 day\",strtotime($current_date)));",
  "    // Your code here\n    $pattern = \"/^(0?[1-9]|1[0-2])[\\/\\-](0?[1-9]|[12][0-9]|3[01])[\\\
    /\\-](19|20)\\d\\d$/\";\n    return preg_match($pattern, $date);\n}\n", "    if\
    \ (empty($date)) {\n        return false;\n    }\n\n    $d = DateTime::createFromFormat('d-m-Y',\
    \ $date);\n\n    $month = date('n', $d);\n    $year = date('Y', $d);\n    $day\
    \ = $d->format('j');\n\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n\n \
    \   if ($month == 2 && $day > 29) {\n        return false;\n    }\n\n    if ($month\
    \ == 1 && $day > 31) {\n        return false;\n    }\n\n    return true;\n}\n\n\
    $date = valid_date($_POST['date']);\n\nif($date) {\n    // Your code here\n}",
  "     // Write your date validation code here.\n     $date = explode('-', $date);\n\
    \     if (count($date) == 3) {\n          if (checkdate($date[1], $date[2], $date[0]))\
    \ {\n               return true;\n          }\n     }\n     return false;\n}",
  "    $date_pieces = explode('-', $date);\n    if (count($date_pieces) == 3 && checkdate($date_pieces[2],\
    \ $date_pieces[1], $date_pieces[0])) {\n        return true;\n    }\n    return\
    \ false;\n}\n", "    // Write your code here\n    if(!empty($date)){\n       \
    \ $d = DateTime::createFromFormat('m-d-Y', $date);\n        if($d){\n        \
    \    $daysInMonth = cal_days_in_month(CAL_GREGORIAN, date('m'), date('t'));\n\
    \            if(date('t') > date('j') && date('m') <= 12 && $daysInMonth > date('t')){\n\
    \                return true;\n            }else{\n                return false;\n\
    \            }\n        }else{\n            return false;\n        }\n    }else{\n\
    \        return false;\n    }\n}\n</code>\n<|/ a tags=validation,php |>\n<| c\
    \ |>\nI tested your function, and I get the error:  Call to undefined function\
    \ cal_days_in_month()\n<|/ c |>\n<| c |>\nYou need to install PHP's Date/Time\
    \ extension.\n<|/ c |>\n<| c |>\nI am running php5.3 so I cannot install the time\
    \ extension, is there another way to do this?\n<|/ c |>\n<| a |>\nPlease refer\
    \ this PHP Doc for valid dates\n<code>", "    $valid_date = FALSE;\n    if (strlen($date)\
    \ == 0) {\n        $valid_date = FALSE;\n    } else if (is_numeric($date)) {\n\
    \        $date_splitted = explode(\"-\", $date);\n        $date_split = explode(\"\
    /\", $date_splitted[0]);\n        $date_split2 = explode(\"/\", $date_splitted[1]);\n\
    \n        $date_split[0] = intval($date_split[0]);\n        $date_split[1] = intval($date_split[1]);\n\
    \        $date_split[2] = intval($date_split[2]);\n\n        // The date should\
    \ be in the format: mm-dd-yyyy\n        if ($date_split[2] != $date_split[1] ||\
    \ $date_split[2] < $date_split[0] || $date_split[2] > $date_split[1]) {\n    \
    \        $valid_date = FALSE;\n        } else {\n            $valid_date = TRUE;\n\
    \        }\n    } else {\n        $valid_date = FALSE;\n    }\n    return $valid_date;\n\
    }\n", "    if(empty($date)) {\n        return false;\n    }\n\n    $valid_date\
    \ = false;\n    $valid_days = true;\n    $valid_months = false;\n    $valid_years\
    \ = false;\n\n    if(!empty($date)) {\n        $dateArray = explode('-', $date);\n\
    \n        if(count($dateArray) == 3) {\n            $valid_date = true;\n    \
    \        $valid_days = true;\n            $valid_months = true;\n            $valid_years\
    \ = true;\n        }\n        else {\n            $dateArray = explode('/', $date);\n\
    \n            if(count($dateArray) == 3) {\n                $valid_date = true;\n\
    \                $valid_days = true;\n                $valid_months = true;\n\
    \                $valid_years = true;\n            }\n            else {\n   \
    \             return false;\n            }\n        }\n    }\n\n    $days = array();\n\
    \    $months = array();\n    $years = array();\n\n    for($i = 0; $i < count($dateArray);\
    \ $i++) {\n        if(!is_numeric($dateArray[$i])) {\n            return false;\n\
    \        }\n    }\n\n    for($i = 0; $i < count($dateArray); $i++) {\n       \
    \ $days[$i] = $dateArray[$i];\n    }\n\n    if(!isset($days[0])) {\n        for($i\
    \ = 1; $i < count($dateArray); $i++) {\n            $days[$i] = 0;\n        }\n\
    \    }\n\n    for($i = 0; $i < count($days); $i++) {\n        $days[$i] = intval($days[$i]);\n\
    \    }\n\n    for($i = 0; $i < count($days); $i++) {\n        if($days[$i] > 31\
    \ || $days[$i] < 1) {\n            $valid_days = false;\n            break;\n\
    \        }\n    }\n\n    for($i = 0; $i < count($dateArray); $i++) {\n       \
    \ $months[$i] = $dateArray[$i];\n    }\n\n    for($i = 0; $i < count($months);\
    \ $i++) {\n        $months[$i] = intval($months[$i]);\n    }\n\n    for($i = 0;\
    \ $i < count($months); $i++) {\n        if($months[$i] > 12 || $months[$i] < 1)\
    \ {\n            $valid_months = false;\n            break;\n        }\n    }\n\
    \n    for($i = 0; $i < count($dateArray); $i++) {\n        $years[$i] = $dateArray[$i];\n\
    \    }\n\n    for($i = 0; $i < count($years); $i++) {\n        $years[$i] = intval($years[$i]);\n\
    \    }\n\n    if($valid_date && $valid_days && $valid_months && $valid_years)\
    \ {\n        return true;\n    }\n    else {\n        return false;\n    }\n",
  "    //get the date parts to check month and day range\n    $dayofmonth = date('j',strtotime($date));\n\
    \    $month= date('n',strtotime($date));\n    $year = date('Y',strtotime($date));\n\
    \n    //validate if date is not empty and day/month range is valid\n    if(!empty($date)\
    \ && $dayofmonth >= 1 && $dayofmonth <= 31 && $month >= 1 && $month <= 12) {\n\
    \n        //validate date format\n        if(!preg_match('/^(0[1-9]|1[0-9]|2[0-9]|3[0-1])\\\
    -(0[1-9]|1[0-2])\\-[0-9]{4}$/', $date)) {\n            return false;\n       \
    \ }\n        //validate date range\n        if($month == 2 && $dayofmonth < 1\
    \ || $dayofmonth > 29) {\n            return false;\n        }\n        if($month\
    \ == 4 && $dayofmonth < 1 || $dayofmonth > 30) {\n            return false;\n\
    \        }\n        if($month == 6 && $dayofmonth < 1 || $dayofmonth > 31) {\n\
    \            return false;\n        }\n        if($month == 9 && $dayofmonth <\
    \ 1 || $dayofmonth > 31) {\n            return false;\n        }\n        if($month\
    \ == 11 && $dayofmonth < 1 || $dayofmonth > 30) {\n            return false;\n\
    \        }\n        if($month == 1) {\n            if($dayofmonth < 1 || $dayofmonth\
    \ > 31) {\n                return false;\n            }\n        }\n    }\n  \
    \  return true;\n}\n", "    $day = date('d', strtotime($date));\n    $month =\
    \ date('m', strtotime($date));\n    $year = date('Y', strtotime($date));\n   \
    \ \n    if (empty($date) || $day < 1 || $day > 31 || ($month == 1 && $day == 31)\
    \ || ($month == 3 && $day == 30) || ($month == 5 && $day == 29) || ($month ==\
    \ 7 && $day == 31) || ($month == 8 && $day == 31) || ($month == 10 && $day ==\
    \ 31) || ($month == 12 && $day == 31)) {\n        return false;\n    }\n    \n\
    \    if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n      \
    \  $day = 29;\n    }\n    \n    if ($month == 2) {\n        $day = 31;\n    }\n\
    \    \n    if ($day < 1 || $day > 30) {\n        return false;\n    }\n    \n\
    \    if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month ==\
    \ 8 || $month == 10 || $month == 12) {\n        $day = 29;\n    }\n    \n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        $day\
    \ = 28;\n    }\n    \n    if ($day < 1 || $day > 31) {\n        return false;\n\
    \    }\n    \n    if ($month == 2 && $day < 1 || $day > 29) {\n        return\
    \ false;\n    }\n    \n    return true;\n}", "    $check = explode(\"-\", $date);\n\
    \n    if (count($check) != 3) {\n        return false;\n    }\n\n    if (!empty($date))\
    \ {\n        $date = new DateTime($date);\n    }\n\n    if (count($check) == 3)\
    \ {\n        $year = $check[2];\n        if (is_numeric($year) && $year < 1000\
    \ && $year > 0) {\n            return true;\n        }\n        return false;\n\
    \    }\n\n    if (!empty($check[1]) && $check[1] < 1 || $check[1] > 31) {\n  \
    \      return false;\n    }\n\n    if (!empty($check[1]) && $check[1] < 1 || $check[1]\
    \ > 31) {\n        return false;\n    }\n\n    if (!empty($check[1]) && $check[1]\
    \ < 1 || $check[1] > 31) {\n        return false;\n    }\n\n    if (!empty($check[1])\
    \ && $check[1] < 1 || $check[1] > 31) {\n        return false;\n    }\n\n    if\
    \ (!empty($check[1]) && $check[1] < 1 || $check[1] > 31) {\n        return false;\n\
    \    }\n\n    if (!empty($check[1]) && $check[1] < 1 || $check[1] > 31) {\n  \
    \      return false;\n    }\n\n    if (!empty($check[1]) && $check[1] < 1 || $check[1]\
    \ > 31) {\n        return false;\n    }\n\n    if (!empty($check[1]) && $check[1]\
    \ < 1 || $check[1] > 31) {\n        return false;\n    }\n\n    if (!empty($check[1])\
    \ && $check[1] < 1 || $check[1] > 31) {\n        return false;\n    }\n\n    if\
    \ (!empty($check[1]) && $check[1] < 1 || $check[1] > 31) {\n        return false;\n\
    \    }\n\n    return true;\n}\n</code>\n<|/ a |>\n<| c |>\nI like the way you\
    \ did this but it is not working as it should. `valid_date('03-11-2000')` returns\
    \ true and `valid_date('15-01-2012')` returns false\n<|/ c |>\n<| c |>\nI see\
    \ you changed your requirements to mm-dd-yyyy from dd-mm-yyyy earlier. Can you\
    \ please check again, It works for me after changing the code. Please let me know\
    \ if you still face issues.\n<|/ c |>\n<| c |>\nYou are right, I had a mistake\
    \ in my code earlier, Now I have corrected the code. Check it again. Please let\
    \ me know if you still face issues.\n<|/ c |>\n<| c |>\nYour updated code is working\
    \ fine in all test cases except for `06/04/2020` where it returns true instead\
    \ of false. Thanks for your help but this answer does not fulfill my requirements.\n\
    <|/ c |>\n<| a tags=php,date |>\n<code>\n$dateArray = ", "    $date = explode('-',\
    \ $date);\n    $month = array_shift($date);\n    $day = array_shift($date);\n\
    \    $year = array_shift($date);\n    $days_in_month = cal_days_in_month(CAL_GREGORIAN,\
    \ $month, $year);\n    $days_in_month = max($days_in_month, 29);\n    if ($day\
    \ > $days_in_month) return false;\n    if ($month > 12) return false;\n    if\
    \ ($month < 1 || $month > 12) return false;\n    if ($day < 1 || $day > $days_in_month)\
    \ return false;\n    return true;\n}", "\t$date = strtotime($date);\n\t$date =\
    \ ($date) ? $date : false;\n\tif (empty($date))\n\t\treturn false;\n\t$date =\
    \ strtotime($date);\n\t$date = ($date) ? $date : false;\n\tif (!checkdate($month,\
    \ $day, $year))\n\t\treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\
    \treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\treturn false;\n\t\
    if (!checkdate($month, $day, $year))\n\t\treturn false;\n\tif (!checkdate($month,\
    \ $day, $year))\n\t\treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\
    \treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\treturn false;\n\t\
    if (!checkdate($month, $day, $year))\n\t\treturn false;\n\tif (!checkdate($month,\
    \ $day, $year))\n\t\treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\
    \treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\treturn false;\n\t\
    if (!checkdate($month, $day, $year))\n\t\treturn false;\n\tif (!checkdate($month,\
    \ $day, $year))\n\t\treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\
    \treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\treturn false;\n\t\
    if (!checkdate($month, $day, $year))\n\t\treturn false;\n\tif (!checkdate($month,\
    \ $day, $year))\n\t\treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\
    \treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\treturn false;\n\t\
    if (!checkdate($month, $day, $year))\n\t\treturn false;\n\tif (!checkdate($month,\
    \ $day, $year))\n\t\treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\
    \treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\treturn false;\n\t\
    if (!checkdate($month, $day, $year))\n\t\treturn false;\n\tif (!checkdate($month,\
    \ $day, $year))\n\t\treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\
    \treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\treturn false;\n\t\
    if (!checkdate($month, $day, $year))\n\t\treturn false;\n\tif (!checkdate($month,\
    \ $day, $year))\n\t\treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\
    \treturn false;\n\tif (!checkdate($month, $day, $year))\n\t\treturn false;\n\t\
    if (!checkdate($month, $day, $year))\n\t\treturn false;\n\tif (!checkdate($month,\
    \ $day, $year))\n\t\treturn false;\n\tif (!checkdate", "    if (!empty($date))\
    \ {\n        $date = DateTime::createFromFormat('d-m-Y', $date);\n        $number_of_days\
    \ = $date->format('z') - 0;\n        \n        if ($number_of_days > 0 && $number_of_days\
    \ < 31) {\n            $number_of_days = 1;\n        } elseif ($number_of_days\
    \ > 31 && $number_of_days < 30) {\n            $number_of_days = 2;\n        }\
    \ elseif ($number_of_days > 29) {\n            $number_of_days = 3;\n        }\n\
    \n        $number_of_months = $date->format('n') - 1;\n\n        if ($number_of_months\
    \ < 1 && $number_of_months > 12) {\n            $number_of_months = 1;\n     \
    \   }\n\n        if ($number_of_months > 12) {\n            $number_of_months\
    \ = 12;\n        }\n\n        if ($number_of_days < 1 && $number_of_days > 31)\
    \ {\n            $number_of_days = 1;\n        } elseif ($number_of_days > 31\
    \ && $number_of_days < 30) {\n            $number_of_days = 2;\n        } elseif\
    \ ($number_of_days > 29) {\n            $number_of_days = 3;\n        }\n\n  \
    \      if ($number_of_months < 1 && $number_of_months > 12) {\n            $number_of_months\
    \ = 1;\n        }\n\n        if ($number_of_months > 12) {\n            $number_of_months\
    \ = 12;\n        }\n\n        if ($number_of_days < 1 && $number_of_days > 31)\
    \ {\n            $number_of_days = 1;\n        } elseif ($number_of_days > 31\
    \ && $number_of_days < 30) {\n            $number_of_days = 2;\n        } elseif\
    \ ($number_of_days > 29) {\n            $number_of_days = 3;\n        }\n    }\n\
    \n    if ($number_of_months < 1 || $number_of_months > 12) {\n        return false;\n\
    \    }\n\n    if ($number_of_days < 1 || $number_of_days > 31) {\n        return\
    \ false;\n    }\n\n    if ($number_of_days > 30) {\n        return false;\n  \
    \  }\n\n    if ($number_of_days < 1 || $number_of_days > 29) {\n        return\
    \ false;\n    }\n\n    if ($number_of_days < 1 || $number_of_days > 31) {\n  \
    \      return false;\n    }\n\n    return true;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThank you very much for that answer, I am going to check it out and will\
    \ post the results.\n<|/ c |>\n<| c |>\nThe code seems to work fine except when\
    \ I enter a date such as 03-11-2017 it returns false when it should return true\
    \ as it is valid. Do you know why this might be happening?\n<|/ c |>\n<| c |>\n\
    I managed to solve it, I just had to change the <= to >= on the number_of_days\
    \ so now it looks like this: `if ($number_of_days >= 1 && $number_of_days <= 31)\
    \ {\n            $number_of_days = 1;\n        } elseif ($number_of_days >= 31\
    \ && $number_of_days <= ", "  $date = date('Y-m-d', strtotime($date));\n\n  $pattern\
    \ = '#^(\\d{1,2})-(\\d{1,2})-(\\d{4})$#';\n  if(preg_match($pattern, $date, $matches)){\n\
    \    $day = $matches[2];\n    $month = $matches[1];\n    $year = $matches[3];\n\
    \n    $checkDate = $year > 0;\n    $checkDate &= $month > 0;\n    $checkDate &=\
    \ $day > 0;\n    $checkDate &= $month < 13;\n    $checkDate &= $day < 31;\n  \
    \  $checkDate &= $day < 30;\n    $checkDate &= $day < 29;\n\n    if($checkDate){\n\
    \      return true;\n    }\n    return false;\n  }\n  return false;\n}", "   \
    \ if(!isset($date) || empty($date)) return false;\n    list($m, $d, $y) = explode('-',\
    \ $date);\n    if(checkdate($m, $d, $y)) return true;\n    return false;\n}\n",
  "    if (empty($date)) {\n        return false;\n    }\n\n    $date_array = explode('-',$date);\n\
    \n    if (count($date_array) != 3) {\n        return false;\n    }\n\n    $month\
    \ = $date_array[1];\n    $day = $date_array[2];\n    $year = $date_array[0];\n\
    \n    if ($month <1 || $month>12 || $day <1 || $day >31) {\n        return false;\n\
    \    }\n\n    if ($month == 2) {\n        if ($day <1 || $day >29) {\n       \
    \     return false;\n        }\n    } else {\n        if ($day <1 || $day >31)\
    \ {\n            return false;\n        }\n    }\n\n    if ($month == 1) {\n \
    \       if ($day <1 || $day >30) {\n            return false;\n        }\n   \
    \ }\n\n    if ($day > $month ) {\n        $day_diff = $month - $day;\n       \
    \ if ($day > $day_diff) {\n            return false;\n        }\n    }\n\n   \
    \ if ($day > 31) {\n        return false;\n    }\n\n    if ($year > $date_array[0])\
    \ {\n        if ($year < $date_array[0]) {\n            return false;\n      \
    \  }\n    }\n\n    if ($year < $date_array[0]) {\n        return false;\n    }\n\
    \n    return true;\n}", "    list($month, $day, $year) = explode('-', $date);\n\
    \    if (empty($date) || \n        ((int)$day < 1 || (int)$day > 31) || ((int)$month\
    \ < 1 || (int)$month > 12) ||\n        ((int)$year < 1 || (int)$year > 9999) ||\
    \ ((int)$month < 1 || (int)$month > 12)) {\n        return false;\n    }\n   \
    \ \n    $d = DateTime::createFromFormat('m-d-Y', $date);\n    \n    // Month\n\
    \    if ($d->format('m') < 1 || (int)$d->format('m') > 12) {\n        return false;\n\
    \    }\n    \n    // Day\n    if ($d->format('d') < 1 || (int)$d->format('d')\
    \ > 31) {\n        return false;\n    }\n    \n    // Year\n    if ($d->format('Y')\
    \ < 1 || (int)$d->format('Y') > 9999) {\n        return false;\n    }\n    \n\
    \    return true;\n}", "    // write code here\n    $d = DateTime::createFromFormat('m-d-Y',\
    \ $date);\n    if ($d && $d->format('n') < 12) {\n        if ($d->format('n')\
    \ > 2 || ($d->format('n') == 2 && $d->format('j') > 29)) {\n            return\
    \ false;\n        }\n        $months = array(1,2,3,4,5,6,7,8,9,10,11,12);\n  \
    \      if (!in_array($d->format('n'), $months)) {\n            return false;\n\
    \        }\n        if ($d->format('n') == 2 && $d->format('j') > 29) {\n    \
    \        return false;\n        }\n        if ($d->format('j') == 29) {\n    \
    \        return false;\n        }\n        $days = $d->format('j') - 1;\n    \
    \    if ($days <= 1 || $days >= 31) {\n            return false;\n        }\n\
    \        if ($d->format('m') == 0 || $d->format('m') == 1) {\n            return\
    \ false;\n        }\n        return true;\n    }\n    return false;\n}", "   \
    \ if(!empty($date)){\n        if (checkdate($date[2], $date[1], $date[0])) {\n\
    \            if ((date('t',strtotime($date))<1 && ($date[2]<1 || $date[2]>12))\
    \ || (date('t',strtotime($date))>31 && ($date[2]<1 || $date[2]>12)) || (date('n',strtotime($date))<1\
    \ || $date[2]>12) || (date('n',strtotime($date))>12)) {\n                return\
    \ false;\n            }\n        }else{\n            return false;\n        }\n\
    \    }else{\n        return false;\n    }\n}\n", "    if (empty($date)) {\n  \
    \      return false;\n    }\n    $split = explode('-', $date);\n    if (count($split)\
    \ != 3) {\n        return false;\n    }\n    if ($split[0] <= 0 || $split[0] >\
    \ 12) {\n        return false;\n    }\n    if ($split[1] <= 0 || $split[1] > 31)\
    \ {\n        return false;\n    }\n    if ($split[2] <= 0 || $split[2] > 30) {\n\
    \        return false;\n    }\n    return true;\n}\n</code>\n<|/ a tags=date,validation,php\
    \ |>\n<| a dscore=1 |>\nIf you have PHP 7+, you can use DateTime::createFromFormat\n\
    <code>\n<?php\n$inputs = [\n    '31-3-2000',\n    '31-01-2000',\n    '31-3-2040',\n\
    \    '04-0-2040',\n    '04/01/2020',\n    '04/02/2020',\n    '06/04/2020'\n];\n\
    foreach($inputs as $input) {\n    $dateTime = new DateTime();\n    $dateTime->setTime(23,\
    \ 59, 59);\n    $dateTime->setDate(2000, 2, 1);\n    $dateTime->setDate($dateTime->format('m'),\
    \ $dateTime->format('d'), $dateTime->format('Y'));\n    if($dateTime->createFromFormat('d-m-Y',\
    \ $input)) {\n        echo \"Date $input is a valid date\\n\";\n    } else {\n\
    \        echo \"Date $input is not valid date\\n\";\n    }\n}\n</code>\nThis code\
    \ uses the DateTime object and setTime() and setDate() to set the time to 23:59:59\
    \ and date of February 1st.  Then it checks if the date createFromFormat() returns\
    \ true (the date is valid) or false (the date is invalid).  In your example it\
    \ outputs\n<code>\nDate 31-3-2000 is a valid date\nDate 31-01-2000 is not valid\
    \ date\nDate 31-3-2040 is not valid date\nDate 04-0-2040 is not valid date\nDate\
    \ 04/01/2020 is a valid date\nDate 04/02/2020 is not valid date\nDate 06/04/2020\
    \ is a valid date\n</code>\nDemo\n<|/ a tags=date,validation,php |>\n<| c |>\n\
    Not every day is 23 hours 59 minutes and 59 seconds. It depends on daylight saving\
    \ time.\n<|/ c |>\n<| c |>\nYou are correct, I updated the code to set 23:59:59\
    \ on February 1st.  It works for my use case and does not require changing the\
    \ format of input.\n<|/ c |>\n<| c |>\nIt is not necessary to set the time to\
    \ the current time. You can use `setTime` to set the time to the desired time",
  "    $valid = true;\n    if (empty($date)) {\n        $valid = false;\n    }\n \
    \   $day = strlen($date);\n    if ($day <= 1 || $day > 31) {\n        $valid =\
    \ false;\n    }\n    $month = strlen($date) - 2;\n    if ($month < 1 || $month\
    \ > 12) {\n        $valid = false;\n    }\n    $year = substr($date, -4, 4);\n\
    \    if ($year < 1000 || $year > 3000) {\n        $valid = false;\n    }\n   \
    \ return $valid;\n}", "    $d = DateTime::createFromFormat('m-d-Y', $date);\n\
    \    return ($d && $d->format('m') >= 1 && $d->format('m') <= 12 &&\n        $d->format('d')\
    \ >= 1 && $d->format('d') <= 31 &&\n        $d->format('Y') >= 1980 && $d->format('Y')\
    \ <= 2040);\n}\n\n$valid = valid_date('03-11-2000');\necho $valid? '' : 'Invalid\
    \ Date';\n</code>\nThis uses the DateTime class in the PHP documentation and checks\
    \ whether the date is valid or not. There are other ways of doing it such as using\
    \ the strtotime function and checking whether that returns false or true, but\
    \ I personally find this to be the simplest way. You can do that as well with\
    \ your own code.\n<|/ a tags=php dscore=0 |>\n<| c |>\nThank you for the answer!\
    \ I didn't realize that I could just use that to validate an entire string. However,\
    \ is there a way to validate the month as well as day?\n<|/ c |>\n<| c |>\nYou\
    \ can use the `DateTime` class. I'll edit the answer\n<|/ c |>\n<| c |>\nThank\
    \ you for the edit! However, I keep getting the following error when I attempt\
    \ to run the code: `Fatal error: Uncaught Error: Call to undefined function DateTime()\
    \ in /home3/matt/public_html/php_tests/date_validation.php:7 Stack trace: #0 {main}\
    \ thrown in /home3/matt/public_html/php_tests/date_validation.php on line 7` Any\
    \ ideas on what might be wrong?\n<|/ c |>\n<| c |>\nYou need to install the PHP\
    \ `DateTime` extension if you are using PHP 7.\n<|/ c |>\n<| c |>\nI've just tried\
    \ that and I seem to be still getting the same error. Any ideas?\n<|/ c |>\n<|\
    \ a tags=php |>\n<code>\n<?php\n\n$months = array('01', '02', '03', '04', '05',\
    \ '06', '07', '08', '09', '10', '11', '12');\n$date = '02-11-2014';\n$date = new\
    \ DateTime($date);\n$day = $date->format('d');\n$month = $date->format('m');\n\
    $year = $date->format('Y');\nif($day == 1 && $month == 1 && $year == 2014){ echo\
    \ \"it is valid date\"; }\nif($day == 31 && $month == 3 && $year == 2014){ echo\
    \ \"it is valid date\"; }\nif($day == 30 && $month == 5 && $year == 2014){ echo\
    \ \"", "    $valid = TRUE;\n    $dateArray = explode(\"-\", $date);\n    if (count($dateArray)\
    \ == 3) {\n        $month = $dateArray[0];\n        $day = $dateArray[1];\n  \
    \      $year = $dateArray[2];\n        if (checkdate($month, $day, $year)) {\n\
    \            $daysInMonth = cal_days_in_month(CAL_GREGORIAN, $month, $year);\n\
    \            if ($day >= 1 && $day <= $daysInMonth) {\n                $valid\
    \ = TRUE;\n            }\n        }\n    }\n    else {\n        $valid = FALSE;\n\
    \    }\n    return $valid;\n}\n", "    $format = \"%m-%d-%Y\";\n    // explode\
    \ the date by - and explode the array by /\n    $arrDate = explode('-',$date);\n\
    \    // if date string length is 0 or less than 2 characters return False\n  \
    \  if(strlen($arrDate[0])<2 || strlen($arrDate[1])<2 ) return False;\n    // if\
    \ month length is not 2 or if less than 1 or not greater than 12, return False\n\
    \    if(strlen($arrDate[0])<1 || strlen($arrDate[1])<1 || strlen($arrDate[1])>12)\
    \ return False;\n    // if the month is invalid return False\n    if(!in_array($arrDate[0],range(1,12))\
    \ || !in_array($arrDate[1],range(1,31)) ) return False;\n    // if the day is\
    \ invalid return False\n    if(strlen($arrDate[2])<1 || strlen($arrDate[2])>31)\
    \ return False;\n    // return True\n    return True;\n}\n", "    // Write your\
    \ code here.\n}", "  if (!is_string($date)) {\n    return false;\n  }\n\n  list($month,\
    \ $day, $year) = explode('-', $date);\n\n  if ($year < 1000 || $year > 9999) {\n\
    \    return false;\n  }\n\n  if (!empty($year) && !is_numeric($year)) {\n    return\
    \ false;\n  }\n\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n\n  if\
    \ (!is_numeric($month)) {\n    return false;\n  }\n\n  if ($month < 1 || $month\
    \ > 12) {\n    return false;\n  }\n\n  if (!is_numeric($day)) {\n    return false;\n\
    \  }\n\n  if ($day < 1 || $day > 29) {\n    return false;\n  }\n\n  return true;\n\
    }\n", "  $dateArray = explode(\"-\", $date);\n  if ($dateArray[0] == \"\") {\n\
    \    return false;\n  }\n  $dateArray = explode(\"/\", $date);\n  $daysInMonth\
    \ = cal_days_in_month(CAL_GREGORIAN, $dateArray[1], $dateArray[2]);\n  if ($daysInMonth\
    \ > 31) {\n    return false;\n  }\n  $isLeap = cal_isleap(CAL_GREGORIAN, $dateArray[1]);\n\
    \  if ($isLeap && $dateArray[2] > $daysInMonth - 1) {\n    return false;\n  }\n\
    \  $monthArray = array(\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"12\"\
    , \"04\", \"06\", \"09\", \"11\", \"01\", \"03\", \"05\", \"07\", \"08\", \"10\"\
    , \"12\", \"04\", \"06\", \"09\", \"11\");\n  $monthArray = array_values($monthArray);\n\
    \  $isLeap = cal_isleap(CAL_GREGORIAN, $dateArray[1]);\n  foreach ($monthArray\
    \ as $month) {\n    if ($monthArray[1] == $month) {\n      if ($monthArray[2]\
    \ != $dateArray[2]) {\n        return false;\n      }\n      if ($monthArray[2]\
    \ > $dateArray[2]) {\n        return false;\n      }\n      if ($monthArray[0]\
    \ == $dateArray[1]) {\n        if ($monthArray[1] > $dateArray[1]) {\n       \
    \   return false;\n        }\n      } else {\n        return false;\n      }\n\
    \    }\n  }\n  return true;\n}\n", "    $dateArray = explode('-', $date);\n  \
    \  $valid_date = true;\n    $dateLenght = sizeof($dateArray);\n    $minDays =\
    \ 1;\n    $maxDays = 31;\n    $minMonth = 1;\n    $maxMonth = 12;\n    $minYear\
    \ = 1900;\n    $maxYear = 2050;\n\n    $min_year = $minYear;\n    $max_year =\
    \ $maxYear;\n    if ($dateLen > 2) {\n        if ($dateLen >= 2) {\n         \
    \   if ($dateArray[1] >= $minDays && $dateArray[1] < $maxDays && $dateArray[2]\
    \ >= $minMonth && $dateArray[2] < $maxMonth) {\n                if ($dateArray[2]\
    \ != 0 && $dateArray[1] != 0 && $dateArray[0] != 0) {\n                    $dateArray\
    \ = explode('/', $date);\n                    if ($dateArray[2] < $minMonth ||\
    \ $dateArray[2] > $maxMonth || $dateArray[1] < $minDays || $dateArray[1] > $maxDays)\
    \ {\n                        $valid_date = false;\n                    }\n   \
    \             }\n            }\n        }\n    }\n    return $valid_date;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nYeah, I know.  But i want a function that\
    \ validates any date format i input. Thank you anyway.\n<|/ c |>\n<| c |>\nDo\
    \ you want a function that validates any date format i input?\n<|/ c |>\n<| c\
    \ |>\nYes, i want a function that validates any date format i input like the example\
    \ I wrote in the original post. Thank you.\n<|/ c |>\n<| c |>\nWhy don't you edit\
    \ your original post and add a comment to show that your question is answered\
    \ :) .\n<|/ c |>\n<| a |>\nYou only have to write one function, for example :\n\
    <code>", "    $date = trim($date);\n    if ($date == '') {\n        return false;\n\
    \    }\n    $parts = explode('-', $date);\n    $month = $parts[0];\n    $day =\
    \ $parts[1];\n    $year = $parts[2];\n\n    if ($month < 1 || $month > 12) {\n\
    \        return false;\n    }\n    if ($day < 1 || $day > 31) {\n        return\
    \ false;\n    }\n    if ($day > 31) {\n        if ($month == 2) {\n          \
    \  if ($day > 29) {\n                return false;\n            }\n        } elseif\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n            if\
    \ ($day > 30) {\n                return false;\n            }\n        } else\
    \ {\n            if ($day > 28) {\n                return false;\n           \
    \ }\n        }\n    }\n    $month = $month + 1;\n    if ($month > 12) {\n    \
    \    $month = 1;\n        $year = $year + 1;\n    }\n\n    $days_in_month = cal_days_in_month(CAL_GREGORIAN,\
    \ $month, $year);\n    return ($day <= $days_in_month);\n}", "  // Write your\
    \ validation rules here.\n  // A valid date should have the following format:\
    \ mm-dd-yyyy\n  $date = preg_replace('/[^\\d-]/', '', $date);\n  $day = substr($date,\
    \ 0, 2);\n  $month = substr($date, 3, 2);\n  $year = substr($date, 6, 4);\n  return\
    \ !empty($date) && $day < 1 || $day > 31 && $month < 1 || $month > 12 || $month\
    \ == 2 || $day < 1 && $month < 1 || $day > 30 && $month < 1 || $day > 29 && $month\
    \ == 2;\n}", "    $date = date_parse($date);\n    if($date['year']<1000 || $date['year']>9999\
    \ || $date['month']<1 || $date['month']>12 || $date['day']<1 || $date['day']>31\
    \ || $date['day']>30 || $date['month']>2 || $date['month']>12) {\n        return\
    \ false;\n    }\n    if($date['month']<1 || $date['month']>12) {\n        return\
    \ false;\n    }\n    if($date['day']<1 || $date['day']>31 || $date['day']>30 ||\
    \ $date['month']>2 || $date['month']>12) {\n        return false;\n    }\n   \
    \ return true;\n}", "    if(!empty($date)) {\n        // Split the date into months\
    \ and days\n        $dateSplit = explode('-', $date);\n        $validMonths =\
    \ array(1, 3, 5, 7, 8, 10, 12);\n        $validDays = array(1, 31, 28, 31, 30,\
    \ 31, 30, 31, 31, 30, 31, 30, 31);\n\n        // Validate the date\n        foreach($dateSplit\
    \ as $k => $val) {\n            if($val > 0 && $val < 13) {\n                $validMonths[$k\
    \ - 1] = true;\n            }\n        }\n\n        foreach($dateSplit as $k =>\
    \ $val) {\n            if($val > 0 && $val < 32) {\n                $validDays[$k\
    \ - 1] = true;\n            }\n        }\n\n        // Validate months\n     \
    \   foreach($dateSplit as $k => $val) {\n            if($val > 0 && $val < 12)\
    \ {\n                if(!isset($validMonths[$k - 1])) {\n                    return\
    \ false;\n                }\n            }\n        }\n\n        // Validate days\n\
    \        foreach($dateSplit as $k => $val) {\n            if($val > 0 && $val\
    \ < 31) {\n                if(!isset($validDays[$k - 1])) {\n                \
    \    return false;\n                }\n            }\n        }\n\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n</code>\n<|/ a tags=php,validation,date\
    \ dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n/**\n * Validate date input by\
    \ user input with php\n * \n * string $date\n * bool $valid\n * \n * bool\n */",
  "  // Write your code here:\n  if (empty($date)) {\n    return false;\n  }\n  $date\
    \ = date_create_from_format('m-d-Y', $date);\n  if ($date == false) {\n    return\
    \ false;\n  }\n  $days = $date->format('t');\n  if($days > 31 || $days < 1) {\n\
    \    return false;\n  }\n  $months = array_diff(range(1, 12), $date->format('m'));\n\
    \  if($months > 12) {\n    return false;\n  }\n  return true;\n}\n", "    if (!$date)\
    \ return false;\n    if (empty($date)) return false;\n    if (!strlen($date))\
    \ return false;\n    $dateArray = explode(\"-\", $date);\n    if (!count($dateArray))\
    \ return false;\n    if ($dateArray[0] < 1 || $dateArray[0] > 12) return false;\n\
    \    if ($dateArray[1] < 1 || $dateArray[1] > 31) return false;\n    if ($dateArray[2]\
    \ < 1 || $dateArray[2] > 30) return false;\n    if ($dateArray[0] > $dateArray[1])\
    \ return false;\n    if ($dateArray[2] > $dateArray[1]) return false;\n    if\
    \ ($dateArray[1] > $dateArray[2]) return false;\n    return true;\n}\n", "  $result\
    \ = true;\n  $exploded_date = explode('-',$date);\n  if($exploded_date[2]>date('t',\
    \ mktime(12,0,0,$exploded_date[0],$exploded_date[1]))) {\n    $result = false;\n\
    \  }\n  if($exploded_date[2]<date('t', mktime(12,0,0,$exploded_date[0],$exploded_date[1]-2)))\
    \ {\n    $result = false;\n  }\n  if(!is_numeric($exploded_date[2]) || $exploded_date[2]<1\
    \ || $exploded_date[2]>31) {\n    $result = false;\n  }\n  if($exploded_date[1]<1\
    \ || $exploded_date[1]>12) {\n    $result = false;\n  }\n  if(!is_numeric($exploded_date[0])\
    \ || $exploded_date[0]<1 || $exploded_date[0]>12) {\n    $result = false;\n  }\n\
    \  return $result;\n}", "  if(empty($date)) {\n    return false;\n  }\n  $date_parts\
    \ = explode(\"-\", $date);\n  if(count($date_parts) != 3) {\n    return false;\n\
    \  }\n  $day = $date_parts[0];\n  $month = $date_parts[1];\n  $year = $date_parts[2];\n\
    \  $month = (int) $month;\n  if($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  $day = (int) $day;\n  if($day < 1 || $day > 31) {\n    return false;\n\
    \  }\n  $year = (int) $year;\n  if($year < 1000 || $year > 2020) {\n    return\
    \ false;\n  }\n  $days_in_month = cal_days_in_month(CAL_GREGORIAN, $month, $year);\n\
    \  if($day > $days_in_month) {\n    return false;\n  }\n  return true;\n}\n</code>\n\
    <|/ a dscore=0 tags=php,date |>\n<| c |>\nIt will accept all dates except the\
    \ February 29th\n<|/ c |>\n<| c |>\nPlease see updated answer. Now it catches\
    \ the February 29th as well.\n<|/ c |>\n<| c |>\nIt will accept all dates except\
    \ the February 29th. The only way to prevent February 29th is using an array of\
    \ allowed months\n<|/ c |>\n<| c |>\nI agree, if you need to check all possible\
    \ dates, then use an array.\n<|/ c |>\n<| a tags=php,date |>\nI use this function\
    \ to validate date. \n<code>", "    // Your code goes here\n    // $date = strtolower($date);\n\
    \    // $dates = explode('-',$date);\n    // $months = array('01', '03', '05',\
    \ '07', '08', '10', '12');\n    // $days_months = array(31,30,29,31,30,29,31,30,29);\n\
    \    // $years = array('2000','2010','2020');\n    // $dates_array = array($dates[0],\
    \ $dates[1], $dates[2]);\n    // $dates_array = explode('/',$dates[0]);\n    //\
    \ $dates_array[0] = $dates_array[0].'-'.$dates_array[1];\n    // $dates_array[1]\
    \ = $dates_array[1].'-'.$dates_array[2];\n    // $dates_array[0] = $dates_array[0].'-'.$months[$dates_array[1]];\n\
    \    // $dates_array[1] = $dates_array[1].'-'.$days_months[$dates_array[2]];\n\
    \    // $dates_array[2] = $years[$dates_array[0]];\n    // print_r($dates_array);\n\
    \    // $dates_array = array($dates[0], $dates[1], $dates[2]);\n    // $dates_array\
    \ = explode('/',$dates[0]);\n    // $dates_array[0] = $dates_array[0].'-'.$dates_array[1];\n\
    \    // $dates_array[1] = $dates_array[1].'-'.$dates_array[2];\n    // $dates_array[0]\
    \ = $dates_array[0].'-'.$months[$dates_array[1]];\n    // $dates_array[1] = $dates_array[1].'-'.$days_months[$dates_array[2]];\n\
    \    // $dates_array[2] = $years[$dates_array[0]];\n    // print_r($dates_array);\n\
    \    \n    \n}\n\nif (isset($_POST['submit'])) {\n    // $_POST['email'] must\
    \ contain a valid email address\n    // $_POST['month'] must contain a valid month.\
    \ \n    // $_POST['day'] must contain a valid day. \n    // $_POST['year'] must\
    \ contain a valid year. \n\n    $email = $_POST['email'];\n    $month = $_POST['month'];\n\
    \    $day = $_POST['day'];\n    $year = $_POST['year'];\n\n    if (!valid_date($month))\
    \ {\n        echo \"Sorry, invalid date format\";\n    }\n    if (!valid_date($day))\
    \ {\n        echo \"Sorry, invalid date format\";\n    }\n    if (!valid_date($year))\
    \ {\n        echo \"Sorry, invalid date format\";\n    }\n", "    $date_pattern\
    \ = \"/^(0?[1-9]|1[0-2])-(0?[1-9]|[12]\\d|3[01])-\\d{4}$/\";\n    if(!preg_match($date_pattern,\
    \ $date)) {\n        return false;\n    }\n    $datearray = explode(\"-\", $date);\n\
    \    $day = $datearray[0];\n    $month = $datearray[1];\n    $year = $datearray[2];\n\
    \    $year = intval($year);\n    $month = intval($month);\n    $day = intval($day);\n\
    \    if($year > 0 && $month > 0 && $day > 0) {\n        $year_count = cal_days_in_month(CAL_GREGORIAN,\
    \ $month, $year);\n        if($day > $year_count) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n", "    if(empty($date)) {\n        return\
    \ false;\n    }\n    $date = trim($date);\n    $date = str_replace(array('0',\
    \ '6', '9', '12'), array('4', '6', '9', '11'), $date);\n    $parts = explode('-',\
    \ $date);\n    if (count($parts) != 3) return false;\n    $months = array('01',\
    \ '03', '05', '07', '08', '10', '12');\n    if (in_array($parts[0], $months))\
    \ return false;\n    if (in_array($parts[1], $months)) return false;\n    if (in_array($parts[2],\
    \ $months)) return false;\n    $days_in_month = cal_days_in_month(0, $parts[0],\
    \ $parts[1]);\n    return ($days_in_month < 1 || $days_in_month > 31) && ($days_in_month\
    \ < 1 || $days_in_month > 30) && ($days_in_month < 1 || $days_in_month > 29);\n\
    }\n</code>\n<|/ a dscore=0 tags=date,php |>\n<| c |>\nThank you. I modified your\
    \ code a little bit. I will post the final answer below.\n<|/ c |>\n<| a dscore=0\
    \ |>\nFinally I solved the problem myself.\nI used the code from Rahul and modified\
    \ it a little bit to make it work with the format I am using.\n<code>\n$date_format\
    \ = 'd-m-Y'; //This format should be the same with the format we are trying to\
    \ parse.\n", "    if (empty($date)) {\n        return false;\n    }\n\n    $date_info\
    \ = date_parse($date);\n\n    // Return false if any of those tests fail\n   \
    \ if (!isset($date_info['year'])) {\n        return false;\n    }\n\n    if (!isset($date_info['month']))\
    \ {\n        return false;\n    }\n\n    if (!isset($date_info['day'])) {\n  \
    \      return false;\n    }\n\n    // The month must be in the correct range\n\
    \    if ($date_info['month'] < 1 || $date_info['month'] > 12) {\n        return\
    \ false;\n    }\n\n    // The day must be in the correct range\n    if ($date_info['day']\
    \ < 1 || $date_info['day'] > 31) {\n        return false;\n    }\n\n    // The\
    \ date must be in the correct format\n    if ($date_info['month'] == 2 && $date_info['day']\
    \ < 1 || $date_info['day'] > 30) {\n        return false;\n    }\n\n    // The\
    \ date must be in the correct format\n    if ($date_info['month'] == 3 && $date_info['day']\
    \ < 1 || $date_info['day'] > 31) {\n        return false;\n    }\n\n    if ($date_info['month']\
    \ == 4 && $date_info['day'] < 1 || $date_info['day'] > 30) {\n        return false;\n\
    \    }\n\n    if ($date_info['month'] == 5 && $date_info['day'] < 1 || $date_info['day']\
    \ > 31) {\n        return false;\n    }\n\n    if ($date_info['month'] == 7 &&\
    \ $date_info['day'] < 1 || $date_info['day'] > 31) {\n        return false;\n\
    \    }\n\n    if ($date_info['month'] == 8 && $date_info['day'] < 1 || $date_info['day']\
    \ > 30) {\n        return false;\n    }\n\n    if ($date_info['month'] == 9 &&\
    \ $date_info['day'] < 1 || $date_info['day'] > 31) {\n        return false;\n\
    \    }\n\n    if ($date_info['month'] == 10 && $date_info['day'] < 1 || $date_info['day']\
    \ > 30) {\n        return false;\n    }\n\n    if ($date_info['month'] == 11 &&\
    \ $date_info['day'] < 1 || $date_info['day'] > 31) {\n        return false;\n\
    \    }\n\n    if ($date_info['month'] == 12 && $date_info['day'] < 1 || $date_info['day']\
    \ > 29) {\n        return false;\n    }\n\n    // If all these tests have passed\
    \ then we know that the date is valid\n    return true;\n}\n", "\tif(!empty($date))\
    \ {\n\t\t$date = explode('-', $date);\n\t\t$year = isset($date[0]) ? $date[0]\
    \ : null;\n\t\t$month = isset($date[1]) ? $date[1] : null;\n\t\t$day = isset($date[2])\
    \ ? $date[2] : null;\n\t\t\n\t\tif(preg_match('/^([0-9]{1,2})\\-([0-9]{1,2})\\\
    -([0-9]{4})$/', $date)) {\n\t\t\t$month = preg_replace('/[^0-9]/', '', $month);\n\
    \t\t\t$day = preg_replace('/[^0-9]/', '', $day);\n\t\t\t\n\t\t\tif(checkdate($month,\
    \ $day, $year)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\
    \t}\n\treturn false;\n}\n", "  if (!empty($date)) {\n    $date = explode('-',\
    \ $date);\n    $year = $date[2];\n    $month = $date[1];\n    $day = $date[0];\n\
    \n    if (($day < 1 || $day > 31) && ($month > 1 && $month < 12)) {\n      return\
    \ false;\n    }\n    if (($day < 1 || $day > 30) && ($month > 4 && $month < 6))\
    \ {\n      return false;\n    }\n    if (($day < 1 || $day > 29) && ($month ==\
    \ 2)) {\n      return false;\n    }\n    if (($month < 1) || ($month > 12)) {\n\
    \      return false;\n    }\n    if ($month == 2 && ($year % 400 == 0) || ($year\
    \ % 4 == 0 && $year % 100 != 0)) {\n      return false;\n    }\n    if ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n      if ($day > 30)\
    \ {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n\
    }", "    if(!is_string($date) || $date == \"\") return false;\n    $date = strtotime($date);\n\
    \    $valid = date('m-d-Y',$date);\n    if(!$valid) return false;\n    $month_length\
    \ = array(\"01\", \"03\", \"05\", \"07\", \"08\", \"10\", \"12\");\n    $days_length\
    \ = array(\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\"\
    , \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\"\
    , \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\"\
    , \"30\", \"31\");\n    $month = strtoupper(substr($valid, 0, 2));\n    $days_count\
    \ = date('t',$date);\n    $days = substr($valid, 2, 2);\n    if($month < 1 ||\
    \ $month > 12) return false;\n    if($days_count < $month_length[$month-1] ||\
    \ $days_count > $days_length[$month-1]) return false;\n    if($days < 1 || $days\
    \ > 31) return false;\n    return true;\n}", "\t// If the date string is not empty,\
    \ check if it is valid.\n\tif(trim($date) != \"\") {\n\t\t// The date string is\
    \ not empty\n\t\t// Check if the date format is valid.\n\t\t$pattern = '/^(0[1-9]|1[0-2])\\\
    -(0[1-9]|[12]\\d|3[01])\\-\\d{4}$/';\n\t\tpreg_match($pattern,$date,$matches);\n\
    \t\t// Check if the date contains only 2 digits\n\t\tif(!preg_match($pattern,$date)){\n\
    \t\t\t// The date format is not valid.\n\t\t\treturn false;\n\t\t} else {\n\t\t\
    \t// The date format is valid.\n\t\t\t//$year = $matches[3];\n\t\t\t//$month =\
    \ $matches[2];\n\t\t\t//$day = $matches[1];\n\t\t\t//return ($year<1900 && $month<1\
    \ || $year>2100 ||\n\t\t\t//\t$month>12 ||\n\t\t\t//\t$day<1 || $day>31) ? false\
    \ : true;\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\t// The date string is empty.\
    \ \n\t\t// The date format is invalid.\n\t\treturn false;\n\t}\n}", "   if(empty($date))\
    \ {\n      return false;\n   }\n   $dateArr = explode(\"-\", $date);\n   if (count($dateArr)\
    \ != 3) {\n      return false;\n   }\n   $dateArr[0] = (int) $dateArr[0];\n  \
    \ $dateArr[1] = (int) $dateArr[1];\n   $dateArr[2] = (int) $dateArr[2];\n   if\
    \ ($dateArr[0] < 1 || $dateArr[1] < 1 || $dateArr[2] < 1) {\n      return false;\n\
    \   }\n   if ($dateArr[1] == 3 || $dateArr[1] == 5 || $dateArr[1] == 7 || $dateArr[1]\
    \ == 8 || $dateArr[1] == 10 || $dateArr[1] == 12) {\n      if ($dateArr[1] ==\
    \ 3 && $dateArr[1] == 6 && $dateArr[1] == 9 && $dateArr[1] == 11) {\n        \
    \ return false;\n      } else if ($dateArr[1] == 3 && $dateArr[1] == 7 && $dateArr[1]\
    \ == 10 && $dateArr[1] == 12) {\n         return false;\n      } else if ($dateArr[1]\
    \ == 3 && $dateArr[1] == 8 && $dateArr[1] == 10 && $dateArr[1] == 12) {\n    \
    \     return false;\n      } else if ($dateArr[1] == 5 && $dateArr[1] == 7 &&\
    \ $dateArr[1] == 10 && $dateArr[1] == 12) {\n         return false;\n      } else\
    \ if ($dateArr[1] == 5 && $dateArr[1] == 8 && $dateArr[1] == 10 && $dateArr[1]\
    \ == 12) {\n         return false;\n      } else if ($dateArr[1] == 5 && $dateArr[1]\
    \ == 9 && $dateArr[1] == 11 && $dateArr[1] == 12) {\n         return false;\n\
    \      } else if ($dateArr[1] == 7 && $dateArr[1] == 10 && $dateArr[1] == 12)\
    \ {\n         return false;\n      } else if ($dateArr[1] == 8 && $dateArr[1]\
    \ == 10 && $dateArr[1] == 12) {\n         return false;\n      } else if ($dateArr[1]\
    \ == 9 && $dateArr[1] == 11 && $dateArr[1] == 12) {\n         return false;\n\
    \      } else if ($dateArr[1] == 10 && $dateArr[1] == 12) {\n         return false;\n\
    \      }\n   }\n   $year = (int) $dateArr[2];\n   if ($year < 1901 || $year >\
    \ 2999) {\n      return false;\n   }\n   if ($dateArr[1] == 2 && $dateArr[1] ==\
    \ 7) {\n      $monthLength = 31;\n   } else if ($dateArr[1] == 2 && $dateArr[1]\
    \ == 8) {\n      $monthLength = 30;\n   } else if ($dateArr[1] == 2 && $dateArr[1]\
    \ == 9) {\n      $monthLength = 29;\n   } else if ($dateArr[1] == 2 && $date",
  "    return !empty($date) && \n        !preg_match('/\\A[\\d]+-[\\d]+-[\\d]+\\z/',\
    \ $date) && \n        $date >= '0' && $date <= '12-31' && \n        $date >= '01'\
    \ && $date <= '31' && \n        $date >= '01' && $date <= '30' && \n        $date\
    \ >= '01' && $date <= '29' && \n        $date >= '01' && $date <= '12' && \n \
    \       $date >= '01' && $date <= '31' && \n        $date >= '01' && $date <=\
    \ '30';\n}\n", "    if (!empty($date)) {\n        $day  = substr($date, 0, 2);\n\
    \        $month = substr($date, 2, 2);\n        $year = substr($date, 4, 4);\n\
    \n        if (checkdate($month, $day, $year)) {\n            return true;\n  \
    \      }\n    }\n    return false;\n}", "\t// Check whether the given date is\
    \ empty\n\tif ($date == \"\") return false;\n\n\t$date_arr = explode('-', $date);\n\
    \tif (count($date_arr) != 3) return false;\n\n\t$day = date_day($date_arr);\n\t\
    if ($day < 1 OR $day > 31) return false;\n\n\t$month = date_month($date_arr);\n\
    \tif ($month < 1 OR $month > 12) return false;\n\n\t$year = date_year($date_arr);\n\
    \tif ($month == 2) $year++;\n\tif ($month > 2 AND $month < 6) return false;\n\n\
    \t$month = str_pad($month,2,'0',STR_PAD_LEFT);\n\t$day = str_pad($day,2,'0',STR_PAD_LEFT);\n\
    \n\treturn checkdate($month,$day,$year);\n}\n", "    // Your code goes here\n\
    \    $dates = explode(\"-\",$date);\n    foreach($dates as $k=>$d){\n        if(!isset($dates[$k])\
    \ || empty($d) || $k!=0 && ($k!=1 || $d<1||$d>31||$d<30||$d>29||$d>12)) return\
    \ false;\n    }\n    if(!isset($dates[0]) || empty($dates[0]) || $dates[0]<1||$dates[0]>12\
    \ || $dates[0]<4 || $dates[0]>12 || $dates[1]<1||$dates[1]>12 || $dates[1]<4 ||\
    \ $dates[1]>12 || $dates[2]<1||$dates[2]>31 || $dates[2]<30 || $dates[2]>29 ||\
    \ $dates[2]>12)) return false;\n    return true;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nSorry, it says invalid date!\n<|/ c |>\n<| c |>\nYes it works thank you\
    \ so much. But can you please explain the code? It will be very helpful for me.\
    \ Thank you once again.\n<|/ c |>\n<| c |>\nHappy to help :-)\n<|/ c |>\n<| a\
    \ tags=php,date dscore=0 |>\nYou can validate date using simple conditions.\n\
    <code>\n$date_new  = new DateTime($_POST['date_new']);\n$date_old = new DateTime($_POST['date_old']);\n\
    \nif($date_new > $date_old){\n    $dateerr=\"Invalid Date\";\n}\n</code>\n<|/\
    \ a |>\n<| c |>\nSorry, it says invalid date!\n<|/ c |>\n<| c |>\nplease add some\
    \ explanation.\n<|/ c |>\n<| c |>\nyou can see from here [enter link description\
    \ here](https://stackoverflow.com/help/how-to-answer)\n<|/ c |>\n<| a dscore=0\
    \ |>\nThe format that you are passing for the date isn't correct. Change it to\
    \ match the date format that you have specified in your question.\nThe format\
    \ that you are providing in the question is  mm-dd-yyyy, so here is the code that\
    \ will parse it\n<code>\n<?php\n\n    $date = \"06-04-2020\"; // Your date in\
    \ the specified format\n    $dates = explode(\"-\",$date);\n    $month = $dates[0];\n\
    \    $day = $dates[1];\n    $year = $dates[2];\n\n    $timestamp = strtotime($year\
    \ . \"-\" . $month . \"", "    $regex = \"/^(0[1-9]|1[012])[- \\/](0[1-9]|[12][0-9]|3[01])[-\
    \ \\/](19|20)\\d\\d$/\";\n    if (!preg_match($regex, $date)) {\n        return\
    \ false;\n    }\n    $date = preg_replace(\"/[- \\/]/\", \"-\", $date);\n    $dateArray\
    \ = explode(\"-\", $date);\n    $month = $dateArray[0];\n    $day = $dateArray[1];\n\
    \    $year = $dateArray[2];\n    $checkDays = checkDays($month, $day);\n    $checkMonths\
    \ = checkMonths($month);\n    $checkYears = checkYears($year);\n    return ((bool)$checkDays\
    \ && (bool)$checkMonths && (bool)$checkYears);\n}", "    $date = trim($date);\n\
    \    if(empty($date))\n        return false;\n\n    // Split date into array elements\n\
    \    $dateArray = explode('-', $date);\n\n    $month = $dateArray[0];\n    $day\
    \ = $dateArray[1];\n    $year = $dateArray[2];\n\n    // Validate the date format\n\
    \    if(!preg_match('/^(0?[1-9]|[12][0-9]|3[01])\\-(0?[1-9]|1[012])\\-((19|20)[0-9]{2})$/',\
    \ $date))\n        return false;\n\n    if($day > 31 || $day < 1 OR $month > 12\
    \ || $month < 1)\n        return false;\n\n    // Validate month\n    if($month\
    \ < 1 || $month > 12)\n        return false;\n\n    // Validate year\n    if($year\
    \ < 1000 || $year > 3000)\n        return false;\n\n    // Validate date\n   \
    \ if($day < 1 || $day > 31)\n        return false;\n\n    // Validate day\n  \
    \  if($month == 2)\n    {\n        if($day > 28)\n            return false;\n\
    \    }\n    else\n    {\n        if($day > 30)\n            return false;\n  \
    \  }\n    return true;\n}\n", "    // Complete this function.\n    $pattern =\
    \ \"/^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/\";\n \
    \   if (preg_match($pattern, $date) === 1) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n", "\t// Your code here\n\t\n\t\n}\n", " \
    \   $date = trim($date);\n    if(!$date) {\n        return false;\n    }\n   \
    \ $date = explode(\"-\", $date);\n    $day = intval($date[2]);\n    $month = intval($date[1]);\n\
    \    $year = intval($date[0]);\n\n    if($day < 1 || $day > 31) {\n        return\
    \ false;\n    }\n    if($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if($month == 2) {\n        if($day > 30) {\n            return false;\n\
    \        }\n    }\n    else {\n        if($day > 29) {\n            return false;\n\
    \        }\n    }\n    // Check validity of date\n    if(!checkdate($month, $day,\
    \ $year)) {\n        return false;\n    }\n    return true;\n}\n$date = \"04-25-2010\"\
    ;\nif(valid_date($date)) {\n    echo 1;\n} else {\n    echo 0;\n}", "    if(!empty($date))\
    \ {\n        $date_exploded = explode(\"-\", $date);\n        if(count($date_exploded)\
    \ == 3) {\n            list($month, $day, $year) = array($date_exploded[1], $date_exploded[2],\
    \ $date_exploded[0]);\n            \n            if($month > 12 || $month < 1\
    \ || $day > 31 || $day < 1 || $year < 1000 || $year > 2999) {\n              \
    \  return false;\n            }\n            $months = array(\n              \
    \  '01' => '01',\n                '03' => '03',\n                '05' => '05',\n\
    \                '07' => '07',\n                '08' => '08',\n              \
    \  '10' => '10',\n                '12' => '12'\n            );\n            \n\
    \            if(array_key_exists($months[$month], $months)) {\n              \
    \  $month_days = cal_days_in_month(CAL_GREGORIAN, $month, $year);\n          \
    \      if ($month_days > 31) {\n                    return false;\n          \
    \      }\n            }\n            \n            return true;\n        } else\
    \ {\n            return false;\n        }\n    }\n}\n", "\tif (empty($date)) return\
    \ false;\n\tif (checkdate($month, $day, $year)) {\n\t\tif ($day < 1 || $day >\
    \ 29) return false;\n\t\tif ($month < 1 || $month > 12) return false;\n\t\tif\
    \ ($month == 2 && $day > 30) return false;\n\t\tif ($month == 2 && $day < 31)\
    \ return false;\n\t\tif ($month == 1 && $day > 31) return false;\n\t\tif ($month\
    \ == 1 && $day < 30) return false;\n\t\tif ($month == 3 && $day > 31) return false;\n\
    \t\tif ($month == 3 && $day < 31) return false;\n\t\tif ($month == 5 && $day >\
    \ 31) return false;\n\t\tif ($month == 5 && $day < 31) return false;\n\t\tif ($month\
    \ == 7 && $day > 31) return false;\n\t\tif ($month == 7 && $day < 31) return false;\n\
    \t\tif ($month == 8 && $day > 31) return false;\n\t\tif ($month == 8 && $day <\
    \ 31) return false;\n\t\tif ($month == 10 && $day > 31) return false;\n\t\tif\
    \ ($month == 10 && $day < 31) return false;\n\t\tif ($month == 12 && $day > 30)\
    \ return false;\n\t\tif ($month == 12 && $day < 31) return false;\n\t} else {\n\
    \t\treturn false;\n\t}\n\treturn true;\n}\n", "    if(!empty($date) && preg_match('/^(0?[1-9]|[12][0-9]|3[01])[\\\
    /\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/', $date)) {\n        $dateArray = explode('-',\
    \ $date);\n        if(count($dateArray) == 3) {\n            for($i = 0; $i <\
    \ count($dateArray); $i++) {\n                if(is_numeric($dateArray[$i])) {\n\
    \                    $dateArray[$i] = intval($dateArray[$i]);\n              \
    \  }\n            }\n            // check if the month is between 1 and 12\n \
    \           if($dateArray[1] >= 1 && $dateArray[1] <= 12) {\n                //\
    \ check if the day is between 1 and 31\n                if($dateArray[2] >= 1\
    \ && $dateArray[2] <= 31) {\n                    return true;\n              \
    \  }\n                // check if the day is between 1 and 30\n              \
    \  if($dateArray[2] >= 1 && $dateArray[2] <= 30) {\n                    return\
    \ true;\n                }\n                // check if the day is between 1 and\
    \ 29\n                if($dateArray[2] >= 1 && $dateArray[2] <= 29) {\n      \
    \              return true;\n                }\n            }\n            //\
    \ check if the month is between 4 and 12\n            if($dateArray[1] >= 4 &&\
    \ $dateArray[1] <= 12) {\n                // check if the day is between 1 and\
    \ 31\n                if($dateArray[2] >= 1 && $dateArray[2] <= 31) {\n      \
    \              return true;\n                }\n                // check if the\
    \ day is between 1 and 30\n                if($dateArray[2] >= 1 && $dateArray[2]\
    \ <= 30) {\n                    return true;\n                }\n            \
    \    // check if the day is between 1 and 29\n                if($dateArray[2]\
    \ >= 1 && $dateArray[2] <= 29) {\n                    return true;\n         \
    \       }\n            }\n        }\n    }\n    return false;\n}\n", "    $dateAr\
    \ = explode('-', $date);\n    if(count($dateAr) < 3) return false;\n    if($dateAr[0]\
    \ < 1 || $dateAr[0] > 12) return false;\n    if($dateAr[1] < 1 || $dateAr[1] >\
    \ 12) return false;\n    if($dateAr[2] < 1 || $dateAr[2] > 31) return false;\n\
    \    return true;\n}\n", "  if (!preg_match('/^\\d{4}-\\d{2}-\\d{2}/', $date)\
    \ || !preg_match('/^\\d{1,2}-\\d{1,2}-\\d{4}$/', $date)) {\n    return false;\n\
    \  }\n  $days = get_days($date);\n  if (count($days) < 1 || count($days) > 31)\
    \ {\n    return false;\n  }\n  if (count($days) < 1 || count($days) > 29) {\n\
    \    return false;\n  }\n  if (count($days) < 1 || count($days) > 12) {\n    return\
    \ false;\n  }\n  $months = get_months($date);\n  if (count($months) < 1 || count($months)\
    \ > 12) {\n    return false;\n  }\n  return true;\n}\n", "    if(empty($date))\
    \ {\n        return false;\n    }\n    $date = explode(\"-\", $date);\n    if(count($date)\
    \ == 3) {\n        $day = $date[0];\n        $month = $date[1];\n        $year\
    \ = $date[2];\n    }\n    elseif(count($date) == 2) {\n        $day = $date[0];\n\
    \        $month = $date[1];\n        $year = date('Y');\n    }\n    elseif(count($date)\
    \ == 1) {\n        $day = $date[0];\n        $month = date('m');\n        $year\
    \ = date('Y');\n    }\n\n    if($day < 1 || $day > 31 && $month < 1 || $month\
    \ > 12 || $month != $date[1] || $year != $date[2]) {\n        return false;\n\
    \    }\n    return true;\n}\n", "  // Write your code here\n  $explode = explode('-',$date);\n\
    \  $day = $explode[0];\n  $month = $explode[1];\n  $year = $explode[2];\n  if(empty($date)\
    \ || strlen($date)<1 || strlen($date)>31  || \n       strlen($date)<1 || strlen($date)>30\
    \ || \n       strlen($date)<1 || strlen($date)>29 || \n       ($month<1 || $month>12\
    \ || $day<1 || $day>31  || $day>30)||\n       ($month<1 || $month>12 || $day<1\
    \ || $day>31  || $day>30)||\n       ($month<1 || $month>12 || $day<1 || $day>31\
    \  || $day>30)) {\n    return false;\n  } else {\n    return true; \n  }\n}\n",
  "  $d = DateTime::createFromFormat('m-d-Y', $date);\n  return $d && $d->format('m-d-Y');\n\
    }\n", '    return !empty($date) && checkdate(2, $date[0], $date[1]) && checkdate(2,
    $date[0], $date[1]) || checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0],
    $date[1]) || checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1])
    || checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2,
    $date[0], $date[1]) && checkdate(2, $date[0], $date[1]) || checkdate(2, $date[0],
    $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1])
    && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2,
    $date[0], $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0],
    $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1])
    && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2,
    $date[0], $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0],
    $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1])
    && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2,
    $date[0], $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0],
    $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1])
    && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2,
    $date[0], $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0],
    $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1])
    && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2,
    $date[0], $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0],
    $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1])
    && checkdate(2, $date[0], $date[1]) && checkdate(2, $date[0], $date[1]) && checkdate(2,
    $date[0], ', "    if (empty($date)) {\n        return false;\n    }\n\n    $date\
    \ = trim($date);\n    if (strlen($date) == 0) {\n        return false;\n    }\n\
    \n    // get month number from date string\n    $date = explode(\"-\", $date);\n\
    \    if (count($date) != 3) {\n        return false;\n    }\n    $month = intval($date[0]);\n\
    \    $day = intval($date[1]);\n    $year = intval($date[2]);\n\n    // check if\
    \ number of days is valid\n    if ($day < 1 || $day > 31 && $month == 1 && $day\
    \ > 31) {\n        return false;\n    }\n    if ($day < 1 || $day > 31 && $month\
    \ == 2 && $day > 31) {\n        return false;\n    }\n    if ($month < 1 || $month\
    \ > 12) {\n        return false;\n    }\n\n    // check if month is valid\n  \
    \  if ($month < 1 || $month > 12) {\n        return false;\n    }\n\n    // check\
    \ if year is valid\n    if ($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) {\n        if ($day < 1)\
    \ {\n            return false;\n        }\n        if ($day > 31 && $month ==\
    \ 1) {\n            return false;\n        }\n        if ($day > 31 && $month\
    \ == 3 && $day > 31) {\n            return false;\n        }\n    }\n    if ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day < 1)\
    \ {\n            return false;\n        }\n        if ($day > 30 && $month ==\
    \ 4) {\n            return false;\n        }\n        if ($day > 30 && $month\
    \ == 6 && $day > 30) {\n            return false;\n        }\n    }\n    if ($month\
    \ == 2 && ($day < 1 || $day > 29)) {\n        return false;\n    }\n\n    return\
    \ true;\n}", "    $valid_date = true;\n    // 1. The date string is not empty.\n\
    \    if (empty($date)) {\n        $valid_date = false;\n    }\n    // 2. The number\
    \ of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n    if (strlen($date) != 8) {\n        $valid_date = false;\n    }\n\
    \    // 3. The months should not be less than 1 or higher than 12.\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        $valid_date = false;\n    }\n    // 4. The\
    \ date should be in the format: mm-dd-yyyy\n    if (strcmp($date, '01-01-01')\
    \ != 0 || strcmp($date, '12-31-2020') != 0 || strcmp($date, '01-02-2000') != 0)\
    \ {\n        $valid_date = false;\n    }\n    return $valid_date;\n}", "\t// Write\
    \ your validation code here\n\tif(strlen($date) > 0){\n\t\tif(!((($day = $date[1]\
    \ >= 1 && $day  <= 31) && ($month = $date[2] >= 1 && $month <=12)  && ($year =\
    \ date[3] >= 1 && $year <=12))){\n\t\t\t//$m1=array('1','3','5','7','8','10','12');\n\
    \t\t\t$m1=array('2','4','6','9','11');\n\t\t\t$m2=array('1','3','5','7','8','10','12');\n\
    \t\t\t$m3=array('2','4','6','9','11');\n\t\t\t$m4=array('2','4','6','9');\n\t\t\
    \t$m5=array('3','5','7','8','10');\n\t\t\tif(in_array($date[1],$m1)){\n\t\t\t\t\
    if(in_array($date[2],$m2)){\n\t\t\t\t\tif(in_array($date[3],$m3)){\n\t\t\t\t\t\
    \tif(in_array($date[4],$m4)){\n\t\t\t\t\t\t\tif(in_array($date[5],$m5)){\n\t\t\
    \t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\
    }\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", "     return (!empty($date) &&\
    \ ($date != '0000-00-00') && ($date != '00000000') && ($date != '') && (is_numeric($date))\
    \ && (($date < '01-01-2020') || ($date > '01-01-2040')));\n}\n", "    $pattern\
    \ = '/^((?:0?[1-9]|[12]\\d|3[01])[\\-\\/](0?[1-9]|1[012])[\\-\\/](19|20)\\d\\\
    d)$/';\n    if (preg_match($pattern, $date)) {\n        // $matches[1] = day of\
    \ month\n        // $matches[2] = month\n        // $matches[3] = year\n     \
    \   $matches =   explode('-', $date);\n        $days   =    $matches[1];\n   \
    \     $months  = $matches[2];\n        $years   = $matches[3];\n        $date\
    \    = mktime(0, 0, 0, $months, $days, $years);\n\n        return checkdate($month,\
    \ $day, $year);\n    }\n    return false;\n}", "    // Write code here\n}", "\t\
    list($d, $m, $y) = explode(\"-\", $date);\n\t\n\tif ($d && $m && $y) {\n\t\t\n\
    \t\t$valid = true;\n\t\t$month = array (1,2,3,4,5,6,7,8,9,10,11,12);\n\t\t$day\
    \ = array (1,3,5,7,8,10,12);\n\t\t$year = array (2000,2012);\n\t\t\n\t\tfor ($i=0;\
    \ $i<3; $i++) {\n\t\t\tif ($month[$i] > $m) {\n\t\t\t\t$valid = false;\n\t\t\t\
    }\n\t\t\tif ($day[$i] > $d) {\n\t\t\t\t$valid = false;\n\t\t\t}\n\t\t\tif ($year[$i]\
    \ != $y) {\n\t\t\t\t$valid = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor ($i=0; $i<3;\
    \ $i++) {\n\t\t\tif ($month[$i] < 1) {\n\t\t\t\t$valid = false;\n\t\t\t}\n\t\t\
    \tif ($day[$i] < 1) {\n\t\t\t\t$valid = false;\n\t\t\t}\n\t\t\tif ($month[$i]\
    \ > 12) {\n\t\t\t\t$valid = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor ($i=0; $i<3;\
    \ $i++) {\n\t\t\tif ($day[$i] > 30) {\n\t\t\t\t$valid = false;\n\t\t\t}\n\t\t\t\
    if ($month[$i] > 12) {\n\t\t\t\t$valid = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif\
    \ ($valid) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n", "    $parts\
    \ = explode('-', $date);\n    $day = $parts[0];\n    $month = $parts[1];\n   \
    \ $year = $parts[2];\n\n    if (!empty($date) && !empty($day) && !empty($month)\
    \ && !empty($year)) {\n        $months = array();\n        $months[1] = '01';\n\
    \        $months[3] = '03';\n        $months[5] = '05';\n        $months[7] =\
    \ '07';\n        $months[8] = '08';\n        $months[10] = '10';\n        $months[12]\
    \ = '12';\n        $days = array();\n        $days[1] = '01';\n        $days[3]\
    \ = '31';\n        $days[5] = '30';\n        $days[7] = '29';\n        $months\
    \ = array_flip($months);\n        $days = array_flip($days);\n\n        if ($months[$month]\
    \ < 1 || $months[$month] > 12) {\n            return false;\n        }\n\n   \
    \     if ($days[$day] < 1 || $days[$day] > 31) {\n            return false;\n\
    \        }\n\n        if ($months[$month] != $parts[1] || $days[$day] != $parts[2])\
    \ {\n            return false;\n        }\n\n        return true;\n    }\n   \
    \ return false;\n}\n", "    if (empty($date)) {\n        return false;\n    }\n\
    \    $arr_date=explode(\"-\",$date);\n    if (count($arr_date)!==3) {\n      \
    \  return false;\n    }\n    if ($arr_date[0]<1 || $arr_date[0]>12) {\n      \
    \  return false;\n    }\n    if ($arr_date[1]<1 || $arr_date[1]>31) {\n      \
    \  return false;\n    }\n    if ($arr_date[2]<1 || $arr_date[2]>30) {\n      \
    \  return false;\n    }\n    if ($arr_date[0]>12 || $arr_date[1]>31 && $arr_date[2]>29)\
    \ {\n        return false;\n    }\n    return true;\n}\n", "    if (empty($date)\
    \ || !preg_match('/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/', $date)) {\n        return\
    \ false;\n    }\n    if (date('Y-m-d', strtotime($date)) == $date) {\n       \
    \ return true;\n    }\n    // Check months.\n    $month = date('m', strtotime($date));\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    // Check\
    \ days.\n    $day = date('d', strtotime($date));\n    if ($day < 1 || $day > 31)\
    \ {\n        return false;\n    }\n    // Check months.\n    $month = date('m',\
    \ strtotime($date));\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    // Check days.\n    $day = date('d', strtotime($date));\n    if ($day\
    \ < 1 || $day > 30) {\n        return false;\n    }\n    return true;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThanks, but I meant that the date is valid only when it is\
    \ in the format mm-dd-yyyy. For example, the date '06/04/2020' is valid, because\
    \ the date format mm/dd/yyyy.\n<|/ c |>\n<| c |>\nyes you can do that. Please\
    \ check the updated answer\n<|/ c |>\n<| c |>\nGreat, it works! Thanks a lot!\n\
    <|/ c |>\n<| a |>\nYou can add this function to your code.\n<code>", "  if(empty($date))\
    \ {\n    return false;\n  }\n  $split_date = explode('-',$date);\n  if(count($split_date)\
    \ != 3) {\n    return false;\n  }\n  $date_parts = explode('/',$date);\n  if(count($date_parts)\
    \ != 3) {\n    return false;\n  }\n  $date_parts = array($date_parts[0], $date_parts[1],\
    \ $date_parts[2]);\n  $num_days = 0;\n  if($date_parts[1] == '01') {\n    $num_days\
    \ += $date_parts[2]==0? 29: 28;\n  }\n  if($date_parts[1] == '03') {\n    $num_days\
    \ += $date_parts[2]==0? 31: 30;\n  }\n  if($date_parts[1] == '05') {\n    $num_days\
    \ += $date_parts[2]==0? 31: 30;\n  }\n  if($date_parts[1] == '07') {\n    $num_days\
    \ += $date_parts[2]==0? 31: 30;\n  }\n  if($date_parts[1] == '08') {\n    $num_days\
    \ += $date_parts[2]==0? 31: 30;\n  }\n  if($date_parts[1] == '10') {\n    $num_days\
    \ += $date_parts[2]==0? 31: 30;\n  }\n  if($date_parts[1] == '12') {\n    $num_days\
    \ += $date_parts[2]==0? 31: 30;\n  }\n  return $num_days > 0 && $num_days < 32\
    \ && $date_parts[0] > 0 && $date_parts[0] < 13 && $date_parts[1] > 0 && $date_parts[1]\
    \ < 13 && $date_parts[2] > 0 && $date_parts[2] <= 12;\n}\n", "    return !empty($date)\
    \ && checkdate(2, $date[0], $date[1]);\n}\n", "     if (is_numeric($date)) {\n\
    \        if ($date > 0) {\n            return false;\n        } else {\n     \
    \       return true;\n        }\n    } else {\n        $dateArray = explode('-',\
    \ $date);\n        // If the $dateArray count is less than 4, then it is not a\
    \ valid date.\n        // The date format should always be mm-dd-yyyy.\n     \
    \   if (count($dateArray) < 4 || count($dateArray) > 3) {\n            return\
    \ false;\n        } else {\n            if ($dateArray[1] > 12) {\n          \
    \      return false;\n            } else {\n                if ($dateArray[0]\
    \ < 1 || $dateArray[0] > 12) {\n                    return false;\n          \
    \      } elseif ($dateArray[2] < 1 || $dateArray[2] > 31) {\n                \
    \    return false;\n                } elseif ($dateArray[3] < 1 || $dateArray[3]\
    \ > 30) {\n                    return false;\n                } elseif ($dateArray[2]\
    \ > 29) {\n                    return false;\n                } else {\n     \
    \               return true;\n                }\n            }\n        }\n  \
    \  }\n}\n</code>\n<|/ a dscore=2 tags=php |>\n<| c |>\nAs an additional thing,\
    \ I made some changes to allow for date strings with leading zeros using the `substr()`\
    \ function. E.g. `03-11-2000` => `03-11-2000`.\n<|/ c |>\n<| c |>\nHi, the validation\
    \ function returns True for the following strings: 03-11-2000, 04-0-1990, 06-04-2020.\
    \ How should I validate them correctly?\n<|/ c |>\n<| c |>\nSorry, the validation\
    \ function should return False if the given string is malformed (like 04-0-1990).\n\
    <|/ c |>\n<| a dscore=1 |>\nA possible solution:\n<code>\n$date = '03-11-2000';\n\
    $day = explode('-',$date);\n$month = explode('-',$date);\n$year = explode('-',$date);\n\
    $month[1] = 1;\n$month[2] = 1;\n$month[3] = 1;\n$day[1] = $day[2] = $day[3] =\
    \ '01';\nif ($year < 1 || $year > 12 || $month < 1 || $month > 12 || $day < 1\
    \ || $day > 31) {\necho 'false';\n} else {\necho 'true';\n}\n</code>\n<|/ a tags=php\
    \ |>\n<| c |>\nPlease note the comments in [my answer](https://stackoverflow.com/a/56264447/633183)\
    \ regarding the validation of the date string.\n<|/ c |>\n<| c |>\nHi, the validation\
    \ function returns True for the following strings: 03-11-2000, 04", "    // TODO:\
    \ Write the logic to check validity of the date string.\n    // You may want to\
    \ use the DateTime class if you need to validate dates with\n    // more complex\
    \ rules.\n}\n", "  $date = str_replace('-', '/', $date);\n  $d = DateTime::createFromFormat('m/d/Y',\
    \ $date);\n  $current_date = new DateTime();\n  return $current_date->format('m')\
    \ == $d->format('m') && \n  $current_date->format('d') == $d->format('d') && \n\
    \  $current_date->format('Y') == $d->format('Y');\n}\n", "    if (empty($date))\
    \ return FALSE;\n    $date = date_parse($date);\n    if ($date === FALSE) return\
    \ FALSE;\n    if ($date['error_count']) return FALSE;\n    if ($date['year'] <\
    \ 1 || $date['year'] > 9999) return FALSE;\n    if ($date['month'] < 1 || $date['month']\
    \ > 12) return FALSE;\n    if ($date['day'] < 1 || $date['day'] > 31) return FALSE;\n\
    \    if ($date['month'] == 2 && $date['day'] <= 29) return FALSE;\n    if ($date['month']\
    \ != 2 && $date['month'] != 4 && $date['month'] != 6 && $date['month'] != 9 &&\
    \ $date['month'] != 11 && $date['month'] != 12) {\n        return FALSE;\n   \
    \ }\n    if ($date['month'] > $date['year']) {\n        return FALSE;\n    }\n\
    \    if ($date['month'] > 12) {\n        return FALSE;\n    }\n    if ($date['day']\
    \ > 29) {\n        return FALSE;\n    }\n    if ($date['month'] == 2 && $date['day']\
    \ > 31) {\n        return FALSE;\n    }\n    if ($date['month'] == 4 && $date['day']\
    \ > 30) {\n        return FALSE;\n    }\n    if ($date['month'] == 6 && $date['day']\
    \ > 31) {\n        return FALSE;\n    }\n    if ($date['month'] == 9 && $date['day']\
    \ > 30) {\n        return FALSE;\n    }\n    if ($date['month'] == 11 && $date['day']\
    \ > 31) {\n        return FALSE;\n    }\n    if ($date['month'] == 12) {\n   \
    \     return TRUE;\n    }\n    if ($date['day'] > 31) {\n        return FALSE;\n\
    \    }\n    return TRUE;\n}\n</code>\n<|/ a dscore=0 tags=php,date |>\n<| a tags=php,date\
    \ dscore=0 |>\nTo check if a date is valid:\n<code>", "    $d = explode('-', $date);\n\
    \    $date = $d[2].'-'.$d[1].'-'.$d[0];\n\n    $valid_date = $date != '0000-00-00'\
    \ && checkdate($d[1], $d[0], $d[2]) && \n                     checkdate($d[1],\
    \ $d[0], $d[2]) && \n                     checkdate($d[1], $d[0], $d[2]) && \n\
    \                     checkdate($d[1], $d[0], $d[2]) && \n                   \
    \  checkdate($d[1], $d[0], $d[2]) && \n                     checkdate($d[1], $d[0],\
    \ $d[2]) && \n                     checkdate($d[1], $d[0], $d[2]) && \n      \
    \               checkdate($d[1], $d[0], $d[2]) && \n                     checkdate($d[1],\
    \ $d[0], $d[2]) && \n                     checkdate($d[1], $d[0], $d[2]);\n\n\
    \    return $valid_date;\n}\n</code>\n<|/ a tags=php,date,validation,regex,datetime\
    \ |>\n<| c |>\nThis looks good, but is this case sensitive?\n<|/ c |>\n<| c |>\n\
    Yes, this one works with case sensitive and also allows dates with zero months\
    \ and days as well.\n<|/ c |>\n<| a tags=php,date,validation,regex,datetime |>\n\
    Here is another solution :\n<code>\n$str = $_POST['date'];\n$regex = '/^(0[1-9]|1[012])\\\
    -(0[1-9]|[12][0-9]|3[01])\\-(19|20)\\d\\d$/';\npreg_match($regex,$str,$matches);\n\
    if(count($matches)>0)\n{\n    $d1 = date('Y-m-d',strtotime($matches[0]));\n  \
    \  $d2 = date('Y-m-d',strtotime($matches[1]));\n    $d3 = date('Y-m-d',strtotime($matches[2]));\n\
    \    if($d1!=$d2 && $d2!=$d3 && $d3!=$d1)\n    {\n        $valid = false;\n  \
    \  }\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis answer is the most efficient\
    \ as this one only parses the date once and doesn't require any extra functions.\
    \ Also it allows you to specify multiple date formats without needing to use a\
    \ regex (if that's a requirement)\n<|/ c |>\n<| c |>\nActually i didn't know that\
    \ it allow date format without regex and i think it will be great if you provide\
    \ me a solution for my date format\n<|/ c |>\n<| c |>\nI'm sure it's possible\
    \ to do this ", "    // code here\n}\n</code>\nAfter you write the function you\
    \ can validate the date using the code below. You will have to enter the date\
    \ string into the $date variable and use the function you wrote to validate the\
    \ date. This function will return a boolean value (true or false). In the code\
    \ below if the date is not valid it will echo an error message else it will echo\
    \ the valid date.\n<code>\n$date = <<<EOF\n03-11-2000\nEOF;\n\nif (valid_date($date)\
    \ === false) {\n    echo \"Invalid date\";\n} else {\n    echo $date;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nI dont think your function will work because the $date\
    \ is in a different format from the expected format in the function. He also stated\
    \ he wanted to output the date as text like '03-11-2000'.\n<|/ c |>\n<| c |>\n\
    I updated my answer. It will now work with the OPs requirements.\n<|/ c |>\n<|\
    \ c |>\nThanks guys. This is great stuff.\n<|/ c |>\n<| a tags=date,php,strtotime\
    \ |>\n<code>\n<?php", "    // Your validation code\n}", "    $date = strtotime($date);\n\
    \    return ($date !== false && $date <= time() && $date > 0);\n}\n", "\t// Validate\
    \ that date is not empty\n\tif(empty($date)) return false;\n\t// Split date by\
    \ '-' characters\n\t$date_arr = explode('-', $date);\n\t// Validate date fields\n\
    \tif(!isset($date_arr[0], $date_arr[1], $date_arr[2])) return false;\n\t// Validate\
    \ month\n\tif(!in_array($date_arr[0], range(1, 12)) && !in_array($date_arr[0],\
    \ range(4, 11)) && !in_array($date_arr[0], range(6, 9))) return false;\n\t// Validate\
    \ day\n\tif(!in_array($date_arr[1], range(1, 31)) && !in_array($date_arr[1], range(4,\
    \ 6)) && !in_array($date_arr[1], range(9, 11)) && !in_array($date_arr[1], range(12,\
    \ 29))) return false;\n\t// Validate year\n\tif($date_arr[2] <= 1980) return false;\n\
    \treturn true;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

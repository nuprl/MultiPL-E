language: php
name: HumanEval_162_string_to_md5
results:
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ ($text === '') return null;\n  $a = unpack(\"H*\", $text);\n  $md5 = md5($a[1],\
    \ true).$a[2];\n  return substr($md5, 0, 16);\n}\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp15kxcb3j.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp15kxcb3j.php:16\nStack\
    \ trace:\n#0 /tmp/tmp15kxcb3j.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp15kxcb3j.php\
    \ on line 16\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  $md5\
    \ = md5($text);\n  $md5 = substr($md5, 0, 8);\n  $md5 = substr($md5, 0, 4);\n\
    \  $md5 = substr($md5, 0, 2);\n  $md5 = substr($md5, 0, 1);\n  return $md5;\n\
    }\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph52b8xmp.php:19\n\
    Stack trace:\n#0 /tmp/tmph52b8xmp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph52b8xmp.php\
    \ on line 19\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = md5($text);\n    // This does two things, it converts the md5 string\
    \ to a normal string and then\n    // converts it back to an md5 string. This\
    \ should work even with some\n    // unusual inputs. We use md5 in the below function\
    \ because some platforms\n    // have strange md5 implementations (like the PHP\
    \ PECL implementation on the\n    // Mac I tested it on).\n    return $md5 ? hex2bin(md5($md5,\
    \ true)) : false;\n}\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: hex2bin(): Input string must be hexadecimal string in /tmp/tmpicy6plau.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpicy6plau.php:19\n\
    Stack trace:\n#0 /tmp/tmpicy6plau.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpicy6plau.php\
    \ on line 19\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $hash = '#';\n    $len = mb_strlen($text, '8bit');\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        $hash .= $text[$i];\n    }\n    $hash = md5($hash);\n    return\
    \ $hash;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_strlen() in\
    \ /tmp/tmpe4yyabo7.php:7\nStack trace:\n#0 /tmp/tmpe4yyabo7.php(16): string_to_md5('Hello\
    \ world')\n#1 /tmp/tmpe4yyabo7.php(20): candidate('Hello world')\n#2 /tmp/tmpe4yyabo7.php(26):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpe4yyabo7.php on line 7\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text))\n        return;\n    return md5($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ // PHP 5 constructor\n    if (!function_exists('md5_init')) {\n        $md5\
    \ = md5_init();\n        if (!$md5) {\n            return false;\n        }\n\
    \        md5_close($md5);\n    }\n    // PHP 5 constructor\n    if (!function_exists('md5_update'))\
    \ {\n        return null;\n    }\n    // PHP 5.5+ constructor\n    $md5 = md5($text);\n\
    \    if (!$md5) {\n        return false;\n    }\n    return $md5;\n}\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function md5_init() in\
    \ /tmp/tmpccvulk4d.php:8\nStack trace:\n#0 /tmp/tmpccvulk4d.php(26): string_to_md5('Hello\
    \ world')\n#1 /tmp/tmpccvulk4d.php(30): candidate('Hello world')\n#2 /tmp/tmpccvulk4d.php(36):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpccvulk4d.php on line 8\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (strlen($text) == 0) {\n        return null;\n    }\n\n    $hash = md5($text);\n\
    \    $hash = substr($hash, 0, 10);\n    return $hash;\n}\n\n/**\n * Convert a\
    \ string to md5 hash equivalent string.\n * If 'text' is an empty string, return\
    \ None.\n * >>> string_to_md5('') == ''\n * True\n * >>> string_to_md5('x') ==\
    \ '0'\n * True\n */\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfiik412z.php:28\n\
    Stack trace:\n#0 /tmp/tmpfiik412z.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfiik412z.php\
    \ on line 28\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ ($text == '') {\n    return;\n  }\n  $md5 = new \\md5($text);\n  return $md5->hash;\n\
    }\n\n/**\n * Return the md5 hash value of a file in the given directory\n * or\
    \ file path.\n */\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"md5\" not found in /tmp/tmpux36vu06.php:9\n\
    Stack trace:\n#0 /tmp/tmpux36vu06.php(18): string_to_md5('Hello world')\n#1 /tmp/tmpux36vu06.php(22):\
    \ candidate('Hello world')\n#2 /tmp/tmpux36vu06.php(28): test()\n#3 {main}\n \
    \ thrown in /tmp/tmpux36vu06.php on line 9\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (trim($text) == '') {\n        return null;\n    }\n\n    return md5($text);\n\
    }\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (is_string($text)) {\n    if ($text) {\n      // Convert string to UTF-8 if\
    \ necessary\n      if (mb_check_encoding($text, 'UTF-8')) {\n        $text = mb_convert_encoding($text,\
    \ 'UTF-8');\n      }\n\n      // Get the md5 hexdigest\n      $md5 = $md5_func($text);\n\
    \n      // Get the binary digest\n      $binary = md5($text, true);\n\n      //\
    \ Return md5(md5(...))\n      return md5($binary);\n    }\n  }\n\n  return null;\n\
    }\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mb_check_encoding()\
    \ in /tmp/tmp5w8ywuci.php:9\nStack trace:\n#0 /tmp/tmp5w8ywuci.php(28): string_to_md5('Hello\
    \ world')\n#1 /tmp/tmp5w8ywuci.php(32): candidate('Hello world')\n#2 /tmp/tmp5w8ywuci.php(38):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp5w8ywuci.php on line 9\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text) {\n        return md5($text);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text))\n        return;\n    return 'md5-' . md5($text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkjozowu.php:16\n\
    Stack trace:\n#0 /tmp/tmpmkjozowu.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpmkjozowu.php\
    \ on line 16\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ ($text == '') return None;\n  return md5($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"None\" in /tmp/tmpuvolgh6f.php:6\n\
    Stack trace:\n#0 /tmp/tmpuvolgh6f.php(11): string_to_md5('')\n#1 /tmp/tmpuvolgh6f.php(16):\
    \ candidate('')\n#2 /tmp/tmpuvolgh6f.php(21): test()\n#3 {main}\n  thrown in /tmp/tmpuvolgh6f.php\
    \ on line 6\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text, true);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxy3prw1.php:14\n\
    Stack trace:\n#0 /tmp/tmpmxy3prw1.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpmxy3prw1.php\
    \ on line 14\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j6ap2jy.php:15\n\
    Stack trace:\n#0 /tmp/tmp9j6ap2jy.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp9j6ap2jy.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwci__92.php:15\n\
    Stack trace:\n#0 /tmp/tmpiwci__92.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpiwci__92.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (!is_string($text)) {\n        return null;\n    }\n    if (trim($text) ==\
    \ '') {\n        return null;\n    }\n    $md5 = md5($text, true);\n    return\
    \ $md5;\n}\n\n/**\n * Get a string in $langcode format from $lang variable.\n\
    \ * Return null when $lang is empty or language does not exist.\n * \n * Examples:\n\
    \ * $langcode = 'en';\n * $lang = 'English';\n * Return: 'en'\n * \n * $langcode\
    \ = 'en';\n * $lang = 'Japanese';\n * Return: 'ja_JP'\n * \n * $langcode = 'ja';\n\
    \ * $lang = 'Japanese';\n * Return: 'ja_JP'\n * \n * $langcode = 'zh-cn';\n *\
    \ $lang = 'Chinese';\n * Return: 'zh_CN'\n */\nfunction candidate(...$args) {\n\
    \    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9sso9b1.php:42\n\
    Stack trace:\n#0 /tmp/tmpi9sso9b1.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpi9sso9b1.php\
    \ on line 42\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ ($text == '')\n    return null;\n\n  return md5($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $text = trim($text);\n    if (empty($text)) {\n        return NULL;\n    }\n\
    \    $hash = get_option('md5', true);\n    return md5($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_option()\
    \ in /tmp/tmpvzb8fgk6.php:10\nStack trace:\n#0 /tmp/tmpvzb8fgk6.php(15): string_to_md5('Hello\
    \ world')\n#1 /tmp/tmpvzb8fgk6.php(19): candidate('Hello world')\n#2 /tmp/tmpvzb8fgk6.php(25):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpvzb8fgk6.php on line 10\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\treturn\
    \ md5(trim($text));\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7itdhfq.php:15\n\
    Stack trace:\n#0 /tmp/tmph7itdhfq.php(20): test()\n#1 {main}\n  thrown in /tmp/tmph7itdhfq.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  global\
    \ $md5s;\n\n  // Re-use MD5 hash if possible.\n  if ( isset($md5s[$text]) ) {\n\
    \    return $md5s[$text];\n  }\n\n  // Generate MD5 hash.\n  $md5 = md5($text);\n\
    \n  // Save hash value to internal array.\n  $md5s[$text] = $md5;\n\n  return\
    \ $md5;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbs87mas3.php:28\n\
    Stack trace:\n#0 /tmp/tmpbs87mas3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbs87mas3.php\
    \ on line 28\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $hash = md5($text);\n    if (strlen($hash) == 32) {\n        return $hash;\n\
    \    }\n    if (strlen($hash) == 40) {\n        $hash = substr($hash, 0, 24) .\
    \ '...';\n    }\n    return $hash;\n}\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfymtjo4i.php:21\n\
    Stack trace:\n#0 /tmp/tmpfymtjo4i.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpfymtjo4i.php\
    \ on line 21\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ ($text === '') {\n    return null;\n  }\n\n  $hash = md5($text);\n\n  return\
    \ strtolower($hash);\n}\n\n/**\n * Retrieve the size of a file from the cache.\n\
    \ *\n * @param string $path The path that should be cached.\n * @return int|null\
    \ The cache file size.\n */\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\tif\
    \ ($text) {\n\t\t$text = trim($text);\n\t}\n\tif ($text === '') {\n\t\treturn\
    \ null;\n\t}\n\t$md5 = $text;\n\t$md5[0] = strtolower($md5[0]);\n\tif ($md5[0]\
    \ == 'h') {\n\t\t$md5[1] = 'e';\n\t}\n\tfor ($i = 0; $i < 2; $i++) {\n\t\t$md5\
    \ = md5($md5);\n\t}\n\treturn $md5;\n}\n\nfunction candidate(...$args) {\n   \
    \ return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd1dbrbw_.php:28\n\
    Stack trace:\n#0 /tmp/tmpd1dbrbw_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpd1dbrbw_.php\
    \ on line 28\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $text = (string)$text;\n    if (empty($text))\n        return;\n    return md5($text);\n\
    }\n\n/**\n * Return an array of all possible keys and values for a given JSON\
    \ string.\n * >>> json_key_value_array('{\"key\":\"value\"}')\n * [\n *  'key'\
    \ => 'value'\n * ]\n */\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\tif\
    \ (empty($text)) {\n\t\treturn null;\n\t}\n\t$hash = md5($text);\n\treturn $hash;\n\
    }\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ is_string($text) ? md5($text) : null;\n}\nfunction candidate(...$args) {\n \
    \   return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5q27tlh.php:14\n\
    Stack trace:\n#0 /tmp/tmph5q27tlh.php(19): test()\n#1 {main}\n  thrown in /tmp/tmph5q27tlh.php\
    \ on line 14\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text);\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\nIn PHP 7 and above you\
    \ can use the new hash() function. This will return hexadecimal hashes. For example:\n\
    <code>\n$hash = hash('sha512', 'Your text here');\n</code>\nThe result will be\
    \ a string like \"3c09b5d1ef69d1bc88a8c6ec5eb57c39d2d2ad9cfae885ed8b633b16b8a09fde6fb4cc71c07e45cc5707b0049bdd064afd17ede9d97e352bb3\"\
    \nThe best thing is that you can change the hash function according to your needs.\
    \ Check this link for more information about hashing functions in PHP 7.\n<|/\
    \ a tags=md5,hash,php |>\n<| c |>\nThis solution is great for small strings, but\
    \ the return value could be too long if you have very large strings.\n<|/ c |>\n\
    <| c |>\nYes, you are right. This solution is just useful if you have a very large\
    \ string.\n<|/ c |>\n<| a dscore=0 |>\nThe below function returns a hash of the\
    \ given text (which is converted to a lowercase string).\n<code>\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpqmccg5eo.php
    on line 8

    '
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text . time() . rand(0, 99999));\n}\n\nfunction candidate(...$args) {\n\
    \    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjh6vacp0.php:14\n\
    Stack trace:\n#0 /tmp/tmpjh6vacp0.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpjh6vacp0.php\
    \ on line 14\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ ($text != '') {\n    $md5 = md5($text);\n  } else {\n    $md5 = null;\n  }\n\
    \n  return $md5;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5(utf8_encode($text));\n}\n\n/**\n * Create a unique ID (md5) for each message\
    \ within a given date.\n * @param $date the date to associate each message with.\n\
    \ */\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk5k63j6m.php:19\n\
    Stack trace:\n#0 /tmp/tmpk5k63j6m.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpk5k63j6m.php\
    \ on line 19\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1km4fvez.php:14\n\
    Stack trace:\n#0 /tmp/tmp1km4fvez.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp1km4fvez.php\
    \ on line 14\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\treturn\
    \ sha1($text);\n}\n\n/**\n * Convert a string to SHA1 digest.\n * See `string_to_md5`.\n\
    \ */\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkzgldgb.php:18\n\
    Stack trace:\n#0 /tmp/tmpkkzgldgb.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkkzgldgb.php\
    \ on line 18\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (!$text) {\n    return;\n  }\n\n  return md5($text);\n}\n\n\n/**\n * @brief\
    \ Generate an md5 hash of the given string.\n * @param string $text The text to\
    \ hash\n * @param string $algo The hashing algorithm to try ('md5', 'sha1', etc)\n\
    \ * @return string The hash of the given text\n */\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (!$text) { return false; }\n    $text = preg_replace('/\\s+/', ' ', $text);\n\
    \    $text = preg_replace('/[^\\w\\s]/', '', $text);\n    return md5($text);\n\
    }\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43eevdys.php:18\n\
    Stack trace:\n#0 /tmp/tmp43eevdys.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp43eevdys.php\
    \ on line 18\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = md5($text);\n    if (strlen($md5) > 0) {\n        $md5 = substr($md5,\
    \ 0, 8);\n    }\n    return $md5;\n}\n\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoifi6rzb.php:18\n\
    Stack trace:\n#0 /tmp/tmpoifi6rzb.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpoifi6rzb.php\
    \ on line 18\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\t$hash\
    \ = hash('md5', $text);\n\treturn $hash === false ? false : md5($text);\n}\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_b3r1fb.php:15\n\
    Stack trace:\n#0 /tmp/tmpp_b3r1fb.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpp_b3r1fb.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (!$text) { return false; }\n  // Convert all spaces to md5 line breaks\n  $text\
    \ = str_replace(' ', \"\\r\\n\", $text);\n  // Calculate md5 hash from the text\n\
    \  $md5 = md5($text);\n  // Convert md5 hash back to spaces\n  return md5(md5($text));\n\
    }\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2jkelkk.php:20\n\
    Stack trace:\n#0 /tmp/tmpc2jkelkk.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpc2jkelkk.php\
    \ on line 20\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text) {\n        return md5($text);\n    }\n    else {\n        return\
    \ null;\n    }\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $text = trim($text);\n    if ($text === '') return null;\n    // md5() expects\
    \ a string as input\n    $text = (string)$text;\n    $text_length = strlen($text);\n\
    \    $text_remainder = md5($text);\n    return $text_remainder;\n}\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j6ap2jy.php:15\n\
    Stack trace:\n#0 /tmp/tmp9j6ap2jy.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp9j6ap2jy.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5(preg_replace('/[^0-9a-f]/', '', $text));\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbt89gpij.php:14\n\
    Stack trace:\n#0 /tmp/tmpbt89gpij.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpbt89gpij.php\
    \ on line 14\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  $md5\
    \ = \"\";\n  if (!empty($text)) {\n    $md5 = md5($text);\n  }\n  return $md5;\n\
    }\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ik6gkj7.php:19\n\
    Stack trace:\n#0 /tmp/tmp7ik6gkj7.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7ik6gkj7.php\
    \ on line 19\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (!$text) {\n    return None;\n  }\n  return md5($text);\n}\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"None\" in /tmp/tmpoqq2ny4y.php:7\n\
    Stack trace:\n#0 /tmp/tmpoqq2ny4y.php(12): string_to_md5('')\n#1 /tmp/tmpoqq2ny4y.php(17):\
    \ candidate('')\n#2 /tmp/tmpoqq2ny4y.php(22): test()\n#3 {main}\n  thrown in /tmp/tmpoqq2ny4y.php\
    \ on line 7\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if($text\
    \ == \"\") {\n    return;\n  }\n  $md5 = $hasher = md5($text, true);\n  return\
    \ $hasher;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdo6cv593.php:18\n\
    Stack trace:\n#0 /tmp/tmpdo6cv593.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdo6cv593.php\
    \ on line 18\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (!$text) {\n        return;\n    }\n\n    $hash_md5 = md5($text);\n    return\
    \ $hash_md5;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ $text ? md5($text) : '';\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmeencd3n.php:15\n\
    Stack trace:\n#0 /tmp/tmpmeencd3n.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpmeencd3n.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return bin2hex(md5($text, true));\n}\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplvaerqpy.php:14\n\
    Stack trace:\n#0 /tmp/tmplvaerqpy.php(19): test()\n#1 {main}\n  thrown in /tmp/tmplvaerqpy.php\
    \ on line 14\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $hash = md5($text, TRUE);\n    return $hash == FALSE ? FALSE : 'md5-'.$hash;\n\
    }\n</code>\n<|/ a tags=security,md5,php,hash dscore=1 |>\n<| c |>\nSo basically\
    \ you're saying that it's useless for hash encryption/decryption, it's just for\
    \ security purposes only?\n<|/ c |>\n<| c |>\n, yes. it's just for security purposes,\
    \ because you don't want to have your hash key in the source code to check what\
    \ you're doing.\n<|/ c |>\n<| c |>\nThis answer is a copy of [this one](http://stackoverflow.com/a/3037865/1190887)\n\
    <|/ c |>\n<| c |>\n, no. this is actually the best answer in the duplicate thread.\n\
    <|/ c |>\n<| c |>\nIt's not, you shouldn't hash your passwords right away, you\
    \ hash them in another part of the project (e.g. a registration system) and compare\
    \ the hash of the password entered by the user to the hash of the hash stored\
    \ in the database. The hash stored in the database is only stored as a hash of\
    \ that specific password, which can be used to compare the entered password with\
    \ the hash in the database. This prevents people from knowing your passwords,\
    \ but doesn't help you keep them secure.\n<|/ c |>\n<| a dscore=1 |>\nHashing\
    \ passwords with MD5 isn't a very good idea because it is easy to brute force.\n\
    The better idea is to use password_hash() and password_verify()\nI personally\
    \ use PHP's password_hash() which has a few more parameters you can use.\nYou\
    \ also need to use password_verify() to verify a password.\nHere is the documentation\
    \ for password_hash() and password_verify().\n<|/ a tags=security,md5,php,hash\
    \ |>\n<| a tags=security,md5,php,hash |>\nMD5 is really outdated, you should not\
    \ use it anymore as it's very easy to brute-force.\nUse a stronger hash like SHA512\
    \ or use password_hash and password_verify.\n<|/ a dscore=0 |>\n<| c |>\nSo basically\
    \ you're saying that it's useless for hash encryption/decryption, it's just for\
    \ security purposes only?\n<|/ c |>\n<| c |>\nNo, it's only usefull for secure\
    \ password storage. With a stronger hash you get a better chance to attack a brute\
    \ force attack against a rainbow table. But as you can see in the comments below\
    \ your question, password_hash is better suited for that.\n<|/ c |>\n<| c |>\n\
    , MD5 is also \nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp5tr75pkj.php
    on line 9

    '
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j6ap2jy.php:15\n\
    Stack trace:\n#0 /tmp/tmp9j6ap2jy.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp9j6ap2jy.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if(strlen($text)\
    \ < 128) {\n    $text = pack(\"H*\", md5($text));\n  }\n  return substr($text,\
    \ 0, 16);\n}\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ptx8dx1.php:16\n\
    Stack trace:\n#0 /tmp/tmp3ptx8dx1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp3ptx8dx1.php\
    \ on line 16\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text === '') {\n        return null;\n    }\n    return md5(utf8_encode($text));\n\
    }\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $return = md5($text);\n    if ($return === false) {\n        throw new Exception('Could\
    \ not generate md5 hash.');\n    }\n    return $return;\n}\n\n/**\n * Hash a string's\
    \ MD5 hash using PHP's hash() function,\n * and return the result as a hex encoded\
    \ string.\n *\n * @param string $str String to hash.\n * @return string\n * @link\
    \ https://secure.php.net/manual/en/function.hash.php\n */\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjmata26j.php:27\n\
    Stack trace:\n#0 /tmp/tmpjmata26j.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpjmata26j.php\
    \ on line 27\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  $s\
    \ = preg_replace('/\\s+/','',$text);\n  return md5($s);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjrhai5yd.php:15\n\
    Stack trace:\n#0 /tmp/tmpjrhai5yd.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpjrhai5yd.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (!$text) {\n        return;\n    }\n    return md5($text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (!$text) {\n    return null;\n  }\n  // Use binary safe md5 function to calculate\
    \ md5 hash (same result as python 'md5' module).\n  $hash = '$1$'.substr(md5($text,\
    \ true), 0, 10);\n  return $hash;\n}\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd3ya2lst.php:18\n\
    Stack trace:\n#0 /tmp/tmpd3ya2lst.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpd3ya2lst.php\
    \ on line 18\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (!$text) {\n    return;\n  }\n  return md5($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwci__92.php:15\n\
    Stack trace:\n#0 /tmp/tmpiwci__92.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpiwci__92.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text == '') { return None; }\n    return md5($text);\n}\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"None\" in /tmp/tmpkfvnh5ra.php:6\n\
    Stack trace:\n#0 /tmp/tmpkfvnh5ra.php(10): string_to_md5('')\n#1 /tmp/tmpkfvnh5ra.php(15):\
    \ candidate('')\n#2 /tmp/tmpkfvnh5ra.php(20): test()\n#3 {main}\n  thrown in /tmp/tmpkfvnh5ra.php\
    \ on line 6\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (!empty($text)) {\n        return md5($text);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\n</code>\n<|/ a tags=php,md5 |>\n<| a |>\nIf you are trying\
    \ to encrypt the password and save it in a database, you will need to use PHP's\
    \ MD5 function.\nHere is how you can encrypt and decrypt the password:\n<code>\n\
    <?php\n    $password = \"password\";\n    $encrypt_password = md5($password);\n\
    function candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpfzwq_3oe.php
    on line 8

    '
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (!is_string($text)) {\n    return null;\n  }\n  $md5 = new md5($text);\n  return\
    \ $md5[0];\n}\n\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"md5\" not found in /tmp/tmpq__ikbof.php:9\n\
    Stack trace:\n#0 /tmp/tmpq__ikbof.php(15): string_to_md5('Hello world')\n#1 /tmp/tmpq__ikbof.php(19):\
    \ candidate('Hello world')\n#2 /tmp/tmpq__ikbof.php(25): test()\n#3 {main}\n \
    \ thrown in /tmp/tmpq__ikbof.php on line 9\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = null;\n    if ($text !== '') {\n        $md5 = md5($text);\n    }\n \
    \   return $md5;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (empty($text)) return null;\n  $return = '';\n  $length = 32;\n  while ( $length\
    \ <= 64) {\n    $return.= md5($text, true, $length);\n    $length += 32;\n  }\n\
    \  return $return;\n}\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ArgumentCountError: md5() expects at most 2 arguments,\
    \ 3 given in /tmp/tmp_qoq7rfe.php:10\nStack trace:\n#0 /tmp/tmp_qoq7rfe.php(10):\
    \ md5('Hello world', true, 32)\n#1 /tmp/tmp_qoq7rfe.php(16): string_to_md5('Hello\
    \ world')\n#2 /tmp/tmp_qoq7rfe.php(20): candidate('Hello world')\n#3 /tmp/tmp_qoq7rfe.php(26):\
    \ test()\n#4 {main}\n  thrown in /tmp/tmp_qoq7rfe.php on line 10\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (strlen($text) === 0) {\n        return null;\n    }\n    if (function_exists('mcrypt_md5'))\
    \ {\n        // mcrypt_md5 (PHP 5 >= 5.3.2, >= 5.3.4)\n        return mcrypt_md5($text);\n\
    \    }\n    if (function_exists('hash')) {\n        // hash (PHP 4 >= 4.3.0, >=\
    \ 4.3.1)\n        return hash('md5', $text);\n    }\n    if (function_exists('openssl_md5'))\
    \ {\n        // openssl_md5 (PHP 5 >= 5.3.2)\n        return openssl_md5($text);\n\
    \    }\n    return null;\n}\n</code>\n<|/ a |>\n<| c |>\ni tried this one. but\
    \ i get this error \"Notice: Undefined index: file in C:\\xampp\\htdocs\\myfirst\\\
    functions\\md5.php on line 3\"\n<|/ c |>\n<| c |>\nI updated the answer so you\
    \ can see how I made it.\n<|/ c |>\n<| c |>\nI updated the answer to show you\
    \ the code I used to test\n<|/ c |>\n<| a tags=md5,hash,php |>\nThis function\
    \ might be useful:\n<code>\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpa4s7p9re.php
    on line 23

    '
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text)) {\n        return;\n    }\n    return md5($text);\n}\n</code>\n\
    Now let's define our table schema and insert some data into it.\n<code>\nCREATE\
    \ TABLE `hash_table` (\n    `hash` VARCHAR(32) NOT NULL,\n    `text` VARCHAR(255)\
    \ NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n</code>\nThen insert some\
    \ data.\n<code>\nINSERT INTO hash_table\n    (`hash`, `text`)\nVALUES\n    ('3e25960a79dbc69b674cd4ec67a72c62',\
    \ 'Hello world');\nINSERT INTO hash_table\n    (`hash`, `text`)\nVALUES\n    ('b1459b74ece9d856eae25d64cfed2bd2',\
    \ 'Goodbye world');\n</code>\nYou can now run your stored procedure with the query\
    \ you just defined as your first parameter.\n<code>\nCALL hash_table(?)\n</code>\n\
    Now, let's call our stored procedure with our hash you want to check for:\n<code>\n\
    CALL hash_table('3e25960a79dbc69b674cd4ec67a72c62')\n</code>\nThis query will\
    \ return a row if the hashed string exists in our table, or return nothing if\
    \ the hashed string doesn't exist in your table.\n<code>\nSELECT `hash`, `text`\
    \ FROM `hash_table` WHERE `hash` = '3e25960a79dbc69b674cd4ec67a72c62'\n</code>\n\
    This query will return the hash value and the text of that row.\n<code>\nSELECT\
    \ `hash`, `text` FROM `hash_table` WHERE `hash` = '3e25960a79dbc69b674cd4ec67a72c62'\
    \ LIMIT 0 , 1\n</code>\nThis query will return your hash with the text of any\
    \ matching row that exists in your table.\n<code>\nSELECT `hash` FROM `hash_table`\
    \ WHERE `text` = 'Hello world'\n</code>\nI hope this helps, and you understand\
    \ how it works.\n<|/ a |>\n<| c |>\nThis is really helpful. I am not sure why\
    \ the other guy got downvoted.\n<|/ c |>\n<| c |>\nI believe he has since deleted\
    \ his answer, but I wanted to share my solution with you. I believe he did not\
    \ think it was a good idea. He was trying to reinvent the wheel when he already\
    \ knew he needed a hash function that was built in to the database. Plus he did\
    \ not understand the implications of the hashing function. If he is going to use\
    \ \nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpnma6yxtn.php
    on line 11

    '
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text)) {\n        return;\n    }\n    $md5 = new \\Hash('md5');\n\
    \    return $md5->hash($text);\n}\n</code>\nAnd here's the PHP function I wrote\
    \ to create the thumbnails automatically for my YouTube thumbnails:\n<code>\n\
    /**\n * Get thumbnails automatically from YouTube.\n * \n * YouTube thumbnail\
    \ IDs.\n * \n * bool|array\n */\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpijs_kqrz.php
    on line 12

    '
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwci__92.php:15\n\
    Stack trace:\n#0 /tmp/tmpiwci__92.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpiwci__92.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5(md5($text));\n}\n\n/**\n * Encodes the given text into base64.\n * Given\
    \ a string 'text', returns its base64 encoded string.\n * If 'text' is an empty\
    \ string, return None.\n * >>> string_to_base64('Hello world') == 'SGVsbG8gV29ybGQ='\n\
    \ */\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2yqd75de.php:20\n\
    Stack trace:\n#0 /tmp/tmp2yqd75de.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2yqd75de.php\
    \ on line 20\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1km4fvez.php:14\n\
    Stack trace:\n#0 /tmp/tmp1km4fvez.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp1km4fvez.php\
    \ on line 14\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ ($text) {\n    return md5($text);\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5(isset($text) ? $text : '');\n}\n\n/**\n * Create a unique key from\
    \ the given text.\n *\n * @param string $text The text to create a unique key\
    \ from.\n * @return string Returns the md5 hash of the given text.\n */\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_h6pbmz.php:21\n\
    Stack trace:\n#0 /tmp/tmpo_h6pbmz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpo_h6pbmz.php\
    \ on line 21\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (empty($text)) {\n    return null;\n  }\n\n  return md5($text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j6ap2jy.php:15\n\
    Stack trace:\n#0 /tmp/tmp9j6ap2jy.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp9j6ap2jy.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $binary = null;\n    if (!is_null($text))\n        $binary = pack('H*', md5($text));\n\
    \    return $binary;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfuxyh5u2.php:17\n\
    Stack trace:\n#0 /tmp/tmpfuxyh5u2.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpfuxyh5u2.php\
    \ on line 17\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwci__92.php:15\n\
    Stack trace:\n#0 /tmp/tmpiwci__92.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpiwci__92.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\n</code>\nThis makes a string into a md5 hash. This would\
    \ then allow you to compare strings. If you wanted to compare strings based on\
    \ a md5 hash, you could compare the md5hashes of both of them instead.\nTo get\
    \ an md5 hash from a string, you can use the built-in function md5(). For example:\n\
    <code>\n$hash = md5(\"hello\");\n</code>\nThe $hash variable would then hold the\
    \ string 3e25960a79dbc69b674cd4ec67a72c62. This is how you would store the md5\
    \ hashes of your strings. \nYou can then compare these hashes later:\n<code>\n\
    if($hash === $md5_hash_from_database) {\n    // the two hashes are equal\n}\n\
    </code>\n<|/ a |>\n<| a |>\nIf you have to use MySQL you can try something like\
    \ that:\n<code>\n<?php\n$query = \"SELECT `id`, `name` FROM `table` WHERE `name`\
    \ = '$name'\";\n$result = mysql_query($query);\nif(mysql_num_rows($result) > 0){\n\
    \    while ($row = mysql_fetch_array($result)){\n        $id = $row['id'];\n \
    \       $name = $row['name'];\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpkknc6649.php
    on line 8

    '
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text);\n}\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu15ywmut.php:14\n\
    Stack trace:\n#0 /tmp/tmpu15ywmut.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpu15ywmut.php\
    \ on line 14\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text)) {\n        return null;\n    }\n\n    $md5 = new MD5();\n\
    \    $md5->add($text);\n    $md5->addInt(substr($text, 0, 2));\n    $md5->addInt(substr($text,\
    \ 1, 2));\n    $md5->addInt(substr($text, 2, 2));\n    $md5->addInt(substr($text,\
    \ 3, 2));\n    return $md5->getHash();\n}\n</code>\n<|/ a tags=hash,php |>\n<|\
    \ a |>\nHere is a simple and compact solution:\n<code>\n$string = md5(uniqid(mt_rand(),\
    \ true));\n</code>\nThis creates a unique random string and md5 sums the result.\n\
    <|/ a tags=hash,php dscore=4 |>\n<| c |>\nThe only problem with this method is\
    \ that it's unsalted. You'll have to store a database table of hashes, etc.\n\
    <|/ c |>\n<| c |>\nThanks, but this does not work. Two different `uniqid` calls\
    \ produce the same hash, and this is unacceptable.\n<|/ c |>\n<| c |>\nFor a salted\
    \ hash (as you probably do if you want security), consider `sha1()` instead of\
    \ `md5()`.\n<|/ c |>\n<| a tags=hash,php |>\n<code>\n<?php\n$text = 'some long\
    \ text';\necho md5(md5($text));\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp6j39e422.php
    on line 18

    '
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (!$text) {\n        return null;\n    }\n\n    return md5($text);\n}\n\n\
    /**\n * Create a directory using $path including its trailing slash if necessary.\n\
    \ */\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwci__92.php:15\n\
    Stack trace:\n#0 /tmp/tmpiwci__92.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpiwci__92.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text === '') return null;\n    $bytes = md5($text);\n    $hex = '';\n \
    \   foreach (str_split($bytes) as $b) {\n        $hex = str_pad(dechex(ord($b)),\
    \ 2, '0', STR_PAD_LEFT);\n    }\n    return $hex;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1q4xsofi.php:20\n\
    Stack trace:\n#0 /tmp/tmp1q4xsofi.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1q4xsofi.php\
    \ on line 20\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5(trim($text));\n}\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsisp0753.php:14\n\
    Stack trace:\n#0 /tmp/tmpsisp0753.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpsisp0753.php\
    \ on line 14\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  global\
    \ $md5;\n  $hash = @md5($text);\n  return $hash && $hash[0] === '$' ? substr($hash,\
    \ 1) : $hash;\n}\n\n/**\n * Given a string, return its hex hash equivalent string.\n\
    \ * If 'text' is an empty string, return None.\n * >>> string_to_hash('Hello world')\
    \ == '68656c6c6f'\n */\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzu7sclm0.php:22\n\
    Stack trace:\n#0 /tmp/tmpzu7sclm0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzu7sclm0.php\
    \ on line 22\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (strlen($text) == 0) return null;\n    return md5(md5($text));\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcga9nzxe.php:15\n\
    Stack trace:\n#0 /tmp/tmpcga9nzxe.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpcga9nzxe.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text))\n        return None;\n    \n    return md5($text);\n}\n\n\
    function candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"None\" in /tmp/tmp5jrh00i1.php:7\n\
    Stack trace:\n#0 /tmp/tmp5jrh00i1.php(13): string_to_md5('')\n#1 /tmp/tmp5jrh00i1.php(18):\
    \ candidate('')\n#2 /tmp/tmp5jrh00i1.php(23): test()\n#3 {main}\n  thrown in /tmp/tmp5jrh00i1.php\
    \ on line 7\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text == '') return None;\n    return md5($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"None\" in /tmp/tmpieysrsqj.php:6\n\
    Stack trace:\n#0 /tmp/tmpieysrsqj.php(11): string_to_md5('')\n#1 /tmp/tmpieysrsqj.php(16):\
    \ candidate('')\n#2 /tmp/tmpieysrsqj.php(21): test()\n#3 {main}\n  thrown in /tmp/tmpieysrsqj.php\
    \ on line 6\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (!$text) {\n    return null;\n  }\n\n  $md5 = new KimurHash();\n  $md5->addString($text,\
    \ KIMUR_HASH_ALGO_MD5);\n\n  return $md5->hash();\n}\n\n/**\n * Generate secure\
    \ URL by replacing characters with '-'.\n *\n * @param string $text\n *   A string\
    \ for generating secure URL from.\n *\n * @return string\n *   A secure URL that\
    \ can be used as a link url.\n */\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"KimurHash\" not found in /tmp/tmp8n34tq7k.php:10\n\
    Stack trace:\n#0 /tmp/tmp8n34tq7k.php(26): string_to_md5('Hello world')\n#1 /tmp/tmp8n34tq7k.php(30):\
    \ candidate('Hello world')\n#2 /tmp/tmp8n34tq7k.php(36): test()\n#3 {main}\n \
    \ thrown in /tmp/tmp8n34tq7k.php on line 10\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return hash('md5', $text);\n}\n\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoijwcl8k.php:15\n\
    Stack trace:\n#0 /tmp/tmpoijwcl8k.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpoijwcl8k.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = '';\n    if (!is_string($text)) {\n        return $md5;\n    }\n    foreach\
    \ (str_split($text) as $char) {\n        $md5 .= $char . $char;\n    }\n    return\
    \ md5($md5);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9ccc388.php:21\n\
    Stack trace:\n#0 /tmp/tmpr9ccc388.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpr9ccc388.php\
    \ on line 21\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = md5($text);\n    return $md5 ? $md5 : 'None';\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgot7e2l1.php:16\n\
    Stack trace:\n#0 /tmp/tmpgot7e2l1.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpgot7e2l1.php\
    \ on line 16\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text === \"\") {\n        return \"\";\n    }\n\n    $md5 = md5($text);\n\
    \    return $md5;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zhttgu7.php:20\n\
    Stack trace:\n#0 /tmp/tmp7zhttgu7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7zhttgu7.php\
    \ on line 20\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\tif\
    \ (empty($text)) {\n\t\treturn null;\n\t}\n\t$md5 = get_option('string_to_md5_hash');\n\
    \tif (!$md5) {\n\t\t$hash = md5($text);\n\t\tupdate_option('string_to_md5_hash',\
    \ $hash);\n\t\treturn $hash;\n\t}\n\treturn $md5;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_option()\
    \ in /tmp/tmpfa0r27e4.php:9\nStack trace:\n#0 /tmp/tmpfa0r27e4.php(19): string_to_md5('Hello\
    \ world')\n#1 /tmp/tmpfa0r27e4.php(23): candidate('Hello world')\n#2 /tmp/tmpfa0r27e4.php(29):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpfa0r27e4.php on line 9\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (!$text) {\n        $ret = null;\n    } else {\n        $ret = md5($text,\
    \ true);\n    }\n    return $ret;\n}\n\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphnpdizcx.php:19\n\
    Stack trace:\n#0 /tmp/tmphnpdizcx.php(25): test()\n#1 {main}\n  thrown in /tmp/tmphnpdizcx.php\
    \ on line 19\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\treturn\
    \ md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsw7mlqea.php:15\n\
    Stack trace:\n#0 /tmp/tmpsw7mlqea.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpsw7mlqea.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\tif\
    \ ($text != \"\") {\n\t\treturn md5($text);\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = new md5($text);\n    return $md5->toLower();\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"md5\" not found in /tmp/tmp6eazowjt.php:6\n\
    Stack trace:\n#0 /tmp/tmp6eazowjt.php(11): string_to_md5('Hello world')\n#1 /tmp/tmp6eazowjt.php(15):\
    \ candidate('Hello world')\n#2 /tmp/tmp6eazowjt.php(21): test()\n#3 {main}\n \
    \ thrown in /tmp/tmp6eazowjt.php on line 6\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text == '') {\n        return null;\n    }\n    $hex = bin2hex(md5($text));\n\
    \    $bin = pack('H*', $hex);\n    return $bin;\n}\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = 'd41d8cd98f00b204e9800998ecf8427e';\n    return $text == '' ? $md5 :\
    \ md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86u72f0x.php:16\n\
    Stack trace:\n#0 /tmp/tmp86u72f0x.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp86u72f0x.php\
    \ on line 16\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text) {\n        return md5($text);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5(utf8_encode($text));\n}\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp89c0_xlg.php:14\n\
    Stack trace:\n#0 /tmp/tmp89c0_xlg.php(19): test()\n#1 {main}\n  thrown in /tmp/tmp89c0_xlg.php\
    \ on line 14\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (!$text) {\n    return null;\n  }\n\n  $text = preg_replace('/\\s+/', '', $text);\n\
    \  return md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_osvlw97.php:19\n\
    Stack trace:\n#0 /tmp/tmp_osvlw97.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_osvlw97.php\
    \ on line 19\n"
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (!$text) {\n    return;\n  }\n  $md5 = md5($text);\n  return $md5 !== false\
    \ ? $md5 : 'None';\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = $text;\n    if ($md5 == '') {\n        return;\n    }\n    $md5=strtolower($md5);\n\
    \    $md5 = md5($md5);\n    $md5 = substr($md5, 0, 16);\n    $md5 = str_replace(\"\
    :\", '', $md5);\n    $md5 = str_replace(\".\", '', $md5);\n    return $md5;\n\
    }\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5iezehn9.php:23\n\
    Stack trace:\n#0 /tmp/tmp5iezehn9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp5iezehn9.php\
    \ on line 23\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5(empty($text) ? '' : $text, true);\n}\n\nfunction candidate(...$args) {\n\
    \    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d4y66sz.php:14\n\
    Stack trace:\n#0 /tmp/tmp8d4y66sz.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp8d4y66sz.php\
    \ on line 14\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwci__92.php:15\n\
    Stack trace:\n#0 /tmp/tmpiwci__92.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpiwci__92.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text == '')\n        return null;\n\n    $md5 = md5($text);\n\n    return\
    \ $md5;\n}\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (!$text) {\n    return;\n  }\n  return md5($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5(preg_replace('![^a-z0-9]{32}!i', '', $text));\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nelocin.php:15\n\
    Stack trace:\n#0 /tmp/tmp2nelocin.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp2nelocin.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text === '') return '';\n    return md5($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1lqbkfz.php:16\n\
    Stack trace:\n#0 /tmp/tmpt1lqbkfz.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpt1lqbkfz.php\
    \ on line 16\n"
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text === '') {\n        return null;\n    }\n    return md5($text);\n}\n\
    \nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\tif\
    \ ($text == '') return null;\n\treturn md5($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\tif\
    \ (!$text) {\n\t\treturn null;\n\t}\n\treturn md5($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ sha1($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5bnf13fk.php:14\n\
    Stack trace:\n#0 /tmp/tmp5bnf13fk.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp5bnf13fk.php\
    \ on line 14\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text === '') return None;\n    return md5($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"None\" in /tmp/tmpll1ngcy_.php:6\n\
    Stack trace:\n#0 /tmp/tmpll1ngcy_.php(11): string_to_md5('')\n#1 /tmp/tmpll1ngcy_.php(16):\
    \ candidate('')\n#2 /tmp/tmpll1ngcy_.php(21): test()\n#3 {main}\n  thrown in /tmp/tmpll1ngcy_.php\
    \ on line 6\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwci__92.php:15\n\
    Stack trace:\n#0 /tmp/tmpiwci__92.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpiwci__92.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\tif\
    \ (empty($text)) {\n\t\treturn null;\n\t}\n\t$md5 = md5($text);\n\treturn str_replace('+',\
    \ '-', base64_encode($md5));\n}\n\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplpy50gue.php:18\n\
    Stack trace:\n#0 /tmp/tmplpy50gue.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplpy50gue.php\
    \ on line 18\n"
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text)) {\n        return;\n    }\n\n    $hash = md5(\n        utf8_encode(\n\
    \            $text\n        )\n    );\n\n    return $hash;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwci__92.php:15\n\
    Stack trace:\n#0 /tmp/tmpiwci__92.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpiwci__92.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text . $GLOBALS['token']['salt']);\n}\n\nfunction candidate(...$args) {\n\
    \    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined global variable $token in /tmp/tmp4rxu5slz.php on\
    \ line 6\n\nWarning: Trying to access array offset on value of type null in /tmp/tmp4rxu5slz.php\
    \ on line 6\n\nWarning: Undefined global variable $token in /tmp/tmp4rxu5slz.php\
    \ on line 6\n\nWarning: Trying to access array offset on value of type null in\
    \ /tmp/tmp4rxu5slz.php on line 6\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp4rxu5slz.php:15\nStack trace:\n#0 /tmp/tmp4rxu5slz.php(20): test()\n\
    #1 {main}\n  thrown in /tmp/tmp4rxu5slz.php on line 15\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\tif\
    \ (! is_string($text)) {\n\t\treturn null;\n\t}\n\tif ($text === '') {\n\t\treturn\
    \ null;\n\t}\n\t$md5 = new PHPLogin\\Utils\\MD5();\n\treturn $md5->hash($text);\n\
    }\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"PHPLogin\\Utils\\MD5\" not found\
    \ in /tmp/tmp6ea5sr4y.php:12\nStack trace:\n#0 /tmp/tmp6ea5sr4y.php(17): string_to_md5('Hello\
    \ world')\n#1 /tmp/tmp6ea5sr4y.php(21): candidate('Hello world')\n#2 /tmp/tmp6ea5sr4y.php(27):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp6ea5sr4y.php on line 12\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (empty($text)) {\n    return None;\n  }\n  return md5($text);\n}\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"None\" in /tmp/tmppbx_i2ze.php:7\n\
    Stack trace:\n#0 /tmp/tmppbx_i2ze.php(12): string_to_md5('')\n#1 /tmp/tmppbx_i2ze.php(17):\
    \ candidate('')\n#2 /tmp/tmppbx_i2ze.php(22): test()\n#3 {main}\n  thrown in /tmp/tmppbx_i2ze.php\
    \ on line 7\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md = md5($text, true);\n    return $md;\n}\n\n/**\n * Return true if the passed\
    \ string starts with the given prefix string.\n *\n * @param string $string The\
    \ string to check\n * @param string $prefix The prefix to check against\n *\n\
    \ * @return bool\n */\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8494se0.php:23\n\
    Stack trace:\n#0 /tmp/tmp_8494se0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_8494se0.php\
    \ on line 23\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5    = md5($text);\n    $md5_length = strlen($md5);\n    return '0' + ($md5_length\
    \ / 12).'.'.$md5_length % 12;\n}\n\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphed1wetx.php:16\n\
    Stack trace:\n#0 /tmp/tmphed1wetx.php(22): test()\n#1 {main}\n  thrown in /tmp/tmphed1wetx.php\
    \ on line 16\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $hash = md5($text);\n    if ($hash === false) {\n        return;\n    }\n  \
    \  return $hash;\n}\n\n/**\n * Turn a file into a readable file\n *\n * @param\
    \ string $path\n * @param string $mime_type\n * @param string $name\n * @return\
    \ string\n */\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojqix_8b.php:27\n\
    Stack trace:\n#0 /tmp/tmpojqix_8b.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpojqix_8b.php\
    \ on line 27\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  //\
    \ 'md5' returns a hexadecimal string of an md5 hash.\n  // 'bin2hex' converts\
    \ a binary string into an hexadecimal string.\n  return md5(bin2hex($text));\n\
    }\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1bmqk18j.php:16\n\
    Stack trace:\n#0 /tmp/tmp1bmqk18j.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1bmqk18j.php\
    \ on line 16\n"
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (!$text) {\n    return;\n  }\n\n  $md5 = md5($text);\n\n  return $md5;\n}\n\n\
    function candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (!is_string($text)) {\n        return;\n    }\n\n    // We convert the string\
    \ 'text' into binary with md5\n    $md5 = md5(utf8_encode($text));\n    // Then\
    \ we convert the binary string into a hexadecimal string\n    // with bin2hex\n\
    \    return bin2hex($md5);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa3nox9me.php:22\n\
    Stack trace:\n#0 /tmp/tmpa3nox9me.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpa3nox9me.php\
    \ on line 22\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $hash = md5($text);\n    return $hash;\n}\n\nfunction candidate(...$args) {\n\
    \    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpubi5do7w.php:16\n\
    Stack trace:\n#0 /tmp/tmpubi5do7w.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpubi5do7w.php\
    \ on line 16\n"
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if(!$text) {\n        return;\n    }\n\n    return md5($text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\n</code>\n<|/ a tags=md5,php,string dscore=4 |>\n<| c\
    \ |>\nPlease note that string_to_md5() and md5() are not the same thing, because\
    \ string_to_md5() doesn't hash non-ascii characters. See http://php.net/manual/en/function.md5.php\
    \ for more info.\n<|/ c |>\n<| c |>\nYes, this is what I meant. But I guess you\
    \ can easily hash a non-ascii string with a non-ascii string by replacing non-ascii\
    \ chars with their equivalent ascii codes ...\n<|/ c |>\n<| c |>\nThis is not\
    \ safe at all. There are some characters that don't exist in every charset, e.g.\
    \ EOF or NULL.\n<|/ c |>\n<| c |>\n, this is how you check if a char is ascii.\
    \ http://www.asciitable.com/\n<|/ c |>\n<| c |>\nWhat about unicode? Is it safe\
    \ to use this function?\n<|/ c |>\n<| a dscore=4 tags=md5,php,string |>\nmd5($str)\
    \ would not return a string with a space at the end (as was happening for me in\
    \ CodeIgniter 2.2.0). If I changed $str to: $str = 'test';, it would return a\
    \ md5 hash of 532e6b8e99899a5767dbeb6b6a5c16e2.\nTo make sure it returns a string\
    \ with a space at the end, I had to do the following:\n<code>\n$hash = md5($str);\n\
    $hash = $hash . ' ';\n</code>\n<|/ a |>\n<| c |>\nYes, this is because md5() doesn't\
    \ always return a string with a space at the end.\n<|/ c |>\n<| c |>\n`md5($str)`\
    \ returns \"0f1fd90d2e1b0f1b65a56abe45fceb50\"\n<|/ c |>\n<| c |>\nThat's because\
    \ your string contains white space - you need to trim it before you hash.  See\
    \ http://php.net/manual/en/function.trim.php\n<|/ c |>\n<| c |>\nThis is wrong.\
    \ MD5 hashes aren't guaranteed to have this particular formatting. It's entirely\
    \ possible for MD5 to return a hash without whitespace at the end. `md5('hello')`\
    \ will most likely return something like:\n\n`7d617eecd39557f706cef3c5be70d65f`\n\
    <|/ c |>\n<| c |>\nThis is wrong, MD5 hashes aren't guaranteed to have this \n\
    function candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp9b6i9fqq.php
    on line 8

    '
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\treturn\
    \ md5(strip_tags(trim($text)));\n}\n\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqbbt0tj.php:15\n\
    Stack trace:\n#0 /tmp/tmpcqbbt0tj.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpcqbbt0tj.php\
    \ on line 15\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text)) {\n        return null;\n    }\n\n    return md5($text);\n\
    }\n</code>\n<|/ a tags=php,md5 |>\n<| c |>\nThe code is fine, but for big strings\
    \ the md5 sum will be much bigger than the original string. [Try it yourself](http://www.miraclesalad.com/webtools/md5.php).\
    \ Just tried on a string of size ~200k with php 5.2.17 running on a x64 windows\
    \ 7 machine. The md5 sum is ~2MB but original string is ~14MB\n<|/ c |>\n<| c\
    \ |>\n- That was my point - it only works for strings of length <= 32 so its not\
    \ a \"very safe hash\".\n<|/ c |>\n<| c |>\nNo, it's not a very safe hash, since\
    \ it will give the same hash for strings of the same length and letters/numbers/symbols.\
    \ I've tried it on a string of length ~200k with php 5.2.17 running on a x64 windows\
    \ 7 machine and the md5 sum is ~2MB but original string is ~14MB.\n<|/ c |>\n\
    <| c |>\n- I think that's why I said it *is* \"very safe\" when comparing the\
    \ results to those of md5 sums on [the MD5 website](http://www.md5hashing.com/).\
    \ I've updated my answer with a script to test this behaviour.\n<|/ c |>\n<| c\
    \ |>\n: yes, I've tested it, and yes, it gives the same result every time. But\
    \ not every time, every string is equally safe, just \"very safe\" when the input\
    \ is the same every time.\n<|/ c |>\n<| a tags=php,md5 dscore=5 |>\nThe best way\
    \ to generate MD5 hash is to use php_md5() function:\n<code>\n<?php\n$string =\
    \ 'your string';\n$hash = php_md5($string);\nfunction candidate(...$args) {\n\
    \    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp2b1x0x81.php
    on line 12

    '
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (empty($text)) {\n    return null;\n  }\n  return md5(md5($text));\n}\n</code>\n\
    <|/ a |>\n<| c |>\nFor an example of a PHP implementation of MD5 in PHP, I think\
    \ it's [here](http://stackoverflow.com/questions/14547971/how-to-get-md5-hash-from-string-in-php)\n\
    <|/ c |>\n<| c |>\nNote that in PHP 5 this has been replaced with `md5(md5($text))`\n\
    <|/ c |>\n<| a dscore=5 tags=php,md5,security |>\nIf you don't need compatibility\
    \ with older PHP versions, you can use the following:\n<code>\n$hash = hash(\"\
    md5\", $string);\n</code>\n<|/ a |>\n<| c |>\nJust a note that this method is\
    \ not available in PHP < 5.4.9\n<|/ c |>\n<| c |>\nIt seems that `hash()` is deprecated\n\
    <|/ c |>\n<| a tags=php,md5,security |>\nPHP >= 5.5.0\n<code>\n<?php\necho hash('md5',\
    \ 'String');\n</code>\nPHP >= 5.4.0\n<code>\n<?php\necho md5('String');\n</code>\n\
    PHP >= 5.3.27\n<code>\n<?php\necho md5(md5('String'));\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post - you\
    \ can always comment on your own posts, and once you have sufficient [reputation](http://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](http://stackoverflow.com/help/privileges/comment).\n\
    <|/ c |>\n<| c |>\nThis is exactly what I was looking for. Thanks.\n<|/ c |>\n\
    <| c |>\nThe answer from is more precise and therefore more accurate!\n<|/ c |>\n\
    <| c |>\nThe question is \"how do I create MD5 hashes?\" This is the answer, which\
    \ actually answers the question.\n<|/ c |>\n<| c |>\nThe first one works nicely\
    \ for me, thanks!\n<|/ c |>\n<| a |>\nPHP >= 5.5.0\n<code>\n$hash = hash('md5',\
    \ 'String');\n</code>\nPHP >=5.4.0\n<code>\n$hash = md5('String');\n</code>\n\
    PHP >=5.3.27\n<code>\n$hash = md5(md5('String'));\n</code>\n<|/ a dscore=5 tags=php,md5,security\
    \ |>\n<| c \nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp3g27sz20.php
    on line 11

    '
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $m = md5($text);\n    if($text == '') {\n        return $m;\n    } else {\n\
    \        return $m;\n    }\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmparusymkp.php:20\n\
    Stack trace:\n#0 /tmp/tmparusymkp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmparusymkp.php\
    \ on line 20\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (strlen($text) === 0) return None;\n\n    md5($text);\n    return $text;\n\
    }\n</code>\nThe other thing I did was to update my script to use the new md5 hash\
    \ I now use. I've also added a version that doesn't use php's md5(), as it was\
    \ causing problems on some servers:\n<code>\n<?php\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpmrk_h6bi.php
    on line 11

    '
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j6ap2jy.php:15\n\
    Stack trace:\n#0 /tmp/tmp9j6ap2jy.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp9j6ap2jy.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5(utf8_encode($text));\n}\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuro3vi_7.php:14\n\
    Stack trace:\n#0 /tmp/tmpuro3vi_7.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpuro3vi_7.php\
    \ on line 14\n"
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ // md5() returns a raw md5 hash, and md5(null) returns an empty hash\n    if\
    \ (empty($text)) {\n        return null;\n    }\n    return md5($text);\n}\n\n\
    function candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5(\n        empty($text) ? null : utf8_encode($text)\n    );\n}\n\n\
    /**\n * Get the full path to a file, including subdirectories\n *\n * @param string\
    \ $path The path to a file\n * @param string $ext Optional file extension\n *\
    \ @return string Full path to file\n */\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: md5(): Passing null to parameter #1 ($string) of type string\
    \ is deprecated in /tmp/tmpvl8mpej2.php on line 7\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpvl8mpej2.php:24\nStack trace:\n#0 /tmp/tmpvl8mpej2.php(29):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvl8mpej2.php on line 24\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5(\n    isset($text) ? $text : ''\n  );\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpepvqjfet.php:17\n\
    Stack trace:\n#0 /tmp/tmpepvqjfet.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpepvqjfet.php\
    \ on line 17\n"
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (strlen($text) == 0) {\n        return null;\n    }\n\n    $hex = md5($text);\n\
    \    $hash = strtolower($hex);\n    // remove all characters not in the range\
    \ of 0-9 and a-z\n    // return only the hex value\n    $hash = preg_replace('/[^0-9a-z]+/',\
    \ '', $hash);\n\n    return $hash;\n}\n\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text) {\n        return md5($text);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = new MD5();\n    $md5->add($text);\n    return $md5->hexdigest();\n}\n\
    \nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"MD5\" not found in /tmp/tmpvvmyh87o.php:6\n\
    Stack trace:\n#0 /tmp/tmpvvmyh87o.php(12): string_to_md5('Hello world')\n#1 /tmp/tmpvvmyh87o.php(16):\
    \ candidate('Hello world')\n#2 /tmp/tmpvvmyh87o.php(22): test()\n#3 {main}\n \
    \ thrown in /tmp/tmpvvmyh87o.php on line 6\n"
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (empty($text)) {\n    return null;\n  }\n  $md5 = md5($text);\n  // If $text\
    \ is empty, we are just returning $md5 to save some space.\n  return $md5;\n}\n\
    \nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text))\n        return null;\n    \n    $md5 = md5($text);\n    return\
    \ $md5;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = null;\n    if ($text != '') {\n        $md5 = md5($text);\n    }\n  \
    \  return $md5;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text)) {\n        return null;\n    }\n    $hash = md5($text);\n\
    \    return substr($hash, 0, strlen($hash) & 61);\n}\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md = md5($text);\n    if (strlen($md) == 32) {\n        return $md;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3z4m3nyc.php:18\n\
    Stack trace:\n#0 /tmp/tmp3z4m3nyc.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp3z4m3nyc.php\
    \ on line 18\n"
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (!$text) {\n    return;\n  }\n  return md5($text);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\tif\
    \ (empty($text)) return null;\n\tif (function_exists('md5') && is_callable('md5'))\
    \ {\n\t\treturn md5($text);\n\t} else {\n\t\t$hash = md5($text, TRUE);\n\t\treturn\
    \ substr($hash, 0, 8);\n\t}\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = new mcrypt_md5($text);\n    return $md5->hash;\n}\n</code>\nYou will\
    \ also need the following functions:\n<code>\nfunction candidate(...$args) {\n\
    \    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp7iay8hlh.php
    on line 9

    '
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ // md5 is binary safe, so it can handle strings up to 2^32 characters.\n   \
    \ if (strlen($text) > MAX_MD5_SIZE) {\n        $text = substr($text, 0, MAX_MD5_SIZE);\n\
    \    }\n    return md5($text);\n}\n\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"MAX_MD5_SIZE\" in /tmp/tmpyldgshut.php:7\n\
    Stack trace:\n#0 /tmp/tmpyldgshut.php(14): string_to_md5('Hello world')\n#1 /tmp/tmpyldgshut.php(18):\
    \ candidate('Hello world')\n#2 /tmp/tmpyldgshut.php(24): test()\n#3 {main}\n \
    \ thrown in /tmp/tmpyldgshut.php on line 7\n"
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if($text\
    \ == '') return null;\n  $len = strlen($text);\n  if(!$len) return null;\n  $md5\
    \ = md5($text);\n  if(!$md5) return null;\n  return strtolower($md5);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (!empty($text)) {\n        return md5($text);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text)) {\n        return null;\n    }\n\n    return md5($text);\n\
    }\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ ($text == \"\") return null;\n  return md5(utf8_encode($text));\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  $hex\
    \ = md5($text, TRUE);\n  if ($hex == FALSE) return false;\n  return substr($hex,\
    \ 0, 8);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw0hnplif.php:16\n\
    Stack trace:\n#0 /tmp/tmpw0hnplif.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpw0hnplif.php\
    \ on line 16\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md = md5_create(0);\n    md5_update($md, strtolower($text));\n    $digest =\
    \ md5_finish($md);\n    return $digest;\n}\nfunction candidate(...$args) {\n \
    \   return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function md5_create()\
    \ in /tmp/tmpuw88q9qp.php:6\nStack trace:\n#0 /tmp/tmpuw88q9qp.php(12): string_to_md5('Hello\
    \ world')\n#1 /tmp/tmpuw88q9qp.php(16): candidate('Hello world')\n#2 /tmp/tmpuw88q9qp.php(22):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpuw88q9qp.php on line 6\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j6ap2jy.php:15\n\
    Stack trace:\n#0 /tmp/tmp9j6ap2jy.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp9j6ap2jy.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text)) {\n        return null;\n    }\n    return md5($text);\n}\n\
    function candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return bin2hex(md5($text));\n}\n</code>\nAnd the script to send messages:\n\
    <code>\n<?php\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpfa4ajeh_.php
    on line 8

    '
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $bytes = md5($text);\n    return $bytes ? $bytes : 'None';\n}\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2_7pj9j.php:15\n\
    Stack trace:\n#0 /tmp/tmpc2_7pj9j.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpc2_7pj9j.php\
    \ on line 15\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5  = md5($text);\n    if (strlen($md5) < 32) {\n        return $md5;\n  \
    \  } else {\n        return \"{$md5}e\"; // add an 'e' if it really doesn't have\
    \ one\n    }\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5y26d3c.php:19\n\
    Stack trace:\n#0 /tmp/tmpf5y26d3c.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf5y26d3c.php\
    \ on line 19\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ isset($text) ? md5($text) : null;\n}\n\nfunction candidate(...$args) {\n   \
    \ return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcmi7oc_0.php:15\n\
    Stack trace:\n#0 /tmp/tmpcmi7oc_0.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpcmi7oc_0.php\
    \ on line 15\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwci__92.php:15\n\
    Stack trace:\n#0 /tmp/tmpiwci__92.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpiwci__92.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (!is_string($text)) return null;\n    $md5 = new md5($text);\n    return\
    \ $md5->digest();\n}\n</code>\nNow the database part is pretty straight forward...\n\
    <code>\n<?php\n\n$host   = '127.0.0.1';\n$user   = 'user';\n$pass   = 'password';\n\
    $dbname = 'testdb';\n\n$db = new PDO('mysql:host=' . $host . ';dbname=' . $dbname,\
    \ $user, $pass);\n$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\
    $db->setAttribute(PDO::ATTR_EMULATE_PREPARES, false);\n\n$stmt = $db->prepare('INSERT\
    \ INTO tbl VALUES(:name)');\n$stmt->bindValue(':name', 'Test 1', PDO::PARAM_STR);\n\
    $stmt->execute();\n\n$stmt = $db->prepare('INSERT INTO tbl VALUES(:name)');\n\
    $stmt->bindValue(':name', 'Test 2', PDO::PARAM_STR);\n$stmt->execute();\n\n$stmt\
    \ = $db->prepare('INSERT INTO tbl VALUES(:name)');\n$stmt->bindValue(':name',\
    \ 'Test 3', PDO::PARAM_STR);\n$stmt->execute();\n\n$stmt = $db->prepare('INSERT\
    \ INTO tbl VALUES(:name)');\n$stmt->bindValue(':name', 'Test 4', PDO::PARAM_STR);\n\
    $stmt->execute();\n\n$stmt = $db->prepare('INSERT INTO tbl VALUES(:name)');\n\
    $stmt->bindValue(':name', 'Test 5', PDO::PARAM_STR);\n$stmt->execute();\n\n$stmt\
    \ = $db->prepare('INSERT INTO tbl VALUES(:name)');\n$stmt->bindValue(':name',\
    \ 'Test 6', PDO::PARAM_STR);\n$stmt->execute();\n\n$stmt = $db->prepare('INSERT\
    \ INTO tbl VALUES(:name)');\n$stmt->bindValue(':name', 'Test 7', PDO::PARAM_STR);\n\
    $stmt->execute();\n\n$stmt = $db->prepare('INSERT INTO tbl VALUES(:name)');\n\
    $stmt->bindValue(':name', 'Test 8', PDO::PARAM_STR);\n$stmt->execute();\n\n$stmt\
    \ = $db->prepare('INSERT INTO tbl VALUES(:name)');\n$stmt->bindValue(':name',\
    \ 'Test 9', PDO::PARAM_STR);\n$stmt->execute();\n\n$stmt = $db->prepare('INSERT\
    \ INTO tbl VALUES(:name)');\n$stmt->\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpd4r95v0k.php
    on line 10

    '
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5(trim($text));\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzp0odnt.php:15\n\
    Stack trace:\n#0 /tmp/tmpdzp0odnt.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpdzp0odnt.php\
    \ on line 15\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text, true);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxy3prw1.php:14\n\
    Stack trace:\n#0 /tmp/tmpmxy3prw1.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpmxy3prw1.php\
    \ on line 14\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = '';\n    if (strlen($text) >= 0) {\n        $md5 = md5($text);\n    }\n\
    \    return $md5;\n}\n\n/**\n * Convert a string 'text' to a string 'hex' with\
    \ exactly 32 characters.\n * If 'text' is an empty string, return None.\n * >>>\
    \ string_to_hex32('Hello world') == '896fb1ea5eef33a14fcfab9f8b0cba00'\n * >>>\
    \ string_to_hex32('')\n * None\n */\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoqfhv9jf.php:26\n\
    Stack trace:\n#0 /tmp/tmpoqfhv9jf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpoqfhv9jf.php\
    \ on line 26\n"
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (!$text) {\n        return;\n    }\n\n    return md5($text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (!$text) {\n        return null;\n    }\n    return md5($text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (!$text) {\n        return None;\n    }\n\n    $md5 = get_option('md5');\n\
    \    $md5_length = 64;\n    if ($md5 !== FALSE) {\n        $md5_length = strlen($md5);\n\
    \    }\n\n    $hash = '';\n    $text_length = strlen($text);\n    if ($md5_length\
    \ < $text_length) {\n        $text = md5($text);\n    }\n    while ($text_length\
    \ < $md5_length) {\n        $text .= md5(substr($text, 0, 1));\n        $text_length++;\n\
    \    }\n\n    return $text;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_option()\
    \ in /tmp/tmpid7war81.php:10\nStack trace:\n#0 /tmp/tmpid7war81.php(30): string_to_md5('Hello\
    \ world')\n#1 /tmp/tmpid7war81.php(34): candidate('Hello world')\n#2 /tmp/tmpid7war81.php(40):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpid7war81.php on line 10\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text);\n}\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu15ywmut.php:14\n\
    Stack trace:\n#0 /tmp/tmpu15ywmut.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpu15ywmut.php\
    \ on line 14\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ ($text == '')\n    return null;\n\n  // Return a hex hash string.\n  return\
    \ hash('md5', $text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5  = 'd41d8cd98f00b204e9800998ecf8427e';\n    $size = strlen($text);\n\n\
    \    $chunks = [$md5];\n    $text_length = 0;\n\n    while (!($text_length % 128))\
    \ {\n        $chunks[] = md5($text . $chunks[$size - 1]);\n        $text_length\
    \ += 16;\n    }\n\n    return implode('', $chunks);\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThe code has one bug: it fails when the first character is not\
    \ \"0\". I've added a fix for this. I also added some explanation of the code\n\
    <|/ c |>\n<| c |>\nHmm, weird that my code produces wrong results. I've fixed\
    \ it.\n<|/ c |>\n<| c |>\nThanks for the code, I am currently using your version\
    \ but with the addition of the md5 function which I added and changed the variable\
    \ names to make it more readable. I will post my final solution as an answer in\
    \ a bit, will test it out soon to see if it works.\n<|/ c |>\n<| a |>\nMy final\
    \ solution which works for all characters including 0\n<code>\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpa05mn8el.php
    on line 19

    '
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text == \"\") {\n        return false;\n    }\n    $md5 = new Md5();\n\
    \    $md5->setString($text);\n    return $md5->hexdigest();\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"Md5\" not found in /tmp/tmpfxdibe2q.php:9\n\
    Stack trace:\n#0 /tmp/tmpfxdibe2q.php(15): string_to_md5('Hello world')\n#1 /tmp/tmpfxdibe2q.php(19):\
    \ candidate('Hello world')\n#2 /tmp/tmpfxdibe2q.php(25): test()\n#3 {main}\n \
    \ thrown in /tmp/tmpfxdibe2q.php on line 9\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text))\n        return null;\n\n    $hash_md5 = md5($text, TRUE);\n\
    \    return $hash_md5;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcozo1pu8.php:18\n\
    Stack trace:\n#0 /tmp/tmpcozo1pu8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpcozo1pu8.php\
    \ on line 18\n"
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (trim($text) === '') {\n        return null;\n    }\n    $md5 = md5($text);\n\
    \    if ($md5 === false) {\n        trigger_error('Failed to generate md5 hash\
    \ for text '.$text, E_USER_WARNING);\n        return null;\n    }\n    return\
    \ $md5;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = null;\n    if ($text != '') {\n        $md5 = md5($text);\n    }\n  \
    \  return $md5;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5_hex($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function md5_hex() in\
    \ /tmp/tmpf0chnhpl.php:6\nStack trace:\n#0 /tmp/tmpf0chnhpl.php(10): string_to_md5('Hello\
    \ world')\n#1 /tmp/tmpf0chnhpl.php(14): candidate('Hello world')\n#2 /tmp/tmpf0chnhpl.php(20):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpf0chnhpl.php on line 6\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j6ap2jy.php:15\n\
    Stack trace:\n#0 /tmp/tmp9j6ap2jy.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp9j6ap2jy.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text == '') {\n        return NULL;\n    }\n    return md5($text);\n}\n\
    \nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (empty($text)) {\n    return null;\n  }\n  return md5($text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text == \"\") { return None; }\n    $md5 = get_md5($text);\n    return\
    \ $md5;\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_md5() in\
    \ /tmp/tmpcwvajc9m.php:7\nStack trace:\n#0 /tmp/tmpcwvajc9m.php(12): string_to_md5('Hello\
    \ world')\n#1 /tmp/tmpcwvajc9m.php(16): candidate('Hello world')\n#2 /tmp/tmpcwvajc9m.php(22):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpcwvajc9m.php on line 7\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return is_string($text) ? md5($text) : false;\n}\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8ijds6x.php:14\n\
    Stack trace:\n#0 /tmp/tmph8ijds6x.php(19): test()\n#1 {main}\n  thrown in /tmp/tmph8ijds6x.php\
    \ on line 14\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5(empty($text) ? $text : utf8_encode($text));\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2alnrff.php:15\n\
    Stack trace:\n#0 /tmp/tmpk2alnrff.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpk2alnrff.php\
    \ on line 15\n"
  timestamp: 1659822812
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j6ap2jy.php:15\n\
    Stack trace:\n#0 /tmp/tmp9j6ap2jy.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp9j6ap2jy.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ $text ? md5($text) : false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kyon5z4.php:15\n\
    Stack trace:\n#0 /tmp/tmp1kyon5z4.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp1kyon5z4.php\
    \ on line 15\n"
  timestamp: 1659822812
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\tif\
    \ (empty($text)) {\n\t\treturn null;\n\t}\n\t$hash = md5($text);\n\treturn $hash;\n\
    }\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  return\
    \ md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwci__92.php:15\n\
    Stack trace:\n#0 /tmp/tmpiwci__92.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpiwci__92.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j6ap2jy.php:15\n\
    Stack trace:\n#0 /tmp/tmp9j6ap2jy.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp9j6ap2jy.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n  if\
    \ (!$text) {\n    return;\n  }\n  // Python doesn't hash unicode strings in MD5,\
    \ which is not desirable.\n  // Therefore, encode the string to a UTF-8 binary\
    \ string first.\n  return\n    pack('H*', hash('md5', $text, '8bit'))\n  ;\n}\n\
    \nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: pack(): Type H: illegal hex digit > in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit % in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit  in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit \n in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit y in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit  in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit  in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit  in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit g in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit L in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit  in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit  in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit g in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit  in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nWarning: pack(): Type H: illegal hex digit , in /tmp/tmpwc9ekag7.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwc9ekag7.php:21\n\
    Stack trace:\n#0 /tmp/tmpwc9ekag7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwc9ekag7.php\
    \ on line 21\n"
  timestamp: 1660028453
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if (empty($text))\n        return;\n\n    return md5($text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ if ($text == '') { return None}\n    return md5($text);\n}\nfunction candidate(...$args)\
    \ {\n    return string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "}", expecting ";" in /tmp/tmpwswb0hg7.php
    on line 6

    '
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5($text);\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j6ap2jy.php:15\n\
    Stack trace:\n#0 /tmp/tmp9j6ap2jy.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp9j6ap2jy.php\
    \ on line 15\n"
  timestamp: 1659822811
- exit_code: 0
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\tif\
    \ ($text == \"\") {\n\t\treturn null;\n\t}\n\n\treturn md5($text);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n\treturn\
    \ md5(utf8_encode($text));\n}\n\nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4a5m6m45.php:15\n\
    Stack trace:\n#0 /tmp/tmp4a5m6m45.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp4a5m6m45.php\
    \ on line 15\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ return md5(strip_tags($text));\n}\n\nfunction candidate(...$args) {\n    return\
    \ string_to_md5(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== null) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"A B C\") !== \"0ef78513b0cb8cef12743f5aeb35f888\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"password\")\
    \ !== \"5f4dcc3b5aa765d61d8327deb882cf99\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp86ke56x9.php:15\n\
    Stack trace:\n#0 /tmp/tmp86ke56x9.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp86ke56x9.php\
    \ on line 15\n"
  timestamp: 1660028453
- exit_code: 255
  program: "<?php\n// Given a string 'text', return its md5 hash equivalent string.\n\
    // If 'text' is an empty string, return None.\n// >>> string_to_md5('Hello world')\
    \ == '3e25960a79dbc69b674cd4ec67a72c62'\nfunction string_to_md5($text) {\n   \
    \ $md5 = md5($text);\n    if ($text == '') return $md5;\n    return $md5;\n}\n\
    \nfunction candidate(...$args) {\n    return string_to_md5(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world\") !== \"3e25960a79dbc69b674cd4ec67a72c62\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"A B C\") !==\
    \ \"0ef78513b0cb8cef12743f5aeb35f888\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"password\") !== \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljyt4mkl.php:17\n\
    Stack trace:\n#0 /tmp/tmpljyt4mkl.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpljyt4mkl.php\
    \ on line 17\n"
  timestamp: 1660028453

{
  "name": "HumanEval_127_intersection",
  "language": "swift",
  "prompt": "\n/// You are given two intervals,\n/// where each interval is a pair of integers. For example, interval = (start, end) = (1, 2).\n/// The given intervals are closed which means that the interval (start, end)\n/// includes both start and end.\n/// For each given interval, it is assumed that its start is less or equal its end.\n/// Your task is to determine whether the length of intersection of these two \n/// intervals is a prime number.\n/// Example, the intersection of the intervals (1, 3), (2, 4) is (2, 3)\n/// which its length is 1, which not a prime number.\n/// If the length of the intersection is a prime number, return \"YES\",\n/// otherwise, return \"NO\".\n/// If the two intervals don't intersect, return \"NO\".\n/// [input/output] samples:\n/// >>> intersection(interval1: (1, 2), interval2: (2, 3))\n/// \"NO\"\n/// >>> intersection(interval1: (-1, 1), interval2: (0, 4))\n/// \"NO\"\n/// >>> intersection(interval1: (-3, -1), interval2: (-5, 5))\n/// \"YES\"\nfunc intersection(interval1: (Int, Int), interval2: (Int, Int)) -> String {\n",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(intersection(interval1: (1, 2), interval2: (2, 3)) == \"NO\")\nassert(intersection(interval1: (-1, 1), interval2: (0, 4)) == \"NO\")\nassert(intersection(interval1: (-3, -1), interval2: (-5, 5)) == \"YES\")\nassert(intersection(interval1: (-2, 2), interval2: (-4, 0)) == \"YES\")\nassert(intersection(interval1: (-11, 2), interval2: (-1, -1)) == \"NO\")\nassert(intersection(interval1: (1, 2), interval2: (3, 5)) == \"NO\")\nassert(intersection(interval1: (1, 2), interval2: (1, 2)) == \"NO\")\nassert(intersection(interval1: (-2, -2), interval2: (-3, -2)) == \"NO\")",
  "completions": [
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // write your code in Java SE 8\n    return \"NO\"",
    "    if interval1[0] > interval1[1] || interval2[0] > interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] > interval2[0] || interval1[1] < interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] == interval2[0] && interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    if interval1[0] > interval1[1] || interval2[0] > interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] > interval2[0] || interval1[1] < interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] == interval2[0] && interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] == interval2[0] {\n        return \"NO\"\n    }\n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] < interval2[0] {\n        return \"NO\"\n    }\n    if interval1[1] > interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] > interval2[0] {\n        return \"YES\"\n    }\n    return \"NO\"",
    "    ",
    "    if interval1[0] > interval1[1] || interval2[0] > interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] < interval2[0] || interval1[1] > interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] == interval2[0] && interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    return \"NO\"",
    "    // Write your code here\n    return \"NO\"",
    "    if interval1[0] > interval1[1] || interval2[0] > interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] > interval2[0] || interval1[1] < interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] == interval2[0] && interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    if interval1[0] > interval1[1] || interval2[0] > interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] > interval2[0] || interval1[1] < interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] == interval2[0] && interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    return \"NO\"",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    // write your code in Java SE 8\n    return \"NO\"",
    "    // write your code in Java SE 8\n    return \"NO\"",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    if interval1[0] > interval2[1] || interval2[0] > interval1[1] {\n        return \"NO\"\n    }\n    if interval1[0] > interval2[0] || interval1[1] < interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] == interval2[0] && interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    return \"NO\"",
    "    if interval1[0] > interval1[1] || interval2[0] > interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] >= interval2[0] && interval1[1] <= interval2[1] {\n        return \"YES\"\n    }\n    if interval2[0] >= interval1[0] && interval2[1] <= interval1[1] {\n        return \"YES\"\n    }\n    return \"NO\"",
    "    ",
    "    if interval1.start > interval1.end {\n        return \"NO\"\n    }\n    if interval2.start > interval2.end {\n        return \"NO\"\n    }\n    if interval1.start > interval2.end || interval2.start > interval1.end {\n        return \"NO\"\n    }\n    if interval1.start == interval2.start && interval1.end == interval2.end {\n        return \"YES\"\n    }\n    if interval1.start == interval2.start {\n        return \"YES\"\n    }\n    if interval1.end == interval2.end {\n        return \"YES\"\n    }\n    if interval1.start < interval2.start {\n        return \"NO\"\n    }\n    if interval1.end < interval2.end {\n        return \"NO\"\n    }\n    if interval1.start == interval2.start {\n        return \"YES\"\n    }\n    if interval1.end == interval2.end {\n        return \"YES\"\n    }\n    return \"NO\"",
    "    ",
    "    if interval1.start > interval1.end {\n        interval1.start, interval1.end = interval1.end, interval1.start\n    }\n    if interval2.start > interval2.end {\n        interval2.start, interval2.end = interval2.end, interval2.start\n    }\n    if interval1.start > interval2.end || interval2.start > interval1.end {\n        return \"NO\"\n    }\n    if interval1.start >= interval2.start && interval1.end <= interval2.end {\n        return \"YES\"\n    }\n    return \"NO\"",
    "    // write your code in Go 1.7\n    return \"NO\"",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    if interval1[0] > interval1[1] || interval2[0] > interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] > interval2[0] || interval1[1] < interval2[1] {\n        return \"NO\"\n    }\n    if interval1[0] == interval2[0] && interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[0] == interval2[0] {\n        return \"YES\"\n    }\n    if interval1[1] == interval2[0] {\n        return \"YES\"\n    }\n    if interval1[0] == interval2[1] {\n        return \"YES\"\n    }\n    if interval1[1] == interval2[1] {\n        return \"YES\"\n    }\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    // Write your code here\n    return \"NO\"",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    // Your code here\n    return \"NO\"",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // write your code in Java SE 8\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    // Write your code here\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // write your code in Java SE 8\n    return \"NO\"",
    "    ",
    "    ",
    "    ",
    "    "
  ],
  "stop_tokens": [
    "\n}"
  ]
}
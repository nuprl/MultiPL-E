{
  "name": "HumanEval_118_get_closest_vowel",
  "language": "swift",
  "prompt": "\n/// You are given a word. Your task is to find the closest vowel that stands between \n/// two consonants from the right side of the word (case sensitive).\n/// Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n/// find any vowel met the above condition. \n/// You may assume that the given string contains English letter only.\n/// Example:\n/// >>> get_closest_vowel(word: \"yogurt\")\n/// \"u\"\n/// >>> get_closest_vowel(word: \"FULL\")\n/// \"U\"\n/// >>> get_closest_vowel(word: \"quick\")\n/// \"\"\n/// >>> get_closest_vowel(word: \"ab\")\n/// \"\"\nfunc get_closest_vowel(word: String) -> String {\n",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_closest_vowel(word: \"yogurt\") == \"u\")\nassert(get_closest_vowel(word: \"full\") == \"u\")\nassert(get_closest_vowel(word: \"easy\") == \"\")\nassert(get_closest_vowel(word: \"eAsy\") == \"\")\nassert(get_closest_vowel(word: \"ali\") == \"\")\nassert(get_closest_vowel(word: \"bad\") == \"a\")\nassert(get_closest_vowel(word: \"most\") == \"o\")\nassert(get_closest_vowel(word: \"ab\") == \"\")\nassert(get_closest_vowel(word: \"ba\") == \"\")\nassert(get_closest_vowel(word: \"quick\") == \"\")\nassert(get_closest_vowel(word: \"anime\") == \"i\")\nassert(get_closest_vowel(word: \"Asia\") == \"\")\nassert(get_closest_vowel(word: \"Above\") == \"o\")",
  "completions": [
    "    // your code goes here\n    return \"\"",
    "    // your code goes here\n    return \"\"",
    "    ",
    "    ",
    "    // your code goes here\n    return \"\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // your code goes here\n    return \"\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // your code here\n    return \"\"",
    "    ",
    "    ",
    "    // Your code here\n    return \"\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // your code goes here\n    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var vowels_count = 0\n    var consonants_count = 0\n    var closest_vowel = \"\"\n    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] in vowels {\n            vowels_count += 1\n            if vowels_count > 1 {\n                closest_vowel = word[i]\n                break\n            }\n        } else if word[i] in consonants {\n            consonants_count += 1\n            if consonants_count > 1 {\n                closest_vowel = word[i]\n                break\n            }\n        }\n    }\n    return closest_vowel",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // your code goes here\n    var vowels = \"aeiouAEIOU\"\n    var consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var result = \"\"\n    for i := len(word) - 1; i >= 0; i-- {\n        if vowels.indexOf(word[i]) != -1 {\n            result = word[i]\n            break\n        }\n        if consonants.indexOf(word[i]) != -1 {\n            if result == \"\" {\n                result = word[i]\n            } else {\n                break\n            }\n        }\n    }\n    return result",
    "    // your code goes here\n    return \"\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    if len(word) < 2 {\n        return \"\"\n    }\n    \n    for i := len(word) - 1; i >= 0; i-- {\n        if word[i] == 'a' || word[i] == 'e' || word[i] == 'i' || word[i] == 'o' || word[i] == 'u' {\n            return word[i]\n        }\n    }\n    \n    return \"\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Your code here\n    var vowels = \"aeiouAEIOU\"\n    var consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var result = \"\"\n    for i := len(word) - 1; i >= 0; i-- {\n        if vowels.indexOf(word[i]) != -1 {\n            result = word[i]\n            break\n        }\n        if consonants.indexOf(word[i]) != -1 {\n            result = \"\"\n            break\n        }\n    }\n    return result",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // your code goes here\n    return \"\"",
    "    // Write your code here\n    return \"\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // your code here\n    var vowels = \"aeiouAEIOU\"\n    var consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var result = \"\"\n    for i := len(word) - 1; i >= 0; i-- {\n        if vowels.indexOf(word[i]) != -1 {\n            result = word[i]\n            break\n        }\n        if consonants.indexOf(word[i]) != -1 {\n            result = \"\"\n            break\n        }\n    }\n    return result",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // your code goes here\n    return \"\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Write your code here\n    return \"\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // Your code here\n    return \"\"",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    ",
    "    // your code here\n    if len(word) == 0 {\n        return \"\"\n    }\n    \n    vowels := \"aeiouAEIOU\"\n    \n    for i := len(word) - 1; i >= 0; i-- {\n        if vowels.Index(word[i]) != -1 {\n            return word[i]\n        }\n    }\n    \n    return \"\"",
    "    "
  ],
  "stop_tokens": [
    "\n}"
  ]
}
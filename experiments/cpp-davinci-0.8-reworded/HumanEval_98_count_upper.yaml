name: HumanEval_98_count_upper
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string s, count the\
  \ number of uppercase vowels in even indices.\n// For example:\n// >>> count_upper((\"\
  aBCdEf\"))\n// (1)\n// >>> count_upper((\"abcdefg\"))\n// (0)\n// >>> count_upper((\"\
  dBBE\"))\n// (0)\nlong count_upper(std::string s) {\n"
tests: "}\nint main() {\n    auto candidate = count_upper;\n    assert(candidate((\"\
  aBCdEf\")) == (1));\n    assert(candidate((\"abcdefg\")) == (0));\n    assert(candidate((\"\
  dBBE\")) == (0));\n    assert(candidate((\"B\")) == (0));\n    assert(candidate((\"\
  U\")) == (1));\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
  EEEE\")) == (2));\n}\n"
completions: ["\tlong count = 0;\n\tstd::string c;\n\tfor (long i = 0; i < s.length();\
    \ i++) {\n\t\tif (i % 2 == 0) {\n\t\t\tc = s[i];\n\t\t\tif (c == \"A\" || c ==\
    \ \"E\" || c == \"I\" || c == \"O\" || c == \"U\") {\n\t\t\t\tcount++;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn count;", "    long count = 0;\n    for(int i = 0; i <\
    \ s.length(); i += 2) {\n        if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I'\
    \ || s[i] == 'O' || s[i] == 'U') {\n            count++;\n        }\n    }\n \
    \   return count;", "    long count = 0;\n    for(int i = 0; i < s.length(); i+=2){\n\
    \        switch(s[i]){\n            case 'A':\n            case 'E':\n       \
    \     case 'I':\n            case 'O':\n            case 'U': count++; break;\n\
    \        }\n    }\n    return count;", "    int count = 0;\n    for(int i = 0;\
    \ i < s.length(); i++) {\n        if(isupper(s[i]) && i % 2 == 0) {\n        \
    \    if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;",
  "\tlong uppercase_vowels = 0;\n\tfor (long i = 0; i < s.length(); i++) {\n\t\tif\
    \ (i % 2 == 0) {\n\t\t\tif (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U')\n\t\t\t\tuppercase_vowels++;\n\t\t}\n\t}\n\treturn uppercase_vowels;",
  "\tint count=0;\n\tfor(int i=0;i<s.length();i+=2){\n\t\tif(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "    long c=0;\n    for(int i=0;i<s.length();i+=2){\n\
    \      if(i%2==0 && (s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U'))\n\
    \        c++;\n    }\n    return c;", "    int count = 0;\n    std::vector<char>\
    \ vowels = {'A', 'E', 'I', 'O', 'U'};\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (i % 2 == 0) {\n            for (int j = 0; j < vowels.size();\
    \ j++) {\n                if (s[i] == vowels[j]) {\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;", "   \
    \ long count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ >= 'A' && s[i] <= 'Z' && i % 2 == 0) {\n            count++;\n        }\n  \
    \  }\n    return count;", "\tint sum = 0;\n\tfor (int i = 0; i < s.length(); i++)\
    \ {\n\t\tif (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i]\
    \ == 'U') {\n\t\t\tif (i % 2 == 0) {\n\t\t\t\tsum += 1;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn sum;", "long result = 0;\n  for(long i = 0; i < s.size(); i++){\n   \
    \ if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n\
    \      if(i % 2 == 0){\n        result++;\n      }\n    }\n  }\n  return result;",
  "    long count=0;\n    for(long i=0;i<s.length();i++){\n        if(i%2==0 && s[i]>='A'\
    \ && s[i]<='Z')\n            count++;\n    }\n    return count;", '    return
    0;', "\tint res = 0;\n\tfor (int i = 0; i < s.length(); i+=2) {\n\t\tif (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n\t\t\t\
    res++;\n\t}\n\treturn res;", "\t// your code here\n\tlong count = 0;\n\tfor (int\
    \ i = 0; i < s.length(); i += 2) {\n\t\tif (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;", "    // YOUR CODE HERE\n    int count=0;\n    for(int i=0;i<s.length();i++){\n\
    \        if(i%2==0){\n            if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\
    \                count++;\n            }\n        }\n    }\n    return count;",
  "\tlong count=0;\n\tchar vowels[]={'A','E','I','O','U'};\n\tfor(long i=0;i<s.length();i+=2){\n\
    \t\tif(std::find(std::begin(vowels),std::end(vowels),s[i])!=std::end(vowels)){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "    std::transform(s.begin(), s.end(),\
    \ s.begin(), ::toupper);\n    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (i % 2 == 0) {\n            if (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n                count++;\n\
    \            }\n        }\n    }\n    return count;", "   long cnt = 0;\n   for(int\
    \ i = 0; i < s.size(); i += 2) {\n      if(s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n         cnt++;\n      }\n   }\n  \
    \ return cnt;", "\t// iterator to iterate through each character in string\n\t\
    std::string::iterator it;\n\tint counter = 0; // counter to keep track of number\
    \ of even uppercase vowels\n\tfor (it = s.begin(); it != s.end(); it++) {\n\t\t\
    // only increase counter if uppercase, even index, and vowel\n\t\tif (isupper(*it)\
    \ && (it - s.begin()) % 2 == 0 && (*it == 'A' || *it == 'E' || *it == 'I' || *it\
    \ == 'O' || *it == 'U')) {\n\t\t\tcounter++;\n\t\t}\n\t}\n\treturn counter;",
  "  int result = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (i % 2 == 0\
    \ && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\
    \ {\n      result++;\n    }\n  }\n  return result;", "\tlong count = 0;\n\tfor\
    \ (int i = 0; i < s.length(); i++) {\n\t\tif (i % 2 == 0) {\n\t\t\tif (s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n\t\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;", "    long upper = 0;\n    for (long i = 0; i < s.length();\
    \ i+=2) {\n        if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U') {\n            upper++;\n        }\n    }\n    return upper;",
  "  // TODO: Your code here!\n  long num_of_upper_vowels = 0;\n  for(long i = 0;\
    \ i < s.length(); i++){\n    if((i%2) == 0 && (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U')){\n      num_of_upper_vowels++;\n    }\n\
    \  }\n  return num_of_upper_vowels;", "    long i = 0;\n    std::string vowels\
    \ = \"AEIOU\";\n    long sum = 0;\n    while (i < s.length()) {\n        if (vowels.find(s[i])\
    \ != std::string::npos) {\n            sum += 1;\n        }\n        i += 2;\n\
    \    }\n    return sum;", "    int counter = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (i % 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I'\
    \ || s[i] == 'O' || s[i] == 'U') {\n            counter++;\n        }\n    }\n\
    \    return counter;", "\tint i=0;\n\tstd::string l=\"\";\n\twhile(i<s.length()){\n\
    \t\tif(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\t\t\tl=l+s[i];\n\
    \t\t}\n\t\ti=i+2;\n\t}\n\treturn l.length();", "  std::cout << \"s=\" << s <<\
    \ \"\\n\";\n  long count = 0;\n  long s_len = s.length();\n  std::cout << \"s_len=\"\
    \ << s_len << \"\\n\";\n  for (long i = 0; i < s_len; i++) {\n    if (i % 2 ==\
    \ 0) {\n      std::cout << \"i=\" << i << \"\\n\";\n      std::cout << \"s[i]=\"\
    \ << s[i] << \"\\n\";\n      if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U') {\n        count++;\n      }\n    }\n  }\n  return\
    \ count;", "    int n = s.length();\n    long count = 0;\n    for(int i = 0; i\
    \ < n; i+=2){\n        switch(s[i]){\n            case 'A':\n            case\
    \ 'E':\n            case 'I':\n            case 'O':\n            case 'U': count++;\n\
    \            break;\n        }\n    }\n    return count;", "  long count = 0;\n\
    \  for (int i = 0; i < s.length(); i += 2) {\n    if (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n      count++;\n    }\n  }\n\
    \  return count;", "    long i=0;\n    for(char &c:s){\n        if((i%2)==0&&isupper(c))i++;\n\
    \    }\n    return i;", "  int count = 0;\n  for (int i = 0; i < s.length(); i++)\
    \ {\n    if (i % 2 == 0 && (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U')) {\n      count++;\n    }\n  }\n  return count;", " \
    \   long sum = 0;\n    for (int i = 0; i < s.length(); i++){\n        if (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n     \
    \       if (i % 2 == 0){\n                sum++;\n            }\n        }\n \
    \   }\n    return sum;", "  // Your code here\n  long ans = 0;\n  for(int i =\
    \ 0; i < s.length(); i++){\n    if(i % 2 == 0){\n      if(s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n        ans++;\n    \
    \  }\n    }\n  }\n  return ans;", "    long vowel_count = 0;\n    for (long i\
    \ = 0; i < s.length(); i += 2) {\n        if (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n            vowel_count++;\n      \
    \  }\n    }\n    return vowel_count;", "  \n  long count = 0;\n  for(int i = 0;\
    \ i < s.length(); i += 2){\n    if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U'){\n      count++;\n    }\n  }\n  \n  return count;",
  "\tlong count=0;\n\tfor(long i=0;i<s.length();i+=2){\n\t\tif(isupper(s[i])){\n\t\
    \t\tif(s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U')\n\t\t\t\t\
    count++;\n\t\t}\n\t}\n\treturn count;", "\tlong count = 0;\n\tfor (long i = 0;\
    \ i < s.length(); i++) {\n\t\tif (i % 2 == 0 && s[i] == 'A' || s[i] == 'E' ||\
    \ s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\tcount++;\n\t\t}\n\t}\n\t\
    return count;", "\t// Write your code here\n\tlong count = 0;\n\tfor (long i =\
    \ 0; i < s.length(); i++) {\n\t\tif (i % 2 == 0 && (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')) {\n\t\t\tcount++;\n\t\t}\n\t\
    }\n\treturn count;", "    long count = 0;\n    for(long i = 0; i < s.length();\
    \ i++){\n        if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U'){\n            if(i % 2 == 0){\n                count++;\n     \
    \       }\n        }\n    }\n    return count;", "  // your code here\n  int count\
    \ = 0;\n  for(int i = 0; i < s.length(); i++){\n    if(i % 2 == 0){\n      if(s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n     \
    \   count++;\n      }\n    }\n  }\n  return count;", "  long count = 0;\n  //\
    \ WRITE CODE HERE\n  std::string UPPER = \"AEIOU\";\n  for (int i = 0; i < s.length();\
    \ i++) {\n    if (i % 2 == 0 && UPPER.find(toupper(s[i])) != std::string::npos)\
    \ {\n      count++;\n    }\n  }\n  return count;", "    long counter = 0;\n  \
    \  for (long i = 0; i < s.length(); i++) {\n        char letter = s[i];\n    \
    \    if (isupper(letter) && i % 2 == 0) {\n            counter += 1;\n       \
    \ }\n    }\n    return counter;", "\tint c = 0;\n\tfor (int i = 0; i < s.length();\
    \ i++) {\n\t\tif (i % 2 == 0 && (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U')) {\n\t\t\tc++;\n\t\t}\n\t}\n\treturn c;", "  /*\n\
    \  Write your code here.\n  */\n  long count=0;\n  for(int i=0;i<s.length();i+=2){\n\
    \    if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n      count++;\n\
    \    }\n  }\n  return count;", "  long count = 0;\n  int n = s.length();\n  for(int\
    \ i = 0; i < n; i++) {\n    if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U') {\n      if(i % 2 == 0)\n        count++;\n    }\n  }\n\
    \  return count;", "\tlong count{0};\n\tfor(auto i{0u}; i < s.size(); i++){\n\t\
    \tif( i % 2 == 0 && std::isupper(s[i])){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;", "    std::cout << \"s = \" << s << std::endl;\n    char vowels[] =\
    \ {'A', 'E', 'I', 'O', 'U'};\n    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        for (int j = 0; j < 5; j++) {\n            if (s[i] == vowels[j])\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;",
  "    /* Write your code here */\n\tlong count=0;\n\tfor(long i=0;i<s.length();i++)\n\
    \t{\n\t\tif(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\t\t{\n\t\t\
    \tif(i%2==0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\t\n    return count;",
  "\tint length = s.length();\n\tint ans = 0;\n\tfor(int i = 1; i < length; i+=2){\n\
    \t\t// std::cout << s[i] << \" \";\n\t\tif(isupper(s[i])){\n\t\t\tans++;\n\t\t\
    }\n\t}\n\treturn ans;", "  long cnt = 0;\n  for (auto c : s) {\n    if (c == 'A'\
    \ || c == 'E' || c == 'I' || c == 'O' || c == 'U')\n      cnt++;\n  }\n  return\
    \ cnt;", "    // your code here\n    long result = 0;\n    for(int i = 1; i <\
    \ s.length(); i+=2){\n        if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U'){\n            result++;\n        }\n    }\n    return\
    \ result;", "\t// write your code here\n\tint count = 0;\n\tif (s.length() > 0)\
    \ {\n\t\tfor (int i = 0; i < s.length(); i += 2) {\n\t\t\tif (s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\t\tcount++;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn count;", "    int count=0;\n    for(int i=0;i<s.length();i+=2){\n\
    \        if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n        \
    \    count++;\n        }\n    }\n    return count;", "  long count = 0;\n  for\
    \ (auto i : s) {\n    if (i >= 'A' && i <= 'Z') {\n      count++;\n    }\n  }\n\
    \  return count;", "\tlong count=0;\n\tfor(int i=0;i<s.length();i++){\n\t\tif(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\
    \t\t\tif(i%2==0){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", " \
    \   long vowels = 0;\n    for (long i = 0; i < s.length(); i++){\n        if ((s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') && (i %\
    \ 2 == 0)){\n            vowels++;\n        }\n    }\n    return vowels;", "\t\
    long count = 0;\n\tfor (int i = 0; i < s.length(); i+=2) {\n\t\tif (s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;", "    long count = 0;\n    for(int i = 0; i < s.length();\
    \ i+=2){\n        if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U'){\n            count++;\n        }\n    }\n    return count;",
  "    long count = 0;\n    for(int i = 0; i < s.length(); i++){\n        if(i % 2\
    \ == 0 && s[i] == 'A' || i % 2 == 0 && s[i] == 'E' || i % 2 == 0 && s[i] == 'I'\
    \ || i % 2 == 0 && s[i] == 'O' || i % 2 == 0 && s[i] == 'U'){\n            count++;\n\
    \        }\n    }\n    return count;", "  long count = 0;\n  for (int i = 0; i\
    \ < s.length(); i++){\n    if ((i % 2 == 0) && (s[i] == 'A' || s[i] == 'E' ||\
    \ s[i] == 'I' || s[i] == 'O' || s[i] == 'U')){\n      count++;\n    }\n  }\n \
    \ return count;", "    long len = s.length();\n    long count = 0;\n    for(long\
    \ i = 0; i < len; i++){\n        if(i % 2 == 0 && s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            count++;\n        }\n    }\n    return count;", "  long count=0;\n\
    \  for(long i=0;i<s.length();i++){\n    if(i%2==0){\n      if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\
    \        count++;\n      }\n    }\n  }\n  return count;", "    long count=0;\n\
    \    if(s.length()==0)\n        return 0;\n    if(s.length()==1)\n        return\
    \ count;\n    if(s.length()==2){\n        if(s[0]=='A' || s[0]=='E' || s[0]=='I'\
    \ || s[0]=='O' || s[0]=='U')\n            count++;\n        return count;\n  \
    \  }\n    for(int i=0;i<s.length();i+=2){\n        if(s[i]=='A' || s[i]=='E' ||\
    \ s[i]=='I' || s[i]=='O' || s[i]=='U')\n            count++;\n    }\n    return\
    \ count;", "  // your code here\n  long count = 0;\n  for(int i = 0; i < s.length();\
    \ i += 2){\n    if(isupper(s[i]))\n      count++;\n  }\n  return count;", "  \
    \  int counter = 0;\n    for (int i = 0; i < s.length(); i++){\n        if (i\
    \ % 2 == 0){\n            if(isupper(s[i])){\n                counter ++;\n  \
    \          }\n        }\n    }\n    return counter;", "    int num_upper = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (i % 2 == 0 && isupper(s[i]))\
    \ {\n            num_upper++;\n        }\n    }\n    return num_upper;", "\t//\
    \ Write your code here\n\t// To print results to the standard output you can use\
    \ std::cout\n\t// Example: std::cout << \"Hello world!\";\n  int count = 0;\n\
    \  for(int i = 0; i < s.length(); i++) {\n    if(i % 2 == 0 && s[i] == 'A' ||\
    \ s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n      count++;\n\
    \    }\n  }\n  return count;", "  std::string vowels = \"AEIOU\";\n  long sum\
    \ = 0;\n  // Your code here\n  return sum;", "    long count=0;\n    for(long\
    \ i=0;i<s.length();i++){\n        if(s[i]>=65 && s[i]<=90){\n            if(i%2==0){\n\
    \                count++;\n            }\n        }\n    }\n    return count;",
  "  long count = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n      if (i\
    \ % 2 == 0) {\n        count++;\n      }\n    }\n  }\n  return count;", "  long\
    \ ans = 0;\n  for(int i = 0; i < s.size(); i++) {\n    char c = s[i];\n    if(i\
    \ % 2 == 0) {\n      if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n        ans++;\n      }\n    }\n  }\n  return ans;", "    long count = 0;\n\
    \    for(int i = 0; i < s.length(); i++){\n        if(i % 2 == 0 && (s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')){\n           \
    \ count++;\n        }\n    }\n    return count;", "    int count = 0;\n    for(int\
    \ i = 0; i < s.length(); i++){\n        if(s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U'){\n            if(i % 2 == 0){\n      \
    \          count++;\n            }\n        }\n    }\n    return count;", "  \
    \  long c = 0;\n    for(size_t i = 0; i < s.size(); i++) {\n        if (s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n         \
    \   if (i % 2 == 0) c++;\n    }\n    return c;", "\tlong cnt = 0;\n\tfor (long\
    \ i = 0; i < s.size(); i++) {\n\t\tif (i % 2 == 0 && (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'))\n\t\t\tcnt++;\n\t}\n\treturn\
    \ cnt;", "\tlong vowels_even_indices = 0;\n\tfor (int i = 0; i < s.length(); i\
    \ += 2) {\n\t\tif (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U')\n\t\t\tvowels_even_indices++;\n\t}\n\treturn vowels_even_indices;",
  "    int count = 0;\n    for(int i = 1; i < s.length(); i += 2){\n        if(s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n     \
    \       count += 1;\n        }\n    }\n    return count;", "   long count=0;\n\
    \   for(int i=0;i<s.length();i+=2){\n     if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\
    \      count++;\n     }\n   }\n   return count;", "    // Write your code here\n\
    \    long sum = 0;\n    for(long i = 0; i < s.length(); i++) {\n        if(s[i]\
    \ >= 'A' && s[i] <= 'Z' && i % 2 == 0) {\n            sum++;\n        }\n    }\n\
    \    return sum;", "    long count = 0;\n    for(int i = 0; i < s.length(); i++){\n\
    \        if(isupper(s[i]) && (i % 2 == 0)){\n            count++;\n        }\n\
    \    }\n    return count;", "    int length = s.length();\n    long count = 0;\n\
    \    for(int i = 0; i < length; i++){\n        if(i % 2 == 0){\n            if(s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n     \
    \           count = count + 1;\n            }\n        }\n    }\n    return count;",
  "    long count = 0;\n    int len = s.length();\n    // if(len%2 == 0){\n    //\
    \     for(int i = 0; i < len; i++){\n    //         if(s[i] >= 'A' && s[i] <=\
    \ 'Z'){\n    //             if(i%2 == 0){\n    //                 count++;\n \
    \   //             }\n    //         }\n    //     }\n    // }\n    // else{\n\
    \    //     for(int i = 0; i < len; i++){\n    //         if(s[i] >= 'A' && s[i]\
    \ <= 'Z'){\n    //             if(i%2 == 1){\n    //                 count++;\n\
    \    //             }\n    //         }\n    //     }\n    // }\n    // return\
    \ count;\n    for(int i = 0; i < len; i++){\n        if(s[i] >= 'A' && s[i] <=\
    \ 'Z'){\n            if(i%2 == 0){\n                count++;\n            }\n\
    \        }\n    }\n    return count;", "\tlong num = 0;\n\tfor (long i = 0; i\
    \ < s.length(); i++) {\n\t\tif (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i]\
    \ == 'O' || s[i] == 'U') {\n\t\t\tif (i % 2 == 0) {\n\t\t\t\tnum++;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn num;", "  // your code here\n  long long count = 0;\n  for(long\
    \ long i = 0; i < s.length(); i++)\n  {\n    if(i % 2 == 0)\n    {\n      if(s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n      {\n\
    \        count++;\n      }\n    }\n  }\n  return count;", "\tint count = 0;\n\t\
    std::string ans = \"\";\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\t\
    if (i % 2 == 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", " \
    \ // your code here\n  int n = s.length();\n  long count = 0;\n  for(int i = 0;\
    \ i < n; i++)\n  {\n    if(i % 2 == 0)\n    {\n      if(s[i] == 'A' || s[i] ==\
    \ 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n      {\n        count +=\
    \ 1;\n      }\n    }\n  }\n  return count;", "    long count = 0;\n    for(int\
    \ i = 0; i < s.length(); i++){\n        if(i % 2 == 0){\n            if(s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n        \
    \        count++;\n            }\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(islower(s[i]))\
    \ {\n            continue;\n        }\n        if(i % 2 == 0) {\n            count++;\n\
    \        }\n    }\n    return count;", "  long sum = 0;\n  for (size_t i = 0;\
    \ i < s.size(); i++) {\n    if ((i%2==0) && (isupper(s[i]))) {\n      sum += 1;\n\
    \    }\n  }\n  return sum;", "    long count=0;\n    for(int i=0;i<s.length();i+=2){\n\
    \        if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n        \
    \    count++;\n        }\n    }\n    return count;", "\tlong length = s.length();\n\
    \tint count = 0;\n\tfor (int i = 0; i < length; i++) {\n\t\tif (s[i] == 'A' ||\
    \ s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\tif (i % 2\
    \ == 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "\tlong count\
    \ = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\tif (i % 2 == 0)\
    \ {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    int count =\
    \ 0;\n    for(int i = 0; i < s.length(); i+=2){\n        if(s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n            count +=\
    \ 1;\n        }\n    }\n    return count;", "    long x=0;\n    for(int i=0;i<s.length();i+=2){\n\
    \        if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n         \
    \   x++;\n    }\n    return x;", "  \n  long count = 0;\n  for(int i = 0; i <\
    \ s.length(); i++)\n  {\n    if(i % 2 == 0)\n    {\n      if(s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n      {\n        count++;\n\
    \      }\n    }\n  }\n  return count;", "\tint l = s.length();\n\tint i;\n\tint\
    \ count = 0;\n\tfor(i=0;i<l;i+=2)\n\t{\n\t\tif(s[i]>='A' && s[i]<='Z')\n\t\t{\n\
    \t\t\tcount++;\n\t\t}\n\t}\n    return count;", "    long total = 0;\n    for\
    \ (size_t i = 0; i < s.size(); i += 2) {\n        if (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            total += 1;\n \
    \       }\n    }\n    return total;", "  long count = 0;\n  for (int i = 0; i\
    \ < s.length(); i++) {\n    if ((s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U') && i % 2 == 0) {\n      count++;\n    }\n  }\n \
    \ return count;", "    // Write your code here\n    // To print results to the\
    \ standard output you can use PrintTreeUtils\n    // Please keep in mind that\
    \ you need to remove this line to be able to compile your solution\n    // To\
    \ print results to the standard output you can use std::cout\n    // Example:\
    \ std::cout << \"Hello world!\";\n    //int count=0;\n    //for(int i=0;i<s.length();i++){\n\
    \    //    if(i%2==0 && (s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U')){\n\
    \    //        count++;\n    //    }\n    //}\n    //return count;\n    return\
    \ std::count_if(s.begin(), s.end(), [](char c) {\n        return c == 'A' || c\
    \ == 'E' || c == 'I' || c == 'O' || c == 'U';\n    });", "    long result=0;\n\
    \    for(int i=0;i<s.length();i++){\n        if(i%2==0){\n            if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\
    \                result+=1;\n            }\n        }\n    }\n    return result;",
  "   long count = 0;\n   for(int i = 0; i < s.length(); i++) {\n       if(isupper(s[i])\
    \ && i % 2 == 0) {\n           count++;\n       }\n   }\n   return count;", " \
    \ long count = 0;\n  for (size_t i = 0; i < s.size(); i++) {\n    if (i % 2 ==\
    \ 0 && (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'))\n\
    \      count++;\n  }\n  return count;", "    int count = 0;\n    for(int i = 0;\
    \ i < s.length(); i++) {\n        char c = s[i];\n        if(i % 2 == 0 && c >=\
    \ 'A' && c <= 'Z')\n            count++;\n    }\n    return count;", "  int vowel_count\
    \ = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (i % 2 == 0) {\n    \
    \  if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\
    \ {\n        vowel_count++;\n      }\n    }\n  }\n  return vowel_count;", "\t\
    char vowels[] = {'A', 'E', 'I', 'O', 'U'};\n\tint count = 0;\n\tfor (int i = 0;\
    \ i < s.length(); i+=2) {\n\t\tfor (char vowel : vowels) {\n\t\t\tif (s[i] ==\
    \ vowel) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "  long count\
    \ = 0;\n  for (long i = 0; i < s.size(); i++) {\n    if (isupper(s[i]) && (i +\
    \ 1) % 2 == 0) {\n      count++;\n    }\n  }\n  return count;", "    long vowel\
    \ = 0;\n    for(size_t i = 0; i < s.size(); i++){\n        if(s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n            if(i % 2\
    \ == 0){\n                vowel++;\n            }\n        }\n    }\n    return\
    \ vowel;", "\tlong count = 0;\n\tfor (long i = 0; i < s.length(); i++) {\n\t\t\
    if (s[i] >= 'A' && s[i] <= 'Z' && i % 2 == 0) {\n\t\t\tcount++;\n\t\t}\n\t}\n\t\
    return count;", "    int vowels[5] = {'A', 'E', 'I', 'O', 'U'};\n    int counter\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        for (int j = 0; j\
    \ < 5; j++) {\n            if (s[i] == vowels[j]) {\n                if (i % 2\
    \ == 0) {\n                    counter++;\n                }\n            }\n\
    \        }\n    }\n    return counter;", "    long count = 0;\n    for(int i =\
    \ 0; i < s.length(); i += 2) {\n        if(isupper(s[i])) {\n            count++;\n\
    \        }\n    }\n    return count;", "    long long count=0;\n    for(long long\
    \ i=0;i<s.length();i++){\n        if(i%2==0){\n            if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \                count++;\n        }\n    }\n    return count;", "\tstd::regex\
    \ re(\"[AEIOU]\");\n\tstd::sregex_iterator next(s.begin(), s.end(), re);\n\tstd::sregex_iterator\
    \ end;\n\tint counter = 0;\n\twhile (next != end) {\n\t\tstd::smatch match = *next;\n\
    \t\tstd::cout << match.str() << std::endl;\n\t\t++next;\n\t\tcounter++;\n\t}\n\
    \treturn counter;", "    long count = 0;\n    for(int i = 0; i < s.length(); i++){\n\
    \        if(i % 2 == 0 && (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] ==\
    \ 'O' || s[i] == 'U')){\n            count++;\n        }\n    }\n    return count;",
  "    long uppercase_count = 0;\n    for (int i = 0; i < s.length(); i++) {\n   \
    \     if (isupper(s[i]) && (i % 2 == 0)) {\n            uppercase_count++;\n \
    \       }\n    }\n    return uppercase_count;", "    long cnt = 0;\n    for(long\
    \ i = 0; i < s.size(); i += 2) {\n        if(i % 2 == 0 && s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n            cnt++;\n \
    \   }\n    return cnt;", "    long count = 0;\n    for(long i = 0; i < s.length();\
    \ i++) {\n        if(isupper(s[i]) && (i % 2 == 0)) {\n            count++;\n\
    \        }\n    }\n    return count;", "\tlong count = 0;\n\tfor (long i = 0;\
    \ i < s.length(); i += 2) {\n\t\tif (s[i] == 'A' || s[i] == 'E' || s[i] == 'I'\
    \ || s[i] == 'O' || s[i] == 'U')\n\t\t\tcount++;\n\t}\n\treturn count;", "   \
    \ long count = 0;\n    for(int i = 0; i < s.length(); i += 2) {\n        if(s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n    \
    \        count++;\n        }\n    }\n    return count;", "    // Your code here\n\
    \    long count = 0;\n    for(int i = 0; i < s.length(); i++)\n    {\n       \
    \ if((s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\
    \ && (i % 2 == 0))\n        {\n            count++;\n        }\n    }\n    return\
    \ count;", "    //write your code here\n    // std::cout << s << std::endl;\n\
    \    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (isupper(s[i])\
    \ && (i % 2 == 0)) {\n            count++;\n        }\n    }\n    return count;",
  "    // Do not modify the following line.\n    long counter = 0;\n    for(int i\
    \ = 0; i < s.length(); ++i){\n        if(i % 2 == 0 && s[i] == toupper(s[i]))\n\
    \            counter++;\n    }\n    return counter;", "\tlong count = 0;\n\tfor\
    \ (int i = 0; i < s.length(); i++) {\n\t\tif (i % 2 == 0) {\n\t\t\tif (s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\t\t\
    count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    long count=0;\n    int len=s.length();\n\
    \    for(int i=0;i<len;i++)\n    {\n        if(i%2==0 && s[i]>=65 && s[i]<=90)\n\
    \        {\n            count++;\n        }\n    }\n    return count;", "  //\
    \ your code here\n  int l = s.length();\n  int count = 0;\n  for(int i = 0; i\
    \ < l; i+=2){\n    if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U'){\n      count++;\n    }\n  }\n  return count;", "\tlong count\
    \ = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\tif (i % 2 == 0)\
    \ {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "  long vowel_upper_count\
    \ = 0;\n  // Iterate through the even indices and increment the vowel count.\n\
    \  for (long i = 0; i < s.length(); i += 2) {\n    if (s[i] == 'A' || s[i] ==\
    \ 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n      vowel_upper_count++;\n\
    \  }\n  return vowel_upper_count;", "  long count = 0;\n  std::string vowel =\
    \ \"AEIOU\";\n  for (size_t i = 0; i < s.size(); i++) {\n    if (std::isupper(s[i])\
    \ && i % 2 == 0 && vowel.find(s[i]) != std::string::npos) {\n      count++;\n\
    \    }\n  }\n  return count;", "    long sum=0;\n    for(int i=0;i<s.length();i++)\n\
    \    {\n        if(i%2==0)\n        {\n            if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \            {\n                sum++;\n            }\n        }\n    }\n    return\
    \ sum;", "    long n = 0;\n    for (int i = 0; i < s.length(); i+=2) {\n     \
    \   switch (s[i]) {\n            case 'A':\n            case 'E':\n          \
    \  case 'I':\n            case 'O':\n            case 'U':\n                n\
    \ += 1;\n                break;\n        }\n    }\n    return n;", "  long vowels\
    \ = 0;\n  for (long i = 0; i < s.length(); i+=2) {\n    if (s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n      vowels++;\n  \
    \  }\n  }\n  return vowels;", '    // Write your code here.', "    long result\
    \ = 0;\n    for (long i = 0; i < s.size(); i += 2) {\n        if (s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n            result++;\n\
    \    }\n    return result;", "  // your code here\n  long n=s.length();\n  long\
    \ count=0;\n  for(long i=0;i<n;i++)\n  {\n    if(i%2==0)\n    {\n      if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \      {\n        count++;\n      }\n    }\n  }\n  return count;", "  long cnt\
    \ = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == 'A' || s[i] ==\
    \ 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n      if (i % 2 == 0) {\n\
    \        cnt++;\n      }\n    }\n  }\n  return cnt;", "    long vowels_at_even_indexes\
    \ = 0;\n    for (int i = 0; i < s.length(); i+=2) {\n        switch (s[i]) {\n\
    \            case 'A':\n            case 'E':\n            case 'I':\n       \
    \     case 'O':\n            case 'U':\n                vowels_at_even_indexes++;\n\
    \        }\n    }\n    return vowels_at_even_indexes;", "    long count=0;\n \
    \   for(int i=0;i<s.length();i++){\n        if(i%2==0){\n            if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\
    \                count++;\n            }\n        }\n    }\n    return count;",
  "  long count = 0;\n  long length = s.length();\n  for (long i = 0; i < length;\
    \ i++) {\n    if ((s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U') && i % 2 == 0) {\n      count++;\n    }\n  }\n  return count;",
  "    int i,len=s.length(),k=0;\n    char ch[10];\n    for(i=0;i<len;i++){\n    \
    \    if(i%2==0){\n            ch[k]=s[i];\n            k++;\n        }\n    }\n\
    \    ch[k]='\\0';\n    int c=0;\n    len=strlen(ch);\n    for(i=0;i<len;i++){\n\
    \        if(ch[i]>=65 && ch[i]<=90){\n            c++;\n        }\n    }\n   \
    \ return c;", "    long count = 0;\n    for(int i = 0; i < s.length(); i++) {\n\
    \        if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U')\n            if(i % 2 == 0)\n                count++;\n    }\n    return\
    \ count;", "    // Your code here\n    long count = 0;\n    for(long i = 0; i\
    \ < s.length(); i++)\n    {\n        if((s[i] == 'A' || s[i] == 'E' || s[i] ==\
    \ 'I' || s[i] == 'O' || s[i] == 'U') && i % 2 == 0)\n        {\n            count++;\n\
    \        }\n    }\n    return count;", "    long count=0;\n    for(long i=0;i<s.length();i++){\n\
    \        if(s[i]>='A'&&s[i]<='Z'&&(i%2==0)){\n            count++;\n        }\n\
    \    }\n    return count;", "// Your code here\nlong count=0;\nfor(unsigned int\
    \ i=0;i<s.length();i++)\n{\n    if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \    {\n        if(i%2==0)\n        {\n            count++;\n        }\n    }",
  "  // Count the number of uppercase vowels in even indices.\n  // Store each character\
    \ of the string into a vector.\n  std::vector<char> str(s.c_str(), s.c_str() +\
    \ s.size() + 1);\n  // Count the number of uppercase vowels in even indices.\n\
    \  // Go through each character of the string.\n  long count = 0;\n  for (long\
    \ i = 0; i < str.size(); i++) {\n    // Check if the character is an uppercase\
    \ vowel in an even index.\n    if (str[i] == 'A' || str[i] == 'E' || str[i] ==\
    \ 'I' || str[i] == 'O' || str[i] == 'U') {\n      // Check if the index is even.\n\
    \      if (i % 2 == 0) {\n        // Increase the count of uppercase vowels.\n\
    \        count++;\n      }\n    }\n  }\n  // Return the count of uppercase vowels\
    \ in even indices.\n  return count;", "\tlong i, count = 0;\n\tfor (i = 0; i <\
    \ s.length(); i += 2) {\n\t\tif (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U')\n\t\t\tcount++;\n\t}\n\treturn count;", "    long\
    \ count = 0;\n    for(int i = 0; i < s.length(); i++){\n        if(isupper(s[i])\
    \ && i % 2 == 0){\n            count++;\n        }\n    }\n    return count;",
  "    long counter=0;\n    for(int i=0;i<s.length();i+=2){\n        if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\
    \            counter++;\n        }\n    }\n    return counter;", "\tint count\
    \ = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (i % 2 == 0) {\n\t\t\t\
    if (isupper(s[i])) {\n\t\t\t\tif (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U') {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn count;", "\tlong count = 0;\n\tfor (int i = 0; i < s.length();\
    \ i += 2) {\n\t\tif (isupper(s[i])) {\n\t\t\tswitch (s[i]) {\n\t\t\t\tcase 'A':\n\
    \t\t\t\tcase 'E':\n\t\t\t\tcase 'I':\n\t\t\t\tcase 'O':\n\t\t\t\tcase 'U':\n\t\
    \t\t\t\tcount++;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", " \
    \   int i,j=0;\n    for(i=0;i<s.length();i++){\n        if(i%2==0 && (s[i]=='A'\
    \ || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U'))\n        j++;\n    }\n\
    \    return j;", "    long numberOfUpperVowels = 0;\n    int len = s.length();\n\
    \    if(len == 0){\n        return 0;\n    }\n    if(len == 1){\n        if(s[0]\
    \ == 'A' || s[0] == 'E' || s[0] == 'I' || s[0] == 'O' || s[0] == 'U'){\n     \
    \       return 1;\n        }\n        return 0;\n    }\n    for(int i = 0; i <\
    \ len; i++){\n        if(i % 2 == 0){\n            if(s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n                numberOfUpperVowels\
    \ += 1;\n            }\n        }\n    }\n    return numberOfUpperVowels;", "\t",
  "  // your code here\n  long count = 0;\n  for(int i = 1; i < s.length(); i += 2){\n\
    \    if(isupper(s[i])){\n      if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U'){\n        count += 1;\n      }\n    }\n  }\n  return\
    \ count;", "\tlong num_upper = 0;\n\tfor (int i = 0; i < s.length(); i += 2) {\n\
    \t\tif (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\
    \ {\n\t\t\tnum_upper++;\n\t\t}\n\t}\n\treturn num_upper;", "\tint count=0;\n\t\
    for(int i=0;i<s.length();i++)\n\t{\n\t\tif(i%2==0)\n\t\t{\n\t\t\tif(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "  // your code\
    \ here\n  long c=0;\n  for(long i=0;i<s.length();i++){\n    if(i%2==0){\n    \
    \  if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n        c++;\n\
    \      }\n    }\n  }\n  return c;", "  // your code here\n  long count = 0;\n\
    \  for(long i = 0; i < s.length(); i++){\n      if((i % 2 == 0) && (s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'))\n          count++;\n\
    \  }\n  return count;", "\tint count = 0;\n\tfor (int i = 0; i < s.length(); i++)\
    \ {\n\t\tif (((i + 1) % 2 == 0) && (s[i] == 'A' || s[i] == 'E' || s[i] == 'I'\
    \ || s[i] == 'O' || s[i] == 'U'))\n\t\t\tcount++;\n\t}\n\treturn count;", "  \
    \  long count = 0;\n    for(int i = 0; i < s.length(); i++){\n        if(s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n     \
    \       if(i % 2 == 0){\n                count++;\n            }\n        }\n\
    \    }\n    return count;", "\t// your code here\n\tlong counter = 0;\n\tfor (int\
    \ i = 0; i < s.length(); i += 2) {\n\t\tif (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\tcounter++;\n\t\t}\n\t}\n\treturn\
    \ counter;", "\t// Your code here\n\tint count = 0;\n\tfor (int i = 0; i < s.length();\
    \ i++) {\n\t\tif (i % 2 == 0) {\n\t\t\tif (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn count;", "    int count=0;\n    for(int i=0;i<s.length();i++){\n \
    \       if(i%2==0 && s[i]>='A' && s[i]<='Z'){\n            count++;\n        }\n\
    \    }\n    return count;", "\tint count=0;\n\tfor(int i=0;i<s.length();i++){\n\
    \t\tif(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n\t\t\tif(i%2==0){\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "\tint ans = 0;\n\tfor\
    \ (int i = 0; i < s.length(); i++) {\n\t\tif (i % 2 == 0 && s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\tans++;\n\t\t}\n\
    \t}\n\treturn ans;", "  long cnt = 0;\n  std::set<char> vowels = {'A', 'E', 'I',\
    \ 'O', 'U'};\n  for (int i = 0; i < s.size(); i++) {\n    if (i % 2 == 0 && vowels.find(s[i])\
    \ != vowels.end()) {\n      cnt++;\n    }\n  }\n  return cnt;", "  // your code\
    \ here\n  long count=0;\n  for(int i=0;i<s.length();i++)\n  {\n    if(isupper(s[i])\
    \ && i%2==0)\n    {\n      count++;\n    }\n  }\n  return count;", "\t// WRITE\
    \ ME!\n\tint i,count=0;\n\tfor(i=0;i<s.length();i++)\n\t{\n\t\tif(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \t\t{\n\t\t\tif(i%2==0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ count;", "    int vowel = 0;\n    for(int i = 1; i < s.length(); i+=2){\n  \
    \      if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U'){\n            vowel++;\n        }\n    }\n    return vowel;", "    long\
    \ count = 0;\n    int m = s.length();\n    std::vector<int> v;\n    for(int i\
    \ = 0; i < m; i++) {\n        if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' ||\
    \ s[i] == 'O' || s[i] == 'U') {\n            v.push_back(i);\n        }\n    }\n\
    \    for(int i = 0; i < v.size(); i++) {\n        if(v[i] % 2 == 0) {\n      \
    \      count++;\n        }\n    }\n    return count;", "  int count = 0;\n  for\
    \ (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n      if (i % 2 == 0) {\n        count++;\n\
    \      }\n    }\n  }\n  return count;", "\tlong vowel = 0;\n\tfor (int i = 0;\
    \ i < s.length(); i++) {\n\t\tif (i % 2 == 0) {\n\t\t\tif (s[i] == 'A' || s[i]\
    \ == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\t\tvowel += 1;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn vowel;", "\tlong count = 0;\n\tfor (long i = 0;\
    \ i < s.length(); i++) {\n\t\tif (isupper(s[i]) && i % 2 == 0) {\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;", "    long upper = 0;\n    for (long i = 0; i < s.length();\
    \ i++) {\n        if (i % 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I'\
    \ || s[i] == 'O' || s[i] == 'U') {\n            upper++;\n        }\n    }\n \
    \   return upper;", "\t// Your code here\n\tlong ans = 0;\n\tfor (int i = 0; i\
    \ < s.length(); i++) {\n\t\tif (i % 2 == 0 && s[i] >= 'A' && s[i] <= 'Z') {\n\t\
    \t\tans++;\n\t\t}\n\t}\n\treturn ans;", "  long n=0;\n  int i;\n  for(i=0;i<s.length();i++)\n\
    \  {\n    if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n    {\n \
    \     if(i%2==0)\n      {\n        n++;\n      }\n    }\n  }\n  return n;", " \
    \ long count=0;\n  for(int i=0;i<s.length();i++)\n  {\n    if(i%2==0)\n    {\n\
    \      if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n      {\n  \
    \      count++;\n      }\n    }\n  }\n  return count;", "    long count = 0;\n\
    \    for(int i = 0; i < s.length(); i+=2){\n        if(s[i] == 'A' || s[i] ==\
    \ 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n            count++;\n \
    \       }\n    }\n    return count;", "    long ans = 0;\n    for(int i = 0; i\
    \ < s.length(); i+=2){\n        if(isupper(s[i])){\n            if(s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U'){\n            \
    \    ans += 1;\n            }\n        }\n    }\n    return ans;", "    std::string::iterator\
    \ it;\n    std::string vowels = \"AEIOU\";\n    int vowelsCount = 0;\n    for\
    \ (it = s.begin(); it != s.end(); it++) {\n        if (vowels.find(*it) != std::string::npos)\
    \ {\n            vowelsCount++;\n        }\n    }\n    return vowelsCount;", " \
    \   long count=0;\n    for(int i=0;i<s.length();i++)\n    {\n        if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \        {\n            if(i%2==0)\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;", "  int num_upper = 0;\n\
    \  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n      if (i % 2 == 0) {\n \
    \       num_upper++;\n      }\n    }\n  }\n  return num_upper;", "  int count\
    \ = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if ((i % 2) == 0) {\n  \
    \    if (std::isupper(s[i])) {\n        count += 1;\n      }\n    }\n  }\n  return\
    \ count;", "    long count = 0;\n    for(int i = 0; i < s.length(); i+=2){\n \
    \       if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U'){\n            count += 1;\n        }\n    }\n    return count;", "    long\
    \ vowels = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] ==\
    \ 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n       \
    \     if (i % 2 == 0) {\n                vowels++;\n            }\n        }\n\
    \    }\n    return vowels;", "    long ans = 0;\n    for(int i = 0; i < s.length();\
    \ i += 2) {\n        if(s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U') {\n            ans++;\n        }\n    }\n    return ans;", "\t\
    // Write your code here\n\t// To print results to the standard output you can\
    \ use PrintfDebug or cerr\n\t// PrintfDebug(\"Test: %d\", 2);\n\t// cerr << \"\
    Test: \" << 2 << endl;\n\tlong count=0;\n\tfor(long i=0;i<s.length();i++){\n\t\
    \tif(s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U'){\n\t\t\tif(i%2==0){\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "  long count = 0;\n\
    \  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'A' || s[i] == 'E'\
    \ || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n      if (i % 2 == 0)\n   \
    \     count++;\n    }\n  }\n  return count;", "    long ans = 0;\n    for(int\
    \ i = 0; i < s.length(); i++) {\n        if(s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U') {\n            if(i % 2 == 0) {\n    \
    \            ans++;\n            }\n        }\n    }\n    return ans;", "    long\
    \ count=0;\n    for(int i=0;i<s.length();i+=2){\n        if(s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')\n\
    \            count++;\n    }\n    return count;", "\tlong c=0;\n\tfor(int i=0;i<s.length();i++)\n\
    \t{\n\t\tif(s[i]>=65 && s[i]<=90 && i%2==0)\n\t\t\tc++;\n\t}\n\treturn c;", "\t\
    long len = s.length();\n\tlong result = 0;\n\tstd::vector<char> v;\n\tfor (long\
    \ i = 0; i < len; i++) {\n\t\tif ((s[i] == 'A') || (s[i] == 'E') || (s[i] == 'I')\
    \ || (s[i] == 'O') || (s[i] == 'U')) {\n\t\t\tv.push_back(s[i]);\n\t\t}\n\t}\n\
    \tlen = v.size();\n\tfor (long i = 0; i < len; i = i + 2) {\n\t\tresult = result\
    \ + 1;\n\t}\n\treturn result;", "  std::vector<char> b = {'A', 'E', 'I', 'O',\
    \ 'U'};\n  long count = 0;\n  long j = 0;\n  while (j < s.length()) {\n    for\
    \ (long i = 0; i < b.size(); i++) {\n      if (s[j] == b[i]) {\n        count++;\n\
    \      }\n    }\n    j = j + 2;\n  }\n  return count;", "\tlong counter = 0;\n\
    \tfor (int i = 0; i < s.length(); i++) {\n\t\tif (i % 2 == 0 && s[i] == 'A' ||\
    \ s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\tcounter++;\n\
    \t\t}\n\t}\n\treturn counter;", "\tlong sum = 0;\n\tfor (int i = 0; i < s.length();\
    \ i += 2) {\n\t\tif (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O'\
    \ || s[i] == 'U')\n\t\t\tsum++;\n\t}\n\treturn sum;", "    long c = 0;\n    for(int\
    \ i = 0; i < s.length(); i++){\n        if(i % 2 == 0 && s[i] >= 'A' && s[i] <=\
    \ 'Z'){\n            c++;\n        }\n    }\n    return c;", "\tint count = 0;\n\
    \tfor (int i = 0; i < s.length(); i++) {\n\t\tif (i % 2 == 0) {\n\t\t\tif (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n\t\t\t\
    \tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "\t// your code here\n\t//\
    \ Check if string is empty\n\tif (s.empty()) {\n\t\treturn 0;\n\t}\n\t// Long\
    \ variable to store the count\n\tlong count = 0;\n\t// Read all the characters\
    \ in the string\n\tfor (long i = 0; i < s.length(); i++) {\n\t\t// Check if the\
    \ characters at even indices are uppercase vowels.\n\t\tif (i % 2 == 0 && (s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')) {\n\t\t\
    \tcount++;\n\t\t}\n\t}\n\treturn count;", "    // your code goes here\n    int\
    \ vowels[] = {65, 69, 73, 79, 85};\n    long long count = 0;\n    for(unsigned\
    \ int i = 0; i < s.length(); i+=2){\n        for(int j = 0; j < 5; j++){\n   \
    \         if(s[i] == vowels[j]){\n                count++;\n            }\n  \
    \      }\n    }\n    return count;", "    long count = 0;\n    for(int i = 0;\
    \ i < s.length(); i += 2) {\n        if(s[i] == 'A' || s[i] == 'E' || s[i] ==\
    \ 'I' || s[i] == 'O' || s[i] == 'U') count++;\n    }\n    return count;", "  \
    \  long count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        if(i %\
    \ 2 == 0 && s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U') count++;\n    }\n    return count;"]
stop_tokens:
- "\n}"

name: HumanEval_151_double_the_difference
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a vector of numbers,\
  \ return the sum of squares of the numbers\n// in the vector that are odd. Ignore\
  \ numbers that are negative or not integers.\n// >>> double_the_difference((std::vector<float>({(long)1,\
  \ (long)3, (long)2, (long)0})))\n// (10)\n// >>> double_the_difference((std::vector<float>({(long)-1,\
  \ (long)-2, (long)0})))\n// (0)\n// >>> double_the_difference((std::vector<float>({(long)9,\
  \ (long)-2})))\n// (81)\n// >>> double_the_difference((std::vector<float>({(long)0})))\n\
  // (0)\n// If the input vector is empty, return 0.\nlong double_the_difference(std::vector<float>\
  \ lst) {\n"
tests: "}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
  \ == (0));\n    assert(candidate((std::vector<float>({(float)5.0, (float)4.0})))\
  \ == (25));\n    assert(candidate((std::vector<float>({(float)0.1, (float)0.2, (float)0.3})))\
  \ == (0));\n    assert(candidate((std::vector<float>({(float)-10.0, (float)-20.0,\
  \ (float)-30.0}))) == (0));\n    assert(candidate((std::vector<float>({(float)-1.0,\
  \ (float)-2.0, (float)8.0}))) == (0));\n    assert(candidate((std::vector<float>({(float)0.2,\
  \ (float)3.0, (float)5.0}))) == (34));\n    assert(candidate((std::vector<float>({(float)-9.0,\
  \ (float)-7.0, (float)-5.0, (float)-3.0, (float)-1.0, (float)1.0, (float)3.0, (float)5.0,\
  \ (float)7.0, (float)9.0}))) == (165));\n}\n"
completions: ["    // replace this with your code\n    return 0;", "    long sum =\
    \ 0;\n    for(auto i : lst){\n        if(i-floor(i) == 0 && i >= 0 && i%2==1){\n\
    \            sum += i*i;\n        }\n    }\n    return sum;", "    long ret =\
    \ 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (lst[i] > 0 && lst[i]\
    \ == (int)lst[i] && lst[i] % 2 == 1)\n            ret += lst[i] * lst[i];\n  \
    \  }\n    return ret;", "    long sum=0;\n    if(lst.size()==0)\n        return\
    \ 0;\n    for(float i:lst){\n        if(i>0 && floor(i)==i && i!=0 && i%2!=0)\n\
    \            sum+= i*i;\n    }\n    return sum;", "    // Write your code here.\n\
    \    return 0;", "    long double_the_difference = 0;\n    // INSERT YOUR CODE\
    \ HERE\n    std::vector<float>::iterator it;\n    for(it = lst.begin(); it !=\
    \ lst.end(); it++)\n    {\n        float val = *it;\n        if(val < 0 || val\
    \ - (int)val != 0) continue;\n        if(val % 2 != 0) double_the_difference +=\
    \ val * val;\n    }\n    return double_the_difference;", "    long sum = 0;\n\
    \    for(int i = 0; i < lst.size(); i++){\n        if(floor(lst[i]) != lst[i]\
    \ || lst[i] < 0)\n            continue;\n        if(lst[i] % 2 == 1)\n       \
    \     sum += lst[i] * lst[i];\n    }\n    return sum;", "    long sum = 0;\n \
    \   if(lst.size()==0)\n    {\n        return 0;\n    }\n    for(int i=0;i<lst.size();i++)\n\
    \    {\n        if(lst[i]>0 && lst[i]==(int)lst[i])\n        {\n            if(lst[i]%2!=0)\n\
    \            {\n                sum = sum + (lst[i]*lst[i]);\n            }\n\
    \        }\n    }\n    return sum;", "  long sum = 0;\n  for (long i = 0; i <\
    \ lst.size(); i++) {\n    if (lst[i] > 0 && (std::floor(lst[i]) == lst[i])) {\n\
    \      if (lst[i] % 2 == 1) {\n        sum += lst[i] * lst[i];\n      }\n    }\n\
    \  }\n  return sum;", "\tlong int sum = 0;\n\tfor(long int i = 0; i < lst.size();\
    \ i++)\n\t{\n\t\tif(lst[i] > 0 && (int)lst[i] == lst[i])\n\t\t{\n\t\t\tsum +=\
    \ pow(lst[i], 2);\n\t\t}\n\t}\n\treturn sum;", "    long sum = 0;\n    if(lst.size()==0)\
    \ {\n        return 0;\n    }\n    for(auto i: lst) {\n        if(i>0 && (long)i%2==1)\
    \ {\n            sum += (long)i*(long)i;\n        }\n    }\n    return sum;",
  "  long double square_odd = 0;\n  for (float v : lst) {\n    if (v > 0 && ((int)v\
    \ % 2 == 1)) {\n      square_odd += (v * v);\n    }\n  }\n  return square_odd;",
  "  long sumsq = 0;\n  for (float i : lst) {\n    if (i > 0 && i - (int)i == 0 &&\
    \ i % 2 == 1)\n      sumsq += i * i;\n  }\n  return sumsq;", "  long sum = 0;\n\
    \  for (float num : lst) {\n    if (num > 0 && floor(num) == num && num % 2 !=\
    \ 0) {\n      sum += pow(num, 2);\n    }\n  }\n  return sum;", "    //error handeling\n\
    \    if(lst.size() == 0){\n        return 0;\n    }\n    else{\n        long sum\
    \ = 0;\n        for(int i = 0; i < lst.size(); i++){\n            float element\
    \ = lst[i];\n            if(((int)element) % 2 != 0 && ((int)element) > 0){\n\
    \                sum += ((int)element) * ((int)element);\n            }\n    \
    \    }\n        return sum;\n    }", '  return 0;', "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++){\n        if(ceil(lst[i]) == lst[i] && lst[i] >\
    \ 0){\n            if(lst[i] % 2 == 1){\n                sum += lst[i] * lst[i];\n\
    \            }\n        }\n    }\n    return sum;", "\tif(lst.size()==0)\n\t\t\
    return 0;\n\tlong sum=0;\n\tfor(int i=0;i<lst.size();i++)\n\t{\n\t\tif(lst[i]>0\
    \ && fmod(lst[i],1)==0 && fmod(lst[i],2)!=0)\n\t\t\tsum+=(long)pow(lst[i],2);\n\
    \t}\n\treturn sum;", "    std::vector<int> sq;\n    if(lst.size()==0)\n    {\n\
    \        return 0;\n    }\n    for(int i=0;i<lst.size();i++)\n    {\n        if(lst[i]>0)\n\
    \        {\n            int val = lst[i];\n            if(val%2==1)\n        \
    \    {\n                int sq_val = val*val;\n                sq.push_back(sq_val);\n\
    \            }\n        }\n    }\n    int sum=0;\n    for(int i=0;i<sq.size();i++)\n\
    \    {\n        sum+=sq[i];\n    }\n    return sum;", "    // Your code here\n\
    \    long sum = 0;\n    for(auto x: lst){\n        if(x>0 && ceil(x)==x && x!=0\
    \ && x%2!=0){\n            sum += x*x;\n        }\n    }\n    return sum;", " \
    \   long sum = 0;\n    for(auto i = lst.begin(); i != lst.end(); i++) {\n    \
    \    if((*i) > 0) {\n            long a = (long)(*i);\n            if(a != (*i))\
    \ continue;\n            if(a % 2 == 1) {\n                sum += a * a;\n   \
    \         }\n        }\n    }\n    return sum;", "    long sum=0;\n    for(auto\
    \ i:lst){\n        if(i>0&&i==(int)i&&i%2!=0){\n            sum+=(i*i);\n    \
    \    }\n    }\n    return sum;", "    long result = 0;\n    // cerr << lst.size()\
    \ << endl;\n    for (int i = 0; i < lst.size(); i++) {\n        // cerr << lst[i]\
    \ << endl;\n        if (lst[i] >= 0) {\n            if (ceil(lst[i]) != floor(lst[i]))\
    \ {\n                continue;\n            }\n            if (lst[i] % 2 != 0)\
    \ {\n                result += lst[i] * lst[i];\n            }\n        }\n  \
    \  }\n    return result;", "    long sum = 0;\n    for(float num : lst){\n   \
    \     if(num > 0 && (long)num == num && (long)num % 2 == 1){\n            sum\
    \ += (long)num * (long)num;\n        }\n    }\n    return sum;", "    long ans\
    \ = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(lst[i] == (int)lst[i]\
    \ && lst[i] > 0){\n            ans += (lst[i] * lst[i]);\n        }\n    }\n \
    \   return ans;", "\t// Your code here\n    int sum=0;\n    for(int i=0;i<lst.size();i++)\n\
    \    {\n        if(lst[i]!=0)\n        {\n            if(fmod(lst[i],2)==1)\n\
    \            {\n                sum+=(lst[i]*lst[i]);\n            }\n       \
    \ }\n    }\n    return sum;", "    long res = 0;\n    for(auto i : lst){\n   \
    \     if(i>0 && int(i) == i && int(i)%2 != 0){\n            res += i*i;\n    \
    \    }\n    }\n    return res;", "  long sum = 0;\n  for (long i = 0; i < lst.size();\
    \ i++) {\n    if (fmod(lst[i], 2) != 0 && lst[i] > 0) {\n      sum += pow(lst[i],\
    \ 2);\n    }\n  }\n  return sum;", "    int sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if((int)lst[i] > 0 && ((int)lst[i] % 2 != 0)){\n            sum\
    \ += (int)lst[i] * (int)lst[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(auto item : lst){\n        if(item>0 && (int)item%2!=0){\n\
    \            sum+=(long)pow(item,2);\n        }\n    }\n    return sum;", "  long\
    \ sum = 0;\n  for (float i: lst) {\n    if (i > 0 && i == (int)i && i % 2 != 0)\
    \ {\n      sum += i * i;\n    }\n  }\n  return sum;", "    long sum = 0;\n   \
    \ for(int i = 0; i < lst.size(); i++){\n        if(lst[i] > 0){\n            int\
    \ x = lst[i];\n            if(x % 2 == 1){\n                sum += x * x;\n  \
    \          }\n        }\n    }\n    return sum;", "    long sum = 0;\n    if(lst.size()\
    \ == 0)\n        return 0;\n    for(int i = 0; i < lst.size(); i++){\n       \
    \ long res = 0;\n        if(!(lst[i] < 0) && floor(lst[i]) == lst[i]){\n     \
    \       if(lst[i] % 2 != 0){\n                res = lst[i] * lst[i];\n       \
    \         sum += res;\n            }\n        }\n    }\n    return sum;", "\t\
    // Your code here\n\tlong sum = 0;\n\tfor (auto element : lst) {\n\t\tif (element\
    \ >= 0 && element == (int)element && element % 2 != 0) {\n\t\t\tsum += element\
    \ * element;\n\t\t}\n\t}\n\treturn sum;", "    // your code here\n    long sum\
    \ = 0;\n    for(auto num : lst){\n        if(floor(num) == num && num >= 0){\n\
    \            if(num % 2 == 1){\n                sum += pow(num, 2);\n        \
    \    }\n        }\n    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0;\
    \ i < lst.size(); i++) {\n\t\tif (lst[i] > 0 && (int)lst[i] % 2 != 0)\n\t\t\t\
    sum += (int)lst[i] * (int)lst[i];\n\t}\n\treturn sum;", "    long sum = 0;\n \
    \   for(int i = 0; i < lst.size(); i++){\n        if((lst[i] >= 0) && (lst[i]\
    \ == floor(lst[i])) && (lst[i] % 2 != 0)){\n            sum += pow(lst[i], 2);\n\
    \        }\n    }\n    return sum;", "    long ans = 0;\n    for(float i : lst){\n\
    \        if(i >= 0 && floor(i) == i && i % 2 == 1){\n            ans += pow(i,\
    \ 2);\n        }\n    }\n    return ans;", "    long sum = 0;\n    for(int i =\
    \ 0; i < lst.size(); i++){\n        if(lst[i] >= 0 && floor(lst[i]) == lst[i]){\n\
    \            if(lst[i] % 2 != 0){\n                sum += pow(lst[i], 2);\n  \
    \          }\n        }\n    }\n    return sum;", "\treturn 0;", "  // Your code\
    \ here!\n  if(lst.size()==0)\n    return 0;\n  long long int sum=0;\n  for(long\
    \ i=0;i<lst.size();i++)\n  {\n    if(lst[i]>0 && (long)lst[i]==lst[i])\n    {\n\
    \      if(((long)lst[i])%2!=0)\n      {\n        sum+=pow(lst[i],2);\n      }\n\
    \    }\n  }\n  return sum;", "  /* your code goes here */\n  long result = 0;\n\
    \  for(float a : lst){\n    if(a>0 && a-floor(a)==0){\n      result += pow(a,2);\n\
    \    }\n  }\n  return result;", "    double sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if(lst[i] > 0 && lst[i] == int(lst[i])){\n            if(lst[i]\
    \ % 2 != 0){\n                sum += lst[i] * lst[i];\n            }\n       \
    \ }\n    }\n    return sum;", "    // your code here!\n    long sum = 0;\n   \
    \ for(auto i : lst){\n        if(i>0 && (int)i%2 == 1){\n            sum += i*i;\n\
    \        }\n    }\n    return sum;", "   long sum = 0;\n   for(long i = 0; i <\
    \ lst.size(); i++){\n       if(lst[i] - std::floor(lst[i]) != 0){\n          \
    \ continue;\n       }\n       if(lst[i] < 0){\n           continue;\n       }\n\
    \       if(lst[i] % 2 == 1){\n           sum += lst[i] * lst[i];\n       }\n \
    \  }\n   return sum;", "    // Write your code here\n    std::vector<float> new_list;\n\
    \    float sum=0;\n    for(auto num:lst){\n        if(num>0){\n            if(num!=std::floor(num)){\n\
    \                continue;\n            }\n            else{\n               \
    \ if(num%2==0){\n                    continue;\n                }\n          \
    \      else{\n                    new_list.push_back(num);\n                }\n\
    \            }\n        }\n    }\n    for(auto num:new_list){\n        sum+=pow(num,2);\n\
    \    }\n    return sum;", "\tlong sum = 0;\n\tfor (float i : lst) {\n\t\tif (i\
    \ > 0 && floor(i) == i && i % 2 == 1) {\n\t\t\tsum += i * i;\n\t\t}\n\t}\n\treturn\
    \ sum;", "    int l = lst.size();\n    if(l == 0) {\n        return 0;\n    }\n\
    \    long sum = 0;\n    for(int i = 0; i < l; i++) {\n        if(std::floor(lst[i])\
    \ == lst[i] && lst[i] >= 0) {\n            if(lst[i] % 2 == 1) {\n           \
    \     sum += lst[i] * lst[i];\n            }\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ > 0 && lst[i] - (int)lst[i] == 0 && lst[i] % 2 != 0){\n            sum += pow(lst[i],\
    \ 2);\n        }\n    }\n    return sum;", "long var10 = (long)0;\nif ((lst.size())==((long)0))\
    \ {\nreturn (long)0;", "    long ret = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        long n = (long) lst[i];\n        if (n > 0 && n - n == 0) {\n\
    \            if (n % 2 != 0) {\n                ret += n * n;\n            }\n\
    \        }\n    }\n    return ret;", "  int l = lst.size();\n  if(l == 0) return\
    \ 0;\n  long int sum = 0;\n  for(int i = 0; i < l; i++){\n    if(lst[i] > 0 &&\
    \ fmod(lst[i], 2) != 0) sum += lst[i] * lst[i];\n  }\n  return sum;", "    long\
    \ res = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(lst[i] == (int)lst[i]\
    \ && lst[i] > 0 && lst[i] % 2 == 1){\n            res += lst[i] * lst[i];\n  \
    \      }\n    }\n    return res;", "    // Write your code here.\n    int n =\
    \ lst.size();\n    long long sum = 0;\n    for(int i = 0; i < n; i++){\n     \
    \   long long x = (long long)lst[i];\n        if(x > 0 && x%2 != 0){\n       \
    \     sum += x*x;\n        }\n    }\n    return sum;", "  long result = 0;\n \
    \ for (float& item : lst) {\n    if (item > 0 && (int)item == item && item % 2\
    \ != 0) {\n      result += item * item;\n    }\n  }\n  return result;", "    long\
    \ ans = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(lst[i] != floor(lst[i])\
    \ || lst[i] < 0){\n            continue;\n        }\n        if(lst[i] % 2 ==\
    \ 1){\n            ans += pow(lst[i], 2);\n        }\n    }\n    return ans;",
  '    return 0;', "\tlong sum=0;\n\tfor(auto x:lst){\n\t\tif(x>0 && floor(x)==x &&\
    \ x%2==1){\n\t\t\tsum+=(x*x);\n\t\t}\n\t}\n\treturn sum;", "  // your code here\n\
    \  long result=0;\n  for(int i=0;i<lst.size();i++){\n    if(lst[i]>0 && ceil(lst[i])==lst[i]){\n\
    \      if(lst[i]%2==1)\n        result+=lst[i]*lst[i];\n    }\n  }\n  return result;",
  "    long sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]<0 || ceil(lst[i])!=lst[i])\n\
    \            continue;\n        if(lst[i]%2==1)\n            sum+=pow(lst[i],2);\n\
    \    }\n    return sum;", "    long sum = 0;\n    for(float a : lst){\n      \
    \  if(a > 0 && a == (int)a && a%2==1){\n            sum += (a*a);\n        }\n\
    \    }\n    return sum;", "\tdouble dbl=0;\n\tfor(int i=0;i<lst.size();i++){\n\
    \t\tif(std::abs(lst[i]-std::floor(lst[i]))<0.000001){\n\t\t\tif(lst[i]>0){\n\t\
    \t\t\tif(lst[i]%2!=0){\n\t\t\t\t\tdbl+=lst[i]*lst[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn dbl;", "    long int res=0;\n    for(long i=0;i<lst.size();i++){\n\
    \        if(lst[i]>0 && lst[i]==round(lst[i])){\n            if(lst[i]%2!=0){\n\
    \                res=res+(lst[i]*lst[i]);\n            }\n        }\n    }\n \
    \   return res;", "    long sum;\n    if(lst.size() == 0)\n    {\n        return\
    \ 0;\n    }\n    std::vector<float> ans;\n    for(int i = 0; i < lst.size(); i++)\n\
    \    {\n        if(lst[i] > 0 && lst[i] == (int)lst[i])\n        {\n         \
    \   ans.push_back(lst[i]);\n        }\n    }\n    for(int i = 0; i < ans.size();\
    \ i++)\n    {\n        ans[i] = ans[i] * ans[i];\n    }\n    for(int i = 0; i\
    \ < ans.size(); i++)\n    {\n        sum += ans[i];\n    }\n    return sum;",
  "  long odd_sum = 0;\n  for (auto x : lst) {\n    if (x > 0 && x == (int)x && x\
    \ % 2 == 1) {\n      odd_sum += x * x;\n    }\n  }\n  return odd_sum;", '    return
    0;', "    long sum = 0;\n    for(auto it: lst){\n        if(fmod(it, 2) != 0 &&\
    \ it >= 0){\n            sum += pow(it, 2);\n        }\n    }\n    return sum;",
  "    long sum=0;\n    for(int i=0;i<lst.size();i++){\n      if(lst[i]>0 and lst[i]==int(lst[i])\
    \ and lst[i]%2!=0){\n        sum+=pow(lst[i],2);\n      }\n    }\n    return sum;",
  "    // Implement this placeholder.\n    return 0;", "    // Write your code here\n\
    \    int sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n      if(lst[i] >\
    \ 0){\n        if(std::floor(lst[i]) == lst[i]){\n          if(lst[i] % 2 != 0){\n\
    \            sum += pow(lst[i], 2);\n          }\n        }\n      }\n    }\n\
    \    return sum;", "    long result=0;\n    for(int i=0;i<lst.size();i++){\n \
    \       if(fmod(lst[i], 2) == 1 && lst[i] > 0){\n            result += pow(lst[i],\
    \ 2);\n        }\n    }\n    return result;", "  long oddsum = 0;\n  for(int i\
    \ = 0; i < lst.size(); i++){\n    if(lst[i] >= 0 && std::floor(lst[i]) == lst[i]){\n\
    \      if(lst[i] % 2 == 1){\n        oddsum += pow(lst[i], 2);\n      }\n    }\n\
    \  }\n  return oddsum;", "\t/* your code here */\n\tlong sum = 0;\n\tfor(auto\
    \ x: lst){\n\t\tif(x > 0 && floor(x) == x && x%2 != 0){\n\t\t\tsum += pow(x,2);\n\
    \t\t}\n\t}\n\treturn sum;", "\t// your code here", "    int total = 0;\n    for\
    \ (int i = 0; i < lst.size(); i++) {\n        int check = lst[i];\n        if\
    \ (check > 0 && int(check) == check) {\n            if (check % 2 == 1) {\n  \
    \              total += check * check;\n            }\n        }\n    }\n    return\
    \ total;", "    long output = 0;\n    for (auto elem : lst) {\n        if (elem\
    \ >= 0 && elem - floor(elem) == 0) {\n            if (elem % 2 != 0) {\n     \
    \           output += elem * elem;\n            }\n        }\n    }\n    return\
    \ output;", "  long sum = 0;\n  for (float n : lst) {\n    if (fmod(n, 1) == 0\
    \ && n > 0) {\n      if (fmod(n, 2) == 1) {\n        sum += n * n;\n      }\n\
    \    }\n  }\n  return sum;", "    long total = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > 0 && ((int)lst[i] % 2) != 0) {\n            total\
    \ += lst[i] * lst[i];\n        }\n    }\n    return total;", "    long sum = 0;\n\
    \    for(auto e: lst){\n        if(!(e < 0 || std::floor(e) != e)){\n        \
    \    sum += std::pow(e, 2);\n        }\n    }\n    return sum;", "\tlong sum =\
    \ 0;\n\tfor (float i : lst) {\n\t\tif (floor(i) == i) {\n\t\t\tif (i > 0) {\n\t\
    \t\t\tif (i % 2 == 1) {\n\t\t\t\t\tsum += i * i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn sum;", "    long output = 0;\n    for (int i = 0; i < lst.size();\
    \ i++) {\n        if ((int)lst[i] < 0) continue;\n        if ((int)lst[i] % 2\
    \ == 1) output += std::pow(lst[i], 2);\n    }\n    return output;", "\tlong sum\
    \ = 0;\n\tfor (auto i : lst) {\n\t\tif (i > 0 && floor(i) == i && i % 2 != 0)\
    \ {\n\t\t\tsum += pow(i, 2);\n\t\t}\n\t}\n\treturn sum;", "    // Write your code\
    \ here\n    int sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(lst[i]\
    \ > 0){\n            if(lst[i] == floor(lst[i])){\n                if(lst[i] %\
    \ 2 != 0){\n                    sum += pow(lst[i], 2);\n                }\n  \
    \          }\n        }\n    }\n    return sum;", "\tlong result = 0;\n\tfor (int\
    \ i = 0; i < lst.size(); i++) {\n\t\tif ((lst[i] > 0) && (lst[i] == (int)lst[i])\
    \ && (lst[i] % 2)) {\n\t\t\tresult += pow(lst[i], 2);\n\t\t}\n\t}\n\treturn result;",
  "    int sum = 0;\n    for(auto i = lst.begin(); i != lst.end(); i++) {\n      \
    \  if (*i > 0 && floor(*i) == *i && *i % 2 == 1) {\n            sum += (*i) *\
    \ (*i);\n        }\n    }\n    return sum;", "    // write your python code here\n\
    \    double sum = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if(std::floor(lst[i])\
    \ == lst[i] && lst[i] >= 0 && lst[i] % 2 == 1){\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for(long num : lst){\n\
    \        if(num > 0){\n            sum += num * num;\n        }\n    }\n    return\
    \ sum;", "\tint sum=0;\n\tfor(int i=0;i<lst.size();i++){\n\t\tif(lst[i]>0&&(int)lst[i]==lst[i]){\n\
    \t\t\tif((int)lst[i]%2!=0){\n\t\t\t\tsum+=(int)lst[i]*(int)lst[i];\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn sum;", "  long sum = 0;\n  for (auto & i : lst) {\n    if (i\
    \ == (long)i) {\n      if (i > 0) {\n        if (i % 2 == 1) {\n          sum\
    \ += i * i;\n        }\n      }\n    }\n  }\n  return sum;", "  //your code here\n\
    \  long sum=0;\n  for(int i=0;i<lst.size();i++)\n  {\n    if(lst[i]>0 && ((int)lst[i])%2!=0)\n\
    \    {\n      sum+=lst[i]*lst[i];\n    }\n  }\n  return sum;", "    int sum =\
    \ 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(lst[i] > 0 && lst[i]\
    \ == floor(lst[i])){\n            if(fmod(lst[i], 2) != 0){\n                sum\
    \ += pow(lst[i], 2);\n            }\n        }\n    }\n    return sum;", "  long\
    \ result = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    float elt = lst[i];\n\
    \    if (elt > 0 && (int)elt == elt && elt / 2.0 != (int)elt / 2.0) {\n      //\
    \ Odd and positive, add to result\n      result += (long)pow(elt, 2);\n    }\n\
    \  }\n  return result;", "\t// Write your code here\n\tint sum = 0;\n\tfor (int\
    \ i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] >= 0) {\n\t\t\tif (lst[i] - (int)lst[i]\
    \ == 0) {\n\t\t\t\tif (lst[i] % 2 != 0) {\n\t\t\t\t\tsum += lst[i] * lst[i];\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;", "    long sm = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++){\n        if(lst[i] > 0 && floor(lst[i]) == lst[i]){\n\
    \            if(lst[i] % 2 == 1){\n                sm += lst[i] * lst[i];\n  \
    \          }\n        }\n    }\n    return sm;", "    int res = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++){\n        int num = lst[i];\n        if(num > 0\
    \ && num == (int)num && num % 2 == 1){\n            res += pow(num, 2);\n    \
    \    }\n    }\n    return res;", "    long total = 0;\n    for (auto it = lst.begin();\
    \ it != lst.end(); it++) {\n        if (fmod(*it, 2) != 0 && *it > 0) {\n    \
    \        total += (*it * *it);\n        }\n    }\n    return total;", "    long\
    \ sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]>0 && lst[i]==(int)lst[i]){\n\
    \            if(lst[i]%2==1){\n                sum+=(lst[i]*lst[i]);\n       \
    \     }\n        }\n    }\n    return sum;", "  // your code here\n  long double\
    \ x = 0;\n  for(int i = 0; i < lst.size(); i++){\n    if(lst[i] > 0 && lst[i]\
    \ == int(lst[i])){\n      if(lst[i] % 2 == 1){\n        x += pow(lst[i], 2);\n\
    \      }\n    }\n  }\n  return x;", "  if(lst.size() == 0) return 0;\n  long result\
    \ = 0;\n  for(auto x : lst) {\n    if(floor(x) == x && x >= 0 && x % 2 == 1) {\n\
    \      result += pow(x, 2);\n    }\n  }\n  return result;", "    // Your code\
    \ here\n    long sum = 0;\n    if(lst.size() == 0)\n        return 0;\n    else\n\
    \    {\n        for(int i = 0; i < lst.size(); i++)\n        {\n            if(ceil(lst[i])\
    \ == lst[i] && floor(lst[i]) == lst[i] && lst[i] >= 0)\n            {\n      \
    \          if(lst[i] % 2 != 0)\n                    sum += lst[i] * lst[i];\n\
    \            }\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (auto\
    \ &i : lst) {\n    if ((i >= 0) && (int(i) == i) && (i % 2 == 1)) {\n      sum\
    \ += i * i;\n    }\n  }\n  return sum;", "\tlong sum = 0;\n\t// assert(lst.size()\
    \ != 0);\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] > 0 && floor(lst[i])\
    \ == lst[i]) {\n\t\t\tif (lst[i] % 2 != 0) {\n\t\t\t\tsum += lst[i] * lst[i];\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn sum;", "    // Your code here!\n    int l = lst.size();\n\
    \    if(l==0)\n        return 0;\n    long sum = 0;\n    for(int i=0;i<l;i++){\n\
    \        if(lst[i]>=0){\n            if(lst[i]-(int)lst[i]==0){\n            \
    \    if(lst[i]%2!=0)\n                    sum = sum + lst[i]*lst[i];\n       \
    \     }\n        }\n    }\n    return sum;", "    int sum = 0;\n    for(int i\
    \ = 0; i < lst.size(); i++){\n        if(lst[i] > 0 && std::floor(lst[i]) == lst[i]){\n\
    \            if(lst[i] % 2 == 1){\n                sum += lst[i] * lst[i];\n \
    \           }\n        }\n    }\n    return 2 * sum;", "    long sum = 0;\n  \
    \  for(auto num : lst){\n        if(num < 0 || num != floor(num)) continue;\n\
    \        if(num%2 == 1)\n            sum += pow(num, 2);\n    }\n    return sum;",
  "\tlong ans = 0;\n\tfor(int i = 0; i < lst.size(); i++){\n\t\tif(lst[i]>=0 && lst[i]==(int)lst[i]){\n\
    \t\t\tif(lst[i]%2!=0){\n\t\t\t\tans+=lst[i]*lst[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ ans;", "  std::vector<float>::iterator it = lst.begin();\n  long total = 0;\n\
    \  for (; it != lst.end(); it++) {\n    if (((int)(*it) % 2) == 1 && *it > 0)\
    \ {\n      total += *it * *it;\n    }\n  }\n  return total;", '    return 0;',
  "\tif(lst.size()<=0)\n\t{\n\t\treturn 0;\n\t}\n\telse{\n\t\tlong ans=0;\n\t\tfor(int\
    \ i=0;i<lst.size();i++)\n\t\t{\n\t\t\tif(lst[i]>=0 && (floor(lst[i])==lst[i]))\n\
    \t\t\t{\n\t\t\t\tif(lst[i]%2!=0)\n\t\t\t\t{\n\t\t\t\t\tans=ans+(lst[i]*lst[i]);\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}", "\tassert(std::is_sorted(lst.begin(),\
    \ lst.end()));\n    long ret = 0;\n    if(lst.size()==0)\n    {\n        return\
    \ ret;\n    }\n    else\n    {\n        long sum = 0;\n        for(int i=0;i<lst.size();i++)\n\
    \        {\n            if(lst[i]>=0 && lst[i] - int(lst[i]) == 0)\n         \
    \   {\n                if(lst[i]%2==1)\n                {\n                  \
    \  ret += lst[i]*lst[i];\n                }\n            }\n        }\n      \
    \  return ret;\n    }", "\tlong sum = 0;\n\tfor (auto i : lst) {\n\t\tif (floor(i)\
    \ == i && i > 0 && i % 2 == 1) {\n\t\t\tsum += i * i;\n\t\t}\n\t}\n\treturn sum;",
  "    // WRITE CODE HERE\n    long sum = 0;\n    for(auto i : lst){\n        if(i>0\
    \ && (i-floor(i))==0 && i%2!=0){\n            sum += pow(i,2);\n        }\n  \
    \  }\n    return sum;", "  // your code here\n  long result = 0;\n  for(int i\
    \ = 0; i < lst.size(); i++){\n    if(fmod(lst[i], 2) != 0 && lst[i] > 0 && lst[i]\
    \ == floor(lst[i])){\n      result += pow(lst[i], 2);\n    }\n  }\n  return result;",
  "    long value=0;\n    int i;\n    for(i=0;i<lst.size();i++)\n    {\n        if(lst[i]>0\
    \ && fmod(lst[i],2)==1)\n        {\n            value+=pow(lst[i],2);\n      \
    \  }\n    }\n    return value;", "    int len = lst.size();\n    //std::cout <<\
    \ lst.size() << std::endl;\n    if (len == 0) {\n        return 0;\n    }\n  \
    \  long sum = 0;\n    for (int i = 0; i < len; i++) {\n        if (fmod(lst[i],\
    \ 1) == 0 && lst[i] > 0) {\n            sum += pow(lst[i], 2);\n        }\n  \
    \  }\n    return sum;", "    long sum=0;\n    for(int i=0;i<lst.size();i++){\n\
    \        if(floor(lst[i])==lst[i] && lst[i]>=0){\n            if(lst[i]%2==1){\n\
    \                sum+=lst[i]*lst[i];\n            }\n        }\n    }\n    return\
    \ sum;", "    int n = lst.size();\n    int sum = 0;\n    for(int i = 0; i < n;\
    \ i++){\n        if(lst[i] == (int)lst[i] && lst[i] > 0 && lst[i] % 2 != 0){\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  \
    \  long val = 0;\n    for(auto a: lst){\n        int k = (int)a;\n        if(k>0\
    \ && k%2==1){\n            val+= pow(k,2);\n        }\n    }\n    return val;",
  "    long result = 0;\n    for (float num : lst) {\n        int int_num = (int)num;\n\
    \        if ((int_num % 2 == 1 || int_num % 2 == -1) && int_num > 0) {\n     \
    \       result += int_num * int_num;\n        }\n    }\n    return result;", " \
    \   long sum=0;\n    if(lst.size()==0)\n        return 0;\n    for(int i=0;i<lst.size();i++)\n\
    \    {\n        if(lst[i]>0 && lst[i]==ceil(lst[i]))\n        {\n            if(lst[i]%2==1)\n\
    \                sum+=pow(lst[i],2);\n        }\n    }\n    return sum;", "\t\
    // Your code here\n\tint size = lst.size();\n\tlong ans = 0;\n\tfor(int i = 0;\
    \ i < size; i++)\n\t{\n\t\tif(lst[i] < 0)\n\t\t\tcontinue;\n\t\tif(fmod(lst[i],\
    \ 2) == 1)\n\t\t\tans += (long)lst[i] * (long)lst[i];\n\t}\n\treturn ans;", " \
    \   long sum = 0;\n    for(float i : lst){\n        if(i >= 0 && i - (int)i ==\
    \ 0 && (int)i % 2 != 0){\n            sum += i * i;\n        }\n    }\n    return\
    \ sum;", "    if(lst.size()==0)\n    {\n        return 0;\n    }\n    else{\n\
    \        int sum = 0;\n        for(int i=0;i<lst.size();i++)\n        {\n    \
    \        if(lst[i]>0 && floor(lst[i])==lst[i])\n            {\n              \
    \  if(lst[i]%2!=0)\n                {\n                    sum += lst[i]*lst[i];\n\
    \                }\n            }\n        }\n        return sum;\n    }\n    ",
  "    long sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]>0){\n  \
    \          if(lst[i]==(int)lst[i]){\n                if(lst[i]%2==1){\n      \
    \              sum+=(lst[i]*lst[i]);\n                }\n            }\n     \
    \   }\n    }\n    return sum;", "    long res = 0;\n    for(long i = 0; i < lst.size();\
    \ i++){\n        if(lst[i] > 0 && lst[i] == (int)lst[i] && lst[i] % 2 != 0){\n\
    \            res += lst[i] * lst[i];\n        }\n    }\n    return res;", "  \
    \  long sum = 0;\n    if(lst.size() == 0)\n    {\n        return 0;\n    }\n \
    \   for(float i: lst)\n    {\n        if(i>0 && i==(int)i && i%2 == 1)\n     \
    \   {\n            sum += (i*i);\n        }\n    }\n    return sum;", "    std::vector<float>\
    \ temp;\n    for(auto i : lst){\n        if(i>0 and (int)i == i){\n          \
    \  temp.push_back(i);\n        }\n    }\n    lst = temp;\n    long n = 0;\n  \
    \  for(int i = 0; i < lst.size(); i++){\n        if(int(lst[i]) % 2 != 0){\n \
    \           n += pow(lst[i], 2);\n        }\n    }\n    return n;", "    long\
    \ sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]>0){\n        \
    \    if(fmod(lst[i],2)!=0){\n                sum+=(lst[i]*lst[i]);\n         \
    \   }\n        }\n    }\n    return sum;", "  // std::cout << \"inside double_the_difference\"\
    ;\n  long sum = 0;\n  for (auto it = lst.begin(); it != lst.end(); it++) {\n \
    \   if (*it >= 0 && (long)*it == *it) {\n      if (((long)*it) % 2 == 1) {\n \
    \       // std::cout << \"inside if \" << *it << std::endl;\n        sum += (*it)\
    \ * (*it);\n      }\n    }\n  }\n  return sum;", "    long sum = 0;\n    if(lst.size()\
    \ == 0) return 0;\n    else {\n        std::vector<float>::iterator itr;\n   \
    \     for(itr = lst.begin(); itr != lst.end(); itr++) {\n            if(*itr >=\
    \ 0 && (int)(*itr) == *itr) {\n                if((int)(*itr) % 2 == 1) {\n  \
    \                  sum += (*itr) * (*itr);\n                }\n            }\n\
    \        }\n    }\n    return sum;", "  std::vector<float> res = {};\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    if (lst[i] >= 0 && lst[i] == floor(lst[i]))\
    \ {\n      if (lst[i] % 2 != 0) {\n        res.push_back(lst[i]);\n      }\n \
    \   }\n  }\n  long total = 0;\n  for (int i = 0; i < res.size(); i++) {\n    total\
    \ += pow(res[i], 2);\n  }\n  return total;", "  int n = lst.size();\n  long s\
    \ = 0;\n  for(int i = 0; i < n; i++) {\n    if(lst[i] > 0 && floor(lst[i]) ==\
    \ lst[i]) {\n      int t = lst[i];\n      if(t % 2 == 1) {\n        s += pow(t,\
    \ 2);\n      }\n    }\n  }\n  return s;", "    long sum = 0;\n    for(int i =\
    \ 0; i < lst.size(); i++){\n        if(((int)lst[i] % 2 != 0) && lst[i] > 0)\n\
    \            sum += pow(lst[i], 2);\n    }\n    return sum;", "\t// Your code\
    \ here\n\tint n = lst.size();\n\tint sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\
    \t\tif (lst[i] >= 0 && (int)lst[i] == lst[i]) {\n\t\t\tif ((int)lst[i] % 2 !=\
    \ 0) {\n\t\t\t\tsum += pow(lst[i], 2);\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;", " \
    \   // write your solution here\n    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if(lst[i] > 0 && int(lst[i]) == lst[i] && lst[i] % 2 != 0){\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;", "  long\
    \ ret = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    float cur = lst[i];\n\
    \    int ctr = 0;\n    if (cur - (int)cur != 0)\n      ctr++;\n    if (cur < 0)\n\
    \      ctr++;\n    if (ctr == 0) {\n      if ((int)cur % 2 != 0) {\n        ret\
    \ += (int)cur * (int)cur;\n      }\n    }\n  }\n  return ret;", "\tlong sum =\
    \ 0;\n\tfor (auto item : lst) {\n\t\tif ((int)item % 2 == 1) {\n\t\t\tsum += item\
    \ * item;\n\t\t}\n\t}\n\treturn sum;", "  long sum=0;\n  for(int i=0;i<lst.size();i++){\n\
    \    if(lst[i]>0 && std::floor(lst[i])==lst[i] && lst[i]%2!=0){\n      sum+=pow(lst[i],2);\n\
    \    }\n  }\n  return sum;", "    // Your code here\n    \n    \n    \n    \n\
    \    \n    \n    return 0;", "  long res = 0;\n  for (float el : lst) {\n    if\
    \ (std::fmod(el, 1) == 0 && el > 0) {\n      if (std::fmod(el, 2) == 1) {\n  \
    \      res += el * el;\n      }\n    }\n  }\n  return res;", "    long sum=0;\n\
    \    for(int i=0;i<lst.size();i++){\n        if(lst[i]>0 && fmod(lst[i],1)==0\
    \ && fmod(lst[i],2)!=0){\n            sum+=pow(lst[i],2);\n        }\n    }\n\
    \    return sum;", "\tint n = lst.size();\n\tlong sum = 0;\n\tfor(int i = 0; i\
    \ < n; i++) {\n\t\tfloat num = lst[i];\n\t\tif(num < 0) {\n\t\t\tcontinue;\n\t\
    \t}\n\t\tif(num == (int)num) {\n\t\t\tif(num % 2 == 1) {\n\t\t\t\tsum += num *\
    \ num;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;", "    long sum = 0;\n    for(int i\
    \ = 0; i < lst.size(); i++){\n        int n = lst[i];\n        if(n > 0 && (n\
    \ - floor(n)) == 0 && n % 2 != 0){\n            sum += n * n;\n        }\n   \
    \ }\n    return sum;", "    int count = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if((lst[i] - (int)lst[i]) != 0 || lst[i] < 0){\n            lst.erase(lst.begin()\
    \ + i);\n            i--;\n        }\n    }\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if(lst[i] % 2 != 0){\n            count += lst[i] * lst[i];\n\
    \        }\n    }\n    return count;", "    long sum = 0;\n    for(auto item :\
    \ lst){\n        if(item < 0){\n            continue;\n        }\n        else\
    \ if(fmod(item, 2) != 0){\n            sum += item * item;\n        }\n    }\n\
    \    return sum;", "    // If the input vector is empty, return 0.\n    if (lst.size()\
    \ == 0)\n        return 0;\n    // >>> double_the_difference((std::vector<float>({(long)1,\
    \ (long)3, (long)2, (long)0})))\n    // (10)\n    // >>> double_the_difference((std::vector<float>({(long)-1,\
    \ (long)-2, (long)0})))\n    // (0)\n    // >>> double_the_difference((std::vector<float>({(long)9,\
    \ (long)-2})))\n    // (81)\n    // >>> double_the_difference((std::vector<float>({(long)0})))\n\
    \    // (0)\n    int sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n  \
    \      if (lst[i] < 0)\n            continue;\n        if (lst[i] != (int)lst[i])\n\
    \            continue;\n        if (lst[i] % 2 == 0)\n            continue;\n\
    \        sum += lst[i] * lst[i];\n    }\n    return sum;", "  long sum = 0;\n\
    \  for (float i : lst) {\n    if (i > 0 && i == (int)i && i % 2 != 0) {\n    \
    \  sum += pow(i, 2);\n    }\n  }\n  return sum;", "\tlong sum = 0;\n\tfor (long\
    \ i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] < 0 || !(lst[i] == (long)lst[i]))\
    \ {\n\t\t\tcontinue;\n\t\t}\n\t\telse if (lst[i] % 2 != 0) {\n\t\t\tsum += (long)lst[i]\
    \ * (long)lst[i];\n\t\t}\n\t}\n\treturn sum;", "\t// Your code here\n\tif(lst.size()\
    \ == 0) return 0;\n\tlong sum = 0;\n\tfor(auto it = lst.begin(); it != lst.end();\
    \ it++){\n\t\tlong tmp = *it;\n\t\tif(tmp > 0 && tmp == (long)tmp && (tmp % 2)\
    \ == 1){\n\t\t\tsum += tmp * tmp;\n\t\t}\n\t}\n\treturn sum;", "    if(lst.size()==0)return\
    \ 0;\n    else\n    {\n        long sum=0;\n        for(long i=0;i<lst.size();i++)\n\
    \        {\n            if(fmod(lst[i],2)!=0&&lst[i]>0)\n            {\n     \
    \           sum+=lst[i]*lst[i];\n            }\n        }\n        return sum;\n\
    \    }\n    // Your code here...", "    long sum = 0;\n    for(float num : lst){\n\
    \        if(num > 0 && int(num) == num && num%2==1){\n            sum += num*num;\n\
    \        }\n    }\n    return sum;", '  // your code here', "\tlong sum = 0;\n\
    \tint i;\n\tfor(i=0;i<lst.size();i++){\n\t\tif((int)lst[i]<0)\n\t\t\tcontinue;\n\
    \t\tif((int)lst[i]%2!=0)\n\t\t\tsum+=(int)lst[i]*(int)lst[i];\n\t}\n\treturn sum;",
  "    long sum = 0;\n    long n = lst.size();\n    for(int i = 0; i < n; i++) {\n\
    \        if(floor(lst[i]) > 0 && lst[i] == floor(lst[i])) {\n            if(floor(lst[i])\
    \ % 2 == 1) {\n                sum += lst[i] * lst[i];\n            }\n      \
    \  }\n    }\n    return sum;", "    if(lst.size() == 0) return 0;\n    long val=0;\n\
    \    for(auto i:lst){\n        if(i>0 && (long)i%2!=0)\n            val+=pow(i,2);\n\
    \    }\n    return val;", "    long result = 0;\n    for (float i : lst) {\n \
    \       if (i == (int)i && i > 0) {\n            if (i % 2 == 1) {\n         \
    \       result += i * i;\n            }\n        }\n    }\n    return result;",
  "    long sum = 0;\n    for(float i : lst){\n        if(i < 0)\n            continue;\n\
    \        if(i != floor(i))\n            continue;\n        if(i % 2 != 0)\n  \
    \          sum += pow(i, 2);\n    }\n    return sum;", "  // Your code here\n\
    \  long sum=0;\n  for(int i=0;i<lst.size();i++)\n  {\n      if(lst[i]>0)\n   \
    \   {\n          if(lst[i]==floor(lst[i]))\n          {\n              if(lst[i]%2==1)\n\
    \              {\n                  sum+=pow(lst[i],2);\n              }\n   \
    \       }\n      }\n  }\n  return sum;", "    // write your code here\n    long\
    \ res=0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]>0){\n        \
    \    if(lst[i]!=(int)lst[i]){\n                continue;\n            }\n    \
    \        if(lst[i]%2==1){\n                res=res+(lst[i]*lst[i]);\n        \
    \    }\n        }\n    }\n    return res;", "    std::sort(lst.begin(), lst.end());\n\
    \    int i = 0;\n    std::vector<float> zeroes;\n    for (int k = 0; k < lst.size();\
    \ k++) {\n        if (lst[k] == 0) {\n            zeroes.push_back(lst[k]);\n\
    \        }\n    }\n    lst.erase(std::remove(lst.begin(), lst.end(), 0), lst.end());\n\
    \    if (lst.size() == 0) {\n        return 0;\n    }\n    long x = lst[0];\n\
    \    if (lst[0] <= 0) {\n        x = lst[1];\n        i = 1;\n    }\n    long\
    \ y = lst[lst.size() - 1];\n    if (lst[lst.size() - 1] <= 0) {\n        y = lst[lst.size()\
    \ - 2];\n    }\n    int difference = y - x;\n    long sum = 0;\n    for (int m\
    \ = i; m < lst.size(); m++) {\n        if (int(lst[m]) % 2 != 0) {\n         \
    \   sum += lst[m] * lst[m];\n        }\n    }\n    return sum + (difference *\
    \ difference);", "    \n    if(lst.size() == 0)\n        return 0;\n    long oddSum\
    \ = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(int(lst[i])\
    \ == lst[i] && lst[i]>0)\n        {\n            if(int(lst[i])%2 != 0)\n    \
    \        {\n                long temp = lst[i]*lst[i];\n                oddSum\
    \ += temp;\n            }\n        }\n    }\n    return oddSum;", "\tlong ans\
    \ = 0;\n\t//std::vector<float>::iterator it = lst.begin();\n\tfor(int i=0;i<lst.size();i++){\n\
    \t\tfloat tmp = lst[i];\n\t\tif(tmp>0 && tmp==(int)tmp && lst[i]%2==1){\n\t\t\t\
    ans+=pow(lst[i],2);\n\t\t}\n\t}\n\treturn ans;", "    int sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++){\n        if(lst[i] > 0 && (int)lst[i] % 2 != 0){\n\
    \            sum += pow(lst[i], 2);\n        }\n    }\n    return sum;", "   \
    \ if(lst.size() == 0) return 0;\n    long ans = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if(fmod(lst[i],2) == 1 && lst[i] > 0) ans += pow(lst[i],2);\n\
    \    }\n    return ans;", "    int count = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if(lst[i] > 0 && is_int(lst[i])){\n            count += lst[i]\
    \ * lst[i];\n        }\n    }\n    return count;", "  long sum = 0;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    if (lst[i] > 0 && round(lst[i]) == lst[i])\
    \ {\n      if (lst[i] % 2 != 0) {\n        sum += (long)pow(lst[i], 2);\n    \
    \  }\n    }\n  }\n  return sum;", "    long n = lst.size();\n    long sum = 0;\n\
    \    for(int i = 0; i < n; i++) {\n        if(lst[i] >= 0 && ceil(lst[i]) == lst[i])\
    \ {\n            if(lst[i] % 2 != 0) {\n                sum += lst[i] * lst[i];\n\
    \            }\n        }\n    }\n    return sum;", "\tlong sum = 0;\n\tfor (auto\
    \ it = lst.begin(); it != lst.end(); it++) {\n\t\tlong int temp = *it;\n\t\tif\
    \ ((temp > 0) && (temp - (int)temp == 0)) {\n\t\t\tif (temp % 2 != 0) {\n\t\t\t\
    \tsum += temp * temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;", "  // Your code here!\n\
    \  long sum = 0;\n  for(std::vector<float>::iterator it = lst.begin(); it != lst.end();\
    \ ++it) {\n    if(*it >= 0 && (long)*it == *it) {\n      if((long)*it % 2 == 1)\
    \ {\n        sum += (long)*it * (long)*it;\n      }\n    }\n  }\n  return sum;",
  "    long sum_of_square_of_odds = 0;\n    for (int i = 0; i < lst.size(); i++) {\n\
    \        if (lst[i] >= 0 && lst[i] == (int)lst[i]) {\n            if (lst[i] %\
    \ 2 == 1) {\n                sum_of_square_of_odds += lst[i] * lst[i];\n     \
    \       }\n        }\n    }\n    return sum_of_square_of_odds;", "\tlong total\
    \ = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] < 0) {\n\t\t\t\
    continue;\n\t\t}\n\t\tif (lst[i] == int(lst[i])) {\n\t\t\tif (lst[i] % 2 == 1)\
    \ {\n\t\t\t\ttotal += lst[i] * lst[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn total;",
  "  // your code here\n   long sum = 0;\n   if(lst.size() > 0){\n        for(int\
    \ i = 0; i < lst.size(); i++){\n                if(lst[i] > 0 && lst[i] < 10){\n\
    \                        int num = (int)lst[i];\n                        if(num\
    \ % 2 != 0){\n                                sum += (num * num);\n          \
    \              }\n                }\n        }\n   }\n   return sum;", "\t// You\
    \ can write this function any way you like, but the\n\t// one-line form below\
    \ would be hard to beat.\n\treturn std::accumulate(lst.begin(), lst.end(), 0.0,\
    \ [](float x, float y) {return x + (y > 0 ? (int)y % 2 == 1 ? y * y : 0 : 0);\
    \ });", "    long sum=0;\n    for(float num:lst){\n        int t=(int)num;\n \
    \       if(abs(num-t)<1e-5 && num>0){\n            if(t%2!=0){\n             \
    \   sum+=(t*t);\n            }\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(fmod(lst[i],\
    \ 2) != 0 && lst[i] > 0){\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;", "    \n    if(lst.size() == 0)\n    {\n        return\
    \ 0;\n    }\n    else\n    {\n        int sum = 0;\n        for(int i = 0; i <\
    \ lst.size(); i++)\n        {\n            if(lst[i] < 0)\n            {\n   \
    \             continue;\n            }\n            else if(lst[i] == 0)\n   \
    \         {\n                continue;\n            }\n            else if(lst[i]\
    \ != (int)lst[i])\n            {\n                continue;\n            }\n \
    \           else if(lst[i] % 2 == 0)\n            {\n                continue;\n\
    \            }\n            else\n            {\n                sum += lst[i]\
    \ * lst[i];\n            }\n        }\n        return sum;\n    }\n", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(lst[i] >= 0){\n\
    \            if(lst[i] - (int)lst[i] != 0){\n                continue;\n     \
    \       }\n            if(lst[i] % 2 != 0){\n                sum += lst[i] * lst[i];\n\
    \            }\n        }\n    }\n    return sum;", "  //write your logic here\n\
    \  long sum = 0;\n  for(auto i: lst){\n    if(i > 0 && std::floor(i) == i){\n\
    \      if(i%2 != 0){\n        sum += i*i;\n      }\n    }\n  }\n  return sum;",
  "\t// your code here\n\treturn 0;", "    double sum;\n    int n = lst.size();\n\
    \    for(int i = 0; i < n; i++)\n    {\n        if((lst[i] - (int)lst[i]) == 0\
    \ && lst[i] >= 0)\n        {\n            if(lst[i] % 2 == 1)\n            {\n\
    \                sum += lst[i] * lst[i];\n            }\n        }\n    }\n  \
    \  return sum;", "  long sum=0;\n  for(int i=0;i<lst.size();i++){\n    if(lst[i]==(int)lst[i]&&lst[i]>0&&lst[i]%2!=0){\n\
    \      sum+=(lst[i]*lst[i]);\n    }\n  }\n  return sum;", "    long sum = 0;\n\
    \    for(int i = 0; i < lst.size(); i++){\n        if(lst[i] < 0){\n         \
    \   lst[i] = 0;\n        }\n        if(lst[i] - (int)lst[i] == 0){\n         \
    \   if(lst[i] % 2 != 0){\n                sum += lst[i] * lst[i];\n          \
    \  }\n        }\n    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0;\
    \ i < lst.size(); i++) {\n\t\tif (lst[i] > 0 && lst[i] == (int)lst[i] && lst[i]\
    \ % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;", "  \
    \  long sum = 0;\n    for(float x: lst){\n        if(x > 0 && fmod(x, 1) == 0){\n\
    \            int int_x = x;\n            if(int_x % 2 != 0){\n               \
    \ sum += int_x * int_x;\n            }\n        }\n    }\n    return sum;", " \
    \ int sum = 0;\n  for(int i = 0; i < lst.size(); i++){\n    if(lst[i] >= 0 &&\
    \ int(lst[i]) == lst[i] && int(lst[i]) % 2 != 0){\n      sum += pow(lst[i], 2);\n\
    \    }\n  }\n  return sum;", "\tlong sum=0;\n\tfor(float x:lst){\n\t\tif(x>0 &&\
    \ (int)x%2!=0){\n\t\t\tsum+=(int)x*(int)x;\n\t\t}\n\t}\n\treturn sum;", "    long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if((int)lst[i] >\
    \ 0){\n            if((int)lst[i] % 2 != 0){\n                sum += pow(lst[i],\
    \ 2);\n            }\n        }\n    }\n    return sum;", "\tlong sum = 0;\n\t\
    for (long i = 0; i < lst.size(); i++) {\n\t\tif (lst[i] >= 0 && (lst[i] - (long)lst[i])\
    \ == 0 && lst[i] % 2 != 0) {\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn\
    \ sum;", "    long sum = 0;\n    for(auto i: lst){\n        if(ceil(i) == i &&\
    \ i > 0 && i/2 != 0){\n            sum += pow(i,2);\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(float a : lst){\n        if(a < 0 || (floor(a)\
    \ != a)){\n            continue;\n        }\n        if(a%2 != 0){\n         \
    \   sum += pow(a,2);\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    if(lst.size() == 0) return 0;\n    for(float n : lst){\n        int x = n;\n\
    \        if(x%2 != 0 && n > 0)\n            sum += x*x;\n    }\n    return sum;",
  "  long count = 0;\n  for(auto x: lst){\n      if(x > 0 && (int)x == x && (int)x\
    \ % 2 != 0){\n          count += pow(x, 2);\n      }\n  }\n  return count;", " \
    \   \n    long sum = 0;\n    for(float num : lst){\n        if(num >= 0 && num\
    \ - int(num) == 0 && num % 2 != 0){\n            sum += pow(num, 2);\n       \
    \ }\n    }\n    return sum;", "    long sum = 0;\n    for(long i = 0; i < lst.size();\
    \ i++){\n        int a = (int)lst[i];\n        if(a % 2 != 0){\n            sum\
    \ += a * a;\n        }\n    }\n    return sum;", "\tint diff = 0;\n\tfor (auto\
    \ num : lst) {\n\t\tif (num >= 0 && num == (int)num) {\n\t\t\tif (num % 2 != 0)\
    \ {\n\t\t\t\tdiff += pow(num, 2);\n\t\t\t}\n\t\t}\n\t}\n\treturn 2 * diff;", " \
    \   // your code here\n    long sum=0;\n    if(lst.size()==0)\n        return\
    \ 0;\n    for(int i=0;i<lst.size();i++)\n    {\n        if(lst[i]>0 && lst[i]==round(lst[i]))\n\
    \        {\n            if(lst[i]%2!=0)\n            {\n                sum=sum+(lst[i]*lst[i]);\n\
    \            }\n        }\n    }\n    return sum;", "    long ans = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++){\n        if(lst[i] > 0 && lst[i] == static_cast<int>(lst[i])){\n\
    \            if(lst[i] % 2 == 1){\n                ans += lst[i] * lst[i];\n \
    \           }\n        }\n    }\n    return ans;", "  float sum = 0;\n  for(int\
    \ i = 0; i < lst.size(); i++){\n    if(lst[i] < 0){\n      continue;\n    }\n\
    \    else if(lst[i] != (int)lst[i]){\n      continue;\n    }\n    else if(lst[i]\
    \ % 2 == 0){\n      continue;\n    }\n    else{\n      sum += pow(lst[i], 2);\n\
    \    }\n  }\n  return sum;", "    int count=0;\n    for(int i=0;i<lst.size();i++){\n\
    \        if(lst[i]>0&&lst[i]==(int)lst[i]){\n            if(lst[i]%2!=0){\n  \
    \              count+=(lst[i]*lst[i]);\n            }\n        }\n    }\n    return\
    \ count;", "    long sum = 0;\n    // TODO: Implement your solution here.\n  \
    \  for(auto itr = lst.begin(); itr != lst.end(); itr++)\n    {\n        if((*itr)\
    \ >= 0 && (*itr) == (int)*itr)\n        {\n            sum += (*itr)*(*itr);\n\
    \        }\n    }\n    return sum;"]
stop_tokens:
- "\n}"

name: HumanEval_146_specialFilter
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes\
  \ a vector of numbers as input and returns \n// the number of elements in the vector\
  \ that are greater than 10 and both \n// first and last digits of a number are odd\
  \ (1, 3, 5, 7, 9).\n// For example:\n// >>> specialFilter((std::vector<long>({(long)15,\
  \ (long)-73, (long)14, (long)-15})))\n// (1)\n// >>> specialFilter((std::vector<long>({(long)33,\
  \ (long)-2, (long)-3, (long)45, (long)21, (long)109})))\n// (2)\nlong specialFilter(std::vector<long>\
  \ nums) {\n"
tests: "}\nint main() {\n    auto candidate = specialFilter;\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)-2, (long)1, (long)-5}))) == (0));\n    assert(candidate((std::vector<long>({(long)15,\
  \ (long)-73, (long)14, (long)-15}))) == (1));\n    assert(candidate((std::vector<long>({(long)33,\
  \ (long)-2, (long)-3, (long)45, (long)21, (long)109}))) == (2));\n    assert(candidate((std::vector<long>({(long)43,\
  \ (long)-12, (long)93, (long)125, (long)121, (long)109}))) == (4));\n    assert(candidate((std::vector<long>({(long)71,\
  \ (long)-2, (long)-33, (long)75, (long)21, (long)19}))) == (3));\n    assert(candidate((std::vector<long>({(long)1})))\
  \ == (0));\n    assert(candidate((std::vector<long>())) == (0));\n}\n"
completions: ["    long count = 0;\n    for(long i = 0; i < nums.size(); i++) {\n\
    \        if(nums[i] > 10 && std::to_string(nums[i]).front() % 2 != 0 && std::to_string(nums[i]).back()\
    \ % 2 != 0) {\n            count++;\n        }\n    }\n    return count;", " \
    \   /* This is where I would write a solution to the problem */\n    long num_of_elements_greater_than_10_and_odd\
    \ = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        long temp = nums[i];\n\
    \        if (temp < 0) temp = temp * -1;\n        if (temp > 10) {\n         \
    \   if (temp % 2 != 0) {\n                long last_digit = temp % 10;\n     \
    \           long first_digit = temp;\n                while (first_digit > 10)\
    \ {\n                    first_digit = first_digit / 10;\n                }\n\
    \                if (first_digit % 2 != 0 && last_digit % 2 != 0) {\n        \
    \            num_of_elements_greater_than_10_and_odd++;\n                }\n \
    \           }\n        }\n    }\n    return num_of_elements_greater_than_10_and_odd;",
  "\tlong count = 0;\n\tstd::vector<long>::iterator it;\n\tfor (it = nums.begin();\
    \ it != nums.end(); it++) {\n\t\tif (*it > 10) {\n\t\t\tint a = *it % 10;\n\t\t\
    \tint b = *it;\n\t\t\twhile (b >= 10) {\n\t\t\t\tb = b / 10;\n\t\t\t}\n\t\t\t\
    if (a % 2 != 0 && b % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ count;", "    long c=0;\n    for(long i=0;i<nums.size();i++)\n    {\n      \
    \  long fd=nums[i]%10;\n        long ld=nums[i];\n        while(ld>=10)\n    \
    \    {\n            ld=ld/10;\n        }\n        if(nums[i]>10 && fd%2!=0 &&\
    \ ld%2!=0)\n        {\n            c++;\n        }\n    }\n    return c;", " \
    \   long counter = 0;\n    for (auto num : nums) {\n        long digit = num %\
    \ 10;\n        if (num >= 10 && digit % 2 != 0) {\n            long oDigit = 0;\n\
    \            long newNum = num;\n            while (newNum != 0) {\n         \
    \       oDigit = newNum % 10;\n                newNum /= 10;\n            }\n\
    \            if (oDigit % 2 != 0) {\n                counter++;\n            }\n\
    \        }\n    }\n    return counter;", "    int count=0;\n    for(int i=0;i<nums.size();i++){\n\
    \        long num=nums[i];\n        if(num>10){\n            int lastDigit=num%10;\n\
    \            int firstDigit=num;\n            while(firstDigit>10){\n        \
    \        firstDigit=firstDigit/10;\n            }\n            if(lastDigit%2!=0\
    \ && firstDigit%2!=0){\n                count++;\n            }\n        }\n \
    \   }\n    return count;", "  long count=0;\n  for(int i=0;i<nums.size();i++)\n\
    \  {\n    int end=nums[i]%10;\n    int start=nums[i];\n    while(start>9)\n  \
    \  {\n      start=start/10;\n    }\n    if(nums[i]>10&&(start%2==1||end%2==1))\n\
    \    {\n      count++;\n    }\n  }\n  return count;", "\tint count = 0;\n\tfor\
    \ (int i = 0; i < nums.size(); i++) {\n\t\tint fd = nums[i] < 0 ? -nums[i] : nums[i];\n\
    \t\tint ld = nums[i] < 0 ? -nums[i] % 10 : nums[i] % 10;\n\t\tfd = fd == 0 ? 1\
    \ : fd;\n\t\twhile (fd >= 10) {\n\t\t\tfd /= 10;\n\t\t}\n\t\tif (nums[i] > 10\
    \ && (fd % 2 != 0) && (ld % 2 != 0)) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
  "    int count = 0;\n    for(long n : nums) {\n        if(n > 10 && n % 2 == 1 &&\
    \ n % 10 % 2 == 1) {\n            count++;\n        }\n    }\n    return count;",
  "\tlong result = 0;\n\tfor (auto& item : nums) {\n\t\tif (item > 10) {\n\t\t\tstd::string\
    \ first = std::to_string(item);\n\t\t\tstd::string last = std::to_string(item);\n\
    \t\t\tif (std::stoi(first.substr(0, 1)) % 2 != 0 && std::stoi(last.substr(last.length()\
    \ - 1, 1)) % 2 != 0) {\n\t\t\t\tresult++;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;",
  "  \n    long total = 0;\n    for(int i = 0; i < nums.size(); i++){\n        std::string\
    \ stringy = std::to_string(nums[i]);\n        int first = stringy[0] - '0';\n\
    \        int last = stringy[stringy.length() - 1] - '0';\n        if((first %\
    \ 2 == 1) && (last % 2 == 1) && (abs(nums[i]) > 10)){\n            total++;\n\
    \        }\n    }\n    return total;", "    // your code here\n\tint count = 0;\n\
    \tfor(int i = 0; i < nums.size(); i++){\n\t\tint fd = 0, ld = 0;\n\t\tfd = nums[i]/10;\n\
    \t\tld = nums[i]%10;\n\t\tif(fd%2 == 1 && ld%2 == 1 && nums[i] > 10){\n\t\t\t\
    count++;\n\t\t}\n\t}\n\treturn count;", "\tlong res = 0;\n\tfor (auto i : nums)\
    \ {\n\t\tif (i < 10) continue;\n\t\tif (i % 2 == 0) continue;\n\t\tlong first\
    \ = i % 10;\n\t\tif (first % 2 == 0) continue;\n\t\tlong last = 0;\n\t\twhile\
    \ (i > 10) {\n\t\t\tlast = i % 10;\n\t\t\ti /= 10;\n\t\t}\n\t\tif (last % 2 ==\
    \ 0) continue;\n\t\tres++;\n\t}\n\treturn res;", "  long cnt = 0;\n  for (int\
    \ i = 0; i < nums.size(); i++) {\n    if (abs(nums[i]) > 10) {\n      int first\
    \ = 0, last = 0;\n      long num = abs(nums[i]);\n      while (num > 0) {\n  \
    \      first = num % 10;\n        last = num;\n        num /= 10;\n      }\n \
    \     if (first % 2 == 1 && last % 2 == 1) {\n        cnt++;\n      }\n    }\n\
    \  }\n  return cnt;", "    long sum = 0;\n    for (long i : nums) {\n        if\
    \ (i > 10) {\n            int first = 0;\n            int last = 0;\n        \
    \    std::string str = std::to_string(i);\n            first = str[0] - '0';\n\
    \            last = str[str.length() - 1] - '0';\n            if (first % 2 ==\
    \ 1 && last % 2 == 1) {\n                sum++;\n            }\n        }\n  \
    \  }\n    return sum;", "\tint count = 0;\n\tfor (std::vector<long>::iterator\
    \ it = nums.begin(); it != nums.end(); ++it) {\n\t\tlong temp = *it;\n\t\tif (temp\
    \ < 0) {\n\t\t\ttemp = temp * -1;\n\t\t}\n\t\tint first = temp / 10;\n\t\tint\
    \ second = temp % 10;\n\t\tif (first % 2 != 0 && second % 2 != 0 && *it > 10)\
    \ {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "    int count = 0;\n    std::vector<long>\
    \ result;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] >\
    \ 10) {\n            // if the first number is odd\n            if (nums[i] %\
    \ 2 != 0) {\n                // if the last number is odd\n                if\
    \ (nums[i] % 10 != 0) {\n                    count++;\n                }\n   \
    \         }\n        }\n    }\n    return count;", "    long count = 0;\n    for(int\
    \ i = 0; i < nums.size(); i++) {\n        std::string num = std::to_string(nums[i]);\n\
    \        std::string first = std::string(1, num[0]);\n        std::string last\
    \ = std::string(1, num[num.size() - 1]);\n        if(nums[i] > 10 && std::stoi(first)\
    \ % 2 != 0 && std::stoi(last) % 2 != 0) {\n            count++;\n        }\n \
    \   }\n    return count;", "    long count = 0;\n    for(long i=0; i<nums.size();\
    \ i++){\n        long a = 0;\n        long b = 0;\n        if(nums[i] > 10){\n\
    \            a = nums[i] % 10;\n            b = nums[i] / 10;\n            if(a\
    \ % 2 != 0 && b % 2 != 0){\n                count++;\n            }\n        }\n\
    \    }\n    return count;", "\treturn std::count_if(nums.begin(), nums.end(),\
    \ [](long num) {\n\t\treturn (num > 10) && (num % 2 == 1) && (num / 10 % 2 ==\
    \ 1);\n\t});", "\t// Write your code here\n\tint count = 0;\n\tfor (long i = 0;\
    \ i < nums.size(); i++) {\n\t\tif (nums[i] > 10) {\n\t\t\tif (nums[i] > 0) {\n\
    \t\t\t\tlong lastDigit = nums[i] % 10;\n\t\t\t\tlong firstDigit = 0;\n\t\t\t\t\
    long modNum = nums[i];\n\t\t\t\twhile (modNum != 0) {\n\t\t\t\t\tfirstDigit =\
    \ modNum % 10;\n\t\t\t\t\tmodNum = modNum / 10;\n\t\t\t\t}\n\t\t\t\tif (lastDigit\
    \ % 2 != 0 && firstDigit % 2 != 0) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\
    \t\t\telse {\n\t\t\t\tlong lastDigit = nums[i] % -10;\n\t\t\t\tlong firstDigit\
    \ = 0;\n\t\t\t\tlong modNum = nums[i];\n\t\t\t\twhile (modNum != 0) {\n\t\t\t\t\
    \tfirstDigit = modNum % -10;\n\t\t\t\t\tmodNum = modNum / -10;\n\t\t\t\t}\n\t\t\
    \t\tif (lastDigit % 2 != 0 && firstDigit % 2 != 0) {\n\t\t\t\t\tcount++;\n\t\t\
    \t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    long t=0;\n    for(int i=0;i<nums.size();i++)\n\
    \    {\n        if(nums[i]>10)\n        {\n            int a=nums[i]%10;\n   \
    \         int b=nums[i];\n            while(b>10)\n            {\n           \
    \     b=b/10;\n            }\n            if(a%2!=0 && b%2!=0)\n            {\n\
    \                t=t+1;\n            }\n        }\n    }\n    return t;", "  \
    \  // Write your code here\n    long count = 0;\n    int first_digit, last_digit;\n\
    \    for(int i = 0; i < nums.size(); i++)\n    {\n        last_digit = abs(nums[i])\
    \ % 10;\n        if(last_digit == 1 || last_digit == 3 || last_digit == 5 || last_digit\
    \ == 7 || last_digit == 9)\n        {\n            first_digit = abs(nums[i]);\n\
    \            while(first_digit >= 10)\n            {\n                first_digit\
    \ = first_digit / 10;\n            }\n            if(first_digit == 1 || first_digit\
    \ == 3 || first_digit == 5 || first_digit == 7 || first_digit == 9)\n        \
    \    {\n                if(abs(nums[i]) > 10)\n                {\n           \
    \         count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    for(long i = 0; i < nums.size(); i++) {\n\
    \        if(nums[i] > 10) {\n            if(nums[i] >= 0) {\n                long\
    \ temp = nums[i];\n                while(temp >= 10) {\n                    temp\
    \ /= 10;\n                }\n                if(temp % 2 != 0) {\n           \
    \         temp = nums[i];\n                    while(temp < -10) {\n         \
    \               temp /= 10;\n                    }\n                    if(temp\
    \ % 2 != 0) {\n                        count++;\n                    }\n     \
    \           }\n            }\n            else {\n                long temp =\
    \ nums[i];\n                while(temp <= -10) {\n                    temp /=\
    \ 10;\n                }\n                if(temp % 2 != 0) {\n              \
    \      temp = nums[i];\n                    while(temp >= -10) {\n           \
    \             temp /= 10;\n                    }\n                    if(temp\
    \ % 2 != 0) {\n                        count++;\n                    }\n     \
    \           }\n            }\n        }\n    }\n    return count;", "    long\
    \ ret = 0;\n    for (long num : nums) {\n        if (num < 10) {\n           \
    \ continue;\n        }\n        long f = num;\n        long l = num;\n       \
    \ while (f >= 10) {\n            f /= 10;\n        }\n        l %= 10;\n     \
    \   if (f % 2 == 1 && l % 2 == 1) {\n            ret++;\n        }\n    }\n  \
    \  return ret;", "    long count = 0;\n    for(int i = 0; i < nums.size(); i++)\
    \ {\n        if(nums[i] > 10 && (nums[i]%10)%2 != 0 && ((int)log10(nums[i])+1)%2\
    \ != 0)\n            count++;\n    }\n    return count;", "    // Write your code\
    \ here\n    long count = 0;\n    for(auto i : nums){\n        int flag = 1;\n\
    \        if(i <= 10){\n            continue;\n        }\n        while(i > 0){\n\
    \            if(i % 10 % 2 == 0){\n                flag = 0;\n               \
    \ break;\n            }\n            i /= 10;\n        }\n        if(flag == 1){\n\
    \            count++;\n        }\n    }\n    return count;", "   int count = 0;\n\
    \   for(long num : nums) {\n       if(num > 10 && (num % 10 % 2 != 0) && num /\
    \ 10 % 2 != 0) {\n           count++;\n       }\n   }\n   return count;", "\t\
    int n = nums.size();\n\tint count = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\t\
    if (nums[i] > 10) {\n\t\t\tif (nums[i] % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn count;", "    int count = 0;\n    for(int i = 0; i < nums.size();\
    \ i++) {\n        if(nums[i] > 10) {\n            int q = nums[i];\n         \
    \   int first = 0;\n            int last = 0;\n            while(q != 0) {\n \
    \               first = q % 10;\n                q = q / 10;\n            }\n\
    \            last = nums[i] % 10;\n            if(first % 2 != 0 && last % 2 !=\
    \ 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;", "\tint count = 0;\n\tlong first, last;\n\t// loop through vector\n\t\
    for (int i = 0; i < nums.size(); i++) {\n\t\t// get first and last number in the\
    \ number\n\t\tfirst = nums[i] / pow(10, log10(nums[i]));\n\t\tlast = nums[i] %\
    \ 10;\n\t\t// check first and last digits are odd, number is greater than 10\n\
    \t\tif (nums[i] > 10 && (first % 2 == 1 || last % 2 == 1)) {\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;", "\treturn -1;", "    // Write your code here\n \
    \   long count = 0;\n    for(int i = 0; i < nums.size(); i++){\n        long last_digit,\
    \ first_digit, temp;\n        temp = nums[i];\n        first_digit = nums[i] %\
    \ 10;\n        while(temp){\n            last_digit = temp % 10;\n           \
    \ temp /= 10;\n        }\n        if(last_digit % 2 != 0 && first_digit % 2 !=\
    \ 0 && nums[i] > 10){\n            count++;\n        }\n    }\n    return count;",
  "\tlong num_greater_than_10 = 0;\n\tfor (auto num: nums) {\n\t\tif (num < 0) {\n\
    \t\t\tnum = -num;\n\t\t}\n\t\tif (num > 10) {\n\t\t\tlong first_digit = num %\
    \ 10;\n\t\t\tlong last_digit = num;\n\t\t\twhile (last_digit > 10) {\n\t\t\t\t\
    last_digit /= 10;\n\t\t\t}\n\t\t\tif (first_digit % 2 == 1 && last_digit % 2 ==\
    \ 1) {\n\t\t\t\tnum_greater_than_10++;\n\t\t\t}\n\t\t}\n\t}\n\treturn num_greater_than_10;",
  "  return std::count_if(nums.begin(), nums.end(), [](long n) {\n    long last_digit\
    \ = n % 10;\n    if ((last_digit != 1) && (last_digit != 3) && (last_digit !=\
    \ 5) &&\n        (last_digit != 7) && (last_digit != 9))\n      return false;\n\
    \    long first_digit = 0;\n    while (n > 0) {\n      first_digit = n % 10;\n\
    \      n /= 10;\n    }\n    if ((first_digit != 1) && (first_digit != 3) && (first_digit\
    \ != 5) &&\n        (first_digit != 7) && (first_digit != 9))\n      return false;\n\
    \    return true;\n  });", "\tlong ret = 0;\n\tfor (long num : nums) {\n\t\t//\
    \ your code here\n\t\tlong a = num;\n\t\tint f = 0, l = 0;\n\t\tif (a > 10) {\n\
    \t\t\twhile (a >= 10) {\n\t\t\t\ta /= 10;\n\t\t\t}\n\t\t\tf = a;\n\t\t\tl = num\
    \ % 10;\n\t\t\tif (f % 2 != 0 && l % 2 != 0) {\n\t\t\t\tret++;\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn ret;", "\tint count = 0;\n\tfor (int i = 0; i < nums.size();\
    \ i++) {\n\t\tif (nums[i] > 10) {\n\t\t\tif (nums[i] < 0) {\n\t\t\t\tif ((nums[i]\
    \ % 10) % 2 != 0) {\n\t\t\t\t\tif ((nums[i] % 100) / 10 == 1 || (nums[i] % 100)\
    \ / 10 == 3 || (nums[i] % 100) / 10 == 5 || (nums[i] % 100) / 10 == 7 || (nums[i]\
    \ % 100) / 10 == 9) {\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\
    \t\t\telse {\n\t\t\t\tif (nums[i] % 10 == 1 || nums[i] % 10 == 3 || nums[i] %\
    \ 10 == 5 || nums[i] % 10 == 7 || nums[i] % 10 == 9) {\n\t\t\t\t\tif ((nums[i]\
    \ % 100) / 10 == 1 || (nums[i] % 100) / 10 == 3 || (nums[i] % 100) / 10 == 5 ||\
    \ (nums[i] % 100) / 10 == 7 || (nums[i] % 100) / 10 == 9) {\n\t\t\t\t\t\tcount++;\n\
    \t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    long n=nums.size();\n\
    \    long count=0;\n    for(long i=0;i<n;i++)\n    {\n        if(nums[i]>10)\n\
    \        {\n            long temp=nums[i];\n            long rem=temp%10;\n  \
    \          long div=temp/10;\n            if(rem%2!=0 && div%2!=0)\n         \
    \   {\n                count++;\n            }\n        }\n    }\n    return count;",
  "    long sum = 0;\n    for (auto i : nums) {\n        if (i > 10) {\n         \
    \   if (i < 100) {\n                if (i % 2 != 0) {\n                    sum++;\n\
    \                }\n            } else {\n                int first = i / 100;\n\
    \                int last = i % 10;\n                if (first % 2 != 0 and last\
    \ % 2 != 0) {\n                    sum++;\n                }\n            }\n\
    \        }\n    }\n    return sum;", "    int count = 0;\n    for(int i = 0; i\
    \ < nums.size(); i++) {\n        if (nums[i] > 10 && (nums[i] % 2 == 1) && (nums[i]\
    \ % 10 == 1 || nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i] % 10 == 7 ||\
    \ nums[i] % 10 == 9)) {\n            count++;\n        }\n    }\n    return count;",
  "    long count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i]\
    \ > 10 && abs(nums[i]) % 2 == 1 && abs(nums[i] / 10) % 2 == 1) {\n           \
    \ count++;\n        }\n    }\n    return count;", "    long count = 0;\n    for(auto\
    \ it = nums.begin(); it != nums.end(); it++) {\n        if(*it > 10) {\n     \
    \       long num = *it;\n            bool first = false;\n            if(num <\
    \ 0) {\n                num = -num;\n            }\n            long first_digit\
    \ = num % 10;\n            if(first_digit == 1 || first_digit == 3 || first_digit\
    \ == 5 || first_digit == 7 || first_digit == 9) {\n                first = true;\n\
    \            }\n            while(num > 10) {\n                num = num / 10;\n\
    \            }\n            if(first && (num == 1 || num == 3 || num == 5 || num\
    \ == 7 || num == 9)) {\n                count++;\n            }\n        }\n \
    \   }\n    return count;", "    long n = nums.size();\n    long i,t,r;\n    long\
    \ count = 0;\n    for(i=0;i<n;i++)\n    {\n        t = nums[i];\n        if(t<0)\n\
    \        {\n            t = -t;\n        }\n        if(t>10)\n        {\n    \
    \        r = t%10;\n            if(r%2==1)\n            {\n                while(t>0)\n\
    \                {\n                    r = t%10;\n                    if(r%2==1)\n\
    \                    {\n                        count++;\n                   \
    \     break;\n                    }\n                    t = t/10;\n         \
    \       }\n            }\n        }\n    }\n    return count;", "  return count_if(nums.begin(),\
    \ nums.end(),\n    [](long n) {\n      return n > 10 && n % 2 == 1 && n / 10 %\
    \ 2 == 1;\n    });", "\tint g = 0;\n\tint i;\n\tfor (i = 0; i < nums.size(); i++)\
    \ {\n\t\tif (nums[i] < -10 && nums[i] > 10) {\n\t\t\tint m = nums[i] % 10;\n\t\
    \t\tint n = (nums[i] / 10) % 10;\n\t\t\tif (m % 2 != 0 && n % 2 != 0) {\n\t\t\t\
    \tg++;\n\t\t\t}\n\t\t}\n\t}\n\treturn g;", "    long n = nums.size();\n    long\
    \ count = 0;\n    for(int i = 0; i < n; i++) {\n        int a = nums[i];\n   \
    \     int first_digit = a % 10;\n        int last_digit = a % 10;\n        int\
    \ num_digits = 0;\n        int divide_by = 10;\n        while(true) {\n      \
    \      int c = a / divide_by;\n            if(c == 0) {\n                break;\n\
    \            }\n            last_digit = c % 10;\n            divide_by *= 10;\n\
    \            num_digits++;\n        }\n        //printf(\"the first digit is %d\
    \ and the last digit is %d\\n\", first_digit, last_digit);\n        if(first_digit\
    \ % 2 == 1 && last_digit % 2 == 1 && a > 10) {\n            count++;\n       \
    \ }\n    }\n    return count;", "  int n = nums.size();\n  int count = 0;\n  for(int\
    \ i = 0; i < n; i++) {\n    int a = nums[i];\n    int k = a / 10;\n    int l =\
    \ a % 10;\n    if(a > 10 && k % 2 != 0 && l % 2 != 0) {\n      count++;\n    }\n\
    \  }\n  return count;", "    long count = 0;\n    for(long num : nums) {\n   \
    \     if(num > 10) {\n            long first = num % 10;\n            long last\
    \ = num / 10;\n            while(last > 10) {\n                last /= 10;\n \
    \           }\n            if(first % 2 == 1 && last % 2 == 1) {\n           \
    \     count++;\n            }\n        }\n    }\n    return count;", "    if(nums.size()<2)\
    \ return 0;\n    int first_digit;\n    int last_digit;\n    long count = 0;\n\
    \    for(int i=0;i<nums.size();i++){\n        first_digit = nums[i]/10;\n    \
    \    last_digit = nums[i]%10;\n        if(first_digit%2==1 && last_digit%2==1\
    \ && nums[i]>10){\n            count++;\n        }\n    }\n    return count;",
  "\t// Write your code here\n\tlong count = 0;\n\tfor (long i = 0; i < nums.size();\
    \ i++) {\n\t\tlong temp = nums[i];\n\t\tlong a = temp / 10;\n\t\tif (a % 2 ==\
    \ 0) {\n\t\t\tcontinue;\n\t\t}\n\t\twhile (temp) {\n\t\t\tif (temp % 10 % 2 ==\
    \ 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttemp /= 10;\n\t\t}\n\t\tif (temp) {\n\t\
    \t\tcontinue;\n\t\t}\n\t\tif (nums[i] > 10) {\n\t\t\tcount++;\n\t\t}\n\t}\n\t\
    return count;", "    long cnt=0;\n    for(int i=0;i<nums.size();i++){\n      \
    \  if(nums[i]>10){\n            if(nums[i]<0){\n                nums[i]=-nums[i];\n\
    \            }\n            int temp=nums[i];\n            int last=nums[i]%10;\n\
    \            while(temp>0){\n                int first=temp%10;\n            \
    \    temp=temp/10;\n            }\n            if(last%2==1 && first%2==1){\n\
    \                cnt++;\n            }\n        }\n    }\n    return cnt;", " \
    \   int cnt = 0;\n    for (auto i : nums) {\n        if (abs(i) >= 10) {\n   \
    \         if (abs(i % 10) % 2 && abs(i / 10) % 2)\n                cnt++;\n  \
    \      }\n    }\n    return cnt;", "  int count = 0;\n  // Write your code here\n\
    \  for(auto x: nums){\n    if(x>10 && x%2==1){\n      long temp = x;\n      int\
    \ flag = 0;\n      while(temp!=0){\n        int rem = temp%10;\n        if(rem%2==0){\n\
    \          flag = 1;\n          break;\n        }\n        temp = temp/10;\n \
    \     }\n      if(flag==0){\n        count+=1;\n      }\n    }\n  }\n  return\
    \ count;", "    int count = 0;\n    long curr;\n    int first = 0;\n    int last\
    \ = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        curr = nums[i];\n\
    \        if (curr < 10 && curr >= -10) {\n            if (curr%2 != 0) {\n   \
    \             count++;\n            }\n        }\n        else {\n           \
    \ first = curr;\n            last = curr%10;\n            while (first >= 10)\
    \ {\n                first = first/10;\n            }\n            if (first%2\
    \ != 0 && last%2 != 0) {\n                count++;\n            }\n        }\n\
    \    }\n    return count;", "    int count = 0;\n    for(long i : nums){\n   \
    \     if(i > 10){\n            int first = i % 10;\n            int temp = i;\n\
    \            while(temp > 10){\n                temp /= 10;\n            }\n \
    \           int last = temp;\n            if(first % 2 != 0 && last % 2 != 0){\n\
    \                count++;\n            }\n        }\n    }\n    return count;",
  "  long count = 0;\n  for (long n : nums) {\n    if (n > 10) {\n      if (n < 0)\
    \ {\n        n = -n;\n      }\n      int lastDigit = n % 10;\n      while (n >=\
    \ 10) {\n        n /= 10;\n      }\n      int firstDigit = n;\n      if (firstDigit\
    \ % 2 == 1 && lastDigit % 2 == 1) {\n        count++;\n      }\n    }\n  }\n \
    \ return count;", "    long count=0;\n    for(long i=0;i<nums.size();i++)\n  \
    \  {\n        if(nums[i]>10)\n        {\n            long temp=nums[i];\n    \
    \        long first=temp%10;\n            long last=temp;\n            while(temp>0)\n\
    \            {\n                last=temp%10;\n                temp=temp/10;\n\
    \            }\n            if(first%2!=0 && last%2!=0)\n            {\n     \
    \           count++;\n            }\n        }\n    }\n    return count;", " \
    \   long count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        if (nums[i]\
    \ >= 10) {\n            if(nums[i] % 2 != 0 && nums[i] / 10 % 2 != 0) {\n    \
    \            count++;\n            }\n        }\n    }\n    return count;", " \
    \   std::cout << \"nums is: \";\n    for (auto& n : nums) {\n        std::cout\
    \ << n << \" \";\n    }\n    std::cout << std::endl;\n    \n    int special_count\
    \ = 0;\n    for (auto n : nums) {\n        int last_digit = abs(n) % 10;\n   \
    \     int first_digit = abs(n);\n        while (first_digit >= 10) {\n       \
    \     first_digit /= 10;\n        }\n        bool f_is_odd = first_digit % 2 ==\
    \ 1;\n        bool l_is_odd = last_digit % 2 == 1;\n        if (n > 10 && f_is_odd\
    \ && l_is_odd) {\n            special_count++;\n        }\n    }\n    return special_count;",
  "    long count=0;\n    std::vector<long>::iterator it;\n    for(it=nums.begin();it!=nums.end();it++)\n\
    \    {\n        long num=*it;\n        long first_digit=num%10;\n        long\
    \ last_digit=num%10;\n        while(num!=0)\n        {\n            num=num/10;\n\
    \            last_digit=num%10;\n        }\n        if(first_digit%2!=0 && last_digit%2!=0\
    \ && first_digit>10)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;", "\tlong n = nums.size();\n\tlong answer = 0;\n\t// Write your code\
    \ here\n\tfor (int i = 0; i < n; i++) {\n\t\tif (nums[i] > 10) {\n\t\t\tlong num\
    \ = nums[i];\n\t\t\tint flag = 0;\n\t\t\twhile (num > 10) {\n\t\t\t\tnum = num\
    \ / 10;\n\t\t\t}\n\t\t\t//cout << num << endl;\n\t\t\tif (num % 2 == 1) {\n\t\t\
    \t\tflag = 1;\n\t\t\t}\n\t\t\tlong num1 = nums[i];\n\t\t\tnum1 = num1 % 10;\n\t\
    \t\t//cout << num1 << endl;\n\t\t\tif (num1 % 2 == 1) {\n\t\t\t\tflag = 1;\n\t\
    \t\t}\n\t\t\tif (flag == 1) {\n\t\t\t\tanswer++;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ answer;", "    return std::count_if(nums.begin(), nums.end(), [](long x) {\n\
    \        return x > 10 && x % 2 == 1 && log10(x) > 0 && x % 10 == 1;\n    });",
  "    long count=0;\n    for(long i=0;i<nums.size();i++)\n    {\n        long num=nums[i];\n\
    \        if(num>10)\n        {\n            long first_digit=num%10;\n       \
    \     long last_digit=num/10;\n            if(first_digit%2!=0&&last_digit%2!=0)\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;", "    long count = 0;\n    for(long i=0; i<nums.size(); i++){\n\
    \        if(nums[i]>10){\n            std::string str = std::to_string(nums[i]);\n\
    \            if(str[0]%2 != 0 && str[str.length()-1]%2 != 0){\n              \
    \  count++;\n            }\n        }\n    }\n    return count;", "\t// two iterators\
    \ for looping the given vector\n\tstd::vector<long>::iterator i, j;\n\t// counter\
    \ for number of elements that satisfy given conditions\n\tlong count = 0;\n\t\
    // looping through the given vector nums\n\tfor (i = nums.begin(); i != nums.end();\
    \ i++) {\n\t\t// temp variable to store the first and last digit of each element\n\
    \t\tlong firstDigit, lastDigit;\n\t\t// if the element is greater than 10\n\t\t\
    if (*i > 10) {\n\t\t\t// temp variable to store value of ith element\n\t\t\tlong\
    \ temp = *i;\n\t\t\t// looping until the temp is not equal to zero\n\t\t\twhile\
    \ (temp != 0) {\n\t\t\t\t// getting the last digit of the temp\n\t\t\t\tlastDigit\
    \ = temp % 10;\n\t\t\t\t// checking if last digit is odd or not\n\t\t\t\tif (lastDigit\
    \ % 2 != 0) {\n\t\t\t\t\t// looping until the temp is not equal to zero\n\t\t\t\
    \t\twhile (temp != 0) {\n\t\t\t\t\t\t// getting the first digit of the temp\n\t\
    \t\t\t\t\tfirstDigit = temp;\n\t\t\t\t\t\t// checking if first digit is odd or\
    \ not\n\t\t\t\t\t\tif (firstDigit % 2 != 0) {\n\t\t\t\t\t\t\t// then increment\
    \ the counter\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t// break out of inner loop\n\
    \t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// divide temp with 10 to get\
    \ rid of first digit\n\t\t\t\t\t\ttemp = temp / 10;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\
    \t\t\t// break out of outer loop\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t// return\
    \ the count variable\n\treturn count;", "\tlong result = 0;\n\tif (nums.size()\
    \ == 0)\n\t\treturn result;\n\tfor (std::vector<long>::iterator it = nums.begin();\
    \ it != nums.end(); it++) {\n\t\tif (*it >= 10) {\n\t\t\tlong first = *it;\n\t\
    \t\tlong second = *it;\n\t\t\twhile (first >= 10) {\n\t\t\t\tfirst = first / 10;\n\
    \t\t\t}\n\t\t\twhile (second <= 10) {\n\t\t\t\tsecond = second * 10;\n\t\t\t}\n\
    \t\t\tif (first % 2 != 0 && second % 2 != 0) {\n\t\t\t\tresult++;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn result;", "    long count = 0;\n    for(auto it = nums.begin();\
    \ it != nums.end(); it++) {\n        if(*it > 10) {\n            long copy = *it;\n\
    \            int last = copy % 10;\n            while(copy >= 10) {\n        \
    \        copy /= 10;\n            }\n            if(copy % 2 == 1 && last % 2\
    \ == 1) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;", "    long count = 0;\n    std::vector<long>::iterator it;\n    for(it\
    \ = nums.begin(); it != nums.end(); it++) {\n        long num = *it;\n       \
    \ if(num > 10) {\n            if(abs(num) % 10 % 2 != 0 && (num) / pow(10, ceil(log10(abs(num))))\
    \ % 2 != 0) {\n                count++;\n            }\n        }\n    }\n   \
    \ return count;", "\tlong c = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\
    \tif (nums[i] > 10) {\n\t\t\tif (nums[i] < 0) {\n\t\t\t\tif ((abs(nums[i]) % 10)\
    \ % 2 != 0 && (abs(nums[i]) / 10) % 2 != 0)\n\t\t\t\t\tc++;\n\t\t\t}\n\t\t\telse\
    \ {\n\t\t\t\tif ((nums[i] % 10) % 2 != 0 && (nums[i] / 10) % 2 != 0)\n\t\t\t\t\
    \tc++;\n\t\t\t}\n\t\t}\n\t}\n\treturn c;", "    long count = 0;\n    for(long\
    \ i=0; i<nums.size(); i++){\n        if (nums[i] > 10){\n            std::string\
    \ s = std::to_string(nums[i]);\n            if(s[0]%2 != 0 && s[s.length()-1]%2\
    \ != 0){\n                count++;\n            }\n        }\n    }\n    return\
    \ count;", "\t\n\tlong count=0;\n\tint c=0;\n\tfor(int i=0;i<nums.size();i++)\n\
    \t{\n\t\tif(nums[i]>10)\n\t\t{\n\t\t\tint a=nums[i]%10;\n\t\t\tint b=nums[i]/10;\n\
    \t\t\tif(a%2!=0 && b%2!=0)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return count;", "\tint count = 0;\n\t// for (int i = 0; i < nums.size(); i++)\
    \ {\n\t// \tint temp = nums[i];\n\t// \tif (nums[i] > 10) {\n\t// \t\twhile (temp\
    \ > 0) {\n\t// \t\t\tint lastDigit = temp % 10;\n\t// \t\t\tint firstDigit = temp;\n\
    \t// \t\t\twhile (firstDigit > 10) {\n\t// \t\t\t\tfirstDigit = firstDigit / 10;\n\
    \t// \t\t\t}\n\t// \t\t\tif (lastDigit % 2 != 0 && firstDigit % 2 != 0) {\n\t\
    // \t\t\t\tcount += 1;\n\t// \t\t\t}\n\t// \t\t\ttemp = temp / 10;\n\t// \t\t\
    }\n\t// \t}\n\t// }\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tstd::string\
    \ s = std::to_string(nums[i]);\n\t\tif (nums[i] > 10 && (s[0] - '0') % 2 != 0\
    \ && (s[s.length() - 1] - '0') % 2 != 0) {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\t\
    return count;", "\t// Write your code here\n\tlong count = 0;\n\tfor (long i =\
    \ 0; i < nums.size(); i++) {\n\t\tif (nums[i] >= 10) {\n\t\t\tlong n = nums[i];\n\
    \t\t\tlong last_digit = n % 10;\n\t\t\tlong first_digit = n;\n\t\t\tif (first_digit\
    \ < 0) {\n\t\t\t\tfirst_digit = first_digit * -1;\n\t\t\t}\n\t\t\twhile (first_digit\
    \ >= 10) {\n\t\t\t\tfirst_digit = first_digit / 10;\n\t\t\t}\n\t\t\tif (first_digit\
    \ % 2 != 0 && last_digit % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return count;", "\tlong answer = 0;\n\tfor (long i = 0; i < nums.size(); i++)\
    \ {\n\t\tlong first = std::abs(nums[i]);\n\t\tlong last = nums[i] % 10;\n\t\t\
    if (first > 10 && first % 2 != 0 && last % 2 != 0) {\n\t\t\tanswer++;\n\t\t}\n\
    \t}\n\treturn answer;", "    long counter=0;\n    for(auto a:nums){\n        if(a<10)\n\
    \            continue;\n        if(a%2==0)\n            continue;\n        long\
    \ temp=a;\n        while(temp){\n            if(temp%10%2==0)\n              \
    \  break;\n            temp/=10;\n        }\n        if(temp==0)\n           \
    \ counter++;\n    }\n    return counter;", "  long counter=0;\n  for(auto i:nums){\n\
    \    if(i>10 && abs(i)%10%2!=0 && abs(i)/10>9 && abs(i)/10%10%2!=0){\n      counter++;\n\
    \    }\n  }\n  return counter;", "\t/* ... your code goes here */\n\t// std::vector<long>\
    \ v1;\n\tint count = 0;\n\tint lastDigit;\n\tint firstDigit;\n\tfor(int i = 0;\
    \ i < nums.size(); i++){\n\t\tif(nums[i] > 10){\n\t\t\tif(nums[i] % 10 == 1 ||\
    \ nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i] % 10 == 7 || nums[i] % 10\
    \ == 9){\n\t\t\t\tint j = nums[i];\n\t\t\t\t// std::cout << j << std::endl;\n\t\
    \t\t\t// std::cout << \"J is: \" << j << std::endl;\n\t\t\t\twhile(j > 10){\n\t\
    \t\t\t\tj = j / 10;\n\t\t\t\t\t// std::cout << \"J is: \" << j << std::endl;\n\
    \t\t\t\t}\n\t\t\t\t// std::cout << \"J is: \" << j << std::endl;\n\t\t\t\tif(j\
    \ == 1 || j == 3 || j == 5 || j == 7 || j == 9){\n\t\t\t\t\tcount++;\n\t\t\t\t\
    }\n\t\t\t}\n\t\t}\n\t}\n\t// std::cout << count << std::endl;\n\treturn count;\n\
    \t// return v1;", "    long count = 0;\n    for(int i = 0; i < nums.size(); i++)\
    \ {\n        if(nums[i] > 10) {\n            if(nums[i] % 2 != 0) {\n        \
    \        long rev = 0;\n                long remainder;\n                while(nums[i]\
    \ != 0) {\n                    remainder = nums[i] % 10;\n                   \
    \ rev = rev * 10 + remainder;\n                    nums[i] /= 10;\n          \
    \      }\n                if(rev % 2 != 0) {\n                    count++;\n \
    \               }\n            }\n        }\n    }\n    return count;", "    //\
    \ Write your code here\n    int count = 0;\n    for(int i = 0; i < nums.size();\
    \ i++){\n        long number = nums[i];\n        if(number < 10) continue;\n \
    \       bool flag = (number % 10) % 2 != 0 && number / 10 > 10;\n        if(flag){\n\
    \            count++;\n        }\n    }\n    return count;", "  long n = nums.size();\n\
    \  long count = 0;\n  for(long i = 0; i < n; i++) {\n    long num = nums[i];\n\
    \    if(num > 10) {\n      long first = num;\n      long last = num;\n      while(first\
    \ > 10) {\n        first = first / 10;\n      }\n      while(last < -10) {\n \
    \       last = last / 10;\n      }\n      if(first < 0) {\n        first = first\
    \ * -1;\n      }\n      if(last < 0) {\n        last = last * -1;\n      }\n \
    \     if(first % 2 != 0 && last % 2 != 0) {\n        count = count + 1;\n    \
    \  }\n    }\n  }\n  return count;", "    long count = 0;\n    long firstDigit,\
    \ lastDigit;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] >\
    \ 10) {\n            lastDigit = nums[i] % 10;\n            firstDigit = nums[i];\n\
    \            while(firstDigit >= 10) {\n                firstDigit = firstDigit\
    \ / 10;\n            }\n            if(firstDigit % 2 != 0 && lastDigit % 2 !=\
    \ 0) {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;", "    long n=0;\n    for(int i=0;i<nums.size();i++)\n    {\n       \
    \ if(nums[i]>10&&nums[i]%2!=0&&nums[i]/10%2!=0)\n        {\n            n++;\n\
    \        }\n    }\n    return n;", "    long count = 0;\n    // Write your code\
    \ here\n    // To print results to the standard output you can use the cout stream\n\
    \    // Example: cout << \"Hello world!\";\n    for(int i=0;i<nums.size();i++){\n\
    \        int a = abs(nums[i]);\n        if(a>10){\n            if(a%10==1||a%10==3||a%10==5||a%10==7||a%10==9){\n\
    \                int c = a;\n                int d = 0;\n                while(c!=0){\n\
    \                    d = c%10;\n                    c = c/10;\n              \
    \  }\n                if(d==1||d==3||d==5||d==7||d==9){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;", "   \
    \ // TODO: Write your code here\n    return 0;", "  int count = 0;\n  for (int\
    \ i = 0; i < nums.size(); i++) {\n    int a = nums[i];\n    if (a > 10) {\n  \
    \    int a_first = a;\n      int a_last = a;\n      while (a_first != 0) {\n \
    \       a_first = a_first / 10;\n        a_last = a_last % 10;\n      }\n    \
    \  if (a_first % 2 != 0 && a_last % 2 != 0) {\n        count += 1;\n      }\n\
    \    }\n  }\n  return count;", "\tlong count = 0;\n\tstd::string s;\n\tfor (int\
    \ i = 0; i < nums.size(); i++) {\n\t\ts = std::to_string(nums[i]);\n\t\tif (nums[i]\
    \ > 10 && s[0]%2 != 0 && s[s.size()-1]%2 != 0) {\n\t\t\tcount++;\n\t\t}\n\t}\n\
    \treturn count;", '  return 0;', "    long count=0;\n    for(auto n:nums){\n \
    \       std::stringstream ss;\n        ss<<n;\n        std::string str;\n    \
    \    ss>>str;\n        if(n>10 && ((int)str[0]%2==1) && ((int)str[str.size()-1]%2==1))\n\
    \            count++;\n    }\n    return count;", "\t\n\t\treturn 0;", "  // write\
    \ your code here\n  long count = 0;\n  for(auto number : nums) {\n    // check\
    \ for 10\n    if(number > 10) {\n      // check for first digit\n      if(number\
    \ < 0) {\n        number = -number;\n      }\n      int firstDigit = number %\
    \ 10;\n      if(firstDigit == 1 || firstDigit == 3 || firstDigit == 5 || firstDigit\
    \ == 7 || firstDigit == 9) {\n        // check for last digit\n        int lastDigit\
    \ = 0;\n        while(number) {\n          lastDigit = number % 10;\n        \
    \  number /= 10;\n        }\n        if(lastDigit == 1 || lastDigit == 3 || lastDigit\
    \ == 5 || lastDigit == 7 || lastDigit == 9) {\n          count++;\n        }\n\
    \      }\n    }\n  }\n  return count;", "    long i,j,k,sum=0;\n    for(i=0;i<nums.size();i++)\n\
    \    {\n        if(nums[i]<10)\n        {\n            if(nums[i]%2!=0)\n    \
    \        {\n                sum++;\n            }\n        }\n        else\n \
    \       {\n            j=nums[i];\n            while(j>0)\n            {\n   \
    \             k=j%10;\n                if(k%2==0)\n                {\n       \
    \             break;\n                }\n                j=j/10;\n           \
    \ }\n            if(j==0)\n            {\n                sum++;\n           \
    \ }\n        }\n    }\n    return sum;", "    long c = 0;\n    for(long i = 0;\
    \ i < nums.size(); i++) {\n        if(nums[i] > 10) {\n            if(nums[i]%10\
    \ != 0 && nums[i]/10 != 0) {\n                c++;\n            }\n        }\n\
    \    }\n    return c;", "    std::vector<long>::iterator v;\n    int l,r,temp,c=0;\n\
    \    for(v=nums.begin();v!=nums.end();v++)\n    {\n        temp=*v;\n        if(temp>10)\n\
    \        {\n            l=temp%10;\n            r=temp/10;\n            if(l%2!=0\
    \ && r%2!=0)\n            {\n                c++;\n            }\n        }\n\
    \    }\n    return c;", "    long count = 0;\n    for(long i = 0; i < nums.size();\
    \ i++) {\n        if(nums[i] > 10) {\n            std::string s = std::to_string(nums[i]);\n\
    \            if(s[0] % 2 != 0 && s[s.size() - 1] % 2 != 0) {\n               \
    \ count++;\n            }\n        }\n    }\n    return count;", "    long count\
    \ = 0;\n    std::vector<long>::iterator itr = nums.begin();\n    while(itr !=\
    \ nums.end()) {\n        if(*itr > 10) {\n            long cpy = *itr;\n     \
    \       long fst = *itr;\n            long snd = 0;\n            while(cpy !=\
    \ 0) {\n                fst = cpy % 10;\n                cpy /= 10;\n        \
    \        snd = cpy % 10;\n            }\n            if(fst % 2 != 0 && snd %\
    \ 2 != 0)\n                count++;\n        }\n        itr++;\n    }\n    return\
    \ count;", "    long count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n\
    \        if (nums[i] < 10) {\n            continue;\n        }\n        if (nums[i]\
    \ % 2 == 0) {\n            continue;\n        }\n        long last = nums[i] %\
    \ 10;\n        long first = nums[i];\n        while (first > 9) {\n          \
    \  first /= 10;\n        }\n        if (first % 2 == 0) {\n            continue;\n\
    \        }\n        if (last % 2 == 0) {\n            continue;\n        }\n \
    \       count++;\n    }\n    return count;", "  return count_if(nums.begin(),\
    \ nums.end(), [](long i) -> bool {\n    if (i < 10) return false;\n    std::string\
    \ s = std::to_string(i);\n    if (s[0] % 2 != 1 || s[s.size() - 1] % 2 != 1) return\
    \ false;\n    return true;\n  });", '    // Write your code here...', "\t// Write\
    \ your code here\n\tstd::vector<long> newVector;\n\tint count = 0;\n\tfor (int\
    \ i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] > 10) {\n\t\t\tint num = nums[i];\n\
    \t\t\tint rem;\n\t\t\tint remainder = num % 10;\n\t\t\twhile (num != 0) {\n\t\t\
    \t\trem = num % 10;\n\t\t\t\tnum = num / 10;\n\t\t\t}\n\t\t\tif (rem % 2 != 0\
    \ && remainder % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;",
  "    int count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        std::vector<int>\
    \ v;\n        while(nums[i] > 0) {\n            v.push_back(nums[i] % 10);\n \
    \           nums[i] /= 10;\n        }\n        if(v.size() < 2) continue;\n  \
    \      if(v[0] % 2 != 0 && v[v.size() - 1] % 2 != 0 && v[v.size() - 1] >= 10)\
    \ {\n            count++;\n        }\n    }\n    return count;", "    long count=0;\n\
    \    for(int i=0;i<nums.size();i++)\n    {\n        long n=nums[i];\n        if(n>10)\n\
    \        {\n            long first=n%10;\n            long last;\n           \
    \ while(n>0)\n            {\n                last=n%10;\n                n=n/10;\n\
    \            }\n            if(first%2!=0&&last%2!=0)\n            {\n       \
    \         count++;\n            }\n        }\n    }\n    return count;", "  long\
    \ count=0;\n  for(auto it=nums.begin();it!=nums.end();it++){\n    if((*it>10)&&(*it%2==1)){\n\
    \      long n=*it;\n      long sum=0;\n      for(int i=0;i<2;i++){\n        sum+=n%10;\n\
    \        n=n/10;\n      }\n      if(sum%2==1){\n        count++;\n      }\n  \
    \  }\n  }\n  return count;", "    long greaterThan10 = 0;\n    long firstAndLastDigitOdd\
    \ = 0;\n    for (auto num : nums) {\n        if (num > 10) {\n            greaterThan10++;\n\
    \            long firstDigit = num;\n            while (firstDigit >= 10) {\n\
    \                firstDigit /= 10;\n            }\n            long lastDigit\
    \ = num % 10;\n            if (firstDigit % 2 == 1 && lastDigit % 2 == 1) {\n\
    \                firstAndLastDigitOdd++;\n            }\n        }\n    }\n  \
    \  return firstAndLastDigitOdd;", "    std::vector<long> final;\n    for(int i=0;i<nums.size();i++){\n\
    \        long num=nums[i];\n        if(abs(num)>10){\n            long left=num%10;\n\
    \            long right=num/10;\n            while(right!=0){\n              \
    \  left=right%10;\n                right=right/10;\n            }\n          \
    \  if(left%2!=0 && (num%10)%2!=0){\n                final.push_back(num);\n  \
    \          }\n        }\n    }\n    return final.size();", "    int count = 0;\n\
    \    for(auto i: nums){\n        if(i > 10 && i % 2 != 0){\n            long f\
    \ = i / 10;\n            while(f >= 10){\n                f = f / 10;\n      \
    \      }\n            long l = i % 10;\n            if(f % 2 != 0 && l % 2 !=\
    \ 0){\n                count++;\n            }\n        }\n    }\n    return count;",
  "\tlong count = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] >\
    \ 10) {\n\t\t\tint digit = nums[i] % 10;\n\t\t\twhile (nums[i] > 0) {\n\t\t\t\t\
    digit = nums[i] % 10;\n\t\t\t\tnums[i] = nums[i] / 10;\n\t\t\t}\n\t\t\tif (digit\
    \ % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    //\
    \ Write your code here\n    long count = 0;\n    for(long i = 0; i < nums.size();\
    \ i++){\n        long first = nums[i];\n        long last = nums[i] % 10;\n  \
    \      if(nums[i] > 10 && first % 2 != 0 && last % 2 != 0){\n            count++;\n\
    \        }\n    }\n    return count;", "    return count_if(nums.begin(), nums.end(),\
    \ [](long n) {\n        if (n > 10) {\n            if (n < 0) n = -n;\n      \
    \      long first = n % 10;\n            long last = n / pow(10, floor(log10(n)));\n\
    \            return (first % 2) && (last % 2);\n        }\n        return false;\n\
    \    });", "    long cnt = 0;\n    for (const auto num : nums) {\n        if (num\
    \ <= 10) {\n            continue;\n        }\n        if (num < 0) {\n       \
    \     auto pos = std::abs(num);\n            if (pos % 10 % 2 != 0) {\n      \
    \          cnt++;\n            }\n        } else {\n            if (num % 10 %\
    \ 2 != 0 && num / 10 % 10 % 2 != 0) {\n                cnt++;\n            }\n\
    \        }\n    }\n    return cnt;", "  //Write your code here\n  \n  int len\
    \ = nums.size();\n  int ctr = 0;\n  for(int i=0;i<len;i++)\n  {\n      int n =\
    \ nums[i];\n      if(nums[i] > 10)\n      {\n          int fd = n%10;\n      \
    \    int ld = n;\n          while(ld > 9)\n          {\n              ld = ld/10;\n\
    \          }\n          if(fd%2!=0 && ld%2!=0)\n          {\n              ctr++;\n\
    \          }\n      }\n  }\n  return ctr;", "  // your code goes here\n  long\
    \ count = 0;\n  for(int i = 0; i < nums.size(); i++){\n    std::string num1 =\
    \ std::to_string(nums[i]);\n    int first_digit = num1[0] - '0';\n    int last_digit\
    \ = num1[num1.size()-1] - '0';\n    if(nums[i] > 10 && first_digit % 2 != 0 &&\
    \ last_digit % 2 != 0){\n      count++;\n    }\n  }\n  return count;", "  // put\
    \ your code here\n    // std::vector<long> b;\n    long c = 0;\n    for(long i=0;i<nums.size();i++){\n\
    \        if((nums[i]>10) && (abs(nums[i])%10%2!=0) && ((abs(nums[i])/10)%10%2!=0)){\n\
    \            c++;\n        }\n    }\n    return c;", "\tlong count = 0;\n\tlong\
    \ length = nums.size();\n\tfor (long i = 0; i < length; i++) {\n\t\tlong firstDigit\
    \ = nums[i] / 10;\n\t\tlong lastDigit = nums[i] % 10;\n\t\tif (firstDigit % 2\
    \ != 0 && lastDigit % 2 != 0 && nums[i] > 10) {\n\t\t\tcount++;\n\t\t}\n\t}\n\t\
    return count;", "    int count = 0;\n    for(int i = 0; i < nums.size(); i++)\
    \ {\n        if(nums[i] > 10 && (nums[i] / 10) % 2 == 1 && nums[i] % 2 == 1)\n\
    \            count++;\n    }\n    return count;", "    int count = 0;\n    int\
    \ first, last;\n    for(long i: nums){\n        if(i<10 && i > 0){\n         \
    \   count += i%2;\n        }\n        else if(i>10){\n            first = i%10;\n\
    \            last = 0;\n            while(i){\n                last = i%10;\n\
    \                i /= 10;\n            }\n            if(last%2 && first%2){\n\
    \                count += 1;\n            }\n        }\n    }\n    return count;",
  "    long k=0;\n    for(long i=0;i<nums.size();i++)\n    {\n        long n=nums[i];\n\
    \        if(n<0)\n        {\n            n=-n;\n        }\n        if(n>10)\n\
    \        {\n            if(n/10%2!=0)\n            {\n                if(n%10%2!=0)\n\
    \                {\n                    k++;\n                }\n            }\n\
    \        }\n    }\n    return k;", "    long count=0;\n    long n,i,d,flag=0;\n\
    \    for(n=0;n<nums.size();n++)\n    {\n        int sum=0;\n        d=nums[n];\n\
    \        while(d!=0)\n        {\n            i=d%10;\n            sum=sum+i;\n\
    \            d=d/10;\n        }\n        if(sum%2!=0)\n        {\n           \
    \ if(nums[n]>10)\n            {\n                count++;\n            }\n   \
    \     }\n    }\n    return count;", "    long count = 0;\n    long temp = 0;\n\
    \    int flag1 = 0;\n    int flag2 = 0;\n    for(int i = 0; i < nums.size(); i++)\
    \ {\n        flag1 = 0;\n        flag2 = 0;\n        temp = nums[i];\n       \
    \ if(nums[i] > 10) {\n            flag1 = 1;\n            if(temp % 10 % 2 !=\
    \ 0) {\n                flag2 = 1;\n            }\n            while(temp > 10)\
    \ {\n                temp = temp / 10;\n            }\n            if(temp % 2\
    \ != 0) {\n                flag2 = 1;\n            }\n        }\n        if(flag1\
    \ == 1 && flag2 == 1) {\n            count++;\n        }\n    }\n    return count;",
  "    long m,i,c=0;\n    for(i=0;i<nums.size();i++)\n    {\n        m=nums[i];\n\
    \        if(m>10)\n        {\n            while(m!=0)\n            {\n       \
    \         int n=m%10;\n                if(n%2==0)\n                {\n       \
    \             break;\n                }\n                else\n              \
    \  {\n                    m=m/10;\n                }\n            }\n        \
    \    if(m==0)\n            {\n                c++;\n            }\n        }\n\
    \    }\n    return c;", "    long count = 0;\n    for(long i=0; i<nums.size();\
    \ i++){\n        if(nums[i]>10){\n            long firstDigit = nums[i]/10;\n\
    \            long lastDigit = nums[i]%10;\n            if(firstDigit%2 != 0 &&\
    \ lastDigit%2 != 0){\n                count += 1;\n            }\n        }\n\
    \    }\n    return count;", "    // std::cout << nums.size() << \"\\n\";\n   \
    \ int count = 0;\n    std::vector<long>::iterator it;\n    for(it = nums.begin();\
    \ it != nums.end(); it++) {\n        // First digit\n        int a = (int)(*it/std::pow(10,\
    \ (int)log10(*it)));\n        // Last digit\n        int b = (int)(*it - (a *\
    \ std::pow(10, (int)log10(*it))));\n        if(*it > 10 && a%2 != 0 && b%2 !=\
    \ 0) {\n            count++;\n        }\n    }\n    return count;", "    int count\
    \ = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        if (nums[i] < 10)\
    \ {\n            continue;\n        } else {\n            int first_digit = nums[i]\
    \ % 10;\n            int last_digit = nums[i] / 10;\n            if (first_digit\
    \ % 2 != 0 && last_digit % 2 != 0) {\n                count++;\n            }\n\
    \        }\n    }\n    return count;", "\tlong count = 0;\n\tfor (long num : nums)\
    \ {\n\t\t//check number is greater than 10\n\t\tif (num > 10) {\n\t\t\tlong firstDigit\
    \ = 0;\n\t\t\tlong lastDigit = 0;\n\t\t\t// find out first and last digit\n\t\t\
    \tfirstDigit = num % 10;\n\t\t\twhile (num > 0) {\n\t\t\t\tlastDigit = num % 10;\n\
    \t\t\t\tnum = num / 10;\n\t\t\t}\n\t\t\t// check if both digits are odd\n\t\t\t\
    if (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn count;", "    return std::count_if(nums.begin(), nums.end(),\
    \ [](long a) {\n        int first = a < 0 ? -a : a;\n        int last = a % 10;\n\
    \        if (first > 10 && ((first % 2 == 1 && last % 2 == 1) || (first % 2 ==\
    \ 0 && last % 2 == 0)))\n            return true;\n        return false;\n   \
    \ });", "  long long count{0};\n  for(auto ele:nums){\n    int firstDigit=ele;\n\
    \    int lastDigit=ele%10;\n    while(firstDigit>=10){\n      firstDigit=firstDigit/10;\n\
    \    }\n    if(ele>10 && (firstDigit%2!=0) && (lastDigit%2!=0)){\n      count++;\n\
    \    }\n  }\n  return count;", "    long r = 0;\n    int first, last;\n    for\
    \ (int i = 0; i < nums.size(); i++) {\n        last = nums[i] % 10;\n        while\
    \ (nums[i] >= 10)\n            nums[i] /= 10;\n        first = nums[i];\n    \
    \    if (nums[i] > 10 && first % 2 != 0 && last % 2 != 0)\n            r++;\n\
    \    }\n    return r;", "\t//write your code here\n\tstd::vector<long> numbers;\n\
    \tint s = nums.size();\n\tfor (int i = 0; i < s; i++) {\n\t\tif (nums[i] > 10)\
    \ {\n\t\t\tnumbers.push_back(nums[i]);\n\t\t}\n\t}\n\ts = numbers.size();\n\t\
    int count = 0;\n\tfor (int i = 0; i < s; i++) {\n\t\tint num = numbers[i];\n\t\
    \tint div = num % 10;\n\t\tint div1 = num / 10;\n\t\twhile (div1 > 0) {\n\t\t\t\
    div1 = div1 / 10;\n\t\t}\n\t\tif (div % 2 != 0 and div1 % 2 != 0) {\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;", "    long ret = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        // make sure the number is > 10\n        if (nums[i] > 10) {\n\
    \            // make sure the first and last digits are odd\n            long\
    \ lastDigit = nums[i] % 10;\n            long firstDigit = nums[i];\n        \
    \    while (firstDigit > 10) {\n                firstDigit /= 10;\n          \
    \  }\n            if (lastDigit % 2 == 1 && firstDigit % 2 == 1) {\n         \
    \       ret++;\n            }\n        }\n    }\n    return ret;", "\tint count\
    \ = 0;\n\tstd::vector<long>::iterator it;\n\tfor (it = nums.begin(); it != nums.end();\
    \ it++) {\n\t\tlong num = *it;\n\t\tif (num < 0) {\n\t\t\tnum = num * -1;\n\t\t\
    }\n\t\tif (num > 10) {\n\t\t\tint first = num % 10;\n\t\t\tint last = num;\n\t\
    \t\twhile (last >= 10) {\n\t\t\t\tlast = last / 10;\n\t\t\t}\n\t\t\tif (first\
    \ % 2 != 0 && last % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ count;", "    long c = 0;\n    int i;\n    for(i=0;i<nums.size();i++)\n    {\n\
    \        if(nums[i]>10)\n        {\n            int a=nums[i]%10;\n          \
    \  int b=nums[i]/10;\n            if(a%2!=0 && b%2!=0)\n            {\n      \
    \          c++;\n            }\n        }\n    }\n    return c;", "  long greaterthan10\
    \ = 0;\n  long firstDigit = 0;\n  long lastDigit = 0;\n  long count = 0;\n  int\
    \ i;\n  for(i=0;i<nums.size();i++)\n  {\n    if(nums[i] > 10)\n    {\n      greaterthan10++;\n\
    \      lastDigit = nums[i] % 10;\n      while(nums[i] >= 10)\n      {\n      \
    \  nums[i] = nums[i] / 10;\n      }\n      firstDigit = nums[i];\n      if(firstDigit\
    \ % 2 != 0 && lastDigit % 2 != 0)\n      {\n        count++;\n      }\n    }\n\
    \  }\n  return count;", "\tlong out = 0;\n\tfor (long long n : nums) {\n\t\tif\
    \ (n >= 10 && abs(n) % 10 % 2 != 0 && n / 10 % 10 % 2 != 0) {\n\t\t\tout++;\n\t\
    \t}\n\t}\n\treturn out;", "    // TODO: implement function\n    // return 0;\n\
    \    int i,count=0;\n    for(i=0;i<nums.size();i++)\n    {\n        if(nums[i]>10)\n\
    \        {\n            long n=nums[i];\n            while(n>0)\n            {\n\
    \                int rem=n%10;\n                n=n/10;\n                if(rem%2==0)\n\
    \                {\n                    count++;\n                    break;\n\
    \                }\n            }\n        }\n    }\n    return count;", "  long\
    \ c = 0;\n  for(auto i : nums) {\n    if(i < 10 || i > 10) {\n      continue;\n\
    \    }\n    long first = i / 10;\n    long last = i % 10;\n    if(first % 2 !=\
    \ 0 && last % 2 != 0) {\n      c++;\n    }\n  }\n  return c;", "    long result\
    \ = 0;\n    for (int i = 0; i < nums.size(); i++) {\n        long number = nums[i];\n\
    \        if (number < 10) {\n            continue;\n        }\n        bool firstDigitIsOdd\
    \ = number % 10 % 2 == 1;\n        long numDigits = 1;\n        long num = number;\n\
    \        while (num > 10) {\n            num /= 10;\n            numDigits++;\n\
    \        }\n        long lastDigit = num;\n        bool lastDigitIsOdd = lastDigit\
    \ % 2 == 1;\n        if (firstDigitIsOdd && lastDigitIsOdd) {\n            result++;\n\
    \        }\n    }\n    return result;", "\t// Write your code here.\n\tif (nums.size()\
    \ == 0)\n\t\treturn 0;\n\telse {\n\t\tlong count = 0;\n\t\tlong firstDigit, lastDigit;\n\
    \t\tlong first, last;\n\t\tfor (auto e : nums) {\n\t\t\tif (e >= 10) {\n\t\t\t\
    \tfirst = e;\n\t\t\t\tlast = e;\n\t\t\t\twhile (first > 10) {\n\t\t\t\t\tfirst\
    \ = first / 10;\n\t\t\t\t}\n\t\t\t\tfirstDigit = first;\n\t\t\t\tlastDigit = last\
    \ % 10;\n\t\t\t\tif (firstDigit % 2 != 0 && lastDigit % 2 != 0)\n\t\t\t\t\tcount++;\n\
    \t\t\t}\n\t\t}\n\t\treturn count;\n\t}", "    int count = 0;\n    for(int i =\
    \ 0; i < nums.size(); i++) {\n        if(nums[i] > 10 && nums[i] % 2 == 1 && (nums[i]/10)\
    \ % 2 == 1)\n            count++;\n    }\n    return count;", "  // Write your\
    \ code here\n  int count = 0;\n  for(auto i: nums){\n    if(abs(i)>10){\n    \
    \  std::string s = std::to_string(abs(i));\n      if(s[0]%2==1 && s[s.size()-1]%2==1){\n\
    \        count++;\n      }\n    }\n  }\n  return count;", "    long count = 0;\n\
    \    for(auto i = nums.begin(); i != nums.end(); i++) {\n        if(*i < 10) {\n\
    \            continue;\n        }\n        long num = *i;\n        long lastDigit\
    \ = num % 10;\n        if(lastDigit % 2 == 0) {\n            continue;\n     \
    \   }\n        bool isFirstOdd = false;\n        while(num > 0) {\n          \
    \  if(num < 10) {\n                if(num % 2 != 0) {\n                    isFirstOdd\
    \ = true;\n                }\n                break;\n            }\n        \
    \    num /= 10;\n        }\n        if(isFirstOdd) {\n            count++;\n \
    \       }\n    }\n    return count;", "  long result=0;\n  for(auto n:nums){\n\
    \    //check if n is greater than 10\n    if(n<=10) continue;\n    //check first\
    \ digit is odd\n    int m=n;\n    bool last_digit_odd=false;\n    while(m>10){\n\
    \      m/=10;\n    }\n    if(m%2) last_digit_odd=true;\n    //check last digit\
    \ is odd\n    m=n%10;\n    bool first_digit_odd=false;\n    if(m%2) first_digit_odd=true;\n\
    \    if(first_digit_odd && last_digit_odd) result++;\n  }\n  return result;",
  "    long count = 0;\n    int n = nums.size();\n    for(int i = 0; i < n; i++) {\n\
    \        int last = nums[i] % 10;\n        int first = nums[i];\n        while(first\
    \ >= 10) {\n            first /= 10;\n        }\n        if(nums[i] > 10 && last\
    \ % 2 == 1 && first % 2 == 1) {\n            count++;\n        }\n    }\n    return\
    \ count;", "\tstd::vector<long> temp;\n\tfor (auto i : nums) {\n\t\tif (i > 10)\
    \ {\n\t\t\tif (i % 2 != 0 && i > 0) {\n\t\t\t\ttemp.push_back(i);\n\t\t\t}\n\t\
    \t\telse if (i % 2 == 0 && i < 0) {\n\t\t\t\ttemp.push_back(i);\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn temp.size();", "    int count = 0;\n    for(int i = 0; i < nums.size();\
    \ i++) {\n        if(abs(nums[i]) > 10 && nums[i] % 2 == 1 && (abs(nums[i]) %\
    \ 10) % 2 == 1)\n            count++;\n    }\n    return count;", "  long size\
    \ = nums.size();\n  long count = 0;\n  for(int i = 0; i < size; i++) {\n    long\
    \ temp = nums[i];\n    long first = temp % 10;\n    while(temp > 10) {\n     \
    \ temp = temp / 10;\n    }\n    long last = temp;\n    if(nums[i] > 10 && first\
    \ % 2 != 0 && last % 2 != 0) {\n      count++;\n    }\n  }\n  return count;",
  "    std::vector<long> result;\n    for (auto num : nums) {\n        if (num < 0)\
    \ {\n            num = std::abs(num);\n        }\n        if (num > 10) {\n  \
    \          int lastDigit = num % 10;\n            while (num != 0) {\n       \
    \         int firstDigit = num % 10;\n                if (firstDigit % 2 != 0\
    \ && lastDigit % 2 != 0) {\n                    result.push_back(num);\n     \
    \           }\n                num /= 10;\n            }\n        }\n    }\n \
    \   return result.size();", "\tstd::vector<long>::iterator it = nums.begin();\n\
    \tlong count = 0;\n\twhile (it != nums.end()) {\n\t\tlong temp = *it;\n\t\tlong\
    \ first = temp;\n\t\tlong last = temp;\n\t\twhile (first >= 10) {\n\t\t\tfirst\
    \ = first / 10;\n\t\t}\n\t\twhile (last > 0) {\n\t\t\tlast = last % 10;\n\t\t\
    }\n\t\tif ((temp > 10) && (first % 2 != 0) && (last % 2 != 0)) {\n\t\t\tcount++;\n\
    \t\t}\n\t\tit++;\n\t}\n\treturn count;", "\tlong i,count=0;\n\tfor(i=0;i<nums.size();i++)\n\
    \t{\n\t\tif(nums[i]>10)\n\t\t{\n\t\t\tif(nums[i]%10==1||nums[i]%10==3||nums[i]%10==5||nums[i]%10==7||nums[i]%10==9)\n\
    \t\t\t{\n\t\t\t\tlong c=nums[i];\n\t\t\t\twhile(c>=10)\n\t\t\t\t{\n\t\t\t\t\t\
    c=c/10;\n\t\t\t\t}\n\t\t\t\tif(c==1||c==3||c==5||c==7||c==9)\n\t\t\t\t{\n\t\t\t\
    \t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "  long total\
    \ = 0;\n  for (long i = 0; i < nums.size(); i++) {\n    if (nums[i] > 10) {\n\
    \      std::string temp = std::to_string(nums[i]);\n      std::string first_str\
    \ = temp.substr(0, 1);\n      std::string last_str = temp.substr(temp.size() -\
    \ 1, 1);\n      int first = std::stoi(first_str);\n      int last = std::stoi(last_str);\n\
    \      if (first % 2 != 0 && last % 2 != 0) {\n        total += 1;\n      }\n\
    \    }\n  }\n  return total;", "\tlong len = nums.size();\n\tlong count = 0;\n\
    \tfor (long i = 0; i < len; i++) {\n\t\tif (nums[i] > 10) {\n\t\t\tlong t = nums[i];\n\
    \t\t\tlong f = nums[i] % 10;\n\t\t\twhile (t != 0) {\n\t\t\t\tt = t / 10;\n\t\t\
    \t}\n\t\t\tif (f % 2 != 0 && t % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn count;", "\tlong counter=0;\n\tfor(int i=0;i<nums.size();i++){\n\
    \t\tif(nums[i]>10 && ((nums[i]%10==1) || (nums[i]%10==3) || (nums[i]%10==5) ||\
    \ (nums[i]%10==7) || (nums[i]%10==9))){\n\t\t\tlong x=nums[i];\n\t\t\tlong count=0;\n\
    \t\t\twhile(x>0){\n\t\t\t\tcount++;\n\t\t\t\tx=x/10;\n\t\t\t}\n\t\t\tlong a[count];\n\
    \t\t\tlong i=0;\n\t\t\twhile(nums[i]>0){\n\t\t\t\ta[i]=nums[i]%10;\n\t\t\t\tnums[i]=nums[i]/10;\n\
    \t\t\t\ti++;\n\t\t\t}\n\t\t\tif((a[0]==1) || (a[0]==3) || (a[0]==5) || (a[0]==7)\
    \ || (a[0]==9)){\n\t\t\t\tcounter++;\n\t\t\t}\n\t\t}\n\t}\n\treturn counter;",
  "    return std::count_if(nums.begin(), nums.end(), [](auto num) {\n        if (num\
    \ <= 10) {\n            return false;\n        }\n        int firstDigit = 0;\n\
    \        int lastDigit = 0;\n        while (num != 0) {\n            lastDigit\
    \ = num % 10;\n            num /= 10;\n        }\n        firstDigit = num;\n\
    \        return lastDigit % 2 != 0 && firstDigit % 2 != 0;\n    });", "    auto\
    \ it = nums.begin();\n    long num = 0;\n    while(it != nums.end()) {\n     \
    \   if(!(*it >= 10)) {\n            it = nums.erase(it);\n        } else {\n \
    \           it++;\n        }\n    }\n    for(auto it = nums.begin(); it != nums.end();\
    \ it++) {\n        long num1 = *it % 10;\n        long num2 = *it;\n        while(num2\
    \ > 10) {\n            num2 /= 10;\n        }\n        if(num1 % 2 != 0 && num2\
    \ % 2 != 0) {\n            num++;\n        }\n    }\n    return num;", "\t// Write\
    \ your code here\n\tint count = 0;\n\tfor (long i = 0; i < nums.size(); i++) {\n\
    \t\tlong temp = nums[i];\n\t\tint first = temp % 10;\n\t\tint last = temp;\n\t\
    \twhile (last > 10) {\n\t\t\tlast = last / 10;\n\t\t}\n\t\tif (first % 2 != 0\
    \ && last % 2 != 0 && temp > 10) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
  "    int count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        int num\
    \ = nums[i];\n        bool one_test = false;\n        bool ten_test = false;\n\
    \        // check first digit\n        if(num >= 0) {\n            one_test =\
    \ num % 10 % 2 == 1;\n        } else {\n            one_test = num % -10 % 2 ==\
    \ 1;\n        }\n        // check last digit\n        if(num > 10) {\n       \
    \     num = num / 10;\n            if(num >= 0) {\n                ten_test =\
    \ num % 10 % 2 == 1;\n            } else {\n                ten_test = num % -10\
    \ % 2 == 1;\n            }\n        }\n        if(one_test && ten_test) {\n  \
    \          count++;\n        }\n    }\n    return count;", "  long count = 0;\n\
    \  int i = 0;\n  while(i<nums.size()){\n    if(nums[i]>10){\n      int firstdigit\
    \ = nums[i]%10;\n      int lastdigit = nums[i]/10;\n      if(firstdigit%2!=0 &&\
    \ lastdigit%2!=0){\n        count++;\n      }\n    }\n    i++;\n  }\n  return\
    \ count;", "    long result = 0;\n    for (long elem : nums) {\n        if (elem\
    \ > 10 && elem % 2 == 1) {\n            long digit = 0;\n            long copy\
    \ = elem;\n            while (copy > 0) {\n                digit = copy % 10;\n\
    \                copy /= 10;\n            }\n            if (digit % 2 == 1) {\n\
    \                result++;\n            }\n        }\n    }\n    return result;",
  "\tint count = 0;\n\tint l, f;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\t\
    l = nums[i] % 10;\n\t\tf = nums[i];\n\t\twhile (f >= 10) {\n\t\t\tf = f / 10;\n\
    \t\t}\n\t\tif (nums[i] > 10 && l % 2 != 0 && f % 2 != 0) {\n\t\t\tcount++;\n\t\
    \t}\n\t}\n\treturn count;", "    long count=0;\n    for(int i=0;i<nums.size();i++)\n\
    \    {\n        if(nums[i]>10)\n        {\n            int rem=nums[i]%10;\n \
    \           int f_d=nums[i];\n            while(f_d>=10)\n            {\n    \
    \            f_d=f_d/10;\n            }\n            if(rem%2!=0&&f_d%2!=0)\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;", "    long sum = 0;\n    for (long i : nums) {\n        if (i\
    \ > 10 && i % 2 == 1 && i / 10 % 2 == 1) {\n            sum++;\n        }\n  \
    \  }\n    return sum;", "    int count = 0;\n    for(auto i : nums){\n       \
    \ if(i > 10){\n            // first digit\n            long x = std::abs(i);\n\
    \            long firstDigit = x % 10;\n            if(firstDigit % 2 != 0){\n\
    \                // last digit\n                int lastDigit = i;\n         \
    \       while(lastDigit > 9){\n                    lastDigit /= 10;\n        \
    \        }\n                if(lastDigit % 2 != 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;", "\tint\
    \ count = 0;\n\tfor (long num : nums) {\n\t\tlong curr = num, last = num % 10;\n\
    \t\tbool cond1 = false, cond2 = false;\n\t\twhile (curr) {\n\t\t\tlong curr_digit\
    \ = curr % 10;\n\t\t\tif (!cond1 && (curr_digit & 1)) {\n\t\t\t\tcond1 = true;\n\
    \t\t\t}\n\t\t\tcurr /= 10;\n\t\t}\n\t\tif (cond1 && (last & 1)) {\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;", "\tlong count = 0;\n\tfor (long i = 0; i < nums.size();\
    \ i++) {\n\t\tlong num = nums[i];\n\t\tif (num >= 10) {\n\t\t\tif (abs(num) %\
    \ 10 % 2 != 0 && num / pow(10, floor(log10(abs(num)))) % 2 != 0) {\n\t\t\t\tcount++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn count;", "  int count = 0;\n  for (int i = 0; i\
    \ < nums.size(); i++) {\n    if (nums[i] > 10) {\n      long value = nums[i];\n\
    \      if (value < 0) {\n        value = -value;\n      }\n      int first = value\
    \ % 10;\n      while (value > 0) {\n        int current = value % 10;\n      \
    \  value = value / 10;\n      }\n      if (first % 2 != 0 && current % 2 != 0)\
    \ {\n        count++;\n      }\n    }\n  }\n  return count;", "  long count =\
    \ 0;\n  int len = nums.size();\n  for(int i = 0; i < len; i++) {\n    int f_digit\
    \ = nums[i] % 10;\n    int s_digit = (nums[i] % 100) / 10;\n    if(nums[i] > 10\
    \ && f_digit % 2 != 0 && s_digit % 2 != 0) {\n      count++;\n    }\n  }\n  return\
    \ count;", "    // put your code here\n    long c=0;\n    for(int i=0;i<nums.size();i++)\n\
    \    {\n        long m=nums[i];\n        if(m>10)\n        {\n            int\
    \ a=m%10;\n            int b=m;\n            while(b)\n            {\n       \
    \         b=b/10;\n            }\n            if(a%2!=0&&b%2!=0)\n           \
    \ {\n                c++;\n            }\n        }\n    }\n    return c;", " \
    \   std::vector<long> result;\n    int n = nums.size();\n    for(int i = 0; i\
    \ < n; i++) {\n        if(nums[i] > 10) {\n            long lastDigit = nums[i]\
    \ % 10;\n            long temp = nums[i];\n            int numDigits = 0;\n  \
    \          while(temp != 0) {\n                temp /= 10;\n                numDigits++;\n\
    \            }\n            long firstDigit = nums[i] / pow(10, numDigits - 1);\n\
    \            if(lastDigit % 2 != 0 && firstDigit % 2 != 0) {\n               \
    \ result.push_back(nums[i]);\n            }\n        }\n    }\n    int res = result.size();\n\
    \    return res;", "  //Write your code here\n  int count = 0;\n  for(int i =\
    \ 0; i < nums.size(); i++){\n      //std::cout << nums[i] << \" \";\n      int\
    \ num = nums[i];\n      if(num > 10){\n          std::stringstream ss;\n     \
    \     ss << num;\n          std::string s = ss.str();\n          char fr = s[0];\n\
    \          char lr = s[s.length()-1];\n          if(fr % 2 != 0 && lr % 2 != 0){\n\
    \              count++;\n          }\n      }\n  }\n  return count;", "  int count\
    \ = 0;\n  for (long i : nums) {\n    if (i > 10 && (abs(i) % 10) % 2 == 1 && (abs(i)\
    \ / 10) % 2 == 1)\n      count++;\n  }\n  return count;", "  // Write your code\
    \ here\n  long count = 0;\n  // long num = 0;\n  for(long i=0; i<nums.size();\
    \ i++){\n    if(abs(nums[i])>10){\n      long num = abs(nums[i]);\n      long\
    \ n = 0;\n      while(num!=0){\n        n++;\n        num = num/10;\n      }\n\
    \      long first = nums[i]/pow(10,n-1);\n      long last = nums[i]%10;\n    \
    \  if(first%2!=0 && last%2!=0){\n        count++;\n      }\n    }\n  }\n  return\
    \ count;", "    int count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n \
    \       if(nums[i] > 10) {\n            if(abs(nums[i]) % 10 == 1 || abs(nums[i])\
    \ % 10 == 3 || abs(nums[i]) % 10 == 5 || abs(nums[i]) % 10 == 7 || abs(nums[i])\
    \ % 10 == 9) {\n                if(abs(nums[i]) / 10 % 10 == 1 || abs(nums[i])\
    \ / 10 % 10 == 3 || abs(nums[i]) / 10 % 10 == 5 || abs(nums[i]) / 10 % 10 == 7\
    \ || abs(nums[i]) / 10 % 10 == 9) {\n                    count++;\n          \
    \      }\n            }\n        }\n    }\n    return count;", "\treturn -1;",
  "    int count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n        long currNum\
    \ = nums[i];\n        if(currNum > 10) {\n            long currNumDigits = 0;\n\
    \            long firstDigit = 0;\n            long lastDigit = 0;\n         \
    \   while(currNum > 0) {\n                long lastDigit = currNum % 10;\n   \
    \             if(currNumDigits == 0) firstDigit = lastDigit;\n               \
    \ currNum /= 10;\n                currNumDigits++;\n            }\n          \
    \  if(firstDigit % 2 != 0 && lastDigit % 2 != 0) count++;\n        }\n    }\n\
    \    return count;", "    long cnt = 0;\n    for (int i = 0; i < nums.size();\
    \ i++) {\n        int flag = 0;\n        if (nums[i] > 10) {\n            std::string\
    \ str = std::to_string(nums[i]);\n            int first = str[0] - '0';\n    \
    \        int last = str[str.size() - 1] - '0';\n            if (first % 2 != 0\
    \ && last % 2 != 0)\n                cnt++;\n        }\n    }\n    return cnt;",
  "    long result=0;\n    for(auto num:nums){\n        long f=num,l=num%10;\n   \
    \     while(f>=10){\n            f/=10;\n        }\n        if(num>10 && f%2==1\
    \ && l%2==1){\n            result++;\n        }\n    }\n    return result;", " \
    \ std::vector<long>::iterator it;\n  long first, second, count = 0;\n  for(it\
    \ = nums.begin(); it != nums.end(); it++) {\n    if((*it) > 10) {\n      first\
    \ = *it;\n      second = *it;\n      while(first > 10) {\n        first = first/10;\n\
    \      }\n      while(second > 0) {\n        second = second/10;\n      }\n  \
    \    if(first%2!=0 && second%2!=0) {\n        count++;\n      }\n    }\n  }\n\
    \  return count;", "    long count = 0;\n    for(int i = 0; i < nums.size(); i++)\
    \ {\n        if(nums[i] > 10) {\n            long n = nums[i];\n            int\
    \ firstDigit = n % 10;\n            n /= 10;\n            int lastDigit = n %\
    \ 10;\n            if(lastDigit % 2 != 0 && firstDigit % 2 != 0) {\n         \
    \       count++;\n            }\n        }\n    }\n    return count;", "  /* Your\
    \ code here */\n  int count = 0;\n  for(auto n : nums){\n    if(n>10){\n     \
    \ long first = n;\n      long last = n%10;\n      while(first>10){\n        first/=10;\n\
    \      }\n      if(first%2!=0 && last%2!=0){\n        count++;\n      }\n    }\n\
    \  }\n  return count;", "    std::vector<long> filteredNums;\n    for (long i\
    \ : nums) {\n        if (i > 10 && abs(i) > 10) {\n            long first = i\
    \ / abs(i);\n            long last = i % 10;\n            long newNums = i;\n\
    \            while (newNums > 0) {\n                if (first % 2 != 0 && last\
    \ % 2 != 0) {\n                    filteredNums.push_back(i);\n              \
    \      break;\n                }\n                newNums /= 10;\n           \
    \     first = newNums / abs(newNums);\n                last = newNums % 10;\n\
    \            }\n        }\n    }\n    return filteredNums.size();", "    long\
    \ size = nums.size();\n    long count = 0;\n    for(long i = 0; i < size; i++)\
    \ {\n        if(nums[i] > 10) {\n            if(nums[i] > 9 && nums[i] < 100)\
    \ {\n                if(nums[i] % 2 != 0) {\n                    count++;\n  \
    \              }\n            }\n            else {\n                long last\
    \ = nums[i] % 10;\n                if(last % 2 != 0) {\n                    nums[i]\
    \ = nums[i] / 10;\n                    if(nums[i] % 2 != 0) {\n              \
    \          count++;\n                    }\n                }\n            }\n\
    \        }\n    }\n    return count;", "    long count = 0;\n    for(int i = 0;\
    \ i < nums.size(); i++) {\n        if(nums[i] > 10 && (nums[i]%10)%2 != 0 && (nums[i]/10)%2\
    \ != 0) {\n            count++;\n        }\n    }\n    return count;", "    std::vector<long>::iterator\
    \ itr;\n    int count = 0;\n    for(itr = nums.begin(); itr != nums.end(); itr++)\
    \ {\n        if(*itr > 10) {\n            long num = *itr;\n            while(num\
    \ != 0) {\n                if(num % 10 % 2 == 0)\n                    break;\n\
    \                num /= 10;\n            }\n            if(num == 0)\n       \
    \         count++;\n        }\n    }\n    return count;", "    int cnt=0;\n  \
    \  for(auto it=nums.begin();it!=nums.end();it++){\n        if(*it>10){\n     \
    \       int a = *it%10;\n            int b = *it/10;\n            if(a%2!=0 &&\
    \ b%2!=0){\n                cnt++;\n            }\n        }\n    }\n    return\
    \ cnt;", "\tlong count = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tint\
    \ a = abs(nums[i]);\n\t\tint a1 = a % 10;\n\t\tint a2 = a / 10;\n\t\tif (a2 %\
    \ 2 != 0 && a1 % 2 != 0 && a > 10) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
  "\tint len = nums.size();\n\tint count = 0;\n\tfor (int i = 0; i < len; i++) {\n\
    \t\tif (nums[i] >= 10) {\n\t\t\tint firstDigit = nums[i] / 10;\n\t\t\tint lastDigit\
    \ = nums[i] % 10;\n\t\t\tif (firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n\t\t\
    \t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "  // Write your code here\n\
    \  long count = 0;\n  for(long i = 0; i < nums.size(); i++){\n      long num =\
    \ nums[i];\n      long first = num % 10;\n      long last = num;\n      while(last\
    \ >= 10){\n          last /= 10;\n      }\n      if(num > 10 && first % 2 == 1\
    \ && last % 2 == 1){\n          count++;\n      }\n  }\n  return count;", "  long\
    \ count = 0;\n  for (long i = 0; i < nums.size(); i++) {\n    int n = nums[i];\n\
    \    int firstDigit = n % 10;\n    int lastDigit = n;\n    while (lastDigit >=\
    \ 10) {\n      lastDigit /= 10;\n    }\n    if (firstDigit % 2 != 0 && lastDigit\
    \ % 2 != 0 && n > 10) {\n      count++;\n    }\n  }\n  return count;", "    //\
    \ std::cout << nums.size() << std::endl;\n    int count = 0;\n    for (int i =\
    \ 0; i < nums.size(); i++) {\n        int num = nums[i];\n        if (num > 10)\
    \ {\n            long first_digit = abs(num) % 10;\n            long last_digit\
    \ = 0;\n            while (num > 0) {\n                last_digit = num % 10;\n\
    \                num /= 10;\n            }\n            // std::cout << first_digit\
    \ << \" \" << last_digit << std::endl;\n            if (first_digit % 2 != 0 &&\
    \ last_digit % 2 != 0) {\n                count++;\n            }\n        }\n\
    \    }\n    return count;", "    long count = 0;\n    for(int i = 0; i < nums.size();\
    \ i++) {\n        long num = nums[i];\n        if(num < 0) num *= -1;\n      \
    \  bool flag = (num > 10) && ((num%10)%2==1) && ((num/10)%2==1);\n        count\
    \ += flag;\n    }\n    return count;", '    ', "  long count=0;\n  for(auto i:nums){\n\
    \    std::string s=std::to_string(i);\n    int first=s[0]-'0';\n    int last=s[s.size()-1]-'0';\n\
    \    if(i>10&&first%2!=0&&last%2!=0){\n      count++;\n    }\n  }\n  return count;",
  "\tlong count = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] >\
    \ 10) {\n\t\t\tif (nums[i] % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn count;", "    int count = 0;\n    for(int i = 0; i < nums.size(); i++)\
    \ {\n        if(nums[i] > 10) {\n            std::string temp = std::to_string(nums[i]);\n\
    \            if(temp[0] % 2 != 0 && temp[temp.size() - 1] % 2 != 0) {\n      \
    \          count++;\n            }\n        }\n    }\n    return count;", "  \
    \  long c=0;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]>10)\n\
    \        {\n            int a=nums[i]%10;\n            while(nums[i]>0)\n    \
    \        {\n                int b=nums[i]%10;\n                nums[i]=nums[i]/10;\n\
    \            }\n            if(nums[i]%2!=0&&a%2!=0)\n            {\n        \
    \        c++;\n            }\n        }\n    }\n    return c;", "\t// Write your\
    \ code here\n\tlong count = 0;\n\tfor (long n : nums) {\n\t\tif (n > 10) {\n\t\
    \t\tlong first_digit = n;\n\t\t\twhile (first_digit > 10) {\n\t\t\t\tfirst_digit\
    \ /= 10;\n\t\t\t}\n\t\t\tlong last_digit = n % 10;\n\t\t\tif (first_digit % 2\
    \ != 0 && last_digit % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ count;", "    int count = 0;\n    for(int i = 0; i < nums.size(); i++) {\n \
    \       long num = nums[i];\n        if(num >= 10) {\n            std::string\
    \ str = std::to_string(num);\n            int first_d = str[0] - '0';\n      \
    \      int last_d = str[str.size() - 1] - '0';\n            if(first_d % 2 !=\
    \ 0 && last_d % 2 != 0) {\n                count++;\n            }\n        }\n\
    \    }\n    return count;", "    long count = 0;\n    int first, last;\n    for(long\
    \ i = 0; i < nums.size(); i++) {\n        if(nums[i] > 10) {\n            first\
    \ = nums[i] / 10;\n            last = nums[i] % 10;\n            if(first % 2\
    \ != 0 && last % 2 != 0)\n                count++;\n        }\n    }\n    return\
    \ count;", "\t// write your code here\n\tint count = 0;\n\t// return 0;\n\tfor(auto\
    \ x: nums){\n\t\tif(x>10 && (x%10%2!=0 && x/10%10%2!=0))\n\t\t\tcount++;\n\t}\n\
    \treturn count;", "  \t// Write your code here\n    vector<long> ans;\n    for(int\
    \ i=0;i<nums.size();i++){\n        long num = nums[i];\n        if(num>10){\n\
    \            long d = num%10;\n            long u = num;\n            while(u>10){\n\
    \                u = u/10;\n            }\n            if(d%2!=0 && u%2!=0){\n\
    \                ans.push_back(num);\n            }\n        }\n    }\n    return\
    \ ans.size();", "    long count = 0;\n    long first, last;\n    for(int i = 0;\
    \ i < nums.size(); i++) {\n        first = nums[i] % 10;\n        last = nums[i]\
    \ / 10;\n        last = last % 10;\n        // std::cout << first << \" \" <<\
    \ last << std::endl;\n        if(nums[i] > 10) {\n            if(first % 2 !=\
    \ 0) {\n                if(last % 2 != 0) {\n                    count++;\n  \
    \              }\n            }\n        }\n    }\n    return count;", "\tlong\
    \ count = 0;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tlong num = nums[i];\n\
    \t\tif (num > 10) {\n\t\t\tbool test = true;\n\t\t\twhile (num > 0) {\n\t\t\t\t\
    long rem = num % 10;\n\t\t\t\tif (rem % 2 == 0) {\n\t\t\t\t\ttest = false;\n\t\
    \t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tnum = num / 10;\n\t\t\t}\n\t\t\tif (test) {\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;"]
stop_tokens:
- "\n}"

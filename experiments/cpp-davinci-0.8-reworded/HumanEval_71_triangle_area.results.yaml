language: cpp
name: HumanEval_71_triangle_area
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n   assert(a>0 && b>0 && c>0);\n   if(a+b>c && a+c>b &&\
    \ b+c>a)\n   {\n       float s=(a+b+c)/2.0;\n       float area=sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \       return area;\n   }\n   else\n   {\n       return -1;\n   }\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpbpgell9t: /tmp/tmpbpgell9t.cpp:30: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a+b>c && a+c>b && b+c>a) {\n        return (float(a+b+c)/4)*((float(a+b+c)/4)-a)*((float(a+b+c)/4)-b)*((float(a+b+c)/4)-c);\n\
    \    }\n    else {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpv83hv1s1: /tmp/tmpv83hv1s1.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n  return area < 0 ? -1 : area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9f5a1set: /tmp/tmp9f5a1set.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    double p = (a + b + c) / 2.0;\n    double area = std::sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n    if (std::isnan(area)) {\n        return\
    \ -1;\n    }\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmposx7tyse: /tmp/tmposx7tyse.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    long sides[3] = {a, b, c};\n    std::sort(sides, sides\
    \ + 3);\n    if (sides[0] + sides[1] > sides[2]) {\n        return std::sqrt(\n\
    \            (sides[0] + sides[1] + sides[2]) *\n            (sides[0] + sides[1]\
    \ - sides[2]) *\n            (sides[0] - sides[1] + sides[2]) *\n            (-sides[0]\
    \ + sides[1] + sides[2])\n        ) / 4.0;\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmplta4_1mn: /tmp/tmplta4_1mn.cpp:30: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b <= c) return -1;\n    if (a + c <= b) return\
    \ -1;\n    if (b + c <= a) return -1;\n    float p = (a + b + c) / 2.0;\n    return\
    \ sqrt(p * (p - a) * (p - b) * (p - c));\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0cm6mbme: /tmp/tmp0cm6mbme.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if ((a > (b + c)) || (b > (a + c)) || (c > (a + b)))\n\
    \        return -1;\n    else {\n        float s = (a + b + c) / 2.0;\n      \
    \  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n        return round(area\
    \ * 100) / 100;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpsca73hli: /tmp/tmpsca73hli.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s, area;\n    if (a + b > c && a + c > b &&\
    \ b + c > a) {\n        s = (a + b + c) / 2.0;\n        area = sqrt(s * (s - a)\
    \ * (s - b) * (s - c));\n        return area;\n    }\n    else {\n        return\
    \ -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvf2w_dg1: /tmp/tmpvf2w_dg1.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a >= 0);\n    assert(b >= 0);\n    assert(c\
    \ >= 0);\n    if (a + b > c && a + c > b && b + c > a) {\n        long s = (a\
    \ + b + c) / 2;\n        double temp = (double) s * (s - a) * (s - b) * (s - c);\n\
    \        temp = sqrt(temp);\n        temp = temp * 100;\n        temp = round(temp);\n\
    \        temp = temp / 100;\n        return temp;\n    }\n    return -1;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpzb74wboy: /tmp/tmpzb74wboy.cpp:32: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n   float s,  area;\n   if(a<b+c && b<a+c && c<a+b){\n\
    \    s = (a+b+c)/2;\n    area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n\
    \   }\n   else\n   return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpj0j4wks7: /tmp/tmpj0j4wks7.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    if (s - a <= 0 ||\
    \ s - b <= 0 || s - c <= 0)\n        return -1;\n    return sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmph0ti21fx: /tmp/tmph0ti21fx.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\treturn -1;\n\t\
    }\n\tif (a + b <= c || a + c <= b || b + c <= a) {\n\t\treturn -1;\n\t}\n\tdouble\
    \ p = (a + b + c) / 2.0;\n\tdouble area = sqrt(p * (p - a) * (p - b) * (p - c));\n\
    \treturn round(area * 100) / 100.0;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpqhi_bkui: /tmp/tmpqhi_bkui.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // Your code here\n  if (a<0 || b<0 || c<0)\n  {\n \
    \   return -1;\n  }\n  if (a+b>c && a+c>b && b+c>a)\n  {\n    float p = (a+b+c)/2.0;\n\
    \    float s = sqrt(p*(p-a)*(p-b)*(p-c));\n    return s;\n  }\n  else\n  {\n \
    \   return -1;\n  }\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpaqoi6mox: /tmp/tmpaqoi6mox.cpp:34: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a<0||b<0||c<0) return -1;\n    float p = (a+b+c)/2.0;\n\
    \    float area = sqrt(p*(p-a)*(p-b)*(p-c));\n    return area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpyoupiw_8: /tmp/tmpyoupiw_8.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t// Write your code here\n\tfloat s = 0.5 * (a + b +\
    \ c);\n\tfloat area = sqrt(s * (s - a) * (s - b) * (s - c));\n\tif (area > 0)\
    \ {\n\t\treturn floor(area * 100) / 100;\n\t}\n\telse {\n\t\treturn -1;\n\t}\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpioiagwqp: /tmp/tmpioiagwqp.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // check for invalid inputs\n  if (a < 0 || b < 0 ||\
    \ c < 0) return -1;\n  if (a + b <= c || a + c <= b || b + c <= a) return -1;\n\
    \  // Heron's formula\n  float s = (a + b + c) / 2;\n  float area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n  // round to two decimal places\n  return roundf(area\
    \ * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmphv_29cav: /tmp/tmphv_29cav.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // YOUR CODE HERE\n  if(a + b > c && a + c > b && b\
    \ + c > a)\n  {\n    float s = (a + b + c) / 2.0;\n    float val = sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n    return val;\n  }\n  else\n  {\n    return -1;\n\
    \  }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpun98plhb: /tmp/tmpun98plhb.cpp:30: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif(a+b>c&&a+c>b&&b+c>a)\n\t\treturn (0.5*(a*(b*b+c*c-a*a)+b*(c*c+a*a-b*b)+c*(a*a+b*b-c*c)));\n\
    \telse\n\t\treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpnfuxnw8k: /tmp/tmpnfuxnw8k.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    if (s > a && s >\
    \ b && s > c) {\n        float area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        return round(area * 100) / 100;\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpaxsa52v6: /tmp/tmpaxsa52v6.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\treturn (a + b > c && a + c > b && b + c > a) ? sqrt((a\
    \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4 : -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvp9v3c5t: /tmp/tmpvp9v3c5t.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // Define a compare function\n  auto compare = [](const\
    \ long a, const long b) {\n    return a > b;\n  };\n  // Sort the three sides\
    \ in descending order\n  std::vector<long> sides = {a, b, c};\n  std::sort(sides.begin(),\
    \ sides.end(), compare);\n  // Check if any two sides is greater than the third\
    \ side\n  if (sides[0] >= sides[1] + sides[2]) {\n    return -1;\n  }\n  // If\
    \ the triangle is valid. Then calculate its area\n  // and return it\n  long p\
    \ = (a + b + c) / 2;\n  return std::sqrt(p * (p - a) * (p - b) * (p - c));\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp7etuzke2: /tmp/tmp7etuzke2.cpp:34: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126852
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if (a+b>c && a+c>b && b+c>a) {\n    float s = (a+b+c)/2.0;\n\
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n  }\n  return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp0_21vfp1: /tmp/tmp0_21vfp1.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a<=0||b<=0||c<=0) {\n        return -1;\n    }\n\
    \    long peri = a+b+c;\n    long s = peri/2;\n    double area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_kuk9ub7: /tmp/tmp_kuk9ub7.cpp:25: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126851
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if (a+b<=c || a+c<=b || b+c<=a) {\n    return -1;\n\
    \  }\n  else {\n    double s = (a+b+c)/2.0;\n    return sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp2qnoqs4r: /tmp/tmp2qnoqs4r.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif(a<1||b<1||c<1) return -1;\n\tif(a+b<=c) return -1;\n\
    \tif(a+c<=b) return -1;\n\tif(b+c<=a) return -1;\n\tfloat p = (a+b+c)/2.0;\n\t\
    float a1 = p*(p-a)*(p-b)*(p-c);\n\ta1 = sqrt(a1);\n\ta1 = round(a1*100)/100;\n\
    \treturn a1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpy4vlneeh: /tmp/tmpy4vlneeh.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a > 0 && b > 0 && c > 0) {\n        if(a + b >\
    \ c && a + c > b && b + c > a) {\n            float s = (a + b + c) / 2.0;\n \
    \           return sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpsw1y5li3: /tmp/tmpsw1y5li3.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t// long a, b, c;\n\t// a = 3;\n\t// b = 4;\n\t// c =\
    \ 5;\n\tdouble s = (a + b + c) / 2.0;\n\tdouble area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n\treturn area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpacmmyblq: /tmp/tmpacmmyblq.cpp:25: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif(a<0 || b<0 || c<0)\n\t\treturn float(-1);\n\tfloat\
    \ s = (a+b+c)/2.0;\n\tfloat area = (s*(s-a)*(s-b)*(s-c));\n\tif(area<0)\n\t\t\
    return float(-1);\n\treturn sqrt(area);\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpu2_xjvka: /tmp/tmpu2_xjvka.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if(a+b>c && a+c>b && b+c>a)\n    return (sqrt(a*a+b*b-c*c)+sqrt(a*a+c*c-b*b)+sqrt(b*b+c*c-a*a))/4;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpa_7_1213: /tmp/tmpa_7_1213.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    // To print results to\
    \ the standard output you can use Print_Float.\n    // Example:\n    // Print_Float.print_float(23.1415);\n\
    \    //long* sides = new long[3];\n    //sides[0] = a;\n    //sides[1] = b;\n\
    \    //sides[2] = c;\n    //std::sort(sides, sides+3);\n    //if (sides[0] + sides[1]\
    \ > sides[2]) {\n    //    return 0.5 * sides[0] * sides[1];\n    //}\n    //return\
    \ -1;\n    float s = (a + b + c) / 2.0;\n    if (s - a <= 0 || s - b <= 0 || s\
    \ - c <= 0) {\n        return -1;\n    }\n    return sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmps8xta3m4: /tmp/tmps8xta3m4.cpp:37: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Your code here\n    if(a<=0 || b<=0 || c<=0) return\
    \ -1;\n    if(a+b<=c || a+c<=b || b+c<=a) return -1;\n    float s = (a+b+c)/2.0;\n\
    \    return sqrt(s*(s-a)*(s-b)*(s-c));\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpowgui6vb: /tmp/tmpowgui6vb.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if (a <= 0 || b <= 0 || c <= 0) {\n    return -1;\n\
    \  }\n  long sum2 = a + b;\n  long sum3 = a + c;\n  long sum1 = b + c;\n  if (sum1\
    \ <= a || sum2 <= b || sum3 <= c) {\n    return -1;\n  }\n  float p = (a + b +\
    \ c) / 2.0;\n  float area = sqrt(p * (p - a) * (p - b) * (p - c));\n  return round(area\
    \ * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpib886boc: /tmp/tmpib886boc.cpp:30: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a > 0);\n  assert(b > 0);\n  assert(c > 0);\n\
    \  if ((a + b > c) && (a + c > b) && (b + c > a)) {\n    float s = (a + b + c)\
    \ / 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpsvjngzwa: /tmp/tmpsvjngzwa.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // your code here\n    if(a + b > c && a + c > b &&\
    \ b + c > a)\n    {\n        float s = (a + b + c) / 2.0;\n        return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n    else\n    {\n        return -1;\n\
    \    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpcrkroknw: /tmp/tmpcrkroknw.cpp:29: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if(a+b > c && a+c > b && b+c > a)\n    return sqrt(4.0*a*a*b*b-pow(a*a+b*b-c*c,2))/4.0;\n\
    \  else\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmptaptt1u_: /tmp/tmptaptt1u_.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    //double s = (a + b + c) / 2.0;\n    double s = (double)a\
    \ + b + c;\n    s /= 2.0;\n    double res = s * (s - a) * (s - b) * (s - c);\n\
    \    if (res <= 0) {\n        return -1;\n    }\n    return (float)sqrt(res);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp78b858jg: /tmp/tmp78b858jg.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tfloat s = (a + b + c) / 2.0;\n\tfloat area = (s * (s\
    \ - a) * (s - b) * (s - c));\n\tif (area < 0.0) {\n\t\treturn -1.0;\n\t}\n\telse\n\
    \t\treturn std::sqrt(area);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpjlmik9gv: /tmp/tmpjlmik9gv.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    return a + b + c >= 2 * std::max(a, std::max(b, c))\
    \ ? sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) / 4 : -1;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmprdj9432h: /tmp/tmprdj9432h.cpp:20: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tfloat area,s;\n\tif(a>0 && b>0 && c>0)\n\t{\n\t\tif(a+b>c\
    \ && a+c>b && b+c>a)\n\t\t{\n\t\t\ts=(a+b+c)/2;\n\t\t\tarea=sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \t\t\tstd::cout<<area<<std::endl;\n\t\t\treturn area;\n\t\t}\n\t\telse\n\t\t{\n\
    \t\t\treturn -1;\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn -1;\n\t}\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpyc9w4c26: /tmp/tmpyc9w4c26.cpp:38: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: '6

    0

    '
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif(a > 0 && b > 0 && c > 0 && (a + b > c) && (a + c\
    \ > b) && (b + c > a)){\n\t\tint s = (a + b + c) / 2;\n\t\tfloat a = sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n\t\treturn a;\n\t}\n\treturn -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1t65kxde: /tmp/tmp1t65kxde.cpp:23: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t// Write your code here\n\tassert(a > 0 && b > 0 &&\
    \ c > 0);\n\tassert(a + b > c && a + c > b && b + c > a);\n\tfloat s = (a + b\
    \ + c) / 2.0;\n\treturn sqrt(s * (s - a) * (s - b) * (s - c));\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5a69vcye: /tmp/tmp5a69vcye.cpp:16: float triangle_area(long int, long
    int, long int): Assertion `a + b > c && a + c > b && b + c > a'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Check if a, b, c can form a triangle or not\n \
    \   long sides[] = {a, b, c};\n    std::sort(sides, sides + 3);\n    if(sides[0]\
    \ + sides[1] > sides[2]) {\n        // Valid triangle\n        // Heron's formula\n\
    \        float s = (a + b + c) / 2.0;\n        float area = sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n        return floor(area * 100) / 100;\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp0z3tjo5f: /tmp/tmp0z3tjo5f.cpp:30: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a+b<=c || a+c<=b || b+c<=a)\n        return -1;\n\
    \    float s = (a+b+c)/2.0;\n    float area = (s*(s-a)*(s-b)*(s-c));\n    return\
    \ sqrt(area);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpgzei755e: /tmp/tmpgzei755e.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    if(s > a && s >\
    \ b && s > c) {\n        float x = (s - a) * (s - b) * (s - c);\n        float\
    \ area = s * x;\n        return sqrt(area);\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvug7qar6: /tmp/tmpvug7qar6.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float result = -1;\n    std::vector<long> triangle\
    \ = {a, b, c};\n    sort(triangle.begin(), triangle.end());\n    if (triangle[0]\
    \ + triangle[1] > triangle[2]) {\n        float p = (a + b + c) / 2.0;\n     \
    \   result = sqrt(p * (p - a) * (p - b) * (p - c));\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp43ykra0u: /tmp/tmp43ykra0u.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n   float s = (a + b + c) / 2.0;\n   float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n   return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpmxi7f6dd: /tmp/tmpmxi7f6dd.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126853
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tfloat s = (a + b + c) / 2.0;\n\tfloat area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n\treturn (area <= 0) ? -1 : area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp72p_w3sh: /tmp/tmp72p_w3sh.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tfloat s = (a + b + c) / 2.0;\n\tif ((s - a > 0) && (s\
    \ - b > 0) && (s - c > 0))\n\t\treturn sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \telse\n\t\treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp6uo3nxdb: /tmp/tmp6uo3nxdb.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t// TODO: Implement\n    if(a+b>c && a+c>b && b+c>a)\n\
    \    {\n        double s =(a+b+c)/2.0;\n        double area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return area;\n    }\n    else\n    {\n        return -1;\n    }\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpnwt4svl2: /tmp/tmpnwt4svl2.cpp:30: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t// Calculate square root of ((s - a) * (s - b) * (s\
    \ - c)) * s.\n\t// where s = (a + b + c) / 2\n\tif (a > 0 && b > 0 && c > 0) {\n\
    \t\t// Make sure all values are positive\n\t\tif (a + b > c && a + c > b && b\
    \ + c > a) {\n\t\t\t// Make sure that the largest side is still smaller than the\n\
    \t\t\t// sum of the other two\n\t\t\tfloat s = (a + b + c) / 2.0;\n\t\t\tfloat\
    \ area = sqrt(s * (s - a) * (s - b) * (s - c));\n\t\t\treturn area;\n\t\t}\n\t\
    }\n\treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpl7sp9ne4: /tmp/tmpl7sp9ne4.cpp:32: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s, area;\n    s = (a + b + c) / 2.0;\n    area\
    \ = sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp3oa_faja: /tmp/tmp3oa_faja.cpp:22: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    if (s - a < 0 ||\
    \ s - b < 0 || s - c < 0)\n        return -1;\n    return sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpami1jrps: /tmp/tmpami1jrps.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) {\n        return -1;\n\
    \    }\n    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n\
    \    }\n    float s = (a + b + c) / 2.0;\n    return sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8e4jqsyl: /tmp/tmp8e4jqsyl.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tfloat s = (a + b + c) / 2.0;\n\tfloat area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n\treturn area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpn_ls86om: /tmp/tmpn_ls86om.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tlong s = (a + b + c) / 2;\n\tfloat result = std::sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n\treturn std::round(result * 100) / 100;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpg0dkimdw: /tmp/tmpg0dkimdw.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // check sum of two sides is greater than the third.\n\
    \    if ((a + b > c) && (a + c > b) && (b + c > a)) {\n        double s = (a +\
    \ b + c) / 2.0;\n        double area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        return round(area * 100) / 100;\n    }\n    return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpblfibwo6: /tmp/tmpblfibwo6.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float\
    \ s=(a+b+c)/2.0;\n        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    else\n\
    \    {\n        return -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpu7nmogo5: /tmp/tmpu7nmogo5.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // The area of a triangle is computed using Heron's\
    \ formula:\n    // area = sqrt(s * (s - a) * (s - b) * (s - c))\n    // where\
    \ s = (a + b + c) / 2\n    // Check if a valid triangle exists.\n    if (a <=\
    \ 0 || b <= 0 || c <= 0 || a + b <= c || a + c <= b || b + c <= a) {\n       \
    \ return -1;\n    }\n    float s = (a + b + c) / 2.0;\n    return sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp0owwzgg0: /tmp/tmp0owwzgg0.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // if( a + b > c && b + c > a && a + c > b )\n   \
    \ //     return (a*b/2);\n    // else\n    //     return -1;\n    float s, area;\n\
    \    s = (a + b + c) / 2.0;\n    area = sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmppyehbqmp: /tmp/tmppyehbqmp.cpp:26: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a>0 && b>0 && c>0);\n    if (a+b>c && a+c>b\
    \ && b+c>a) {\n        double s = (a+b+c)/2.0;\n        double area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return area;\n    }\n    return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp4p9ckixn: /tmp/tmp4p9ckixn.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // First step, check the validity of the triangle\n\
    \  if( a + b > c and a + c > b and b + c > a ){\n    double s = (a + b + c) /\
    \ 2.0;\n    return (sqrt(s * (s - a) * (s - b) * (s - c)));\n  }\n  return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpmovnydne: /tmp/tmpmovnydne.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if(a+b>c && a+c>b && b+c>a)\n  {\n    float s = (a+b+c)/2.0;\n\
    \    return sqrt(s*(s-a)*(s-b)*(s-c));\n  }\n  else\n  {\n    return -1;\n  }\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp3sofw82t: /tmp/tmp3sofw82t.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t//int b1 = (a+b>c);\n\t//int b2 = (a+c>b);\n\t//int\
    \ b3 = (b+c>a);\n\t//if(b1 and b2 and b3){\n\t\tint s = (a+b+c)/2;\n\t\tfloat\
    \ x = s*(s-a)*(s-b)*(s-c);\n\t\treturn sqrt(x);\n\t//}\n\t//return -1;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpxosdhzio: /tmp/tmpxosdhzio.cpp:27: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert((a > 0) && (b > 0) && (c > 0));\n  long p = (a\
    \ + b + c) / 2;\n  return sqrt(p * (p - a) * (p - b) * (p - c));\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpg09ghvn_: /tmp/tmpg09ghvn_.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    if (area > 0)\n        return area;\n \
    \   else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmph4jsvwf4: /tmp/tmph4jsvwf4.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b > c && a + c > b && b + c > a)\n    {\n\
    \        float p = (a + b + c) / 2.0;\n        return sqrt(p * (p - a) * (p -\
    \ b) * (p - c));\n    }\n    return -1;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpc01h78br: /tmp/tmpc01h78br.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // Easy mistake - abs function doesn't work on floats\n\
    \  // https://stackoverflow.com/questions/9387610/how-do-i-get-the-absolute-value-of-a-float-in-c\n\
    \  // retuen fabs(0.5 * ((a * b) * sin(c)));\n  return (0.5 * ((a * b) * sin(c)));\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpoxdb3l5s: /tmp/tmpoxdb3l5s.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a+b>c && a+c>b && b+c>a) return sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))*0.25;\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp79dnvytx: /tmp/tmp79dnvytx.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  //Your code here\n  if (a+b > c && a+c > b && b+c >\
    \ a)\n  {\n      float s = (a+b+c)/2.0;\n      float area = sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \      return area;\n  }\n\n  return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpc_v_augh: /tmp/tmpc_v_augh.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126855
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  float area = 0;\n  if (a <= 0 || b <= 0 || c <= 0) {\n\
    \    return -1;\n  }\n  if (a + b <= c || a + c <= b || b + c <= a) {\n    return\
    \ -1;\n  }\n  float s = float(a + b + c) / 2;\n  area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpdugzfyg6: /tmp/tmpdugzfyg6.cpp:29: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif(a < 0 || b < 0 || c < 0) return -1;\n\tif(a + b >\
    \ c && a + c > b && b + c > a)\n\t\treturn std::sqrt((a + b + c) * (a + b - c)\
    \ * (a - b + c) * (-a + b + c)) / 4;\n\treturn -1;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpr_ul3r2m: /tmp/tmpr_ul3r2m.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    if (s <= 0 || a <= 0 || b <= 0 || c <=\
    \ 0)\n        return -1;\n    return area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp3x4470yj: /tmp/tmp3x4470yj.cpp:23: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float S = (a + b + c) / 2.0;\n    // Heron's formula\n\
    \    float A = sqrt(S * (S - a) * (S - b) * (S - c));\n    if (isnan(A))\n   \
    \     return -1;\n    else\n        return A;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpt2tgsql0: /tmp/tmpt2tgsql0.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float\
    \ s = (a+b+c)/2.0;\n        float area = (s*(s-a)*(s-b)*(s-c));\n        if(area>0)\n\
    \        {\n            return sqrt(area);\n        }\n        else\n        {\n\
    \            return -1;\n        }\n    }\n    else\n    {\n        return -1;\n\
    \    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9for33z1: /tmp/tmp9for33z1.cpp:36: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif (a <= 0 || b <= 0 || c <= 0) {\n\t\treturn -1;\n\t\
    }\n\tfloat s = (a + b + c) / 2.0;\n\tfloat area = sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n\treturn area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2putkpsn: /tmp/tmp2putkpsn.cpp:24: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return (area > 0) ? round(area * 100) /\
    \ 100 : -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpkdao6fyd: /tmp/tmpkdao6fyd.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Use Heron's Formula to calculate the area of the\
    \ triangle\n    // The formula is 1/4(sqrt(s(s-a)(s-b)(s-c))) where s is the semi-perimeter\n\
    \    // i.e. s = (a+b+c)/2. Note that we can also use a*b*c/sqrt(p(p-a)(p-b)(p-c))\n\
    \    // where p is the perimeter of the triangle i.e. p = a+b+c\n    // Note the\
    \ following edge cases:\n    // 1. a, b, c are greater than 0.\n    // 2. a, b,\
    \ c are less than or equal to the sum of the other two sides\n    if (a <= 0 ||\
    \ b <= 0 || c <= 0) {\n        return -1;\n    }\n    long perimeter = a + b +\
    \ c;\n    if (a > perimeter || b > perimeter || c > perimeter) {\n        return\
    \ -1;\n    }\n    float semi_perimeter = (a + b + c) / 2.0;\n    float area =\
    \ sqrt(semi_perimeter * (semi_perimeter - a) * (semi_perimeter - b) * (semi_perimeter\
    \ - c));\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmplen15v8f: /tmp/tmplen15v8f.cpp:35: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126856
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    std::sort(a, b, c);\n    if (c < a + b)\n        return\
    \ std::sqrt(a*a + b*b + c*c);\n    else\n        return -1;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: SyntaxError
  stderr: "In file included from /usr/include/c++/9/algorithm:62,\n              \
    \   from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n             \
    \    from /tmp/tmp4bw6bvh5.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h: In instantiation\
    \ of \u2018void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator,\
    \ _Compare) [with _RandomAccessIterator = long int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<long\
    \ int>]\u2019:\n/usr/include/c++/9/bits/stl_algo.h:1890:25:   required from \u2018\
    void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator,\
    \ _Compare) [with _RandomAccessIterator = long int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<long\
    \ int>]\u2019\n/usr/include/c++/9/bits/stl_algo.h:1976:31:   required from \u2018\
    void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with\
    \ _RandomAccessIterator = long int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<long\
    \ int>]\u2019\n/usr/include/c++/9/bits/stl_algo.h:4905:18:   required from \u2018\
    void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = long int; _Compare\
    \ = long int]\u2019\n/tmp/tmp4bw6bvh5.cpp:14:22:   required from here\n/usr/include/c++/9/bits/stl_algo.h:1855:3:\
    \ error: no type named \u2018value_type\u2019 in \u2018struct std::iterator_traits<long\
    \ int>\u2019\n 1855 |   __val = _GLIBCXX_MOVE(*__i);\n      |   ^~~~~\n/usr/include/c++/9/bits/stl_algo.h:1857:8:\
    \ error: invalid type argument of unary \u2018*\u2019 (have \u2018long int\u2019\
    )\n 1857 |        *__first = _GLIBCXX_MOVE(__val);\n      |        ^~~~~~~~\n\
    /usr/include/c++/9/bits/stl_algo.h:1855:3: error: no type named \u2018value_type\u2019\
    \ in \u2018struct std::iterator_traits<long int>\u2019\n 1855 |   __val = _GLIBCXX_MOVE(*__i);\n\
    \      |   ^~~~~\nIn file included from /usr/include/c++/9/bits/stl_algobase.h:71,\n\
    \                 from /usr/include/c++/9/bits/specfun.h:45,\n               \
    \  from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp4bw6bvh5.cpp:2:\n/usr/include/c++/9/bits/predefined_ops.h:\
    \ In instantiation of \u2018constexpr bool __gnu_cxx"
  stdout: ''
  timestamp: 1660139907
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  //# YOUR CODE HERE\n  long sum = a + b + c;\n  if (sum\
    \ - a <= a) return -1;\n  if (sum - b <= b) return -1;\n  if (sum - c <= c) return\
    \ -1;\n  float p = sum / 2.0;\n  return sqrt(p * (p - a) * (p - b) * (p - c));\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpi5unlmsg: /tmp/tmpi5unlmsg.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139909
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float sum = (a+b+c)/2.0;\n    float area = sqrt(sum*(sum-a)*(sum-b)*(sum-c));\n\
    \    if(a > 0 && b > 0 && c > 0 && area > 0) {\n        return area;\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpio94ql0p: /tmp/tmpio94ql0p.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if ((a + b > c) && (a + c > b) && (b + c > a)) {\n\
    \        return std::sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a + b +\
    \ c)) / 4;\n    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp5mq9d363: /tmp/tmp5mq9d363.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Implement this function.\n    if( a+b > c && a+c\
    \ > b && b+c > a)\n    {\n        float x = (a+b+c)/2.0;\n        float y = sqrt(x*(x-a)*(x-b)*(x-c));\n\
    \        float r = y * 100;\n        float ans = round(r);\n        return ans/100;\n\
    \    }\n    else\n    {\n        return -1;\n    }\n\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpx4igd0k5: /tmp/tmpx4igd0k5.cpp:33: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139909
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = float(a + b + c) / 2;\n    float area =\
    \ float(sqrt(s * (s - a) * (s - b) * (s - c)));\n    if (area > 0)\n        return\
    \ area;\n    else \n        return float(-1);\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpfi6v7qbd: /tmp/tmpfi6v7qbd.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // We need to find the area of the triangle given\
    \ its 3 sides a, b and c.\n    // We know that:\n    //     (i) The area of a\
    \ triangle is given by the half of its base multiplied by\n    //     its height\n\
    \    //     (ii) The height of a triangle, when drawn perpendicular to the base,\n\
    \    //     forms a right angle triangle with the base.\n    //     (iii) In a\
    \ right angle triangle, the length of the hypotenuse is equal to\n    //     the\
    \ sum of the squares of the lengths of the other two sides.\n    //     (iv) Using\
    \ the Pythagoras theorem, the squares of the lengths of the sides\n    //    \
    \ are a^2, b^2 and c^2.\n    //     (v) The base of a triangle is the longest\
    \ side.\n    //     (vi) The height of a triangle is the length of the side which\
    \ is drawn\n    //     perpendicular to the base.\n    // From (i) to (vi), we\
    \ now have all the pieces of the puzzle.\n    // We now need to assemble the pieces\
    \ and solve the problem.\n    // From (v), the base is the side with the largest\
    \ length and hence we need\n    // to determine the sides with the largest length.\n\
    \    // We can do this by sorting the three sides in descending order.\n    float\
    \ sides[3] = {a, b, c};\n    std::sort(sides, sides + 3, std::greater<float>());\n\
    \    float base = sides[0];\n    float side1 = sides[1];\n    float side2 = sides[2];\n\
    \    // From (i), we know that the area is half of the base multiplied by the\
    \ height.\n    // We need to calculate the height.\n    // From (vi), the height\
    \ is the side which is drawn perpendicular to the base.\n    // We need to calculate\
    \ this side.\n    // The other two sides are side1 and side2.\n    // From (ii),\
    \ the height will be one of side1 or side2.\n    // From (v), the base is the\
    \ longest side and hence the height will be the\n    // shorter side.\n    //\
    \ From (iii), the length of the hypotenuse is equal to the sum of the squares\n\
    \    //\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp7ddpdw8m: /tmp/tmp7ddpdw8m.cpp:50: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // We know if a triangle is valid if the sum of the\
    \ lengths of any two sides\n  // is greater than the third side. Also, the maximum\
    \ length of a side cannot\n  // be greater than the sum of the lengths of the\
    \ other two sides.\n  if(a + b > c and a + c > b and b + c > a and max(a, b, c)\
    \ < a + b + c - max(a, b, c))\n    return sqrt(pow(a, 2) + pow(b, 2) - pow(c,\
    \ 2)) * sqrt(pow(a, 2) + pow(c, 2) - pow(b, 2)) * sqrt(pow(b, 2) + pow(c, 2) -\
    \ pow(a, 2)) / 4;\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxbpsxcz6.cpp: In function \u2018float triangle_area(long int, long\
    \ int, long int)\u2019:\n/tmp/tmpxbpsxcz6.cpp:17:48: error: \u2018max\u2019 was\
    \ not declared in this scope; did you mean \u2018std::max\u2019?\n   17 |   if(a\
    \ + b > c and a + c > b and b + c > a and max(a, b, c) < a + b + c - max(a, b,\
    \ c))\n      |                                                ^~~\n      |   \
    \                                             std::max\nIn file included from\
    \ /usr/include/c++/9/algorithm:62,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxbpsxcz6.cpp:2:\n/usr/include/c++/9/bits/stl_algo.h:3468:5:\
    \ note: \u2018std::max\u2019 declared here\n 3468 |     max(initializer_list<_Tp>\
    \ __l, _Compare __comp)\n      |     ^~~\n"
  stdout: ''
  timestamp: 1660139907
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    float s = (a+b+c)/2.0;\n\
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if(a+b>c && a+c>b && b+c>a)\n\
    \        return area;\n    else\n        return -1;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9nnc3_82: /tmp/tmp9nnc3_82.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // implement this function\n    float s, a1;\n   \
    \ if (a + b > c && a + c > b && b + c > a) {\n        s = (a + b + c) / 2.0;\n\
    \        a1 = sqrt(s * (s - a) * (s - b) * (s - c));\n        return a1;\n   \
    \ }\n    else {\n        return -1;\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpolikkqgd: /tmp/tmpolikkqgd.cpp:29: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    std::vector<long> sides = {a, b, c};\n    std::sort(sides.begin(),\
    \ sides.end());\n    if(sides[0] + sides[1] > sides[2]) {\n        float p = (a\
    \ + b + c) / 2.0;\n        return sqrt(p * (p - a) * (p - b) * (p - c));\n   \
    \ }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpgxu_73hk: /tmp/tmpgxu_73hk.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    if (area <= 0) {\n        return -1;\n\
    \    }\n    return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmps_8bn2me: /tmp/tmps_8bn2me.cpp:24: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // fill in the code\n    float s = 0.5 * (a + b +\
    \ c);\n    float area = pow(s * (s - a) * (s - b) * (s - c), 0.5);\n    if (area\
    \ < 0.001) {\n        return -1;\n    }\n    else {\n        return area;\n  \
    \  }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1iqy51st: /tmp/tmp1iqy51st.cpp:27: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    if(area > 0)\n        return area;\n  \
    \  else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmphy5_2pd4: /tmp/tmphy5_2pd4.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    \n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpr5864e7x: /tmp/tmpr5864e7x.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139907
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a > 0 && b > 0 && c > 0);\n  // Write your code\
    \ here.\n  return (float(-1));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmprgzzj7b_: /tmp/tmprgzzj7b_.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a<=0||b<=0||c<=0){\n        return -1;\n    }\n\
    \    if(a+b<=c||a+c<=b||b+c<=a){\n        return -1;\n    }\n    else{\n     \
    \   float s=(a+b+c)/2.0;\n        float area=sqrt(s*(s-a)*(s-b)*(s-c));\n    \
    \    return area;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp3jxaluta: /tmp/tmp3jxaluta.cpp:30: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a+b>c && a+c>b && b+c>a) {\n        float s =\
    \ (a+b+c)/2.0;\n        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    return -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpeeqif5py: /tmp/tmpeeqif5py.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139907
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b <= c || a + c <= b || b + c <= a)\n    \
    \    return -1;\n    else {\n        float s = (a + b + c) / 2.0;\n        float\
    \ triarea = sqrt(s * (s - a) * (s - b) * (s - c));\n        return round(triarea\
    \ * 100) / 100;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpn_4extdn: /tmp/tmpn_4extdn.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139907
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // your code here\n  //\n  long long s = a + b + c;\n\
    \  if (s <= 2 * std::max(a, std::max(b, c))) {\n    return -1;\n  }\n  return\
    \ std::sqrt(s * (s - 2 * a) * (s - 2 * b) * (s - 2 * c)) / 4.0;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpvwjj_f1f: /tmp/tmpvwjj_f1f.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float ret = -1;\n    if(a<=0 || b<=0 || c<=0) return\
    \ ret;\n    if(a+b>c && a+c>b && b+c>a)\n    {\n        float s = float(a+b+c)/2;\n\
    \        float ans = sqrt(s*(s-a)*(s-b)*(s-c));\n        return ans;\n    }\n\
    \    return ret;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp32cx9ikc: /tmp/tmp32cx9ikc.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // edge case where any two sides added together is\
    \ less than or equal to the third side\n    if(a + b <= c || a + c <= b || b +\
    \ c <= a) {\n        return -1;\n    }\n\n    // else, use Heron's formula to\
    \ get area\n    long half_perimeter = (a + b + c) / 2;\n    return sqrt(half_perimeter\
    \ * (half_perimeter - a) * (half_perimeter - b) * (half_perimeter - c));\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5gfw5etb: /tmp/tmp5gfw5etb.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b > c && a + c > b && b + c > a) {\n     \
    \   double s = (a + b + c) / 2.0;\n        return sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2ala7wqd: /tmp/tmp2ala7wqd.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tassert(a > 0 && b > 0 && c > 0);\n\tif (a + b <= c ||\
    \ a + c <= b || b + c <= a) {\n\t\treturn -1;\n\t}\n\tlong long p = (a + b + c)\
    \ / 2;\n\tlong long s = p * (p - a) * (p - b) * (p - c);\n\treturn sqrt(s);\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpp42yqwhv: /tmp/tmpp42yqwhv.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // your code here\n  return 0.0;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpc8c2c0vo: /tmp/tmpc8c2c0vo.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t\n\t\tif((a+b>c)&&(a+c>b)&&(b+c>a)){\n\t\t\tfloat s\
    \ = (a+b+c)/2.0;\n\t\t\treturn sqrt(s*(s-a)*(s-b)*(s-c));\n\t\t}\n\t\telse\n\t\
    \t\treturn -1;\n\t\n\t\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpm4t7ocml: /tmp/tmpm4t7ocml.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  float s,area;\n  // PUT YOUR CODE HERE\n  if(a+b>c &&\
    \ a+c>b && b+c>a){\n    s=(a+b+c)/2;\n    area=sqrt(s*(s-a)*(s-b)*(s-c));\n  \
    \  return area;\n  }\n  else return -1;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpq20xao_h: /tmp/tmpq20xao_h.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b > c && a + c > b && b + c > a) {\n     \
    \   float s = (a + b + c) / 2.0;\n        float area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n        return (area);\n    }\n    return (-1);\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp43e6gwf6: /tmp/tmp43e6gwf6.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s, area;\n    s = (a + b + c) / 2.0;\n    if\
    \ (s >= a && s >= b && s >= c) {\n        area = sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n        return area;\n    }\n    return -1;\n}\nint main() {\n  \
    \  auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpemsxbkbs: /tmp/tmpemsxbkbs.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  assert(a > 0 && b > 0 && c > 0);\n\n  if (a + b <= c\
    \ || a + c <= b || b + c <= a) {\n    return -1;\n  }\n\n  float s = (a + b +\
    \ c) / 2.0;\n  float area = std::sqrt(s * (s - a) * (s - b) * (s - c));\n  return\
    \ area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpn9x7at4y: /tmp/tmpn9x7at4y.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139907
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n  if (area <= 0.0) {\n    return -1.0;\n  }\n\
    \  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmprzmjxxcq: /tmp/tmprzmjxxcq.cpp:24: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a+b<=c || a+c<=b || b+c<=a) {\n        return\
    \ -1;\n    } else {\n        float p = (a+b+c)/2.0;\n        return sqrt(p*(p-a)*(p-b)*(p-c));\n\
    \    }\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1_y7myz_: /tmp/tmp1_y7myz_.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tfloat s = (a + b + c) / 2.0;\n\tfloat area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n\treturn area;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpn_ls86om: /tmp/tmpn_ls86om.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660126854
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  //...\n  // assert(a>0);\n  // assert(b>0);\n  // assert(c>0);\n\
    \  assert(a>0 && b>0 && c>0);\n  if(a+b>c && a+c>b && b+c>a)\n  {\n      return\
    \ (float)sqrt((a+b+c)*(a+b-c)*(a+c-b)*(b+c-a))/4;\n  }\n  else\n  {\n      return\
    \ -1;\n  }\n  // return (a*b*c);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpnz4t8vbn: /tmp/tmpnz4t8vbn.cpp:33: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a+b>c&&a+c>b&&b+c>a)\n    {\n    float s=(a+b+c)/2.0;\n\
    \    float ans=(s*(s-a)*(s-b)*(s-c));\n    return sqrt(ans);\n    }\n    else\n\
    \    {\n        return -1;\n    }\n    \n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpx2q125h3: /tmp/tmpx2q125h3.cpp:30: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Your code here\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpu5qr56_y: /tmp/tmpu5qr56_y.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139909
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a<=0 || b<=0 || c<=0) return -1;\n    if (a+b>c\
    \ && a+c>b && b+c>a) {\n        long p = (a+b+c)/2;\n        return sqrt(p*(p-a)*(p-b)*(p-c));\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpmk4tsym0: /tmp/tmpmk4tsym0.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if ((a+b) > c && (a+c) > b && (b+c) > a)\n    {\n\
    \        float s = (a+b+c)/2.0;\n        return sqrt(s*(s-a)*(s-b)*(s-c));\n \
    \   }\n    else\n    {\n        return -1;\n    }\n    \n}\nint main() {\n   \
    \ auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpgtdvs_2x: /tmp/tmpgtdvs_2x.cpp:29: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Write your code here\n    float p,area;\n    p=(a+b+c)/2.0;\n\
    \    if(a+b>c and a+c>b and b+c>a)\n    {\n        area=sqrt(p*(p-a)*(p-b)*(p-c));\n\
    \        //cout<<area;\n        return area;\n    }\n    else\n    {\n       \
    \ return -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpxlnw95p6: /tmp/tmpxlnw95p6.cpp:32: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a>0 && b>0 && c>0);\n    float s = (a+b+c)/2.0;\n\
    \    float area = sqrt(s*(s-a)*(s-b)*(s-c));\n    if (area == 0) {\n        return\
    \ -1;\n    }\n    else {\n        return area;\n    }\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp8fufpbuu: /tmp/tmp8fufpbuu.cpp:27: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a+b > c && a+c > b && b+c > a)\n        return\
    \ sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n    else\n        return -1;\n}\n\
    int main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpwzdbkmjx: /tmp/tmpwzdbkmjx.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139907
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if (a + b <= c || a + c <= b || b + c <= a) {\n    return\
    \ -1;\n  }\n  float s = (a + b + c) / 2.0;\n  return sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1hicz189: /tmp/tmp1hicz189.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139909
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a != 0 && b != 0 && c != 0);\n    if ((a+b)\
    \ <= c || (a+c) <= b || (b+c) <= a)\n        return -1;\n    float s = (a+b+c)/2.0;\n\
    \    return sqrt(s*(s-a)*(s-b)*(s-c));\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpbghvwlee: /tmp/tmpbghvwlee.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // this check if the sum of two sides is greater than\
    \ the third\n  if(a + b > c && a + c > b && b + c > a){\n    // this is Heron's\
    \ formula\n    //\n    //   /|\\\n    //  / | \\\n    // /  |  \\\n    //   /_\\\
    \n    //     a\n    //     \n    // If a is the length of the line segment\n \
    \   // a, b, c are the length of the sides.\n    // s is the semiperimeter\n \
    \   // the area of the triangle is:\n    // Area = sqrt(s(s-a)(s-b)(s-c))\n  \
    \  //\n    // NOTE: this implementation is flawed and does not check for integer\
    \ overflow\n    // for a, b, c with values larger than 2147483647\n    // I tried\
    \ to import math and use math.hypot(a, b)\n    // This does not work for this\
    \ question.\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return (round(area * 100) / 100);\n  }\n  return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpoapofzrm: /tmp/tmpoapofzrm.cpp:44: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // return (a * b * c) / 2.0;\n    if (a < 1 || b <\
    \ 1 || c < 1) return -1;\n    if (a + b <= c || a + c <= b || b + c <= a) return\
    \ -1;\n    return (a * b * c) / 2.0;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8mjxxnm7: /tmp/tmp8mjxxnm7.cpp:21: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if (a<=0 || b<=0 || c<=0) return -1;\n  if (a+b <= c\
    \ || a+c <= b || b+c <= a) return -1;\n  long p = (a+b+c)/2;\n  return std::sqrt(p*(p-a)*(p-b)*(p-c));\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp3npmwjtp: /tmp/tmp3npmwjtp.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // Your code here\n  float s=(a+b+c)/2.0;\n  // assert(a+b>c\
    \ || a+c>b || b+c>a);\n  if(a+b>c && a+c>b && b+c>a)\n  {\n    return sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \  }\n  else\n  {\n    return float(-1);\n  }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpb40aso2u: /tmp/tmpb40aso2u.cpp:30: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139908
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  return (a + b > c && a + c > b && b + c > a) ? \n  sqrt(((a\
    \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c))) / 4.0 : -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp3j16io1i: /tmp/tmp3j16io1i.cpp:21: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float area;\n    if(a+b>c && a+c>b && b+c>a){\n  \
    \      float s = (a+b+c)/2.0;\n        area = sqrt(s*(s-a)*(s-b)*(s-c));\n   \
    \ }else{\n        area = -1;\n    }\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp7nv3fg_z: /tmp/tmp7nv3fg_z.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float tri;\n    if(a+b>c && a+c>b && b+c>a)\n    {\n\
    \        float p = (a+b+c)/2.0;\n        tri = sqrt(p*(p-a)*(p-b)*(p-c));\n  \
    \      return tri;\n    }\n    else return float(-1);\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpbvudre7m: /tmp/tmpbvudre7m.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float p = (a + b + c) / 2.0;\n    float s = sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n    if (s > 0) {\n        return s;\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_z4ba57h: /tmp/tmp_z4ba57h.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Replace this comment with your code\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpntdolkw0: /tmp/tmpntdolkw0.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if(a + b > c && a + c > b && b + c > a) {\n    float\
    \ s = (a + b + c) / 2.0;\n    return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \  }\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp1r3nzae2: /tmp/tmp1r3nzae2.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  std::vector<long> v{a, b, c};\n  std::sort(v.begin(),\
    \ v.end());\n  if (v[0] + v[1] > v[2])\n    return v[0] * v[1] / 2.0;\n  return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpv4dd5kim: /tmp/tmpv4dd5kim.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // TODO: You code goes here!\n    if (a + b > c &&\
    \ a + c > b && b + c > a) {\n        double s = (a + b + c) / 2.0;\n        double\
    \ area = sqrt(s * (s - a) * (s - b) * (s - c));\n        return round(area * 100)\
    \ / 100.0;\n    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpxwj5keul: /tmp/tmpxwj5keul.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // your code goes here\n  if(a+b > c && a+c > b && b+c\
    \ > a)\n    return sqrt(abs((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c)))/4;\n  else\n  \
    \  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpsfuzsa4c: /tmp/tmpsfuzsa4c.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139911
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif ((a + b > c) && (a + c > b) && (b + c > a))\n\t\t\
    return 0.5 * (a * b);\n\telse\n\t\treturn -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmppktnngpr: /tmp/tmppktnngpr.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  long max, sum, area;\n  max = std::max(a, std::max(b,\
    \ c));\n  sum = a + b + c;\n  if (max >= sum / 2)\n    return -1;\n  area = std::sqrt(sum\
    \ / 2 * (sum / 2 - a) * (sum / 2 - b) * (sum / 2 - c));\n  return std::round(area\
    \ * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpso8lexs1: /tmp/tmpso8lexs1.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t// Your code here\n\t// You can add more helper functions\
    \ if you like\n    float f = (a+b+c)/2.0;\n    float area = f*(f-a)*(f-b)*(f-c);\n\
    \    if(area < 0){\n        return -1;\n    }\n    return sqrt(area);\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp5nbx4dx9: /tmp/tmp5nbx4dx9.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if (a + b > c && a + c > b && b + c > a) {\n    float\
    \ p = (a + b + c) / 2.0;\n    return sqrt(p * (p - a) * (p - b) * (p - c));\n\
    \  }\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp6k9cnvzx: /tmp/tmp6k9cnvzx.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if(a <= 0 || b <= 0 || c <= 0)\n    return -1;\n  if(a\
    \ + b <= c || a + c <= b || b + c <= a)\n    return -1;\n  float s = (a + b +\
    \ c) / 2.0;\n  float area = sqrt(s * (s - a) * (s - b) * (s - c));\n  return round(area\
    \ * 100) / 100.0;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpjlivjd8t: /tmp/tmpjlivjd8t.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    return -1;\n}\nint main() {\n    auto candidate =\
    \ triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmphjpykzvi: /tmp/tmphjpykzvi.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpicylcn1k: /tmp/tmpicylcn1k.cpp:21: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Make sure that the sides are integers\n    assert(a\
    \ == (long)a);\n    assert(b == (long)b);\n    assert(c == (long)c);\n    // All\
    \ sides must be > 0\n    if (a <= 0 || b <= 0 || c <= 0)\n        return -1;\n\
    \    // Sum of any two sides must be > third side\n    if ((a + b) <= c || (a\
    \ + c) <= b || (b + c) <= a)\n        return -1;\n    // Calculate and return\
    \ the area (Heron's formula)\n    float s = (a + b + c) / 2.0;\n    return sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpix7pt3f5: /tmp/tmpix7pt3f5.cpp:32: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a > 0 && b > 0 && c > 0) {\n        if (a + b\
    \ > c && a + c > b && b + c > a) {\n            float s = float(a + b + c) / 2;\n\
    \            return float(sqrt(s * (s - a) * (s - b) * (s - c)));\n        }\n\
    \    }\n    return float(-1);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpogjoehdm: /tmp/tmpogjoehdm.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpj7zjiesy: /tmp/tmpj7zjiesy.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a >= 0);\n    assert(b >= 0);\n    assert(c\
    \ >= 0);\n    float s = (a + b + c) / 2.0;\n    float A = sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n    if (A <= 0) {\n        return -1;\n    }\n    std::cout\
    \ << std::fixed << std::setprecision(2) << A << '\\n';\n    return A;\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpbq02u8um: /tmp/tmpbq02u8um.cpp:28: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t// TODO: Implement this\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpzacbtl8d: /tmp/tmpzacbtl8d.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tlong s = (a + b + c) / 2;\n\tif (s > a && s > b && s\
    \ > c) {\n\t\treturn std::sqrt(s * (s - a) * (s - b) * (s - c));\n\t}\n\treturn\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpdrntsuax: /tmp/tmpdrntsuax.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a > 0);\n    assert(b > 0);\n    assert(c >\
    \ 0);\n    assert(a <= 1e9);\n    assert(b <= 1e9);\n    assert(c <= 1e9);\n \
    \   // Check for valid triangle\n    if(a + b > c && a + c > b && b + c > a) {\n\
    \        // Calculate p and s\n        float p = (a + b + c) / 2.0;\n        float\
    \ s = sqrt(p * (p - a) * (p - b) * (p - c));\n        // Return the rounded s\n\
    \        return roundf(s * 100) / 100;\n    }\n    // If the triangle isn't valid\
    \ return -1\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpnr8g_nl6: /tmp/tmpnr8g_nl6.cpp:35: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // assert (a > 0);\n  // assert (b > 0);\n  // assert\
    \ (c > 0);\n  // assert (a + b > c);\n  // assert (a + c > b);\n  // assert (b\
    \ + c > a);\n  float s = (a + b + c) / 2.0;\n  float area = sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n  if (area > 0.0) {\n    return area;\n  } else {\n   \
    \ return -1.0;\n  }\n}\nint main() {\n    auto candidate = triangle_area;\n  \
    \  assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp32krrk1h: /tmp/tmp32krrk1h.cpp:32: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // using Heron's formula\n    float perim = (a + b\
    \ + c) / 2.0;\n    float area = sqrt(perim * (perim - a) * (perim - b) * (perim\
    \ - c));\n    if (area <= 0) {\n        return -1;\n    }\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpdiil7u23: /tmp/tmpdiil7u23.cpp:25: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    float area = s *\
    \ (s - a) * (s - b) * (s - c);\n    return area < 0 ? -1 : sqrt(area);\n}\nint\
    \ main() {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4),\
    \ (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n   \
    \ assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpyy72a078: /tmp/tmpyy72a078.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t// Write your code here.\n\tassert(a > 0 && b > 0 &&\
    \ c > 0);\n\tassert(a + b > c && a + c > b && b + c > a);\n\tfloat s = (a + b\
    \ + c) / 2.0;\n\treturn sqrt(s * (s - a) * (s - b) * (s - c));\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpyyb9lsza: /tmp/tmpyyb9lsza.cpp:16: float triangle_area(long int, long
    int, long int): Assertion `a + b > c && a + c > b && b + c > a'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tfloat p = (a + b + c) / 2.0;\n\tfloat area = sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n\tif(p > a && p > b && p > c)\n\t\treturn area;\n\
    \telse \n\t\treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpl0ydbk_l: /tmp/tmpl0ydbk_l.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // write code here\n    if(a+b>c && a+c>b && b+c>a)\n\
    \    {\n        float s = (a+b+c)/2.0;\n        float ans = (s*(s-a)*(s-b)*(s-c));\n\
    \        if(ans>0)\n        {\n            return sqrt(ans);\n        }\n    \
    \    else\n        {\n            return -1;\n        }\n    }\n    else\n   \
    \ {\n        return -1;\n    }\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp3t85cvor: /tmp/tmp3t85cvor.cpp:37: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a+b > c && a+c > b && b+c > a) {\n        float\
    \ s = (a+b+c)/2.0;\n        return sqrt(s*(s-a)*(s-b)*(s-c));\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpy63zao4f: /tmp/tmpy63zao4f.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  std::vector<long> sides {a, b, c};\n  std::sort(sides.begin(),\
    \ sides.end());\n  if (sides[0] + sides[1] > sides[2])\n    return (float) (sides[0]\
    \ + sides[1] + sides[2]) * (sides[2] - sides[1] + sides[0]) * (sides[1] - sides[0]\
    \ + sides[2]) * (sides[0] + sides[1] - sides[2]);\n  return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpgk061mwu: /tmp/tmpgk061mwu.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    //your code here\n    float s = (a+b+c)/2.0;\n   \
    \ return (a+b>c && a+c>b && b+c>a) ? sqrt(s*(s-a)*(s-b)*(s-c)) : -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9_zozn3h: /tmp/tmp9_zozn3h.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    if (s * (s - a)\
    \ * (s - b) * (s - c) > 0)\n        return sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    else\n        return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpz7n32kyw: /tmp/tmpz7n32kyw.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // Write your code here\n  if (a + b > c && a + c >\
    \ b && b + c > a) {\n    float s = (a + b + c) / 2.0;\n    return (sqrt(s * (s\
    \ - a) * (s - b) * (s - c)));\n  }\n  return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpsshgjr5b: /tmp/tmpsshgjr5b.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Your code here!\n    return (a + b > c && a + c\
    \ > b && b + c > a) ? \n            0.5 * (a + b) * (a + c) * (b + c) : -1;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp7b6oten4: /tmp/tmp7b6oten4.cpp:20: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tfloat s, area;\n\ts = (a + b + c) / 2;\n\tarea = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n\tif (area > 0) {\n\t\t//Rounding to 2 decimal\
    \ points\n\t\treturn floorf(area * 100) / 100;\n\t}\n\telse {\n\t\treturn float(-1);\n\
    \t}\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpp7d2a6d1: /tmp/tmpp7d2a6d1.cpp:29: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  std::vector<long> vec{a, b, c};\n  std::sort(vec.begin(),\
    \ vec.end());\n  double p = (vec[0] + vec[1] + vec[2]) / 2.0;\n  if (vec[0] +\
    \ vec[1] <= vec[2]) {\n    return -1;\n  }\n  double area = sqrt(p * (p - vec[0])\
    \ * (p - vec[1]) * (p - vec[2]));\n  return round(area * 100) / 100;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpo1v4b56a: /tmp/tmpo1v4b56a.cpp:27: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  std::vector<long> sides{a, b, c};\n  std::sort(sides.begin(),\
    \ sides.end());\n  if(sides[0] + sides[1] > sides[2]) {\n    float p = (a + b\
    \ + c) / 2.0;\n    return sqrt(p * (p - a) * (p - b) * (p - c));\n  }\n  return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpm623v9xh: /tmp/tmpm623v9xh.cpp:26: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n   // Your Code Here\n   if(a+b>c && a+c>b && b+c>a)\n\
    \   {\n       float s = (a+b+c)/2.0;\n       return sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \   }\n   else\n   {\n       return -1;\n   }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpyawdr5x_: /tmp/tmpyawdr5x_.cpp:29: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    return sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp7ei1rsk8: /tmp/tmp7ei1rsk8.cpp:20: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  float area = -1;\n  float s = (a + b + c) / 2.0;\n \
    \ if (s > a && s > b && s > c) {\n    area = sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n  }\n  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpbsws1xx2: /tmp/tmpbsws1xx2.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a <= 0 || b <= 0 || c <= 0) return -1;\n    //\
    \ assert(a > 0 && b > 0 && c > 0);\n    long s = (a + b + c) / 2;\n    float area\
    \ = (float)sqrt(s * (s - a) * (s - b) * (s - c));\n    if(area <= 0) return -1;\n\
    \    return round(area * 100) / 100;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpnn2cjcm9: /tmp/tmpnn2cjcm9.cpp:24: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // printf(\"%d %d %d\", a, b, c);\n    if( a<=0 ||\
    \ b<=0 || c<=0 ){\n        return -1;\n    }\n    float s = (a+b+c)/2.0;\n   \
    \ float area = (s*(s-a)*(s-b)*(s-c));\n    if(area<=0){\n        return -1;\n\
    \    }\n    area = sqrt(area);\n    // printf(\"\\n%f\", area);\n    return area;\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpqedd_k3i: /tmp/tmpqedd_k3i.cpp:31: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a<=0 || b<=0 || c<=0)\n    {\n        return float(-1);\n\
    \    }\n    if (a+b>c && a+c>b && b+c>a)\n    {\n        float s = (a+b+c)/2.0;\n\
    \        float area = sqrt(s*(s-a)*(s-b)*(s-c));\n        return round(area*100)/100;\n\
    \    }\n    else\n    {\n        return float(-1);\n    }\n}\nint main() {\n \
    \   auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp66909kxu: /tmp/tmp66909kxu.cpp:33: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139913
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tlong sum = a + b + c;\n\tif (a + b > c && a + c > b\
    \ && b + c > a) {\n\t\treturn sqrt(sum * (sum - a) * (sum - b) * (sum - c)) /\
    \ 4;\n\t}\n\treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpv8aan_6y: /tmp/tmpv8aan_6y.cpp:22: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139914
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // TODO: Return the area of the triangle rounded to\
    \ 2 decimal points\n    // or -1 if the triangle is invalid\n    if(a < 1 || b\
    \ < 1 || c < 1){\n        return -1;\n    }\n    if((a+b > c) && (a+c > b) &&\
    \ (b+c > a)){\n        float s = (a+b+c)/2.0;\n        return (sqrt(s*(s-a)*(s-b)*(s-c)));\n\
    \    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp2pss9582: /tmp/tmp2pss9582.cpp:29: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139914
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if (a <= 0 || b <= 0 || c <= 0 || a + b <= c || a +\
    \ c <= b || b + c <= a) {\n    return -1;\n  }\n  float s = (a + b + c) / 2.0;\n\
    \  return sqrt(s * (s - a) * (s - b) * (s - c));\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp8rzchrs0: /tmp/tmp8rzchrs0.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a+b<=c)\n    {\n        return -1;\n    }\n  \
    \  else if (a+c<=b)\n    {\n        return -1;\n    }\n    else if (b+c<=a)\n\
    \    {\n        return -1;\n    }\n    else\n    {\n        float p = (a+b+c)/2;\n\
    \        float area = std::sqrt(p*(p-a)*(p-b)*(p-c));\n        return area;\n\
    \    }\n    \n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpzzqo1rwc: /tmp/tmpzzqo1rwc.cpp:38: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b > c && a + c > b && b + c > a) {\n     \
    \   float p = (a + b + c) / 2.0;\n        float area = sqrt(p * (p - a) * (p -\
    \ b) * (p - c));\n        return (round(area * 100) / 100.0);\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmph3kb6j_k: /tmp/tmph3kb6j_k.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t// WRITE YOUR CODE HERE\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpg8qgnjet: /tmp/tmpg8qgnjet.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // Write your code here\n  if (a + b > c && a + c >\
    \ b && b + c > a) {\n    float s = (a + b + c) / 2.0;\n    return sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n  }\n  return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpq172g4qw: /tmp/tmpq172g4qw.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a + b > c && a + c > b && b + c > a)\n       \
    \ return sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4;\n \
    \   else\n        return float(-1);\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9nmsvgny: /tmp/tmp9nmsvgny.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpj7zjiesy: /tmp/tmpj7zjiesy.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139912
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // TODO\n  assert(a + b > c);\n  float s = (a + b +\
    \ c) / 2.0;\n  return sqrt(s * (s - a) * (s - b) * (s - c));\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp7mc9wxy_: /tmp/tmp7mc9wxy_.cpp:15: float triangle_area(long int, long
    int, long int): Assertion `a + b > c'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    assert(a > 0);\n    assert(b > 0);\n    assert(c >\
    \ 0);\n    float s = (a + b + c) / 2.0;\n    if(s - a < 0 || s - b < 0 || s -\
    \ c < 0) {\n        return -1;\n    }\n    else {\n        return std::sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    }\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmptqpsjgbd: /tmp/tmptqpsjgbd.cpp:29: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    \n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpr5864e7x: /tmp/tmpr5864e7x.cpp:18: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139907
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float p = (a + b + c) / 2.0;\n    if(p > a && p >\
    \ b && p > c) {\n        return sqrt(p * (p - a) * (p - b) * (p - c));\n    }\n\
    \    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpljrbcakz: /tmp/tmpljrbcakz.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\t//intialize area\n\tfloat area = -1;\n\t//check if possible\
    \ to make triangle\n\tif ((a + b > c) && (a + c > b) && (b + c > a)) {\n\t\t//calculate\
    \ area of triangle\n\t\tfloat s = (a + b + c) / 2;\n\t\tarea = (sqrt(s * (s -\
    \ a) * (s - b) * (s - c)));\n\t}\n\t//return area\n\treturn area;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmptzvzx66q: /tmp/tmptzvzx66q.cpp:29: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    double s = (a + b + c) / 2.0;\n    double area = s\
    \ * (s - a) * (s - b) * (s - c);\n    if (area < 0)\n        return -1;\n    return\
    \ sqrt(area);\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpikefekqn: /tmp/tmpikefekqn.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if(a+b>c && a+c>b && b+c>a) {\n        float s = (a+b+c)/2.0;\n\
    \        float x = s*(s-a)*(s-b)*(s-c);\n        return sqrt(x);\n    }\n    return\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpfvsu9_76: /tmp/tmpfvsu9_76.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // The three sides passed are real numbers.\n  // Order\
    \ the sides by length.\n  long sides[3] = {a, b, c};\n  std::sort(sides, sides\
    \ + 3);\n  // Check if the three sides form a valid triangle.\n  if(sides[0] +\
    \ sides[1] <= sides[2]) {\n    return -1;\n  }\n  // The area of a triangle is\
    \ given by the formula:\n  // area = \u221A(s(s \u2212 a)(s \u2212 b)(s \u2212\
    \ c)), where s = (a + b + c) / 2\n  // Calculate the half-perimeter of the triangle\n\
    \  float s = (sides[0] + sides[1] + sides[2]) / 2.0;\n  // Calculate the area.\n\
    \  float area = sqrt(s * (s - sides[0]) * (s - sides[1]) * (s - sides[2]));\n\
    \  // Round the area to 2 decimal points.\n  area = floor(area * 100) / 100;\n\
    \  return area;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpauwqlon2: /tmp/tmpauwqlon2.cpp:36: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // write your code here\n    return 0.0;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_nsq_ve2: /tmp/tmp_nsq_ve2.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  float s = (a + b + c) / 2.0;\n  return ((s - a) * (s\
    \ - b) * (s - c) < 0) ? -1 :\n         sqrt(s * (s - a) * (s - b) * (s - c));\n\
    }\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpnu4bt4nj: /tmp/tmpnu4bt4nj.cpp:22: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    if (s - a <= 0 ||\
    \ s - b <= 0 || s - c <= 0) {\n        return -1;\n    }\n    return sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpqhqa0vva: /tmp/tmpqhqa0vva.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = float(a + b + c) / 2;\n    float area =\
    \ sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0) {\n        return\
    \ round(area * 100) / 100;\n    }\n    return -1;\n}\nint main() {\n    auto candidate\
    \ = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1),\
    \ (2), (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n\
    \    assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpv86ogmj7: /tmp/tmpv86ogmj7.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tint flag = 1;\n\t// check if area exists\n\tif(a+b<=c||a+c<=b||b+c<=a)\n\
    \t\tflag = 0;\n\tif(flag)\n\t\treturn sqrt(a*a+b*b-2*a*b*cos(c));\n\telse\n\t\t\
    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpja_7ds43: /tmp/tmpja_7ds43.cpp:25: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  if(a < 0 || b < 0 || c < 0) return -1;\n  if(a + b >\
    \ c && a + c > b && b + c > a) {\n    float p = (a + b + c) / 2.0;\n    return\
    \ sqrt(p * (p - a) * (p - b) * (p - c));\n  }\n  return -1;\n}\nint main() {\n\
    \    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpqvnr8r2u: /tmp/tmpqvnr8r2u.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    float s = (a + b + c) / 2.0;\n    float ans = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    if (ans < 0) {\n        return -1;\n  \
    \  }\n    return ans;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmp9uz4cte6: /tmp/tmp9uz4cte6.cpp:24: int main(): Assertion `candidate((1),
    (2), (10)) == (float(-1))'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // Write your code here\n  return -1;\n}\nint main()\
    \ {\n    auto candidate = triangle_area;\n    assert(candidate((3), (4), (5))\
    \ == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp3zuxyfrj: /tmp/tmp3zuxyfrj.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a <= 0 || b <= 0 || c <= 0 || a + b <= c || a\
    \ + c <= b || b + c <= a)\n        return -1;\n    float p = (a + b + c) / 2.0;\n\
    \    return sqrt(p * (p - a) * (p - b) * (p - c));\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpc4jkshr9: /tmp/tmpc4jkshr9.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    if (a < 0 || b < 0 || c < 0) return -1;\n    if (a\
    \ == 0 || b == 0 || c == 0) return -1;\n    if (a >= b + c || b >= a + c || c\
    \ >= a + b) return -1;\n    float s = (a + b + c) / 2.0;\n    float area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\nint main() {\n    auto\
    \ candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp6mkr238m: /tmp/tmp6mkr238m.cpp:25: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif (a < 0 || b < 0 || c < 0) {\n\t\treturn -1;\n\t}\n\
    \tif (a + b > c && a + c > b && b + c > a) {\n\t\tlong s = (a + b + c) / 2;\n\t\
    \tdouble area = sqrt(s * (s - a) * (s - b) * (s - c));\n\t\treturn area;\n\t}\n\
    \treturn -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpse9rkrz7: /tmp/tmpse9rkrz7.cpp:28: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n\tif(a + b > c && a + c > b && b + c > a)\n\t\treturn\
    \ sqrt(4*a*a*b*b - (a*a + b*b - c*c)*(a*a + b*b - c*c))/4;\n\telse\n\t\treturn\
    \ -1;\n}\nint main() {\n    auto candidate = triangle_area;\n    assert(candidate((3),\
    \ (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10)) == (float(-1)));\n\
    \    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2), (2),\
    \ (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n   \
    \ assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2), (6),\
    \ (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n   \
    \ assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmpgnzdui1e: /tmp/tmpgnzdui1e.cpp:23: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  float s = (a + b + c) / 2.0;\n  if (a + b > c && a +\
    \ c > b && b + c > a) {\n    return std::sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \  }\n  return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n   \
    \ assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2), (10))\
    \ == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n    assert(candidate((2),\
    \ (2), (2)) == (1.73));\n    assert(candidate((1), (2), (3)) == (float(-1)));\n\
    \    assert(candidate((10), (5), (7)) == (16.25));\n    assert(candidate((2),\
    \ (6), (3)) == (float(-1)));\n    assert(candidate((1), (1), (1)) == (0.43));\n\
    \    assert(candidate((2), (2), (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp9ik0eog4: /tmp/tmp9ik0eog4.cpp:24: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n    // Check if the 3 sides form a valid triangle\n  \
    \  bool valid_triangle = a + b > c && a + c > b && b + c > a;\n    if (valid_triangle)\
    \ {\n        // Calc s\n        float s = (a + b + c) / 2.0;\n        // Calc\
    \ the area\n        float area = sqrt(s * (s - a) * (s - b) * (s - c));\n    \
    \    // Round the result\n        area = round(area * 100) / 100;\n        return\
    \ area;\n    }\n    return -1;\n}\nint main() {\n    auto candidate = triangle_area;\n\
    \    assert(candidate((3), (4), (5)) == (6.0));\n    assert(candidate((1), (2),\
    \ (10)) == (float(-1)));\n    assert(candidate((4), (8), (5)) == (8.18));\n  \
    \  assert(candidate((2), (2), (2)) == (1.73));\n    assert(candidate((1), (2),\
    \ (3)) == (float(-1)));\n    assert(candidate((10), (5), (7)) == (16.25));\n \
    \   assert(candidate((2), (6), (3)) == (float(-1)));\n    assert(candidate((1),\
    \ (1), (1)) == (0.43));\n    assert(candidate((2), (2), (10)) == (float(-1)));\n\
    }\n"
  status: Exception
  stderr: 'tmpt5t_o6pd: /tmp/tmpt5t_o6pd.cpp:31: int main(): Assertion `candidate((4),
    (8), (5)) == (8.18)'' failed.

    '
  stdout: ''
  timestamp: 1660139915
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given the lengths of the\
    \ three sides of a triangle. Return the area of\n// the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n// Otherwise return\
    \ -1\n// Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n// than the third side.\n// Example:\n// >>> triangle_area((3), (4), (5))\n\
    // (6.0)\n// >>> triangle_area((1), (2), (10))\n// (float(-1))\nfloat triangle_area(long\
    \ a, long b, long c) {\n  // your code here\n  return -1;\n}\nint main() {\n \
    \   auto candidate = triangle_area;\n    assert(candidate((3), (4), (5)) == (6.0));\n\
    \    assert(candidate((1), (2), (10)) == (float(-1)));\n    assert(candidate((4),\
    \ (8), (5)) == (8.18));\n    assert(candidate((2), (2), (2)) == (1.73));\n   \
    \ assert(candidate((1), (2), (3)) == (float(-1)));\n    assert(candidate((10),\
    \ (5), (7)) == (16.25));\n    assert(candidate((2), (6), (3)) == (float(-1)));\n\
    \    assert(candidate((1), (1), (1)) == (0.43));\n    assert(candidate((2), (2),\
    \ (10)) == (float(-1)));\n}\n"
  status: Exception
  stderr: 'tmp_gx6tacf: /tmp/tmp_gx6tacf.cpp:19: int main(): Assertion `candidate((3),
    (4), (5)) == (6.0)'' failed.

    '
  stdout: ''
  timestamp: 1660139915

language: cpp
name: HumanEval_60_sum_to_n
results:
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\treturn n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long ans = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        ans += i;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  long retVal\
    \ = 0;\n  for (long i = 1; i <= n; i++) {\n    retVal += i;\n  }\n  return retVal;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  // your code goes here\n \
    \ return (n*(n+1))/2;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n   return (n*(n+1))/2;\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tif (n == 1) {\n\t\treturn\
    \ 1;\n\t}\n\telse {\n\t\treturn n + sum_to_n(n - 1);\n\t}\n}\nint main() {\n \
    \   auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return (n * (n + 1)) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long i, sum = 0;\n  for (i\
    \ = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n  \
    \  auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return (n*(n+1))/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return ((n*(n+1))/2);\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // Build a vector of integers\
    \ of size n\n    std::vector<int> data(n);\n    // Fill it with 1\n    std::fill(data.begin(),\
    \ data.end(), 1);\n    // Compute the prefix sum\n    std::partial_sum(data.begin(),\
    \ data.end(), data.begin());\n    // return the last element\n    return data.back();\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: Exception
  stderr: 'tmpusgkadn4: /tmp/tmpusgkadn4.cpp:27: int main(): Assertion `candidate((6))
    == (21)'' failed.

    '
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tif (n < 1) {\n\t\treturn 0;\n\
    \t}\n\tlong sum = 0;\n\tlong i = 1;\n\twhile (i <= n) {\n\t\tsum += i;\n\t\ti\
    \ += 1;\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long sum = 0;\n    long\
    \ i = 1;\n    while (i <= n) {\n        sum = sum + i;\n        i = i + 1;\n \
    \   }\n    return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  return\
    \ n*(n+1)/2;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    assert(n > 0);\n    if (n\
    \ == 1) {\n        return 1;\n    }\n    return n + sum_to_n(n - 1);\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\treturn (n*(n+1))/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  assert(n > 0);\n  return n*(n+1)/2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long result = n;\n  long next\
    \ = n-1;\n  for (long i = next; i > 0; i--) {\n    result += i;\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\nlong sum = 0;\nwhile (n > 0)\
    \ {\nsum = sum + n;\nn = n - 1;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1rmtenbs.cpp: In function \u2018long int sum_to_n(long int)\u2019\
    :\n/tmp/tmp1rmtenbs.cpp:20:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   20 | int main() {\n      |            ^\n/tmp/tmp1rmtenbs.cpp:27:1:\
    \ error: expected \u2018}\u2019 at end of input\n   27 | }\n      | ^\n/tmp/tmp1rmtenbs.cpp:14:23:\
    \ note: to match this \u2018{\u2019\n   14 | long sum_to_n(long n) {\n      |\
    \                       ^\n/tmp/tmp1rmtenbs.cpp:27:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n   27 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // TODO: Write your code\
    \ here\n    return n==1?1:n+sum_to_n(n-1);\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n == 1)\n        return\
    \ 1;\n    return n + sum_to_n(n - 1);\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\t// REPLACE THIS LINE WITH\
    \ YOUR SOLUTION.\n\treturn n*(n+1)/2;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  if (n == 1) {\n    return\
    \ 1;\n  }\n  return n + sum_to_n(n - 1);\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\treturn n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // n^2 + n - 2*n = n^2 -\
    \ n\n    return n*(n+1)/2;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    assert(n >= 1);\n    if\
    \ (n == 1) {\n        return 1;\n    }\n    return n + sum_to_n(n - 1);\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\treturn (n * (n + 1)) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  assert(n > 0);\n  long sum\
    \ = 0;\n  for (int i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long sum=0;\n    for(int\
    \ i=1;i<=n;i++){\n        sum=sum+i;\n    }\n    return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long i, sum;\n  sum = 0;\n\
    \  for (i = 1; i <= n; i++) {\n    sum = sum + i;\n  }\n  return sum;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  assert(n > 0);\n  long sum\
    \ = 0;\n  while (n != 0) {\n    sum += n;\n    n--;\n  }\n  return sum;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  // PUT YOUR CODE HERE\n  long\
    \ sum = 0;\n  for (long i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tif (n <= 1)\n\t\treturn n;\n\
    \treturn sum_to_n(n - 1) + n;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    assert(n >= 1);\n    return\
    \ n * (n + 1) / 2;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  if (n > 0) {\n    return (n\
    \ * (n + 1)) / 2;\n  } else {\n    return 0;\n  }\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  if (n == 1)\n    return 1;\n\
    \  return n + sum_to_n(n - 1);\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  if (n < 1) {\n    return 0;\n\
    \  }\n  long sum = 0;\n  for (long i = 1; i <= n; i++) {\n    sum += i;\n  }\n\
    \  return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    assert(n > 0);\n    long\
    \ sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n  \
    \  return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tlong sum = 0;\n\tlong i =\
    \ 1;\n\twhile (i <= n) {\n\t\tsum = sum + i;\n\t\ti = i + 1;\n\t}\n\treturn sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084135
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    else {\n        return n + sum_to_n(n - 1);\n    }\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long result;\n  if (n == 1)\
    \ {\n    result = 1;\n  } else {\n    result = n + sum_to_n(n - 1);\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    return n + sum_to_n(n - 1);\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return (n * (n + 1)) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return (n * (n + 1)) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return (n*(n+1))/2;\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long ans=0;\n    while(n>0){\n\
    \        ans += n;\n        n--;\n    }\n    return ans;\n}\nint main() {\n  \
    \  auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084136
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // do something\n    long\
    \ result = 0;\n    for (long x = 1; x <= n; x++) {\n        result += x;\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = sum_to_n;\n   \
    \ assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11))\
    \ == (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100))\
    \ == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084136
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\treturn (n*(n+1))/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return (n * (n + 1)) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long num = 0;\n  for (long\
    \ i = 0; i <= n; i++){\n    num += i;\n  }\n  return num;\n}\nint main() {\n \
    \   auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084136
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tlong ret = 0;\n\tfor (int\
    \ i = 1; i <= n; i++) {\n\t\tret += i;\n\t}\n\treturn ret;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084136
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    return n + sum_to_n(n - 1);\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tassert(n > 0);\n\tif (n ==\
    \ 1)\n\t\treturn 1;\n\treturn n + sum_to_n(n - 1);\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return (n * (n + 1)) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    assert(n > 0);\n    int\
    \ sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += i;\n    }\n   \
    \ return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    //\n    // YOUR CODE HERE\n\
    \    //\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: Exception
  stderr: 'tmp2trzj6wu: /tmp/tmp2trzj6wu.cpp:21: int main(): Assertion `candidate((1))
    == (1)'' failed.

    '
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n <= 0) {\n        return\
    \ 0;\n    }\n    return sum_to_n(n - 1) + n;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  // Start with a few assertions,\n\
    \  // and then just sum the numbers.\n  assert(n >= 1);\n  return (n * (n + 1))\
    \ / 2;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tlong sum = 0;\n\tlong i =\
    \ 1;\n\tfor (i = 1; i <= n; i++) {\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tlong sum = 0;\n\tfor (long\
    \ i = 1; i <= n; i++) {\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long ans = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    ans += i;\n  }\n  return ans;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  // REPLACE WITH YOUR SOLUTION\n\
    \  long ans = 0;\n  for (long i = 1; i <= n; i++) {\n    ans += i;\n  }\n  return\
    \ ans;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n == 1 ? 1 : sum_to_n(n\
    \ - 1) + n;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tassert(n > 0);\n\t// your\
    \ code goes here\n\tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) {\n\t\tsum\
    \ += i;\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long result = 0;\n  for (int\
    \ i = 1; i <= n; i++) {\n    result += i;\n  }\n  return result;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\nlong i;\nlong sum;\nsum = 0;\n\
    for (i = 1; i <= n; i++) {\nsum = sum + i;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptfowlx6g.cpp: In function \u2018long int sum_to_n(long int)\u2019\
    :\n/tmp/tmptfowlx6g.cpp:21:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   21 | int main() {\n      |            ^\n/tmp/tmptfowlx6g.cpp:28:1:\
    \ error: expected \u2018}\u2019 at end of input\n   28 | }\n      | ^\n/tmp/tmptfowlx6g.cpp:14:23:\
    \ note: to match this \u2018{\u2019\n   14 | long sum_to_n(long n) {\n      |\
    \                       ^\n/tmp/tmptfowlx6g.cpp:28:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n   28 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660084136
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  return\
    \ n*(n+1)/2;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\treturn (n*(n+1))/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long result = 0;\n    for\
    \ (int i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n == 1 ? 1 : n + sum_to_n(n\
    \ - 1);\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return (n*(n+1))/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long x = n*(n+1)/2;\n  return\
    \ x;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  // PUT YOUR CODE HERE\n  long\
    \ result = 0;\n  for (int i = 1; i <= n; i++) {\n    result += i;\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // (define (sum-to-n n)\n\
    \    //     (if (= n 1)\n    //         1\n    //         (+ n (sum-to-n (- n\
    \ 1)))))\n    if (n == 1) {\n        return 1;\n    } else {\n        return n\
    \ + sum_to_n(n - 1);\n    }\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084138
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tif (n == 1) {\n\t\treturn\
    \ 1;\n\t}\n\telse {\n\t\treturn n + sum_to_n(n - 1);\n\t}\n}\nint main() {\n \
    \   auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  // #######\n  // # TODO #\n\
    \  // #######\n  return n*(n+1)/2;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084138
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tlong long sum=0;\n\tfor(int\
    \ i=1;i<=n;i++)\n\t{\n\t\tsum=sum+i;\n\t}\n\treturn sum;\n}\nint main() {\n  \
    \  auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084138
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\t// n is equal to the sum of\
    \ itself and all positive integers\n\t// less than it.\n    long result = n;\n\
    \    for (int i = 1; i < n; i++) {\n        result += i;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  long sum=0;\n\
    \  for(int i=1;i<=n;i++)\n  {\n    sum+=i;\n  }\n  return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long ans = 0;\n  long i =\
    \ 1;\n  while (i <= n) {\n    ans = ans + i;\n    i = i + 1;\n  }\n  return ans;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // assert((n >= 1));\n \
    \   return (n * (n + 1)) / 2;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long result;\n    if (n\
    \ == 1) {\n        result = 1;\n    } else {\n        result = sum_to_n(n - 1)\
    \ + n;\n    }\n    return result;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    //assert(n>=1);\n    long\
    \ sum=0;\n    for(int i=1;i<=n;i++)\n        sum+=i;\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n<0) return 0;\n   \
    \ if (n==0) return 0;\n    if (n==1) return 1;\n    return n+sum_to_n(n-1);\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // Function body\n\tlong\
    \ sum=0;\n\tfor(int i=1;i<=n;i++)\n\t\tsum+=i;\n\treturn sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  //if (n > 1) {\n    return\
    \ n * (n + 1) / 2;\n  //}\n  //return n;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // Base Case\n    if (n\
    \ <= 1) {\n        return n;\n    }\n    else {\n        return n + sum_to_n(n\
    \ - 1);\n    }\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  if (n ==\
    \ 1) {\n    return 1;\n  }\n  return n + sum_to_n(n - 1);\n}\nint main() {\n \
    \   auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return (n * (n + 1)) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tlong sum = 0;\n\twhile (n\
    \ > 0) {\n\t\tsum += n;\n\t\tn--;\n\t}\n\treturn sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // YOUR CODE HERE\n    long\
    \ sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n  \
    \  return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long result;\n    if (n\
    \ == 1) {\n        result = 1;\n    } else {\n        result = n + sum_to_n(n\
    \ - 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // >>> start(sum_to_n)\n\
    \    // >>> FUNCDEF(sum_to_n)\n    // >>> ARG(n, 1)\n    // >>> REG(2)\n    //\
    \ >>> REG(1)\n    // >>> REG(1)\n    // >>> ASSIGN(2, 1)\n    // >>> UNLESS(POP,\
    \ 2)\n    // >>> REG(2)\n    // >>> REG(1)\n    // >>> BINOP(+)\n    // >>> ASSIGN(2,\
    \ 2)\n    // >>> REG(1)\n    // >>> BINOP(-)\n    // >>> ASSIGN(1, 2)\n    //\
    \ >>> ASSIGN(2, 1)\n    // >>> UNLESS(POP, 2)\n    // >>> REG(2)\n    // >>> RETURN(1)\n\
    \    // >>> end(sum_to_n)\n    long accumulator = n;\n    while (n > 1) {\n  \
    \      accumulator += n - 1;\n        n--;\n    }\n    return accumulator;\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  return\
    \ (n*(n+1))/2;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tassert(n >= 1);\n\treturn\
    \ n * (n + 1) / 2;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\nif(n<=0) {\nreturn 0;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3n8npsv5.cpp: In function \u2018long int sum_to_n(long int)\u2019\
    :\n/tmp/tmp3n8npsv5.cpp:18:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   18 | int main() {\n      |            ^\n/tmp/tmp3n8npsv5.cpp:25:1:\
    \ error: expected \u2018}\u2019 at end of input\n   25 | }\n      | ^\n/tmp/tmp3n8npsv5.cpp:14:23:\
    \ note: to match this \u2018{\u2019\n   14 | long sum_to_n(long n) {\n      |\
    \                       ^\n/tmp/tmp3n8npsv5.cpp:25:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   25 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    } else {\n        return n + sum_to_n(n - 1);\n    }\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n==1)\n        return\
    \ 1;\n    else\n        return n+sum_to_n(n-1);\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084140
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tassert(n > 0);\n\treturn (n*(n+1))/2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084140
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    return n + sum_to_n(n - 1);\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  //  long sum = n * (n + 1)\
    \ / 2;\n  long sum = 0;\n  for (int i = 1; i <= n; i++) {\n    sum += i;\n  }\n\
    \  return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tif (n == 1) {\n\t\treturn\
    \ 1;\n\t}\n\treturn n + sum_to_n(n - 1);\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\nif(n==1) return 1;\nreturn n+sum_to_n(n-1);\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return ((n*(n+1))/2);\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // Write your code here\n\
    \    return n*(n+1)/2;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return (n*(n+1))/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // REPLACE THE BODY OF THIS\
    \ FUNCTION WITH YOUR OWN IMPLEMENTATION\n    long i;\n    long sum=0;\n    for(i=1;i<=n;i++)\n\
    \    {\n        sum+=i;\n    }\n    return sum;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tif (n == 1) {\n\t\treturn\
    \ 1;\n\t}\n\treturn sum_to_n(n - 1) + n;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return (n * (n + 1)) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (long\
    \ i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tif (n == 1) {\n\t\treturn\
    \ 1;\n\t}\n\treturn n + sum_to_n(n - 1);\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // TODO: write code here\
    \ that returns the correct value\n    long sum = 0;\n    for (long i = 1; i <=\
    \ n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n < 1) {\n        return\
    \ 0;\n    }\n    else {\n        return n + sum_to_n(n - 1);\n    }\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // Insert code here.\n \
    \   return n*(n+1)/2;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  assert(n >= 1);\n  return\
    \ n*(n+1)/2;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\nlong sum=0;\nlong i=1;\nfor(i=1;i<=n;i++)\n\
    {\n\tsum=sum+i;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6yms12w1.cpp: In function \u2018long int sum_to_n(long int)\u2019\
    :\n/tmp/tmp6yms12w1.cpp:21:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   21 | int main() {\n      |            ^\n/tmp/tmp6yms12w1.cpp:28:1:\
    \ error: expected \u2018}\u2019 at end of input\n   28 | }\n      | ^\n/tmp/tmp6yms12w1.cpp:14:23:\
    \ note: to match this \u2018{\u2019\n   14 | long sum_to_n(long n) {\n      |\
    \                       ^\n/tmp/tmp6yms12w1.cpp:28:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n   28 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tlong sum=0;\n\tfor(int i=1;i<=n;i++)\
    \ {\n\t\tsum+=i;\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  if (n == 1)\n    return 1;\n\
    \  else\n    return n + sum_to_n(n - 1);\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // TODO: YOUR CODE HERE!\n\
    \    long sum = 0;\n    for (long i = 1; i < n + 1; i++) {\n        sum += i;\n\
    \    }\n    return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n   \
    \ assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11))\
    \ == (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100))\
    \ == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // +1 to include n in the\
    \ sum\n    return (n * (n + 1)) / 2;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n < 0)\n    {\n    \
    \    return 0;\n    }\n    return ((long)n * (n + 1)) / 2;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tlong sum = 0;\n\tint i = 1;\n\
    \twhile (i <= n) {\n\t\tsum += i;\n\t\ti += 1;\n\t}\n\treturn sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tif (n < 1)\n\t\treturn 0;\n\
    \tlong sum = 0;\n\tfor (long i = 1; i <= n; i++) {\n\t\tsum += i;\n\t}\n\treturn\
    \ sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tint sum = 0;\n\tfor (int i\
    \ = 1; i <= n; i++) {\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nint main() {\n  \
    \  auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n==1)\n        return\
    \ 1;\n    else\n        return n+sum_to_n(n-1);\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084140
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return (n * (n + 1)) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084142
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    } else {\n        return n + sum_to_n(n - 1);\n    }\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\treturn n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // your code here\n    return\
    \ n * (n + 1) / 2;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long sum = 0;\n  for (int\
    \ i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long result = 0;\n  //write\
    \ your code here...\n  for(int i=1;i<=n;i++)\n  \tresult+=i;\n  return result;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tlong sum = 0;\n\tfor (int\
    \ i = 1; i <= n; i++) {\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\nlong i;\nlong sum;\nif (n<1)\
    \ {\nsum=0;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0j0nwbw6.cpp: In function \u2018long int sum_to_n(long int)\u2019\
    :\n/tmp/tmp0j0nwbw6.cpp:20:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   20 | int main() {\n      |            ^\n/tmp/tmp0j0nwbw6.cpp:27:1:\
    \ error: expected \u2018}\u2019 at end of input\n   27 | }\n      | ^\n/tmp/tmp0j0nwbw6.cpp:14:23:\
    \ note: to match this \u2018{\u2019\n   14 | long sum_to_n(long n) {\n      |\
    \                       ^\n/tmp/tmp0j0nwbw6.cpp:27:1: warning: no return statement\
    \ in function returning non-void [-Wreturn-type]\n   27 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tassert(n >= 1);\n\tlong result\
    \ = 0;\n\tfor (long i = 1; i <= n; i++) {\n\t\tresult += i;\n\t}\n\treturn result;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return (n * (n + 1)) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084142
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  //assert(n >= 1);\n  //assert(n\
    \ <= 1000000000);\n  return n*(n+1)/2;\n}\nint main() {\n    auto candidate =\
    \ sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // The code below is a stub.\n\
    \    // Replace it with your own code\n    return n*(n+1)/2;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n// base case\nif (n == 1) {\n\
    return 1;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk4e7mhe7.cpp: In function \u2018long int sum_to_n(long int)\u2019\
    :\n/tmp/tmpk4e7mhe7.cpp:19:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   19 | int main() {\n      |            ^\n/tmp/tmpk4e7mhe7.cpp:26:1:\
    \ error: expected \u2018}\u2019 at end of input\n   26 | }\n      | ^\n/tmp/tmpk4e7mhe7.cpp:14:23:\
    \ note: to match this \u2018{\u2019\n   14 | long sum_to_n(long n) {\n      |\
    \                       ^\n/tmp/tmpk4e7mhe7.cpp:26:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   26 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tint i,sum=0;\n\tfor(i=1;i<=n;i++)\n\
    \t{\n\t\tsum+=i;\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long sum = n * (n + 1) /\
    \ 2;\n    return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long sum = 0;\n    if (n\
    \ == 1) {\n        return 1;\n    }\n    sum = sum_to_n(n - 1) + n;\n    return\
    \ sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    // your solution here\n\
    \    if (n==1)\n        return 1;\n    else\n        return n+sum_to_n(n-1);\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084144
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\nif (n == 1) {\nreturn 1;\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpa0mlabfq.cpp: In function \u2018long int sum_to_n(long int)\u2019\
    :\n/tmp/tmpa0mlabfq.cpp:18:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   18 | int main() {\n      |            ^\n/tmp/tmpa0mlabfq.cpp:25:1:\
    \ error: expected \u2018}\u2019 at end of input\n   25 | }\n      | ^\n/tmp/tmpa0mlabfq.cpp:14:23:\
    \ note: to match this \u2018{\u2019\n   14 | long sum_to_n(long n) {\n      |\
    \                       ^\n/tmp/tmpa0mlabfq.cpp:25:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   25 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long s = 0;\n  for (long i\
    \ = 1; i <= n; i++) {\n    s += i;\n  }\n  return s;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  //PLACE YOUR CODE HERE\n \
    \ long long int sum = 0;\n  long long int i;\n  for(i=1;i<=n;i++)\n  {\n    sum\
    \ = sum + i;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084144
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long result = 0;\n    for\
    \ (long i = 1; i <= n; i++) {\n        result += i;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long result = 0;\n    long\
    \ i = 1;\n    while (i <= n) {\n        result = result + i;\n        i = i +\
    \ 1;\n    }\n    return result;\n}\nint main() {\n    auto candidate = sum_to_n;\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((6)) == (21));\n   \
    \ assert(candidate((11)) == (66));\n    assert(candidate((30)) == (465));\n  \
    \  assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084144
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  // Insert your code here\n\
    \  long sum=0;\n  long i=1;\n  while(i<=n){\n    sum+=i;\n    i++;\n  }\n  return\
    \ sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084144
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long sum = n * (n + 1) /\
    \ 2;\n    return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\treturn (n*(n+1))/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    assert(n >= 1);\n    return\
    \ (n*(n+1))/2;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084144
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tif (n > 0)\n\t\treturn n +\
    \ sum_to_n(n - 1);\n\telse\n\t\treturn 0;\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084144
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tlong sum = n;\n\tlong i =\
    \ 0;\n\twhile (i<n-1) {\n\t\tsum = sum + i;\n\t\ti = i + 1;\n\t}\n\treturn sum;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: Exception
  stderr: 'tmpsg7zr6vc: /tmp/tmpsg7zr6vc.cpp:26: int main(): Assertion `candidate((6))
    == (21)'' failed.

    '
  stdout: ''
  timestamp: 1660084144
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  if (n == 1)\n    return 1;\n\
    \  else\n    return n + sum_to_n(n - 1);\n}\nint main() {\n    auto candidate\
    \ = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6)) ==\
    \ (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30)) ==\
    \ (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    } else {\n        return n + sum_to_n(n - 1);\n    }\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\treturn n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long sum = 0;\n    for (long\
    \ i = 1; i <= n; i++) {\n        sum += i;\n    }\n    return sum;\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084137
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  if (n > 0) {\n    return n\
    \ + sum_to_n(n - 1);\n  } else {\n    return 0;\n  }\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084144
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084132
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  return n*(n+1)/2;\n}\nint\
    \ main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\treturn n * (n + 1) / 2;\n\
    }\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) ==\
    \ (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n\
    \    assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084141
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n\tlong sum = 0;\n\tfor (int\
    \ i = 1; i <= n; i++) {\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nint main() {\n\
    \    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084143
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long sum;\n  for (int i =\
    \ 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n}\nint main() {\n    auto\
    \ candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: Exception
  stderr: 'tmplb_zwdld: /tmp/tmplb_zwdld.cpp:24: int main(): Assertion `candidate((6))
    == (21)'' failed.

    '
  stdout: ''
  timestamp: 1660084144
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n  long sum = n * (n + 1) / 2;\n\
    \  return sum;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084144
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    if (n == 1) {\n        return\
    \ 1;\n    } else {\n        return n + sum_to_n(n - 1);\n    }\n}\nint main()\
    \ {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n    assert(candidate((6))\
    \ == (21));\n    assert(candidate((11)) == (66));\n    assert(candidate((30))\
    \ == (465));\n    assert(candidate((100)) == (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084139
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    long result;\n    if (n\
    \ <= 1)\n        result = n;\n    else\n        result = n + sum_to_n(n - 1);\n\
    \    return result;\n}\nint main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((6)) == (21));\n    assert(candidate((11)) ==\
    \ (66));\n    assert(candidate((30)) == (465));\n    assert(candidate((100)) ==\
    \ (5050));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084144
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// sum_to_n is a function\
    \ that sums numbers from 1 to n.\n// >>> sum_to_n((30))\n// (465)\n// >>> sum_to_n((100))\n\
    // (5050)\n// >>> sum_to_n((5))\n// (15)\n// >>> sum_to_n((10))\n// (55)\n// >>>\
    \ sum_to_n((1))\n// (1)\nlong sum_to_n(long n) {\n    return (n*(n+1))/2;\n}\n\
    int main() {\n    auto candidate = sum_to_n;\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((6)) == (21));\n    assert(candidate((11)) == (66));\n \
    \   assert(candidate((30)) == (465));\n    assert(candidate((100)) == (5050));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084134

name: HumanEval_122_add_elements
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
  \ of integers arr and an integer k, return\n// the sum of the elements with at most\
  \ two digits from the first k elements of arr.\n// Example:\n// >>> add_elements((std::vector<long>({(long)111,\
  \ (long)21, (long)3, (long)4000, (long)5, (long)6, (long)7, (long)8, (long)9})),\
  \ (4))\n// (24)\n// Constraints:\n// 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\n\
  long add_elements(std::vector<long> arr, long k) {\n"
tests: "}\nint main() {\n    auto candidate = add_elements;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)-2, (long)-3, (long)41, (long)57, (long)76, (long)87, (long)88, (long)99})),\
  \ (3)) == (-4));\n    assert(candidate((std::vector<long>({(long)111, (long)121,\
  \ (long)3, (long)4000, (long)5, (long)6})), (2)) == (0));\n    assert(candidate((std::vector<long>({(long)11,\
  \ (long)21, (long)3, (long)90, (long)5, (long)6, (long)7, (long)8, (long)9})), (4))\
  \ == (125));\n    assert(candidate((std::vector<long>({(long)111, (long)21, (long)3,\
  \ (long)4000, (long)5, (long)6, (long)7, (long)8, (long)9})), (4)) == (24));\n \
  \   assert(candidate((std::vector<long>({(long)1})), (1)) == (1));\n}\n"
completions: ["    int sum = 0;\n    for(int i = 0; i < k; i++) {\n        if(arr[i]\
    \ < 100) {\n            sum += arr[i];\n        }\n    }\n    return sum;", " \
    \   // Your code here\n    long sum = 0;\n    for(int i = 0; i < k; i++){\n  \
    \      if(arr[i] < 100){\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;", "  long sum = 0;\n  for (int i = 0; i < k; i++) {\n    if (arr[i] > 99)\
    \ {\n      sum += arr[i];\n    }\n  }\n  return sum;", "    long sum = 0;\n  \
    \  for (long i = 0; i < k; i++) {\n        if (arr[i] < 100) {\n            sum\
    \ += arr[i];\n        }\n    }\n    return sum;", "    // your code goes here\n\
    \    int n = arr.size();\n    if(k>n)\n        k = n;\n    long res = 0;\n   \
    \ for(int i=0;i<k;i++){\n        if(arr[i]<100)\n            res+=arr[i];\n  \
    \  }\n    return res;", "    long sum = 0;\n    for (long i = 0; i < k; i++) {\n\
    \        if (arr[i] >= 10 && arr[i] < 100) {\n            sum += arr[i];\n   \
    \     }\n    }\n    return sum;", "    // Your code here\n    long sum = 0;\n\
    \    for(int i = 0; i < k; i++){\n        if(arr[i] > 9 && arr[i] < 100){\n  \
    \          sum += arr[i];\n        }\n    }\n    return sum;", "    long n = 0;\n\
    \    for (int i = 0; i < k; i++) {\n        if (arr[i] >= 10 && arr[i] < 100)\
    \ {\n            n += arr[i];\n        }\n    }\n    return n;", "    // your\
    \ code here\n    long sum = 0;\n    for(long i = 0; i < k; i++){\n      if(arr[i]\
    \ >= 10 && arr[i] < 100){\n        sum += arr[i];\n      }\n    }\n    return\
    \ sum;", "    // your code here\n    long sum = 0;\n    for(long i = 0; i < k;\
    \ i++){\n        if(arr[i] < 100)\n            sum += arr[i];\n    }\n    return\
    \ sum;", "    // Your code here\n    long int sum = 0;\n    for(int i = 0; i <\
    \ k; i++){\n        if(arr[i] < 100){\n            sum += arr[i];\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < k; i++)\
    \ {\n        if (arr[i] < 100) {\n            sum += arr[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (long i = 0; i < k; i++) {\n  \
    \      if (arr[i] < 100) {\n            sum += arr[i];\n        }\n    }\n   \
    \ return sum;", "    assert(0 <= k && k <= arr.size());\n    int result = 0;\n\
    \    for (int i = 0; i < k; i++) {\n        if (arr[i] > 99) {\n            break;\n\
    \        }\n        result += arr[i];\n    }\n    return result;", "  std::vector<long>\
    \ arr_new;\n  for (int i = 0; i < k; i++) {\n    if (arr[i] > 9) {\n      arr_new.push_back(arr[i]);\n\
    \    }\n  }\n  long sum = 0;\n  for (int i = 0; i < arr_new.size(); i++) {\n \
    \   sum += arr_new[i];\n  }\n  return sum;", "    // your code goes here\n   \
    \ long sum = 0;\n    for(int i = 0; i < k; i++){\n        if(arr[i] < 10)\n  \
    \          sum += arr[i];\n        else if(arr[i] > 9 && arr[i] < 100)\n     \
    \       sum += arr[i];\n    }\n    return sum;", "\tlong i, sum = 0;\n\tfor (i\
    \ = 0; i < k; i++) {\n\t\tif (arr[i] < 100) {\n\t\t\tsum += arr[i];\n\t\t}\n\t\
    }\n\treturn sum;", "    assert((arr.size() > 0));\n    assert((arr.size() <= 100));\n\
    \    assert((k > 0));\n    assert((k <= arr.size()));\n    long total = 0;\n \
    \   for (auto const &i : arr) {\n        if (i <= 99) {\n            total +=\
    \ i;\n        }\n    }\n    return total;", "    // your code goes here\n    long\
    \ sum=0;\n    for(int i=0;i<k;i++){\n        if(arr[i]<100){\n            sum+=arr[i];\n\
    \        }\n    }\n    return sum;", "\treturn 0;", "    long sum = 0;\n    for\
    \ (int i = 0; i < k; i++) {\n        if (arr[i] >= 10 && arr[i] < 100) {\n   \
    \         sum += arr[i];\n        }\n    }\n    return sum;", "  if(k <= 0) return\
    \ 0;\n  // I think it is a local variable, so to make it C++, we have to 'return'\
    \ it.\n  // the return value will be copied back to the caller.\n  long result\
    \ = 0;\n  for(auto&& e : arr) {\n    if(k == 0) break;\n    if(e >= 0 && e < 100)\
    \ {\n      result += e;\n      k--;\n    }\n  }\n  return result;", "  long ans\
    \ = 0;\n  for (int i = 0; i < k; i++) {\n    if (arr[i] < 100) {\n      ans +=\
    \ arr[i];\n    }\n  }\n  return ans;", "    long count=0;\n    for(int i=0;i<k;i++){\n\
    \        if(arr[i]<100){\n            count+=arr[i];\n        }\n    }\n    return\
    \ count;", "    long result = 0;\n    // Write your code here\n    // To print\
    \ results to the standard output you can use PrintLong(std::to_string(variableName))\
    \ function\n    // To debug your solution, you can write errors and exceptions\
    \ to the error stream\n    // which can be accessed by methods like debug_stream::writeDebugMsg,\
    \ debug_stream::writeError\n    // \n    // For example:\n    // debug_stream::writeError(\"\
    Something is wrong\");\n    //\n    // To provide your solution, you need to fill\
    \ in the function body\n    // by replacing \"return -1\" with actual code\n \
    \   for(int i=0;i<k;i++){\n      if((arr[i]/10)<=9)\n      result+=arr[i];\n \
    \   }\n    return result;", "  \n  long sum = 0;\n  for (int i = 0; i < k; i++)\
    \ {\n    long n = arr[i];\n    if (n < 10) {\n      sum += n;\n    } else if (n\
    \ < 100) {\n      sum += n / 10 + n % 10;\n    } else {\n      sum += n / 100\
    \ + (n % 100) / 10 + n % 10;\n    }\n  }\n  return sum;", "    long s=0;\n   \
    \ for(int i=0;i<k;i++){\n        if(arr[i]>9 && arr[i]<100){\n            s+=arr[i];\n\
    \        }\n    }\n    return s;", "    long s = 0;\n    for (int i = 0; i < k;\
    \ i++) {\n        if (arr[i] > 99) continue;\n        s += arr[i];\n    }\n  \
    \  return s;", "    long x = 0;\n    for (long i = 0; i < k; i++) {\n        if\
    \ (arr[i] >= 10 && arr[i] < 100) {\n            x += arr[i];\n        }\n    }\n\
    \    return x;", "\t// your code here\n\tlong sum = 0;\n\tint count = 0;\n\tfor\
    \ (auto i : arr) {\n\t\tif (i >= 100)\n\t\t\tcontinue;\n\t\tsum += i;\n\t\tcount++;\n\
    \t\tif (count == k)\n\t\t\tbreak;\n\t}\n\treturn sum;", "\tlong long int sum =\
    \ 0;\n\tfor (int i = 0; i < k; i++) {\n\t\tif (arr[i] > 9 && arr[i] < 100) {\n\
    \t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;", "    if (arr.size() == 0 ||\
    \ k == 0) {\n        return 0;\n    }\n    if (k > arr.size()) {\n        k =\
    \ arr.size();\n    }\n    long answer = 0;\n    for (long i = 0; i < k; i++) {\n\
    \        if (arr[i] > 9 && arr[i] < 100) {\n            answer += arr[i];\n  \
    \      }\n    }\n    return answer;", "    long sum = 0;\n    for (size_t i =\
    \ 0; i < k; i++) {\n        if (arr[i] > 9 && arr[i] < 100) {\n            sum\
    \ += arr[i];\n        }\n    }\n    return sum;", "    long result{};\n    for\
    \ (auto& x : arr) {\n        if (x > 99) {\n            break;\n        }\n  \
    \      if (k == 0) {\n            break;\n        }\n        result += x;\n  \
    \      k--;\n    }\n    return result;", "  long sum = 0;\n  for (long i = 0;\
    \ i < k; i++) {\n    if (arr[i] < 100) {\n      sum += arr[i];\n    }\n  }\n \
    \ return sum;", "    // Your code here\n    int result = 0;\n    for(int i = 0;\
    \ i < k; i++){\n        int num = arr[i];\n        if(num <= 99) result += num;\n\
    \    }\n    return result;", "    // Happy Coding ^_^\n    int i,j,sum=0;\n  \
    \  for(i=0;i<k;i++)\n    {\n        if(arr[i]>=0 && arr[i]<=9)\n        {\n  \
    \          sum+=arr[i];\n        }\n        else if(arr[i]>=10 && arr[i]<=99)\n\
    \        {\n            sum+=arr[i];\n        }\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (int i = 0; i < k; i++) {\n        if (arr[i] < 10)\
    \ {\n            sum += arr[i];\n        } else if (arr[i] < 100) {\n        \
    \    sum += arr[i];\n        }\n    }\n    return sum;", "\t// your code goes\
    \ here\n\tint len = arr.size();\n\tassert(len > 0);\n\tint res = 0;\n\tfor (int\
    \ i = 0; i < len; i++) {\n\t\tif (arr[i] > 99) {\n\t\t\tif (k > 0) {\n\t\t\t\t\
    k--;\n\t\t\t\tres += arr[i];\n\t\t\t}\n\t\t}\n\t\telse if (arr[i] > 9) {\n\t\t\
    \tif (k > 0) {\n\t\t\t\tk--;\n\t\t\t\tres += arr[i];\n\t\t\t}\n\t\t}\n\t\telse\
    \ {\n\t\t\tif (k > 0) {\n\t\t\t\tk--;\n\t\t\t\tres += arr[i];\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn res;", "    long result = 0;\n    // your code here\n    int i;\n\
    \    for(i=0;i<k;i++)\n    {\n      if(arr[i]<100)\n      {\n        result +=\
    \ arr[i];\n      }\n    }\n    return result;", "    long ans = 0;\n    if (k\
    \ > arr.size()) {\n        k = arr.size();\n    }\n    std::vector<long>::iterator\
    \ kth_iterator = arr.begin() + k;\n    for (std::vector<long>::iterator it = arr.begin();\
    \ it != kth_iterator; it++) {\n        if (*it < 100) {\n            ans += *it;\n\
    \        }\n    }\n    return ans;", "    long sum{};\n    for (auto i : arr)\
    \ {\n        if (i < 10 || i < 100) {\n            sum += i;\n            k--;\n\
    \        }\n        if (k == 0) {\n            break;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (long i = 0; i < k; i++) {\n        if (arr[i]\
    \ <= 99) {\n            sum += arr[i];\n        }\n    }\n    return sum;", " \
    \ long ans = 0;\n  for (int i = 0; i < k; i++) {\n    if (arr[i] <= 9) {\n   \
    \   ans += arr[i];\n    } else if (arr[i] <= 99) {\n      ans += arr[i];\n   \
    \ }\n  }\n  return ans;", "    int l = arr.size();\n    int sum = 0;\n    for(int\
    \ i = 0; i < k; i++) {\n        if(arr[i] > 99)\n            arr[i] = 99;\n  \
    \      sum += arr[i];\n    }\n    return sum;", "    long sum = 0;\n    for (int\
    \ i = 0; i < k; i++) {\n        if (arr[i] >= 10 && arr[i] < 100)\n          \
    \  sum += arr[i];\n    }\n    return sum;", "    // your code here\n    return\
    \ 0;", "    long sum = 0;\n    for (long i = 0; i < k; i++) {\n        if (arr[i]\
    \ >= 10 && arr[i] < 100) {\n            sum += arr[i];\n        }\n    }\n   \
    \ return sum;", "  long sum = 0;\n  for (long i = 0; i < k; i++) {\n    if (arr[i]\
    \ >= 0 && arr[i] < 10) {\n      sum += arr[i];\n    } else if (arr[i] >= 10 &&\
    \ arr[i] < 100) {\n      sum += arr[i];\n    }\n  }\n  return sum;", '    return
    0;', "    long sum = 0;\n    for (int i = 0; i < k; i++) {\n        long num =\
    \ arr[i];\n        // check if the number is less than 10\n        if (num < 10)\
    \ {\n            sum += num;\n        } else if (num % 10 == 0) {\n          \
    \  sum += num / 10;\n        } else {\n            sum += (num % 10) + (num /\
    \ 10);\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (long i =\
    \ 0; i < k; i++) {\n    long length = (long)std::log10(arr[i]) + 1;\n    if (length\
    \ < 3) {\n      sum += arr[i];\n    }\n  }\n  return sum;", "    long sum=0;\n\
    \    int count=0;\n    for(int i=0; i<arr.size(); i++){\n        if(arr[i]<100)\n\
    \            sum+=arr[i];\n        count++;\n        if(count==k)\n          \
    \  break;\n    }\n    return sum;", "    long long result = 0;\n    for (int i\
    \ = 0; i < k; i++) {\n        if (arr[i] >= 100) {\n            continue;\n  \
    \      }\n        result += arr[i];\n    }\n    return result;", "    long sum\
    \ = 0;\n    for (long i = 0; i < k; i++) {\n        if (arr[i] <= 9) {\n     \
    \       sum += arr[i];\n        } else if (arr[i] > 9 && arr[i] <= 99) {\n   \
    \         sum += arr[i];\n        }\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for (long i = 0; i < k; i++) {\n        std::string str = std::to_string(arr[i]);\n\
    \        // check if its 1 digit or 2 digit\n        if (str.length() < 3) {\n\
    \            sum += arr[i];\n        }\n    }\n    return sum;", "  long sum =\
    \ 0;\n  for (long i = 0; i < k; i++) {\n    if (arr[i] < 100) {\n      sum +=\
    \ arr[i];\n    }\n  }\n  return sum;", "    long sum = 0;\n    for (int i = 0;\
    \ i < k; i++) {\n        if (arr[i] >= 10 && arr[i] < 100) {\n            sum\
    \ += arr[i];\n        }\n    }\n    return sum;", "    int sum = 0;\n    int size\
    \ = arr.size();\n    assert(size >= 1 && size <= 100);\n    assert(k >= 1 && k\
    \ <= size);\n    for (int i = 0; i < k; i++) {\n        long number = arr[i];\n\
    \        if (number >= 1 && number <= 9) {\n            sum += number;\n     \
    \   } else if (number >= 10 && number <= 99) {\n            sum += number;\n \
    \       }\n    }\n    return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < k;\
    \ i++) {\n\t\tif (arr[i] > 9 && arr[i] < 100)\n\t\t\tsum += arr[i];\n\t}\n\treturn\
    \ sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < k; i++) {\n\t\tif (arr[i] < 100)\
    \ {\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;", "  long ret = 0;\n  for\
    \ (long i = 0; i < k; i++) {\n    ret += arr[i] / 100 + (arr[i] % 100 / 10 ? 1\
    \ : 0) + (arr[i] % 10 ? 1 : 0);\n  }\n  return ret;", "    auto sum = 0;\n   \
    \ for (auto i = 0; i < k; i++) {\n        if (arr[i] < 100) {\n            sum\
    \ += arr[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (int\
    \ i = 0; i < k; i++) {\n    if (arr[i] < 100) {\n      sum += arr[i];\n    }\n\
    \  }\n  return sum;", "    long sum = 0;\n    for (long i = 0; i < k; i++) {\n\
    \        if (arr[i] >= 0 && arr[i] < 10)\n            sum += arr[i];\n       \
    \ else if (arr[i] >= 10 && arr[i] < 100)\n            sum += arr[i];\n    }\n\
    \    return sum;", "\tint sum = 0;\n\tfor (int i = 0; i < k; i++) {\n\t\tif (arr[i]\
    \ >= 10 && arr[i] <= 99) {\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;",
  "    long sum = 0;\n    for (long i = 0; i < k; i++) {\n        sum += (arr[i] >\
    \ 99) ? 0 : arr[i];\n    }\n    return sum;", "\t// input validation.\n\tif (((arr.size()\
    \ > 100) || (arr.size() < 1)) || ((k > arr.size()) || (k < 1))) {\n\t\treturn\
    \ 0;\n\t}\n\t// initialize sum to zero.\n\tlong sum = 0;\n\t// traverse for k\
    \ elements.\n\tfor (int i = 0; i < k; i++) {\n\t\t// if element is less than 100,\n\
    \t\t// add it to sum.\n\t\tif (arr[i] < 100) {\n\t\t\tsum += arr[i];\n\t\t}\n\t\
    }\n\treturn sum;", "    long sum = 0;\n    for (int i = 0; i < k; i++) {\n   \
    \     if (arr[i] < 100) {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (long i = 0; i < k; i++) {\n        if (arr[i]\
    \ < 100) {\n            sum += arr[i];\n        }\n    }\n    return sum;", "//v[i]\u662F\
    arr[i]\u7684\u957F\u5EA6\uFF0C\u8D85\u8FC79\uFF0C\u5C31\u662F2\u4F4D\n    std::vector<int>\
    \ v;\n    for(int i=0;i<arr.size();i++){\n        v.push_back(log10(arr[i])+1);\n\
    \    }\n    int sum=0;\n    for(int i=0;i<k;i++){\n        if(v[i]<=2){\n    \
    \        sum+=arr[i];\n        }\n    }\n    return sum;", "    long sum=0;\n\
    \    for(int i=0;i<k;i++){\n        if(arr[i]<100){\n            sum+=arr[i];\n\
    \        }\n    }\n    return sum;", '    return 0;', "\tlong sum = 0;\n\tfor\
    \ (int i = 0; i < k; i++) {\n\t\tif (arr[i] < 100) {\n\t\t\tsum += arr[i];\n\t\
    \t}\n\t}\n\treturn sum;", "\tlong sum = 0;\n\tfor (long i = 0; i < k; i++) {\n\
    \t\tif (arr[i] < 100) {\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;", " \
    \   // your code here\n    long count = 0;\n    for(int i = 0; i < k; i++){\n\
    \        std::string s = std::to_string(arr[i]);\n        if(s.length() <= 2){\n\
    \            count += arr[i];\n        }\n    }\n    return count;", "    long\
    \ answer = 0;\n    for (int i = 0; i < k; i++) {\n        if (arr[i] >= 10 &&\
    \ arr[i] < 100) {\n            answer += arr[i];\n        }\n    }\n    return\
    \ answer;", '    // Your code here.', "\tint i,sum=0;\n\tfor(i=0;i<k;i++)\n\t\
    {\n\t\tif(arr[i]<10)\n\t\t\tsum+=arr[i];\n\t\telse if(arr[i]<100)\n\t\t\tsum+=arr[i];\n\
    \t}\n\treturn sum;", "    long sum = 0;\n    for (size_t i = 0; i < k; i++) {\n\
    \        if (arr[i] < 10) {\n            sum += arr[i];\n        } else if (arr[i]\
    \ < 100) {\n            sum += arr[i];\n        }\n    }\n    return sum;", " \
    \   long sum = 0;\n    for (long i = 0; i < k; i++) {\n        if (arr[i] < 100)\n\
    \            sum += arr[i];\n    }\n    return sum;", "    // 1. Find the sum\
    \ of first k elements of the array.\n    // 2. Then remove the digits with more\
    \ than 2 digits, from the obtained sum.\n    // 3. Then find the sum again.\n\
    \    long sum = 0;\n    for(int i = 0; i < k; i++)\n        sum += arr[i];\n \
    \   for(int i = 0; i < k; i++)\n        if(arr[i] > 99)\n            sum -= arr[i];\n\
    \    return sum;", "    long int ans = 0;\n    for(long i = 0; i < k; i++) {\n\
    \        if(arr[i] >= 0 && arr[i] <= 9) {\n            ans += arr[i];\n      \
    \  }\n        else if(arr[i] > 9 && arr[i] <= 99) {\n            ans += arr[i];\n\
    \        }\n    }\n    return ans;", "\tlong sum = 0;\n\tfor (long i = 0; i <\
    \ k; i++) {\n\t\tif (arr[i] < 100) {\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn\
    \ sum;", "  long sum = 0;\n  for (size_t i = 0; i < k; i++) {\n    if (arr[i]\
    \ >= 0 && arr[i] < 10) {\n      sum += arr[i];\n    } else if (arr[i] >= 10 &&\
    \ arr[i] < 100) {\n      sum += arr[i];\n    }\n  }\n  return sum;", "    int\
    \ sum = 0;\n    for(int i = 0; i < k; i++) {\n        if(arr[i] < 100)\n     \
    \       sum += arr[i];\n    }\n    return sum;", '  return 0;', "    assert(k\
    \ <= arr.size());\n    long sum = 0;\n    int k1 = (int)k;\n    for (int i = 0;\
    \ i < k1; i++) {\n        if ((arr[i] / 10) == 0) {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i\
    \ < k; i++) {\n        if (arr[i] <= 99)\n            sum += arr[i];\n    }\n\
    \    return sum;", "    // your code here\n    long sum=0;\n    for(int i=0;i<k;i++){\n\
    \        long n=arr[i];\n        while(n>0){\n            int r=n%10;\n      \
    \      n=n/10;\n            sum+=r;\n        }\n    }\n    return sum;", "   \
    \ long sum = 0;\n    for (int i = 0; i < k; i++) {\n        long num = arr[i];\n\
    \        if (num > 9 && num < 100) {\n            sum += num;\n        }\n   \
    \ }\n    return sum;", "    long result = 0;\n    for (int i = 0; i < k; i++)\
    \ {\n        if (arr[i] < 10)\n            result += arr[i];\n        else if\
    \ (arr[i] < 100)\n            result += arr[i];\n    }\n    return result;", " \
    \ long sum = 0;\n  for (long index = 0; index < k; index++) {\n    long a = arr[index];\n\
    \    if (a > 9 && a < 100) {\n      sum += a;\n    }\n  }\n  return sum;", " \
    \ long sum = 0;\n  for (long i = 0; i < k; i++) {\n    if (arr[i] >= 10 && arr[i]\
    \ < 100) {\n      sum += arr[i];\n    }\n  }\n  return sum;", "    long sum =\
    \ 0;\n    int count = 0;\n    for (long x : arr) {\n        if (x < 10) {\n  \
    \          sum += x;\n            count++;\n        } else if (x < 100) {\n  \
    \          sum += x;\n            count += 2;\n        }\n        if (count >=\
    \ k) {\n            break;\n        }\n    }\n    return sum;", "  long total\
    \ = 0;\n  for (long i = 0; i < k; i++) {\n    if (arr[i] < 10) {\n      total\
    \ += arr[i];\n    } else if (arr[i] < 100) {\n      total += arr[i];\n    }\n\
    \  }\n  return total;", "\tlong sum = 0;\n\tlong num = 0;\n\tfor (long i = 0;\
    \ i < k; i++) {\n\t\tnum = arr[i];\n\t\tif (num < 10) {\n\t\t\tsum += num;\n\t\
    \t}\n\t\telse if (num < 100) {\n\t\t\tsum += num;\n\t\t}\n\t}\n\treturn sum;",
  '    return 0;', "    // your code here\n    long sum=0;\n    for(long i=0;i<k;i++){\n\
    \        if(arr[i]<100) sum+=arr[i];\n    }\n    return sum;", "    int sum =\
    \ 0;\n    for(int i = 0; i < k; i++) {\n        if(arr[i] >= 10 && arr[i] < 100)\
    \ {\n            sum += arr[i];\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (int i = 0; i < k; i++) {\n        if (arr[i] < 100) {\n \
    \           sum += arr[i];\n        }\n    }\n    return sum;", "  // assert(arr.size()\
    \ > 0);\n  // assert(k > 0);\n  long result = 0;\n  for (long i = 0; i < k; i++)\
    \ {\n    if (arr[i] < 100)\n      result += arr[i];\n  }\n  return result;", " \
    \ long sum = 0;\n  for (long i = 0; i < k; i++) {\n    if (arr[i] < 10) {\n  \
    \    sum += arr[i];\n    } else if (arr[i] < 100) {\n      sum += arr[i];\n  \
    \  }\n  }\n  return sum;", "    long sum = 0;\n    long i;\n    for (i = 0; i\
    \ < k; i++) {\n        long curr = arr[i];\n        if (curr < 10 || curr >= 100)\
    \ {\n            sum += curr;\n        }\n    }\n    return sum;", "    long long\
    \ sum = 0;\n    for (long i = 0; i < k; i++) {\n        if (arr[i] > 9 && arr[i]\
    \ < 100)\n            sum += arr[i];\n    }\n    return sum;", "    if (arr.size()\
    \ <= 1) {\n        return arr[0];\n    }\n    long result = 0;\n    for (int i\
    \ = 0; i < k; i++) {\n        long num = arr[i];\n        std::string num_str\
    \ = std::to_string(num);\n        if (num_str.length() <= 2) {\n            result\
    \ += num;\n        }\n    }\n    return result;", "\tlong ans = 0;\n\tfor (long\
    \ i = 0; i < k; i++) {\n\t\tif (arr[i] >= 10 && arr[i] < 100) {\n\t\t\tans +=\
    \ arr[i];\n\t\t}\n\t}\n\treturn ans;", "    long sum = 0;\n    for (int i = 0;\
    \ i < k; i++) {\n        if (arr[i] < 100) {\n            sum += arr[i];\n   \
    \     }\n    }\n    return sum;", "    long result = 0;\n    int size = arr.size();\n\
    \    int count = 0;\n    for (int i = 0; i < size; i++) {\n        if (arr[i]\
    \ >= 10 && arr[i] <= 99) {\n            result += arr[i];\n            count++;\n\
    \        }\n        if (count == k) {\n            break;\n        }\n    }\n\
    \    return result;", "    long count = 0;\n    long sum = 0;\n    for (long i\
    \ = 0; i < arr.size(); i++) {\n        if (arr[i] < 100) {\n            sum +=\
    \ arr[i];\n            count++;\n        }\n        if (count == k) {\n      \
    \      break;\n        }\n    }\n    return sum;", "    std::vector<long>::iterator\
    \ it;\n    int sum = 0;\n    for(it = arr.begin(); it != arr.end(); it++) {\n\
    \        int count = 0;\n        long num = *it;\n        while(num != 0) {\n\
    \            count++;\n            num /= 10;\n        }\n        if(count <=\
    \ 2) {\n            sum += *it;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (int i = 0; i < k; i++) {\n        if (arr[i] < 100) {\n \
    \           sum += arr[i];\n        }\n    }\n    return sum;", "    // your code\
    \ goes here!\n    long sum = 0;\n    for(int i = 0; i < k; i++){\n        if(arr[i]\
    \ >= 10 && arr[i] < 100){\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;", "  long result = 0;\n  for (long i = 0; i < k; i++) {\n    result +=\
    \ arr[i];\n  }\n  return result;", "    long sum=0;\n    for(int i=0;i<k;i++){\n\
    \        if(arr[i]<10)\n            sum+=arr[i];\n        else if(arr[i]<100)\n\
    \            sum+=arr[i];\n    }\n    return sum;", "    long res = 0;\n    for\
    \ (int i = 0; i < k; i++) {\n        if (arr[i] < 100) res += arr[i];\n    }\n\
    \    return res;", "    long ans = 0;\n    for (long i = 0; i < k; i++) {\n  \
    \      if (arr[i] < 100) {\n            ans += arr[i];\n        }\n    }\n   \
    \ return ans;", "    long sum = 0;\n    for (int i = 0; i < k; i++) {\n      \
    \  long current = arr[i];\n        while (current > 9) {\n            current\
    \ /= 10;\n        }\n        sum += current;\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (int i = 0; i < k; i++) {\n        long tmp = arr[i];\n  \
    \      if (tmp < 100) {\n            sum += tmp;\n        }\n    }\n    return\
    \ sum;", "    // your code here\n    std::vector<long> vec;\n    std::copy_if(std::begin(arr),\
    \ std::end(arr), std::back_inserter(vec), [](int i){ return i < 100; });\n   \
    \ std::partial_sum(std::begin(vec), std::end(vec), std::begin(vec));\n    std::cout\
    \ << vec[k-1] << std::endl;\n    return vec[k-1];", "  long sum = 0;\n  for (int\
    \ i = 0; i < k; i++) {\n    if (arr[i] > 99) {\n      continue;\n    }\n    sum\
    \ += arr[i];\n  }\n  return sum;", "    assert(k <= arr.size());\n    long sum\
    \ = 0;\n    for (int i = 0; i < k; i++) {\n        if (arr[i] > 99) {\n      \
    \      continue;\n        }\n        sum += arr[i];\n    }\n    return sum;",
  "    long result{};\n    assert(arr.size() <= 100);\n    assert(k <= arr.size());\n\
    \    for (int i{}; i < k; ++i) {\n        if (arr[i] < 100) {\n            result\
    \ += arr[i];\n        }\n    }\n    return result;", "    long sum = 0;\n    for\
    \ (int i = 0; i < k; i++) {\n        if (arr[i] < 100) {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (long i = 0;\
    \ i < k; i++) {\n        if (arr[i] < 100) {\n            sum += arr[i];\n   \
    \     }\n    }\n    return sum;", "    long sum = 0;\n    for (long j = 0; j <\
    \ k; j++) {\n        if (arr[j] < 100) {\n            sum += arr[j];\n       \
    \ }\n    }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < k;\
    \ i++) {\n        if (arr[i] > 9 && arr[i] < 100) {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;", "    int sum = 0;\n    for(int i = 0; i <\
    \ k; i++) {\n        if(arr[i] > 99) sum += 99;\n        else sum += arr[i];\n\
    \    }\n    return sum;", "\tlong ans = 0;\n\tfor (int i = 0; i < k; i++) {\n\t\
    \tlong temp = arr[i];\n\t\tint count = 0;\n\t\twhile (temp > 0) {\n\t\t\ttemp\
    \ /= 10;\n\t\t\tcount++;\n\t\t}\n\t\tif (count <= 2) {\n\t\t\tans += arr[i];\n\
    \t\t}\n\t}\n\treturn ans;", "    int len = arr.size();\n    long sum = 0;\n  \
    \  for (int i = 0; i < k; i++) {\n        if (arr[i] < 100) {\n            sum\
    \ += arr[i];\n        }\n    }\n    return sum;", "    //your code goes here\n\
    \    std::cout << \"here\" << std::endl;\n    std::sort(arr.begin(), arr.end());\n\
    \    long sum = 0;\n    for (int i = 0; i < k; i++) {\n        if (arr[i] < 100)\
    \ {\n            sum += arr[i];\n        }\n    }\n    return sum;", "    long\
    \ ans=0;\n    for(long i=0;i<k;i++){\n        if(arr[i]/10 <1){\n            ans+=arr[i];\n\
    \        }\n        else if(arr[i]/100 <1){\n            ans+=arr[i];\n      \
    \  }\n    }\n    return ans;", "  long sum = 0;\n  for (long i = 0; i < k; i++)\
    \ {\n    if (arr[i] < 100) {\n      sum += arr[i];\n    }\n  }\n  return sum;",
  "    //CODING HERE\n    long sum = 0;\n    for(int i = 0; i < k; i++)\n    {\n \
    \       if(arr[i] > 99)\n        {\n            continue;\n        }\n       \
    \ else\n        {\n            sum += arr[i];\n        }\n    }\n    return sum;",
  "\t// Your code here\n\tlong sum = 0;\n\tfor (int i = 0; i < k; i++) {\n\t\tlong\
    \ x = arr[i];\n\t\tif (x >= 100) {\n\t\t\tsum += (x % 100);\n\t\t}\n\t\telse {\n\
    \t\t\tsum += x;\n\t\t}\n\t}\n\treturn sum;", "  long sum = 0;\n  for (auto it\
    \ = arr.begin(); it != arr.end(); ++it) {\n    if (*it >= 0 && *it <= 99) {\n\
    \      sum += *it;\n      k--;\n      if (k == 0) {\n        break;\n      }\n\
    \    }\n  }\n  return sum;", "    long long result = 0;\n    for (long i = 0;\
    \ i < k; i++) {\n        if (arr[i] > 99)\n            result += 99;\n       \
    \ else\n            result += arr[i];\n    }\n    return result;", "    long sum\
    \ = 0;\n    for (long i = 0; i < k; i++) {\n        if (arr[i] < 10 || arr[i]\
    \ >= 100) {\n            sum += arr[i];\n        }\n    }\n    return sum;", " \
    \   // Your code here\n    long sum=0;\n    for(long i=0;i<k;i++){\n        long\
    \ n=arr[i];\n        while(n>0){\n            n=n/10;\n            if(n>0){\n\
    \                sum+=arr[i];\n                break;\n            }\n       \
    \ }\n    }\n    return sum;", "    long sum = 0;\n    for (long i = 0; i < k;\
    \ i++) {\n        if (arr[i] > 99) {\n            sum += 99;\n        } else {\n\
    \            sum += arr[i];\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    long i = 0;\n    while (i < k) {\n        long num = arr[i];\n   \
    \     if (num < 10 || num < 100) {\n            sum += num;\n        }\n     \
    \   i++;\n    }\n    return sum;", "  std::vector<long>::iterator it;\n  long\
    \ sum = 0;\n  for (it = arr.begin(); it != arr.end(); it++) {\n    if ((*it >\
    \ 9) && (*it < 100)) {\n      sum += *it;\n      k--;\n    }\n    if (k == 0)\n\
    \      break;\n  }\n  return sum;", "    long sum = 0;\n    for (int i = 0; i\
    \ < k; i++) {\n        if (arr[i] < 100)\n            sum += arr[i];\n    }\n\
    \    return sum;", "\tlong rv = 0;\n\tif (arr.size() == 1)\n\t\treturn arr[0];\n\
    \tfor (int i = 0; i < k; i++) {\n\t\tint digits = 0;\n\t\tint v = arr[i];\n\t\t\
    while (v >= 1) {\n\t\t\tv /= 10;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits <= 2)\n\
    \t\t\trv += arr[i];\n\t}\n\treturn rv;", "  long sum = 0;\n  int count = 0;\n\
    \  for (int i = 0; i < arr.size(); i++) {\n    if (arr[i] > 9 && arr[i] < 100)\
    \ {\n      count++;\n      sum += arr[i];\n    }\n    if (count == k)\n      break;\n\
    \  }\n  return sum;", "\tint temp=0;\n\tfor(int i=0;i<k;i++){\n\t\tif(arr[i]>=10\
    \ && arr[i]<100){\n\t\t\ttemp+=arr[i];\n\t\t}\n\t}\n\treturn temp;", "\t// YOUR\
    \ CODE HERE\n  long sum = 0;\n  std::vector<long>::iterator it;\n  int counter\
    \ = 0;\n  for(it = arr.begin(); it != arr.end(); it++){\n    if(counter < k){\n\
    \      if(*it < 100){\n        sum += *it;\n      }\n      counter++;\n    }else{\n\
    \      break;\n    }\n  }\n  return sum;", "    long sum = 0;\n    for (long i\
    \ = 0; i < k; i++) {\n        if (arr[i] < 100) {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (long i = 0;\
    \ i < k; i++) {\n        if (arr[i] < 100) {\n            sum += arr[i];\n   \
    \     }\n    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i <\
    \ k; i++) {\n        long n = arr[i];\n        if (n < 100) {\n            sum\
    \ += n;\n        }\n    }\n    return sum;", "  long ans = 0;\n  for (int i =\
    \ 0; i < k; i++) {\n    long cur = arr[i];\n    if (cur > 99)\n      continue;\n\
    \    ans += cur;\n  }\n  return ans;", "  // your code here\n  return 0;", "\t\
    // Place your code here\n\tlong sum = 0;\n\tif (k <= 0) {\n\t\treturn sum;\n\t\
    }\n\tfor (int i = 0; i < k; i++) {\n\t\tif (arr[i] < 10) {\n\t\t\tsum += arr[i];\n\
    \t\t}\n\t\telse if (arr[i] < 100) {\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn\
    \ sum;", "  long sum = 0;\n  long n = arr.size();\n  assert(n > 0);\n  assert(n\
    \ <= 100);\n  assert(k > 0);\n  assert(k <= n);\n  for (int i = 0; i < k; i++)\
    \ {\n    if (arr[i] < 10) {\n      sum += arr[i];\n    } else if (arr[i] >= 10\
    \ && arr[i] < 100) {\n      sum += arr[i];\n    }\n  }\n  return sum;", "  int\
    \ l = 0;\n  long sum = 0;\n  for (int i = 0; i < k; i++) {\n    if (arr[i] < 100)\
    \ {\n      sum += arr[i];\n    }\n  }\n  return sum;", "  /* your code */\n  long\
    \ sum=0;\n  for(int i=0;i<k;i++){\n    if(arr[i]>9&&arr[i]<100){\n      sum+=arr[i];\n\
    \    }\n  }\n  return sum;", "\tint sum = 0;\n\tfor (int i = 0; i < k; i++) {\n\
    \t\tif (arr[i] / 10 < 1) {\n\t\t\tsum += arr[i];\n\t\t}\n\t\telse if (arr[i] /\
    \ 100 < 1) {\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn sum;", "    long sum\
    \ = 0;\n    for (long i = 0; i < k; i++) {\n        if (arr[i] < 10) {\n     \
    \       sum += arr[i];\n        } else if (arr[i] < 100) {\n            sum +=\
    \ arr[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (int i\
    \ = 0; i < k; i++) {\n    if (arr[i] >= 100) {\n      continue;\n    }\n    sum\
    \ += arr[i];\n  }\n  return sum;", "    long sum = 0;\n    for (long i = 0; i\
    \ < k; i++) {\n        if (arr[i] >= 100) {\n            sum += 100;\n       \
    \ } else if (arr[i] < 100 && arr[i] >= 10) {\n            sum += 10;\n       \
    \ } else {\n            sum += arr[i];\n        }\n    }\n    return sum;", " \
    \ assert(1 <= arr.size() && arr.size() <= 100);\n  assert(1 <= k && k <= arr.size());\n\
    \  long answer = 0;\n  for (size_t i = 0; i < arr.size(); i++) {\n    if (i ==\
    \ k) {\n      break;\n    }\n    if (arr[i] > 9 && arr[i] < 100) {\n      answer\
    \ += arr[i];\n    }\n  }\n  return answer;", "  assert(arr.size() > 0);\n  assert(k\
    \ <= arr.size());\n  return std::accumulate(arr.begin(), arr.begin() + k, 0l,\
    \ [](auto const& acc, auto const& e) {\n    return acc + (e < 100 ? e : 0);\n\
    \  });", "  long sum=0;\n  long count=0;\n  while(count<k){\n    if(arr[count]>10\
    \ && arr[count]<100){\n      sum+=arr[count];\n    }\n    count++;\n  }\n  return\
    \ sum;", "  long sum = 0;\n  for (int i = 0; i < k; i++) {\n    if (arr[i] >=\
    \ 0 && arr[i] < 10) {\n      sum += arr[i];\n    } else if (arr[i] >= 10 && arr[i]\
    \ < 100) {\n      sum += arr[i];\n    }\n  }\n  return sum;", "    assert(arr.size()\
    \ <= 100);\n    assert(k <= arr.size());\n    long sum = 0;\n    for (int i =\
    \ 0; i < k; i++) {\n        sum += arr[i] < 100 ? arr[i] : 0;\n    }\n    return\
    \ sum;", "    long two_digit_count = 0;\n    for (int i = 0; i < k; i++) {\n \
    \       if (arr[i] < 100) {\n            two_digit_count += arr[i];\n        }\n\
    \    }\n    return two_digit_count;", "    long sum = 0;\n    for (int i = 0;\
    \ i < k; i++) {\n        if (arr[i] <= 99) {\n            sum += arr[i];\n   \
    \     }\n    }\n    return sum;", "  long sum = 0;\n  long n = arr.size();\n \
    \ for (int i = 0; i < k; i++) {\n    long el = arr[i];\n    if (el < 10) {\n \
    \     sum += el;\n    } else if (el < 100) {\n      sum += el;\n    }\n  }\n \
    \ return sum;", '  return 0;', "    long sum = 0;\n    for (int i = 0; i < k;\
    \ i++) {\n        if (arr[i] < 100)\n            sum += arr[i];\n    }\n    return\
    \ sum;", "    // Your code here\n    int count = 0;\n    int sum = 0;\n    for(int\
    \ i = 0; i < arr.size(); i++){\n        if(count == k)\n            break;\n \
    \       if(arr[i]/10 > 0 && arr[i]/100 == 0){\n            sum += arr[i];\n  \
    \          count++;\n        }\n        else{\n            count++;\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (int i = 0; i < k; i++)\
    \ {\n        if (arr[i] < 100) {\n            sum += arr[i];\n        }\n    }\n\
    \    return sum;", "\tlong sum = 0;\n\tfor (long i = 0; i < k; i++) {\n\t\tint\
    \ num = arr[i];\n\t\tint c = 0;\n\t\twhile (num > 0) {\n\t\t\tnum = num / 10;\n\
    \t\t\tc++;\n\t\t}\n\t\tif (c <= 2) {\n\t\t\tsum += arr[i];\n\t\t}\n\t}\n\treturn\
    \ sum;", "\t// Your code here\n\tlong sum = 0;\n\tint i = 0;\n\twhile (i < k &&\
    \ i < arr.size()) {\n\t\tif (arr[i] > 9 && arr[i] < 100) {\n\t\t\tsum += arr[i];\n\
    \t\t}\n\t\ti++;\n\t}\n\treturn sum;", "    // your code goes here\n    long ans\
    \ = 0;\n    for(int i = 0; i < k; i++){\n        if(arr[i] <= 99)\n          \
    \  ans += arr[i];\n    }\n    return ans;", "    long sum = 0;\n    // max 11\
    \ digits if all elements have 2 digits\n    // if there are more than 2 digits\
    \ they are ignored\n    int digits = 11;\n    for (int i = 0; i < digits; i++)\
    \ {\n        // i is the first digit\n        for (int j = 0; j < digits; j++)\
    \ {\n            // j is the second digit\n            for (int index = 0; index\
    \ < k; index++) {\n                // accumulate sum for all numbers with 2 digits\n\
    \                if (arr[index] >= pow(10, i) && arr[index] < pow(10, i + 1))\
    \ {\n                    if (arr[index] >= pow(10, j) && arr[index] < pow(10,\
    \ j + 1)) {\n                        sum += arr[index];\n                    }\n\
    \                }\n            }\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (auto const& x : arr) {\n        std::string str = std::to_string(x);\n\
    \        if (str.length() <= 2) {\n            sum += x;\n        }\n        k--;\n\
    \        if (k == 0) {\n            break;\n        }\n    }\n    return sum;",
  "\tlong sum = 0;\n\tfor (int i = 0; i < k; i++) {\n\t\tlong temp = arr[i];\n\t\t\
    if (temp > 9 && temp < 100) {\n\t\t\tsum += temp;\n\t\t}\n\t}\n\treturn sum;",
  "    long sum = 0;\n    for (int i = 0; i < k; i++) {\n        if (arr[i] < 100)\
    \ {\n            sum += arr[i];\n        }\n    }\n    return sum;", '    return
    0;', "    long sum=0;\n    for(long i=0;i<k;i++){\n        if(arr[i]>9){\n   \
    \         if(arr[i]>99){\n                sum+=arr[i];\n            }\n      \
    \      else{\n                int a = arr[i]%10;\n                int b = arr[i]/10;\n\
    \                sum+=(a+b);\n            }\n        }\n        else{\n      \
    \      sum+=arr[i];\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (auto a : arr) {\n        if (a > 9 && a < 100)\n            sum += a;\n\
    \        if (k == 0)\n            break;\n        k--;\n    }\n    return sum;",
  "    long sum = 0;\n    for (long i = 0; i < k; i++) {\n        if (arr[i] <= 99)\
    \ {\n            sum += arr[i];\n        }\n    }\n    return sum;", "  long sum\
    \ = 0;\n  for (long i = 0; i < k; i++) {\n    if (arr[i] > 9 && arr[i] < 100)\
    \ {\n      sum += arr[i];\n    }\n  }\n  return sum;", "    long sum = 0;\n  \
    \  for (long i = 0; i < k; i++) {\n        if (arr[i] >= 10 && arr[i] < 100) {\n\
    \            sum += arr[i];\n        }\n    }\n    return sum;", "    long ans\
    \ = 0;\n    for (long i = 0; i < k; i++) {\n        if (arr[i] < 100) {\n    \
    \        ans += arr[i];\n        }\n    }\n    return ans;", "  // >>> add_elements((std::vector<long>({(long)111,\
    \ (long)21, (long)3, (long)4000, (long)5, (long)6, (long)7, (long)8, (long)9})),\
    \ (4))\n  // (24)\n  long ans = 0;\n  for (long i = 0; i < k; i++) {\n    if (arr[i]\
    \ < 100) {\n      ans += arr[i];\n    }\n  }\n  return ans;", "    long sum =\
    \ 0;\n    for (long i = 0; i < k; i++) {\n        if (arr[i] < 100) {\n      \
    \      sum += arr[i];\n        }\n    }\n    return sum;", "    int sum = 0;\n\
    \    for(int i = 0; i < k; i++) {\n        if(arr[i] >= 10 && arr[i] < 100) {\n\
    \            sum += arr[i];\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (int i = 0; i < k; i++) {\n        if (arr[i] < 100)\n       \
    \     sum += arr[i];\n    }\n    return sum;", "  // your code here\n  long result\
    \ = 0;\n  for (long i = 0; i < k; i++) {\n    if ((arr[i] >= 10) && (arr[i] <\
    \ 100)) {\n      result += arr[i];\n    }\n  }\n  return result;", "  // Your\
    \ code here.\n  long count = 0;\n  long sum = 0;\n  while(count < k){\n    if(arr[count]\
    \ < 100){\n      sum += arr[count];\n    }\n    count++;\n  }\n  return sum;",
  "    // your code goes here\n    long count = 0;\n    for(int i = 0; i < k; i++){\n\
    \        if(arr[i] >= 10 && arr[i] < 100){\n            count += arr[i];\n   \
    \     }\n    }\n    return count;", "    long sum = 0;\n    for (int i = 0; i\
    \ < k; i++) {\n        if (arr[i] < 100) {\n            sum += arr[i];\n     \
    \   }\n    }\n    return sum;", "    //TODO: write your code here\n    long sum\
    \ = 0;\n    for(int i = 0; i < k; i++){\n        if(arr[i] < 100){\n         \
    \   sum += arr[i];\n        }\n    }\n    return sum;", "\tassert(1 <= arr.size()\
    \ <= 100);\n\tassert(1 <= k <= arr.size());\n\tlong sum = 0;\n\tfor (int i = 0;\
    \ i < k; i++) {\n\t\tif (arr[i] >= 10 && arr[i] < 100) {\n\t\t\tsum += arr[i];\n\
    \t\t}\n\t}\n\treturn sum;", "    int sum = 0;\n    for(int i = 0; i < k; i++)\
    \ {\n        if(arr[i] > 9 && arr[i] < 100)\n            sum += arr[i];\n    }\n\
    \    return sum;", "\tlong i, sum = 0;\n\tfor (i = 0; i < k; i++) {\n\t\tsum +=\
    \ arr[i];\n\t}\n\treturn sum;", "\tlong s = 0;\n\tfor (int i = 0; i < k; i++)\
    \ {\n\t\tif (arr[i] < 10)\n\t\t\ts += arr[i];\n\t\telse if (arr[i] < 100)\n\t\t\
    \ts += arr[i];\n\t}\n\treturn s;", "    long sum=0;\n    for(long i=0;i<k;i++){\n\
    \        long digit1=arr[i]/10;\n        long digit2=arr[i]%10;\n        if(digit1>0\
    \ && digit2>0){\n            sum+=arr[i];\n        }\n        else if(digit1>0\
    \ && digit2==0){\n            sum+=digit1;\n        }\n        else if(digit1==0\
    \ && digit2>0){\n            sum+=digit2;\n        }\n    }\n    return sum;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_22_filter_integers
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out = {};\n    for (std::any value : values) {\n        if (value.type() ==\
    \ typeid(long)) {\n            out.push_back(std::any_cast<long>(value));\n  \
    \      }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpc4iqgqd1: /tmp/tmpc4iqgqd1.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto val : values) {\n        if (val.type() == typeid(int))\
    \ {\n            ret.push_back(std::any_cast<int>(val));\n        } else if (val.type()\
    \ == typeid(long)) {\n            ret.push_back(std::any_cast<long>(val));\n \
    \       }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ v;\n    for(auto iter = values.begin(); iter != values.end(); iter++) {\n  \
    \      if(std::any_cast<long>(&(*iter))) {\n            v.push_back(std::any_cast<long>(*iter));\n\
    \        }\n    }\n    return v;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp60vmoqeg: /tmp/tmp60vmoqeg.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ vec;\n    for(int i=0;i<values.size();i++){\n    \tif(std::any_cast<long>(&values[i])){\n\
    \    \t\tvec.push_back(std::any_cast<long>(values[i]));\n    \t}\n    }\n    return\
    \ vec;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpo8hgljwi: /tmp/tmpo8hgljwi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto& p : values) {\n        try {\n            ret.push_back(std::any_cast<long>(p));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpcmzczqz5: /tmp/tmpcmzczqz5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ longs;\n    for (auto item : values) {\n        if (item.type() == typeid(long))\
    \ {\n            longs.push_back(std::any_cast<long>(item));\n        }\n    }\n\
    \    return longs;\n}\nint main() {\n    auto candidate = filter_integers;\n \
    \   assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n \
    \   assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpw8tqsl_k: /tmp/tmpw8tqsl_k.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tfor (auto&& x : values) {\n\t\ttry {\n\t\t\tresult.push_back(std::any_cast<long>(x));\n\
    \t\t}\n\t\tcatch (const std::bad_any_cast& e) {\n\t\t\t// Pass\n\t\t}\n\t}\n\t\
    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp8uzvyype: /tmp/tmp8uzvyype.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto e : values) {\n        try {\n            res.push_back(std::any_cast<long>(e));\n\
    \        } catch (const std::bad_any_cast& e) {\n            continue;\n     \
    \   }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp5mfbr0la: /tmp/tmp5mfbr0la.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& v : values) {\n        try {\n            if (v.type()\
    \ == typeid(long)) {\n                result.push_back(std::any_cast<long>(v));\n\
    \            }\n        } catch (const std::bad_any_cast&) {\n            // ignore\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpp41d84vb: /tmp/tmpp41d84vb.cpp:24: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto& x : values) {\n        try {\n            ret.push_back(std::any_cast<long>(x));\n\
    \        } catch (std::bad_any_cast&) {\n            //\n        }\n    }\n  \
    \  return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpyo29702p: /tmp/tmpyo29702p.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto x : values) {\n        if (auto y = std::any_cast<long>(&x))\
    \ {\n            res.push_back(*y);\n        }\n    }\n    return res;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpq6nlahvf: /tmp/tmpq6nlahvf.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n     \
    \   if (it->type() == typeid(long)) {\n            res.push_back(std::any_cast<long>(*it));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2fperw17: /tmp/tmp2fperw17.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ r;\n    for (auto v : values) {\n        try {\n            r.push_back(std::any_cast<long>(v));\n\
    \        } catch (const std::bad_any_cast& e) {\n            continue;\n     \
    \   }\n    }\n    return r;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpsytj1ov6: /tmp/tmpsytj1ov6.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (std::any v : values) {\n        try {\n            res.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ky407ur: /tmp/tmp8ky407ur.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n     \
    \   if ((*it).type() == typeid(long)) {\n            ret.push_back(std::any_cast<long>(*it));\n\
    \        }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpydoaxts9: /tmp/tmpydoaxts9.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ x;\n    for(auto &any_value : values) {\n        try {\n            x.push_back(std::any_cast<long>(any_value));\n\
    \        } catch(std::bad_any_cast e) {\n            // No change required\n \
    \       }\n    }\n    return x;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphffl1a2p: /tmp/tmphffl1a2p.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ans;\n    for(auto a: values){\n        if(a.type() == typeid(long))\n     \
    \       ans.push_back(std::any_cast<long>(a));\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpzxy3o7sw: /tmp/tmpzxy3o7sw.cpp:19: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ answer;\n  for (int i = 0; i < values.size(); i++) {\n    if (values[i].type()\
    \ == typeid(long)) {\n      answer.push_back(std::any_cast<long>(values[i]));\n\
    \    }\n  }\n  return answer;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpmnc6xbwp: /tmp/tmpmnc6xbwp.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ res;\n  for (std::any val : values) {\n    bool isInt = false;\n    try {\n\
    \      isInt = val.type() == typeid(long);\n    } catch (std::bad_any_cast& e)\
    \ {\n      isInt = false;\n    }\n    if (isInt) {\n      res.push_back(std::any_cast<long>(val));\n\
    \    }\n  }\n  return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2wslt9ml: /tmp/tmp2wslt9ml.cpp:26: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ret;\n  for (auto v : values) {\n    try {\n      long x = std::any_cast<long>(v);\n\
    \      ret.push_back(x);\n    } catch (const std::bad_any_cast&) { }\n  }\n  return\
    \ ret;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpcjgipx9u: /tmp/tmpcjgipx9u.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ integers;\n    for (std::any value : values) {\n        try {\n            std::any_cast<long>(value);\n\
    \            integers.push_back(std::any_cast<long>(value));\n        } catch\
    \ (const std::bad_any_cast&) {\n            continue;\n        }\n    }\n    return\
    \ integers;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpoqp48fxu: /tmp/tmpoqp48fxu.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ ret;\n\tfor (auto& it : values) {\n\t\ttry {\n\t\t\tret.push_back(std::any_cast<long>(it));\n\
    \t\t}\n\t\tcatch (const std::bad_any_cast&) {\n\t\t\tcontinue;\n\t\t}\n\t}\n\t\
    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpe9_q54sa: /tmp/tmpe9_q54sa.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto& i : values) {\n        try {\n            auto v = std::any_cast<long>(i);\n\
    \            ret.push_back(v);\n        } catch (std::bad_any_cast &) {\n    \
    \        //pass\n        }\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp0zbrj7et: /tmp/tmp0zbrj7et.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (std::any& val : values) {\n        try {\n            result.push_back(std::any_cast<long>(val));\n\
    \        } catch (const std::bad_any_cast&) {\n            continue;\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpurs8b530: /tmp/tmpurs8b530.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    // iterate over values and filter only integers\n    for (std::any\
    \ val : values) {\n        try {\n            ret.push_back(std::any_cast<long>(val));\n\
    \        } catch (std::bad_any_cast&) {\n            //std::cout << \"filter_integers:\
    \ \" << \"bad cast\" << std::endl;\n        }\n    }\n    return ret;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp9cml35zx: /tmp/tmp9cml35zx.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  for (auto value : values) {\n    try {\n      if (std::any_cast<long>(value))\
    \ {\n        result.push_back(std::any_cast<long>(value));\n      }\n    } catch\
    \ (std::bad_any_cast &e) {\n      // Do nothing\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp4tp7aacc: /tmp/tmp4tp7aacc.cpp:24: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto elem : values) {\n        try {\n            long integer\
    \ = std::any_cast<long>(elem);\n            res.push_back(integer);\n        }\
    \ catch (const std::bad_any_cast& e) {\n            continue;\n        }\n   \
    \ }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp1omt2_mr: /tmp/tmp1omt2_mr.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  for (std::any value : values) {\n    if (value.type() == typeid(long))\
    \ {\n      long intValue = std::any_cast<long>(value);\n      result.push_back(intValue);\n\
    \    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp1ugq0glt: /tmp/tmp1ugq0glt.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ integers;\n    for (auto v : values) {\n        if (std::any_cast<long>(&v))\
    \ {\n            integers.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return integers;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpw9t85fp2: /tmp/tmpw9t85fp2.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ints;\n    for (auto& value : values) {\n        try {\n            if (auto\
    \ i = std::any_cast<long>(&value)) {\n                ints.push_back(*i);\n  \
    \          }\n        } catch (const std::bad_any_cast& e) {\n            continue;\n\
    \        }\n    }\n    return ints;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpsa6tksn1: /tmp/tmpsa6tksn1.cpp:24: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tfor (int i = 0; i < values.size(); i++) {\n\t\tif (std::any_cast<long>(&values[i]))\
    \ {\n\t\t\tresult.push_back(std::any_cast<long>(values[i]));\n\t\t}\n\t}\n\treturn\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp6ffsllz9: /tmp/tmp6ffsllz9.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ nums;\n    for (int i = 0; i < values.size(); i++) {\n        if (std::any_cast<long>(&values[i]))\
    \ {\n            nums.push_back(std::any_cast<long>(values[i]));\n        }\n\
    \    }\n    return nums;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwzf7bvn6: /tmp/tmpwzf7bvn6.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto x : values) {\n        try {\n            out.push_back(std::any_cast<long>(x));\n\
    \        } catch (std::bad_any_cast & e) {\n            //std::cout << \"caught\
    \ bad_any_cast: \" << e.what() << std::endl;\n        }\n    }\n    return out;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp26y558ev: /tmp/tmp26y558ev.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ integers;\n    for (auto i: values) {\n        try {\n            integers.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return integers;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpy_9k5o7u: /tmp/tmpy_9k5o7u.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ints;\n  for (auto i = values.begin(); i != values.end(); i++) {\n    try {\n\
    \      ints.push_back(std::any_cast<long>(*i));\n    } catch (const std::bad_any_cast&\
    \ e) {\n      continue;\n    }\n  }\n  return ints;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpgiqtb2lo: /tmp/tmpgiqtb2lo.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ lst;\n    for(auto& val : values) {\n        try {\n            lst.push_back(std::any_cast<long>(val));\n\
    \        } catch(const std::bad_any_cast& e) {\n            std::string s = e.what();\n\
    \        }\n    }\n    return lst;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmplacja2hf: /tmp/tmplacja2hf.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ v;\n    for(int i=0;i<values.size();i++){\n        if(std::any_cast<long>(&values[i])){\n\
    \            v.push_back(std::any_cast<long>(values[i]));\n        }\n    }\n\
    \    return v;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpotfy2rs9: /tmp/tmpotfy2rs9.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            result.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmprorg5z11: /tmp/tmprorg5z11.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ new_values;\n    for (std::any val : values) {\n        if (val.type() == typeid(int))\
    \ {\n            new_values.push_back(std::any_cast<int>(val));\n        }\n \
    \       else if (val.type() == typeid(long)) {\n            new_values.push_back(std::any_cast<long>(val));\n\
    \        }\n    }\n    return new_values;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    // BEGIN\n    for (auto&& value : values) {\n        try {\n     \
    \       ret.push_back(std::any_cast<long>(value));\n        } catch (const std::bad_any_cast&)\
    \ {\n        }\n    }\n    // END\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpxd4y0_s8: /tmp/tmpxd4y0_s8.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ temp_vec;\n    for(std::any i : values){\n        if(i.type() == typeid(int)){\n\
    \            temp_vec.push_back(std::any_cast<int>(i));\n        }\n        else\
    \ if(i.type() == typeid(long)){\n            temp_vec.push_back(std::any_cast<long>(i));\n\
    \        }\n    }\n    return temp_vec;\n}\nint main() {\n    auto candidate =\
    \ filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108231
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ret;\n  for (auto item : values) {\n    try {\n      auto converted = std::any_cast<long>(item);\n\
    \      ret.push_back(converted);\n    } catch (std::bad_any_cast &e) {\n     \
    \ continue;\n    }\n  }\n  return ret;\n}\nint main() {\n    auto candidate =\
    \ filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp01fyvwd5: /tmp/tmp01fyvwd5.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmparbux6d_: /tmp/tmparbux6d_.cpp:15: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (std::any &value : values) {\n        try {\n            if\
    \ (value.type() == typeid(long)) {\n                result.push_back(std::any_cast<long>(value));\n\
    \            }\n        } catch (const std::bad_any_cast &e) {\n            continue;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpo8of9sdc: /tmp/tmpo8of9sdc.cpp:24: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108232
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ans;\n    for(auto x: values){\n        if(std::any_cast<int>(&x) != nullptr){\n\
    \            ans.push_back(std::any_cast<int>(x));\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108232
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ x;\n    int i;\n    for(i=0;i<values.size();i++)\n    {\n        std::any k=values[i];\n\
    \        if(k.type()==typeid(int))\n        {\n            x.push_back(std::any_cast<int>(k));\n\
    \        }\n        else if(k.type()==typeid(long))\n        {\n            x.push_back(std::any_cast<long>(k));\n\
    \        }\n    }\n    return x;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108232
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ i_values;\n    for(auto v : values) {\n        try {\n            i_values.push_back(std::any_cast<long>(v));\n\
    \        } catch(std::bad_any_cast& e) {\n            // Do nothing\n        }\n\
    \    }\n    return i_values;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp9to6f7tl: /tmp/tmp9to6f7tl.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (int i = 0; i < values.size(); i++) {\n        try {\n       \
    \     if (values[i].type() == typeid(int)) {\n                res.push_back(std::any_cast<int>(values[i]));\n\
    \            }\n            else if (values[i].type() == typeid(long)) {\n   \
    \             res.push_back(std::any_cast<long>(values[i]));\n            }\n\
    \        }\n        catch (std::bad_any_cast &e) {\n            assert(std::any_cast<std::string>(&values[i])\
    \ == nullptr);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ans;\n    for(auto v: values) {\n        try {\n            ans.push_back(std::any_cast<long>(v));\n\
    \        } catch(std::bad_any_cast &) {\n            continue;\n        }\n  \
    \  }\n    return ans;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphkjoepzc: /tmp/tmphkjoepzc.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ ans;\n\tfor(auto i:values){\n\t\ttry{\n\t\t\tlong val = std::any_cast<long>(i);\n\
    \t\t\tans.push_back(val);\n\t\t}catch(...){\n\t\t\t\n\t\t}\n\t}\n\treturn ans;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpq084ax1d: /tmp/tmpq084ax1d.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  // YOUR CODE\
    \ HERE\n  std::vector<long> v;\n  for(auto e: values){\n    if(e.type() == typeid(long)){\n\
    \      v.push_back(std::any_cast<long>(e));\n    }\n  }\n  return v;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp0w25cj94: /tmp/tmp0w25cj94.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (int i = 0; i < values.size(); i++) {\n        try {\n    \
    \        result.push_back(std::any_cast<long>(values[i]));\n        } catch (std::bad_any_cast&)\
    \ {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpl5q5_8s4: /tmp/tmpl5q5_8s4.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  auto result\
    \ = std::vector<long>();\n  for (auto& a : values) {\n    if (a.type() == typeid(long))\
    \ {\n      result.push_back(std::any_cast<long>(a));\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp_cptu0ha: /tmp/tmp_cptu0ha.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ longs;\n  for (int i = 0; i < values.size(); i++) {\n    if (std::any_cast<long>(&values[i]))\
    \ {\n      longs.push_back(std::any_cast<long>(values[i]));\n    }\n  }\n  return\
    \ longs;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp0rfjbz47: /tmp/tmp0rfjbz47.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n     \
    \   if (it->type() == typeid(long)) {\n            res.push_back(std::any_cast<long>(*it));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2fperw17: /tmp/tmp2fperw17.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108233
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ re;\n    for(auto el: values){\n        try{\n            re.push_back(std::any_cast<long>(el));\n\
    \        }\n        catch(std::bad_any_cast& e){\n            continue;\n    \
    \    }\n    }\n    return re;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphgogjgqo: /tmp/tmphgogjgqo.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ new_vals;\n    for (auto elem : values) {\n        if (elem.type() == typeid(int))\
    \ {\n            new_vals.push_back(std::any_cast<int>(elem));\n        }\n  \
    \      else if (elem.type() == typeid(long)) {\n            new_vals.push_back(std::any_cast<long>(elem));\n\
    \        }\n    }\n    return new_vals;\n}\nint main() {\n    auto candidate =\
    \ filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ output;\n\tfor (int i = 0; i < values.size(); i++) {\n\t\ttry {\n\t\t\toutput.push_back(std::any_cast<long>(values[i]));\n\
    \t\t}\n\t\tcatch (std::bad_any_cast e) {\n\t\t\t//std::cout << \"Bad cast\" <<\
    \ '\\n';\n\t\t}\n\t}\n\treturn output;\n}\nint main() {\n    auto candidate =\
    \ filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpsqxqkwaa: /tmp/tmpsqxqkwaa.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto &value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpje0_tr1p: /tmp/tmpje0_tr1p.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto v : values) {\n        try {\n            ret.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast& e) {\n            //\n        }\n    }\n\
    \    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpd5q_r6io: /tmp/tmpd5q_r6io.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto it: values) {\n        // Check if the any object is an\
    \ integer\n        if (std::any_cast<int*>(&it)) {\n            res.push_back(std::any_cast<int>(it));\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp_2ngqjnp: /tmp/tmp_2ngqjnp.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    auto number_check\
    \ = [](std::any value) -> bool {\n        return (value.type() == typeid(int)\
    \ || value.type() == typeid(long) || value.type() == typeid(double));\n    };\n\
    \    auto result = std::vector<long>();\n    for (auto value : values) {\n   \
    \     if (number_check(value)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::bad_any_cast'\n  what():\
    \  bad any_cast\n"
  stdout: ''
  timestamp: 1660108236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  for (int i = 0; i < values.size(); i++) {\n    std::any value = values[i];\n\
    \    try {\n      result.push_back(std::any_cast<long>(value));\n    } catch (const\
    \ std::bad_any_cast& e) {\n      continue;\n    }\n  }\n  return result;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpg4n8tyor: /tmp/tmpg4n8tyor.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto v : values) {\n        try {\n            res.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast e) {\n            // do nothing\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpaz0dgtg1: /tmp/tmpaz0dgtg1.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ retval;\n    for (std::any value : values) {\n        try {\n            long\
    \ val = std::any_cast<long>(value);\n            retval.push_back(val);\n    \
    \    } catch (const std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return retval;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpk16pmfgq: /tmp/tmpk16pmfgq.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ integers;\n  for (auto &value : values) {\n    try {\n      integers.push_back(std::any_cast<long>(value));\n\
    \    } catch (const std::bad_any_cast &) {\n      continue;\n    }\n  }\n  return\
    \ integers;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp7qcdo4k7: /tmp/tmp7qcdo4k7.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  // \u0444\
    \u0438\u043B\u044C\u0442\u0440\u0443\u0435\u043C \u0432\u0435\u043A\u0442\u043E\
    \u0440\n  std::vector<long> res;\n  for (int i = 0; i < values.size(); i++) {\n\
    \    try {\n      long val = std::any_cast<long>(values[i]);\n      res.push_back(val);\n\
    \    } catch (const std::bad_any_cast& e) {\n      continue;\n    }\n  }\n  return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp8qipwxxj: /tmp/tmp8qipwxxj.cpp:24: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ int_values;\n    for (std::any val : values) {\n        try {\n            int_values.push_back(std::any_cast<long>(val));\n\
    \        } catch (std::bad_any_cast &) {\n            continue;\n        }\n \
    \   }\n    return int_values;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp13dbwnxk: /tmp/tmp13dbwnxk.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // your\
    \ code here\n    std::vector<long> result;\n    for(std::any a : values){\n  \
    \      if(a.type() == typeid(int)){\n            result.push_back(std::any_cast<int>(a));\n\
    \        }else if(a.type() == typeid(long)){\n            result.push_back(std::any_cast<long>(a));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  return {};\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp6whji9d3: /tmp/tmp6whji9d3.cpp:14: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ret;\n  for (auto&& value : values) {\n    if (auto* n = std::any_cast<long>(&value))\
    \ {\n      ret.push_back(*n);\n    }\n  }\n  return ret;\n}\nint main() {\n  \
    \  auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpil8wzgtx: /tmp/tmpil8wzgtx.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  // you code\
    \ here\n  std::vector<long> res;\n  for(auto& x: values){\n    try{\n      std::any_cast<long>(x);\n\
    \      res.push_back(std::any_cast<long>(x));\n    }\n    catch(std::bad_any_cast&\
    \ e){\n      //std::cout<<e.what()<<std::endl;\n    }\n  }\n  return res;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpzy_2089y: /tmp/tmpzy_2089y.cpp:25: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out_values;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n\
    \        if (it->type() == typeid(long)) {\n            out_values.push_back(std::any_cast<long>(*it));\n\
    \        }\n    }\n    return out_values;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp6u4wdqu8: /tmp/tmp6u4wdqu8.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ res;\n\tfor (auto i : values) {\n\t\ttry {\n\t\t\tres.push_back(std::any_cast<long>(i));\n\
    \t\t}\n\t\tcatch (std::bad_any_cast & e) {\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpbgs73w0_: /tmp/tmpbgs73w0_.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ int_vector;\n    for(std::any value : values) {\n        try {\n           \
    \ int_vector.push_back(std::any_cast<long>(value));\n        } catch(std::bad_any_cast)\
    \ {\n\n        }\n    }\n    return int_vector;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpw8s3kaxj: /tmp/tmpw8s3kaxj.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  /*implement\
    \ your solution here*/\n  std::vector<long> v;\n  for(auto x:values){\n    if(x.type()==typeid(long))\n\
    \      v.push_back(std::any_cast<long>(x));\n  }\n  return v;\n}\nint main() {\n\
    \    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp24r79rlb: /tmp/tmp24r79rlb.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto x : values) {\n        try {\n            result.push_back(std::any_cast<long>(x));\n\
    \        } catch (const std::bad_any_cast&) {\n            continue;\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpk3kxwf7_: /tmp/tmpk3kxwf7_.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ v;\n    for(auto i:values){\n        try{\n            v.push_back(std::any_cast<long>(i));\n\
    \        }\n        catch(const std::bad_any_cast&){\n            continue;\n\
    \        }\n    }\n    return v;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpl0hd3qsc: /tmp/tmpl0hd3qsc.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::any_cast<long>(&value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp5wzz0be6: /tmp/tmp5wzz0be6.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  // YOUR CODE HERE\n  return result;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp39tpnmr5: /tmp/tmp39tpnmr5.cpp:16: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ integers;\n\tfor (std::any value : values) {\n\t\tif (value.type() == typeid(long))\
    \ {\n\t\t\tintegers.push_back(std::any_cast<long>(value));\n\t\t}\n\t}\n\treturn\
    \ integers;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpvhvbkmd7: /tmp/tmpvhvbkmd7.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ integers;\n    for (auto value : values) {\n        try {\n            long\
    \ integer = std::any_cast<long>(value);\n            integers.push_back(integer);\n\
    \        } catch (std::bad_any_cast &e) {\n            // silently ignore\n  \
    \      }\n    }\n    return integers;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpsh7icrhx: /tmp/tmpsh7icrhx.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ v;\n    for(auto e: values) {\n        try {\n            long x = std::any_cast<long>(e);\n\
    \            v.push_back(x);\n        } catch(std::bad_any_cast &b) {\n      \
    \      // simply ignore non-integer values\n        }\n    }\n    return v;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpz06vg60v: /tmp/tmpz06vg60v.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ret;\n  int size = values.size();\n  for (int i = 0; i < size; i++) {\n    if\
    \ (values[i].type() == typeid(long)) {\n      ret.push_back(std::any_cast<long>(values[i]));\n\
    \    }\n  }\n  return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpe2l7t5s6: /tmp/tmpe2l7t5s6.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ v;\n    for(auto& item : values) {\n        if(item.type() == typeid(long))\
    \ {\n            v.push_back(std::any_cast<long>(item));\n        }\n    }\n \
    \   return v;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp5c16xb6s: /tmp/tmp5c16xb6s.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ res;\n  for (auto &el : values) {\n    if (el.type() == typeid(long)) {\n  \
    \    res.push_back(std::any_cast<long>(el));\n    }\n  }\n  return res;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp_sqkgaqm: /tmp/tmp_sqkgaqm.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  // your code\
    \ here\n  std::vector<long> ints;\n  std::any item;\n  std::any_cast<long> item2;\n\
    \  for(int i = 0; i < values.size(); i++){\n    item = values[i];\n    if(item.type()\
    \ == typeid(long)){\n      ints.push_back(std::any_cast<long>(item));\n    }\n\
    \  }\n  return ints;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpoiyp8fff.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpoiyp8fff.cpp:12:22: error: expected \u2018;\u2019 before \u2018item2\u2019\
    \n   12 |   std::any_cast<long> item2;\n      |                      ^~~~~~\n\
    \      |                      ;\n/tmp/tmpoiyp8fff.cpp:12:8: error: statement cannot\
    \ resolve address of overloaded function\n   12 |   std::any_cast<long> item2;\n\
    \      |   ~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // your\
    \ code goes here\n    std::vector<long> out;\n    for(auto &elem : values){\n\
    \        try{\n            out.push_back(std::any_cast<long>(elem));\n       \
    \ }\n        catch(std::bad_any_cast& e){\n        }\n    }\n    return out;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp_d448hq7: /tmp/tmp_d448hq7.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ int_v;\n    for(std::any a : values){\n        try{\n            int_v.push_back(std::any_cast<long>(a));\n\
    \        }catch(const std::bad_any_cast& e){\n        }\n    }\n    return int_v;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpe9blrrsp: /tmp/tmpe9blrrsp.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto&& item : values) {\n        try {\n            result.push_back(std::any_cast<long>(item));\n\
    \        } catch (std::bad_any_cast& e) {\n            // do nothing\n       \
    \ }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpjb2gbgyl: /tmp/tmpjb2gbgyl.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ filtered_values;\n    for (std::any value : values) {\n        try {\n     \
    \       filtered_values.push_back(std::any_cast<long>(value));\n        } catch\
    \ (std::bad_any_cast& e) {\n            // ignore\n        }\n    }\n    return\
    \ filtered_values;\n}\nint main() {\n    auto candidate = filter_integers;\n \
    \   assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n \
    \   assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpt56j9m0o: /tmp/tmpt56j9m0o.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    std::transform(values.begin(), values.end(), std::back_inserter(result),\
    \ [](std::any value) -> long {\n        assert(value.type() == typeid(long));\n\
    \        return std::any_cast<long>(value);\n    });\n    return result;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp4rdo8qkc: /tmp/tmp4rdo8qkc.cpp:11: filter_integers(std::vector<std::any>)::<lambda(std::any)>:
    Assertion `value.type() == typeid(long)'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ out;\n  std::any temp;\n  for(int i=0;i<values.size();i++){\n    try{\n    \
    \  if(std::holds_alternative<long>(values[i])){\n        out.push_back(std::any_cast<long>(values[i]));\n\
    \      }\n    }\n    catch(std::bad_any_cast& e){\n      continue;\n    }\n  }\n\
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpus71by_7.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpus71by_7.cpp:13:48: error: no matching function for call to \u2018\
    holds_alternative<long int>(__gnu_cxx::__alloc_traits<std::allocator<std::any>,\
    \ std::any>::value_type&)\u2019\n   13 |       if(std::holds_alternative<long>(values[i])){\n\
    \      |                                                ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpus71by_7.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpus71by_7.cpp:13:48:\
    \ note:   \u2018__gnu_cxx::__alloc_traits<std::allocator<std::any>, std::any>::value_type\u2019\
    \ {aka \u2018std::any\u2019} is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |       if(std::holds_alternative<long>(values[i])){\n   \
    \   |                                                ^\n"
  stdout: ''
  timestamp: 1660108235
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto& v : values) {\n        try {\n            res.push_back(std::any_cast<long>(v));\n\
    \        } catch (std::bad_any_cast) {\n            // std::cout << \"bad_any_cast\"\
    ;\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp0bwfrt7_: /tmp/tmp0bwfrt7_.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108236
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // TODO:\
    \ Implementation\n    std::vector<long> vec;\n    for(int i=0;i<values.size();i++){\n\
    \        try{\n            long a = std::any_cast<long>(values[i]);\n        \
    \    vec.push_back(a);\n        }\n        catch(const std::bad_any_cast& e){\n\
    \            continue;\n        }\n    }\n    return vec;\n}\nint main() {\n \
    \   auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpubug3zb6: /tmp/tmpubug3zb6.cpp:25: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tfor (int i = 0; i < values.size(); i++) {\n\t\ttry {\n\t\t\tlong\
    \ temp = std::any_cast<long>(values[i]);\n\t\t\tresult.push_back(temp);\n\t\t\
    }\n\t\tcatch (std::bad_any_cast &) {\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp0tjbh_ma: /tmp/tmp0tjbh_ma.cpp:24: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (const auto& v : values) {\n        if (v.type() == typeid(long))\
    \ {\n            ret.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprzvx6nxf: /tmp/tmprzvx6nxf.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tfor (auto item : values) {\n\t\ttry {\n\t\t\tresult.push_back(std::any_cast<long>(item));\n\
    \t\t}\n\t\tcatch (std::bad_any_cast const&) {\n\t\t\t// skip\n\t\t}\n\t}\n\treturn\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp10ujpp2r: /tmp/tmp10ujpp2r.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ans;\n    for(int i=0;i<values.size();i++){\n        try{\n            if(std::any_cast<int>(values[i])){\n\
    \                ans.push_back(std::any_cast<int>(values[i]));\n            }\n\
    \        }\n        catch(...){\n            continue;\n        }\n    }\n   \
    \ return ans;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ ints;\n\tfor (int i = 0; i < values.size(); i++) {\n\t\ttry {\n\t\t\tints.push_back(std::any_cast<long>(values[i]));\n\
    \t\t}\n\t\tcatch (const std::bad_any_cast&) {\n\t\t\tcontinue;\n\t\t}\n\t}\n\t\
    return ints;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpwkbi0kll: /tmp/tmpwkbi0kll.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tfor (int i = 0; i < values.size(); i++) {\n\t\ttry {\n\t\t\tresult.push_back(std::any_cast<long>(values[i]));\n\
    \t\t}\n\t\tcatch (const std::bad_any_cast&) {\n\t\t\tcontinue;\n\t\t}\n\t}\n\t\
    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmphx8m86l0: /tmp/tmphx8m86l0.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ filteredIntegers;\n\tfor (std::any value : values) {\n\t\tif (value.type() ==\
    \ typeid(int)) {\n\t\t\tfilteredIntegers.push_back(std::any_cast<int>(value));\n\
    \t\t}\n\t\telse if (value.type() == typeid(long)) {\n\t\t\tfilteredIntegers.push_back(std::any_cast<long>(value));\n\
    \t\t}\n\t}\n\treturn filteredIntegers;\n}\nint main() {\n    auto candidate =\
    \ filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ v;\n    for(std::any value : values) {\n        if(value.type() == typeid(long))\
    \ {\n            v.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return v;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmptj0phsdt: /tmp/tmptj0phsdt.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ myvec;\n  for(auto i : values){\n    try{\n      myvec.push_back(std::any_cast<long>(i));\n\
    \    }\n    catch(const std::bad_any_cast& e){\n      std::cout << \"ERROR:: \"\
    \ << e.what() << '\\n';\n    }\n  }\n  return myvec;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpz5n6g8v6: /tmp/tmpz5n6g8v6.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (int i = 0; i < values.size(); i++) {\n        std::any val =\
    \ values[i];\n        try {\n            int n = std::any_cast<int>(val);\n  \
    \          res.push_back(n);\n        } catch (const std::bad_any_cast& e) {\n\
    \            continue;\n        }\n    }\n    return res;\n}\nint main() {\n \
    \   auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ret;\n  for (int i = 0; i < values.size(); i++) {\n    if (values[i].type()\
    \ == typeid(long)) {\n      ret.push_back(std::any_cast<long>(values[i]));\n \
    \   }\n  }\n  return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpjz9zfibw: /tmp/tmpjz9zfibw.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (const auto &v : values) {\n        try {\n            if (std::any_cast<int>(v))\n\
    \                ret.push_back(std::any_cast<int>(v));\n        } catch (const\
    \ std::bad_any_cast &e) {\n            continue;\n        }\n    }\n    return\
    \ ret;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ answer;\n\tfor (int i = 0; i < values.size(); i++) {\n\t\tstd::any_cast<long>(values[i]);\n\
    \t\tanswer.push_back(std::any_cast<long>(values[i]));\n\t}\n\treturn answer;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::bad_any_cast'\n  what():\
    \  bad any_cast\n"
  stdout: ''
  timestamp: 1660108239
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    /* \n \
    \   int left, right;\n    std::vector<int> ret;\n    for (int i = 0; i < values.size();\
    \ i++) {\n        if (is_integer(values[i])) {\n            left = i;\n      \
    \      break;\n        }\n    }\n    for (int i = values.size() - 1; i >= 0; i--)\
    \ {\n        if (is_integer(values[i])) {\n            right = i;\n          \
    \  break;\n        }\n    }\n    for (int i = left; i <= right; i++) {\n     \
    \   if (is_integer(values[i])) {\n            ret.push_back(std::any_cast<int>(values[i]));\n\
    \        }\n    }\n    return ret;\n    */\n    std::vector<long> ret;\n    for\
    \ (auto it = values.begin(); it != values.end(); it++) {\n        if (is_integer(*it))\
    \ {\n            ret.push_back(std::any_cast<long>(*it));\n        }\n    }\n\
    \    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpnfivea1c.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpnfivea1c.cpp:33:13: error: \u2018is_integer\u2019 was not declared\
    \ in this scope\n   33 |         if (is_integer(*it)) {\n      |             ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (const auto& v : values) {\n        try {\n            ret.push_back(std::any_cast<long>(v));\n\
    \        } catch (const std::bad_any_cast&) {\n            continue;\n       \
    \ }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpgqgxrrxq: /tmp/tmpgqgxrrxq.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ints;\n    for (auto x : values) {\n        try {\n            std::any_cast<long>(x);\n\
    \            ints.push_back(std::any_cast<long>(x));\n        } catch (const std::bad_any_cast&\
    \ e) {\n        }\n    }\n    return ints;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpix53rua6: /tmp/tmpix53rua6.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ret;\n  for (int i = 0; i < values.size(); i++) {\n    auto type = values[i].type();\n\
    \    if (type == typeid(long)) {\n      ret.push_back(std::any_cast<long>(values[i]));\n\
    \    }\n  }\n  return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp554914k4.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp554914k4.cpp:11:32: error: \u2018std::type_info::type_info(const std::type_info&)\u2019\
    \ is private within this context\n   11 |     auto type = values[i].type();\n\
    \      |                                ^\nIn file included from /usr/include/c++/9/bits/exception_ptr.h:39,\n\
    \                 from /usr/include/c++/9/exception:143,\n                 from\
    \ /usr/include/c++/9/ios:39,\n                 from /usr/include/c++/9/istream:38,\n\
    \                 from /usr/include/c++/9/sstream:38,\n                 from /usr/include/c++/9/complex:45,\n\
    \                 from /usr/include/c++/9/ccomplex:39,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n                 from\
    \ /tmp/tmp554914k4.cpp:2:\n/usr/include/c++/9/typeinfo:178:5: note: declared private\
    \ here\n  178 |     type_info(const type_info&);\n      |     ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ integers;\n    for (auto i : values) {\n        try {\n            long integer\
    \ = std::any_cast<long>(i);\n            integers.push_back(integer);\n      \
    \  } catch (std::bad_any_cast&) {\n            continue;\n        }\n    }\n \
    \   return integers;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpgw1fwoj6: /tmp/tmpgw1fwoj6.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ filtered;\n  for (std::any &v : values) {\n    try {\n      filtered.push_back(std::any_cast<long>(v));\n\
    \    } catch (std::bad_any_cast &e) {\n      continue;\n    }\n  }\n  return filtered;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp3v49lum3: /tmp/tmp3v49lum3.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (const std::bad_any_cast&) {\n            // do nothing\n   \
    \     }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp9hxrnbh8: /tmp/tmp9hxrnbh8.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ arr;\n  for(auto &value: values) {\n    if(value.type() == typeid(long)) {\n\
    \      arr.push_back(std::any_cast<long>(value));\n    }\n  }\n  return arr;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpi1up_7ar: /tmp/tmpi1up_7ar.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // create\
    \ an empty vector to store long values\n    std::vector<long> filtered_vector;\n\
    \    // loop through the values of the passed vector\n    for (int i = 0; i <\
    \ values.size(); i++) {\n        // if the type of the value is long, then\n \
    \       if (values[i].type() == typeid(long)) {\n            // cast the value\
    \ to long and append to the filtered_vector\n            filtered_vector.push_back(std::any_cast<long>(values[i]));\n\
    \        }\n    }\n    // return the filtered_vector\n    return filtered_vector;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpyws9c2e6: /tmp/tmpyws9c2e6.cpp:25: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ res;\n\tfor (auto& val : values) {\n\t\tif (val.type() == typeid(long)) {\n\t\
    \t\tres.push_back(std::any_cast<long>(val));\n\t\t}\n\t}\n\treturn res;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpkp9hginw: /tmp/tmpkp9hginw.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ y;\n\tfor(std::any x: values)\n\t{\n\t\ttry\n\t\t{\n\t\t\ty.push_back(std::any_cast<long>(x));\n\
    \t\t}\n\t\tcatch(std::bad_any_cast)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn\
    \ y;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpih789weq: /tmp/tmpih789weq.cpp:26: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ans;\n    for(auto& v: values) {\n        try {\n            ans.push_back(std::any_cast<long>(v));\n\
    \        } catch(std::bad_any_cast& e) {\n            continue;\n        }\n \
    \   }\n    return ans;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpqa0ux7fz: /tmp/tmpqa0ux7fz.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ filtered;\n    for (std::any val : values) {\n        try {\n            long\
    \ x = std::any_cast<long>(val);\n            filtered.push_back(x);\n        }\
    \ catch (std::bad_any_cast& e) {\n            continue;\n        }\n    }\n  \
    \  return filtered;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp8ap9hsi0: /tmp/tmp8ap9hsi0.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ v;\n\tfor(std::any a : values) {\n\t\tif(a.type() == typeid(long)) {\n\t\t\t\
    v.push_back(std::any_cast<long>(a));\n\t\t}\n\t}\n\treturn v;\n}\nint main() {\n\
    \    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprkh_mj7r: /tmp/tmprkh_mj7r.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (int i = 0; i < values.size(); i++) {\n        try {\n       \
    \     long temp = std::any_cast<long>(values[i]);\n            ret.push_back(temp);\n\
    \        } catch (const std::bad_any_cast& e) {\n            continue;\n     \
    \   }\n    }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpiok6kkzl: /tmp/tmpiok6kkzl.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ans;\n  for(auto i:values){\n    if(std::any_cast<long>(&i)!=NULL){\n      ans.push_back(std::any_cast<long>(i));\n\
    \    }\n  }\n  return ans;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmprfp3pcsj: /tmp/tmprfp3pcsj.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto& e : values) {\n        if (std::any_cast<long>(&e))\
    \ {\n            result.push_back(std::any_cast<long>(e));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpuyhw7bj7: /tmp/tmpuyhw7bj7.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ints;\n  for (std::any a : values) {\n    try {\n      ints.push_back(std::any_cast<long>(a));\n\
    \    } catch (std::bad_any_cast&) {\n      continue;\n    }\n  }\n  return ints;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmptfk5o7x4: /tmp/tmptfk5o7x4.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpq32rpddi: /tmp/tmpq32rpddi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto a : values) {\n        try {\n            res.push_back(std::any_cast<long>(a));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp2c0dmg5r: /tmp/tmp2c0dmg5r.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ integers;\n    for (auto v : values) {\n        try {\n            integers.push_back(std::any_cast<long>(v));\n\
    \        } catch (const std::bad_any_cast& e) {\n            //std::cout << e.what()\
    \ << '\\n';\n        }\n    }\n    return integers;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp_2yr1xo5: /tmp/tmp_2yr1xo5.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108238
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ans;\n    //std::cout<<ans.size()<<std::endl;\n    for(std::any a:values){\n\
    \        //std::cout<<typeid(a).name()<<std::endl;\n        if(a.type()==typeid(int)){\n\
    \            ans.push_back(std::any_cast<int>(a));\n        }\n        else if(a.type()==typeid(long)){\n\
    \            ans.push_back(std::any_cast<long>(a));\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108238
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ res;\n  for (auto const &value : values) {\n    try {\n      res.push_back(std::any_cast<long>(value));\n\
    \    } catch (const std::bad_any_cast &e) {\n      continue;\n    }\n  }\n  return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpptu8tql6: /tmp/tmpptu8tql6.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ res;\n  for (auto i : values) {\n    if (std::any_cast<long>(&i)) {\n      res.push_back(std::any_cast<long>(i));\n\
    \    }\n  }\n  return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpnzzar3vi: /tmp/tmpnzzar3vi.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ ans;\n\tfor(std::any x: values) {\n\t\ttry {\n\t\t\tstd::any_cast<long>(x);\n\
    \t\t\tans.push_back(std::any_cast<long>(x));\n\t\t} catch(std::bad_any_cast) {\n\
    \t\t\tcontinue;\n\t\t}\n\t}\n\treturn ans;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpsrxfvp99: /tmp/tmpsrxfvp99.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto val : values) {\n        try {\n            ret.push_back(std::any_cast<long>(val));\n\
    \        } catch (std::bad_any_cast&) {\n            continue;\n        }\n  \
    \  }\n    return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpwdedg7ja: /tmp/tmpwdedg7ja.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto & val : values) {\n        try {\n            auto tmp =\
    \ std::any_cast<long>(val);\n            res.push_back(tmp);\n        } catch\
    \ (const std::bad_any_cast &) {\n            continue;\n        }\n    }\n   \
    \ return res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpwu5zfyl9: /tmp/tmpwu5zfyl9.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n     \
    \   try {\n            res.push_back(std::any_cast<long>(*it));\n        } catch\
    \ (std::bad_any_cast&) {\n            continue;\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpfzbf19hn: /tmp/tmpfzbf19hn.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // your\
    \ code here\n    std::vector<long> v;\n    for(auto & i : values){\n        if(i.type()\
    \ == typeid(long)){\n            v.push_back(std::any_cast<long>(i));\n      \
    \  }\n    }\n    return v;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpl9gdtevz: /tmp/tmpl9gdtevz.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ results;\n  for (auto any_value : values) {\n    if (any_value.type() == typeid(long))\
    \ {\n      results.push_back(std::any_cast<long>(any_value));\n    }\n  }\n  return\
    \ results;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpvgzgm6sr: /tmp/tmpvgzgm6sr.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (int i = 0; i < values.size(); i++) {\n        try {\n    \
    \        result.push_back(std::any_cast<long>(values[i]));\n        } catch (std::bad_any_cast\
    \ &err) {\n            continue;\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpuevl0eib: /tmp/tmpuevl0eib.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto i : values) {\n        try {\n            auto x = std::any_cast<long>(i);\n\
    \            result.push_back(x);\n        } catch (const std::bad_any_cast&)\
    \ {\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpx7f3k21z: /tmp/tmpx7f3k21z.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tfor (int i = 0; i < values.size(); i++) {\n\t\tif (values[i].type()\
    \ == typeid(long)) {\n\t\t\tlong v = std::any_cast<long>(values[i]);\n\t\t\tresult.push_back(v);\n\
    \t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3vtqoorl: /tmp/tmp3vtqoorl.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108239
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  for (auto &value : values) {\n    if (std::any_cast<int>(&value))\
    \ {\n      result.push_back(std::any_cast<int>(value));\n    }\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108239
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    std::transform(values.begin(), values.end(), values.begin(), [&res](std::any\
    \ v) -> std::any {\n        try {\n            return std::any_cast<long>(v);\n\
    \        } catch (std::bad_any_cast &e) {\n            try {\n               \
    \ return std::any_cast<int>(v);\n            } catch (std::bad_any_cast &e) {\n\
    \                return v;\n            }\n        }\n    });\n    for (auto val\
    \ : values) {\n        try {\n            res.push_back(std::any_cast<long>(val));\n\
    \        } catch (std::bad_any_cast &e) {\n            try {\n               \
    \ res.push_back(std::any_cast<int>(val));\n            } catch (std::bad_any_cast\
    \ &e) {\n                continue;\n            }\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108240
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ret;\n  for (auto value : values) {\n    try {\n      ret.push_back(std::any_cast<long>(value));\n\
    \    } catch (std::bad_any_cast) {\n      continue;\n    }\n  }\n  return ret;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpu82jr40c: /tmp/tmpu82jr40c.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto const& val : values) {\n        try {\n            result.push_back(std::any_cast<long>(val));\n\
    \        } catch (std::bad_any_cast) {\n            continue;\n        }\n   \
    \ }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp4e1a3ce8: /tmp/tmp4e1a3ce8.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto i: values) {\n        try {\n            res.push_back(std::any_cast<long>(i));\n\
    \        } catch (std::bad_any_cast &e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpxbm7st1p: /tmp/tmpxbm7st1p.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ rst;\n\tfor (auto& num : values) {\n\t\ttry {\n\t\t\trst.push_back(std::any_cast<long>(num));\n\
    \t\t}\n\t\tcatch (const std::bad_any_cast& e) {\n\t\t\tcontinue;\n\t\t}\n\t}\n\
    \treturn rst;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmp3h71ixyn: /tmp/tmp3h71ixyn.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (std::any value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpb67sd_8j: /tmp/tmpb67sd_8j.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ lst;\n    for(auto it: values){\n        if(it.type() == typeid(int)){\n   \
    \         lst.push_back(std::any_cast<int>(it));\n        }\n        else if(it.type()\
    \ == typeid(long)){\n            lst.push_back(std::any_cast<long>(it));\n   \
    \     }\n    }\n    return lst;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // ...\n\
    \    std::vector<long> result;\n    for(auto i = values.begin(); i != values.end();\
    \ i++){\n        try{\n            std::cout << std::any_cast<long>(*i) << std::endl;\n\
    \            result.push_back(std::any_cast<long>(*i));\n        }catch(std::bad_any_cast\
    \ &e){\n            continue;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpfjz2lkyf: /tmp/tmpfjz2lkyf.cpp:24: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (const auto& x : values) {\n        try {\n            res.push_back(std::any_cast<long>(x));\n\
    \        } catch (std::bad_any_cast) {\n            // do nothing\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp0qnp764k: /tmp/tmp0qnp764k.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ res;\n\tint n = values.size();\n\tfor(int i = 0; i < n; i++) {\n\t\tif(values[i].type()\
    \ == typeid(long)) {\n\t\t\tres.push_back(std::any_cast<long>(values[i]));\n\t\
    \t}\n\t}\n\treturn res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphdogfhct: /tmp/tmphdogfhct.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (std::any value : values) {\n        bool isInt = false;\n\
    \        try {\n            std::any_cast<long>(value);\n            isInt = true;\n\
    \        } catch (std::bad_any_cast) {\n            isInt = false;\n        }\n\
    \        if (isInt) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp70bpysxt: /tmp/tmp70bpysxt.cpp:27: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto elem : values) {\n        if (elem.type() == typeid(long))\
    \ {\n            res.push_back(std::any_cast<long>(elem));\n        }\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmplikx18lw: /tmp/tmplikx18lw.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ret;\n  for (auto const &val : values) {\n    if (std::any_cast<long>(&val))\
    \ {\n      ret.push_back(std::any_cast<long>(val));\n    }\n  }\n  return ret;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpz1i919aw: /tmp/tmpz1i919aw.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto const &val : values) {\n        if (val.type() == typeid(long))\
    \ {\n            res.push_back(std::any_cast<long>(val));\n        }\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp1gc48wxz: /tmp/tmp1gc48wxz.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (int i = 0; i < values.size(); i++) {\n        if (std::any_cast<long>(&values[i]))\
    \ {\n            result.push_back(std::any_cast<long>(values[i]));\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3q_mqn8j: /tmp/tmp3q_mqn8j.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  for (auto value : values) {\n    if (std::any_cast<long>(&value))\
    \ {\n      result.push_back(std::any_cast<long>(value));\n    }\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmplcjfzc1s: /tmp/tmplcjfzc1s.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto v : values) {\n        try {\n            if (std::any_cast<int>(v))\
    \ {\n                res.push_back(std::any_cast<int>(v));\n            }\n  \
    \      } catch (const std::bad_any_cast& e) {\n        }\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ res;\n  for (std::any item : values) {\n    try {\n      long x = std::any_cast<long>(item);\n\
    \      res.push_back(x);\n    } catch (std::bad_any_cast e) {\n      continue;\n\
    \    }\n  }\n  return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpvtzxc34e: /tmp/tmpvtzxc34e.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // TODO:\
    \ implement this function\n    std::vector<long> integer;\n    for(int i=0;i<values.size();i++){\n\
    \        if(values[i].type()==typeid(int)){\n            integer.push_back(std::any_cast<int>(values[i]));\n\
    \        }\n    }\n    return integer;\n}\nint main() {\n    auto candidate =\
    \ filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (std::any& any_value : values) {\n        try {\n         \
    \   long value = std::any_cast<long>(any_value);\n            result.push_back(value);\n\
    \        } catch (std::bad_any_cast e) {\n            continue;\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpzqzqzss8: /tmp/tmpzqzqzss8.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto x : values) {\n        try {\n            if (x.type() ==\
    \ typeid(long)) {\n                ret.push_back(std::any_cast<long>(x));\n  \
    \          }\n        } catch (std::bad_any_cast& e) {\n            // not an\
    \ integer, ignore it\n        }\n    }\n    return ret;\n}\nint main() {\n   \
    \ auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmptdxo0tfx: /tmp/tmptdxo0tfx.cpp:24: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ret;\n  for (auto any : values) {\n    if (any.type() == typeid(long)) {\n \
    \     long value = std::any_cast<long>(any);\n      ret.push_back(value);\n  \
    \  }\n  }\n  return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpjfug501x: /tmp/tmpjfug501x.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ integers;\n\tfor (std::any value : values) {\n\t\tif (value.type() == typeid(int))\
    \ {\n\t\t\tintegers.push_back(std::any_cast<int>(value));\n\t\t}\n\t\telse if\
    \ (value.type() == typeid(long)) {\n\t\t\tintegers.push_back(std::any_cast<long>(value));\n\
    \t\t}\n\t}\n\treturn integers;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ values_of_type_int;\n\tfor (auto &value : values) {\n\t\tif (value.type() ==\
    \ typeid(long)) {\n\t\t\tvalues_of_type_int.push_back(std::any_cast<long>(value));\n\
    \t\t}\n\t}\n\treturn values_of_type_int;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp216axz1x: /tmp/tmp216axz1x.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto el : values) {\n        if (el.type() == typeid(long)) {\n\
    \            ret.push_back(std::any_cast<long>(el));\n        }\n    }\n    return\
    \ ret;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpqnnf_tkx: /tmp/tmpqnnf_tkx.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (std::any val : values) {\n        try {\n            res.push_back(std::any_cast<long>(val));\n\
    \        } catch (std::bad_any_cast& e) {\n            continue;\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpfl6oiqib: /tmp/tmpfl6oiqib.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        if (v.type() == typeid(long))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmphh7kbana: /tmp/tmphh7kbana.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108109
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ filtered_values;\n    for (auto val : values) {\n        try {\n           \
    \ filtered_values.push_back(std::any_cast<long>(val));\n        } catch (const\
    \ std::bad_any_cast& e) {\n            continue;\n        }\n    }\n    return\
    \ filtered_values;\n}\nint main() {\n    auto candidate = filter_integers;\n \
    \   assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n \
    \   assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpa5v1zt5j: /tmp/tmpa5v1zt5j.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tfor (auto& value : values) {\n\t\ttry {\n\t\t\tlong val = std::any_cast<long>(value);\n\
    \t\t\tresult.push_back(val);\n\t\t}\n\t\tcatch (const std::bad_any_cast& e) {\n\
    \t\t\tcontinue;\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpowjh559n: /tmp/tmpowjh559n.cpp:24: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tfor (auto i : values) {\n\t\tif (i.type() == typeid(long)) {\n\t\t\
    \tresult.push_back(std::any_cast<long>(i));\n\t\t}\n\t}\n\treturn result;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpyw4g4qx8: /tmp/tmpyw4g4qx8.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ values_list;\n    for (auto i = values.begin(); i != values.end(); i++) {\n\
    \        if ((*i).type() == typeid(long)) {\n            values_list.push_back(std::any_cast<long>(*i));\n\
    \        }\n    }\n    return values_list;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp8twh8urj: /tmp/tmp8twh8urj.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ list_to_return = {};\n    for (std::any value : values) {\n        try {\n \
    \           list_to_return.push_back(std::any_cast<long>(value));\n        } catch\
    \ (const std::bad_any_cast& e) {\n            continue;\n        }\n    }\n  \
    \  return list_to_return;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp8l314pi9: /tmp/tmp8l314pi9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (const auto &value : values) {\n        if (value.type() ==\
    \ typeid(long)) {\n            result.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp4omgzwpe: /tmp/tmp4omgzwpe.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ret;\n  for (auto &i : values) {\n    if (i.type() == typeid(long)) {\n    \
    \  ret.push_back(std::any_cast<long>(i));\n    }\n  }\n  return ret;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpjvm5qlsy: /tmp/tmpjvm5qlsy.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ r;\n  for (auto it = values.begin(); it != values.end(); ++it) {\n    if ((*it).type()\
    \ == typeid(long)) {\n      r.push_back(std::any_cast<long>(*it));\n    }\n  }\n\
    \  return r;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpgk8m7yg5: /tmp/tmpgk8m7yg5.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto &val : values) {\n        if (val.type() == typeid(long))\
    \ {\n            res.push_back(std::any_cast<long>(val));\n        }\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp3qzcwaxx: /tmp/tmp3qzcwaxx.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ integers;\n    for (std::any value : values) {\n        if (value.type() ==\
    \ typeid(long)) {\n            integers.push_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return integers;\n}\nint main() {\n    auto candidate =\
    \ filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp9vpmwq04: /tmp/tmp9vpmwq04.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tfor (int i = 0; i < values.size(); i++) {\n\t\tif (values[i].type()\
    \ == typeid(long)) {\n\t\t\tresult.push_back(std::any_cast<long>(values[i]));\n\
    \t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpw8wlnjfu: /tmp/tmpw8wlnjfu.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ rt;\n    for(auto e: values) {\n        if(e.type() == typeid(long)) {\n   \
    \         rt.push_back(std::any_cast<long>(e));\n        }\n    }\n    return\
    \ rt;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpw2wvwbm8: /tmp/tmpw2wvwbm8.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\t// Your code\
    \ goes here\n\tlong x;\n\tstd::vector<long> abc;\n\tfor (int i = 0; i < values.size();\
    \ i++) {\n\t\ttry {\n\t\t\tx = std::any_cast<long>(values[i]);\n\t\t\tabc.push_back(x);\n\
    \t\t}\n\t\tcatch (const std::bad_any_cast& e) {\n\t\t\tstd::cout << e.what() <<\
    \ '\\n';\n\t\t}\n\t}\n\treturn abc;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp1u576ckh: /tmp/tmp1u576ckh.cpp:26: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ result;\n  for (auto&& val : values) {\n    try {\n      result.push_back(std::any_cast<long>(val));\n\
    \    } catch (std::bad_any_cast&) {\n      // ignore type error\n    }\n  }\n\
    \  return result;\n}\nint main() {\n    auto candidate = filter_integers;\n  \
    \  assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n  \
    \  assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp7cotd3q9: /tmp/tmp7cotd3q9.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ new_vec;\n  for(auto i: values){\n    try{\n      new_vec.push_back(std::any_cast<long>(i));\n\
    \    }\n    catch(const std::bad_any_cast& e){\n      continue;\n    }\n  }\n\
    \  return new_vec;\n}\nint main() {\n    auto candidate = filter_integers;\n \
    \   assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n \
    \   assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpeyekeolh: /tmp/tmpeyekeolh.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108241
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (std::any value : values) {\n        try {\n            res.push_back(std::any_cast<long>(value));\n\
    \        } catch (const std::bad_any_cast&) {\n            continue;\n       \
    \ }\n    }\n    return res;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpa7gbj_6g: /tmp/tmpa7gbj_6g.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ ints;\n\tfor (auto it : values) {\n\t\ttry {\n\t\t\tints.push_back(std::any_cast<long>(it));\n\
    \t\t}\n\t\tcatch (std::bad_any_cast&) {\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn\
    \ ints;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmptspnswpu: /tmp/tmptspnswpu.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    int i;\n    for (i = 0; i < values.size(); i++) {\n        try\
    \ {\n            result.push_back(std::any_cast<long>(values[i]));\n        }\
    \ catch (std::bad_any_cast) {\n            continue;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpi2hhkcvh: /tmp/tmpi2hhkcvh.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ integers;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            integers.push_back(std::any_cast<long>(value));\n        }\n\
    \    }\n    return integers;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpv7c_untr: /tmp/tmpv7c_untr.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    // TODO:\
    \ handle vector of non-integers, std::string and std::map\n    std::vector<long>\
    \ result;\n    for (auto v : values) {\n        try {\n            result.push_back(std::any_cast<long>(v));\n\
    \        } catch (const std::bad_any_cast& e) {\n            // do nothing\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpf2sx31d2: /tmp/tmpf2sx31d2.cpp:23: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ filtered;\n\tstd::vector<long>::iterator it;\n\tfor (auto v : values) {\n\t\t\
    try {\n\t\t\tlong n = std::any_cast<long>(v);\n\t\t\tfiltered.push_back(n);\n\t\
    \t}\n\t\tcatch (const std::bad_any_cast& e) {\n\t\t\tstd::cout << e.what() <<\
    \ '\\n';\n\t\t}\n\t}\n\treturn filtered;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp0u7r8ej9: /tmp/tmp0u7r8ej9.cpp:25: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ res;\n    for (auto v : values) {\n        if (v.type() == typeid(long)) {\n\
    \            res.push_back(std::any_cast<long>(v));\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmpxpq69sew: /tmp/tmpxpq69sew.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108111
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ints;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n    \
    \    try {\n            ints.push_back(std::any_cast<long>(*it));\n        } catch\
    \ (std::bad_any_cast &e) {\n            try {\n                ints.push_back(std::any_cast<int>(*it));\n\
    \            } catch (std::bad_any_cast &e) {\n                try {\n       \
    \             ints.push_back(std::any_cast<short>(*it));\n                } catch\
    \ (std::bad_any_cast &e) {\n                    try {\n                      \
    \  ints.push_back(std::any_cast<char>(*it));\n                    } catch (std::bad_any_cast\
    \ &e) {\n                        try {\n                            ints.push_back(std::any_cast<long\
    \ long>(*it));\n                        } catch (std::bad_any_cast &e) {\n   \
    \                         try {\n                                ints.push_back(std::any_cast<unsigned\
    \ int>(*it));\n                            } catch (std::bad_any_cast &e) {\n\
    \                                try {\n                                    ints.push_back(std::any_cast<unsigned\
    \ short>(*it));\n                                } catch (std::bad_any_cast &e)\
    \ {\n                                    try {\n                             \
    \           ints.push_back(std::any_cast<unsigned char>(*it));\n             \
    \                       } catch (std::bad_any_cast &e) {\n                   \
    \                     try {\n                                            ints.push_back(std::any_cast<unsigned\
    \ long>(*it));\n                                        } catch (std::bad_any_cast\
    \ &e) {\n                                            try {\n                 \
    \                               ints.push_back(std::any_cast<unsigned long long>(*it));\n\
    \                                            } catch (std::bad_any_cast &e) {\n\
    \                                                try {\n                     \
    \                               ints.push_back(std::any_cast<float>(*it));\n \
    \                                               } catch (std::bad_any_cast &e)\
    \ {\n                                                    try {\n\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnilsh0me.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpnilsh0me.cpp:47:5: error: expected \u2018catch\u2019 before \u2018\
    main\u2019\n   47 | int main() {\n      |     ^~~~\n/tmp/tmpnilsh0me.cpp:47:5:\
    \ error: expected \u2018(\u2019 before \u2018main\u2019\n   47 | int main() {\n\
    \      |     ^~~~\n      |     (\n/tmp/tmpnilsh0me.cpp:47:5: error: expected type-specifier\
    \ before \u2018main\u2019\n   47 | int main() {\n      |     ^~~~\n/tmp/tmpnilsh0me.cpp:47:11:\
    \ error: expected \u2018)\u2019 before \u2018{\u2019 token\n   47 | int main()\
    \ {\n      |     ~~~~  ^~\n      |           )\n/tmp/tmpnilsh0me.cpp:52:1: error:\
    \ expected \u2018}\u2019 at end of input\n   52 | }\n      | ^\n/tmp/tmpnilsh0me.cpp:43:80:\
    \ note: to match this \u2018{\u2019\n   43 |                                 \
    \                } catch (std::bad_any_cast &e) {\n      |                   \
    \                                                             ^\n/tmp/tmpnilsh0me.cpp:52:1:\
    \ error: expected \u2018}\u2019 at end of input\n   52 | }\n      | ^\n/tmp/tmpnilsh0me.cpp:40:76:\
    \ note: to match this \u2018{\u2019\n   40 |                                 \
    \            } catch (std::bad_any_cast &e) {\n      |                       \
    \                                                     ^\n/tmp/tmpnilsh0me.cpp:52:1:\
    \ error: expected \u2018}\u2019 at end of input\n   52 | }\n      | ^\n/tmp/tmpnilsh0me.cpp:37:72:\
    \ note: to match this \u2018{\u2019\n   37 |                                 \
    \        } catch (std::bad_any_cast &e) {\n      |                           \
    \                                             ^\n/tmp/tmpnilsh0me.cpp:52:1: error:\
    \ expected \u2018}\u2019 at end of input\n   52 | }\n      | ^\n/tmp/tmpnilsh0me.cpp:34:68:\
    \ note: to match this \u2018{\u2019\n   34 |                                 \
    \    } catch (std::bad_any_cast &e) {\n      |                               \
    \                                     ^\n/tmp/tmpnilsh0me.cpp:52:1: error: expected\
    \ \u2018}\u2019 at end of input\n   52 | }\n      | ^\n/tmp/tmpnilsh0me.cpp:31:64:\
    \ note: to match this \u2018{\u2019\n   31 |                                 }\
    \ catch (std::bad_any_cast &e) {\n      |      "
  stdout: ''
  timestamp: 1660108242
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    std::vector<long>::iterator it;\n    for(int i=0;i<values.size();i++){\n\
    \        if(values[i].type()==typeid(long)){\n            result.push_back(std::any_cast<long>(values[i]));\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmp1616p_5f: /tmp/tmp1616p_5f.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108243
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ integers;\n\tfor (auto & element : values) {\n\t\ttry {\n\t\t\tint i = std::any_cast<int>(element);\n\
    \t\t\tintegers.push_back(i);\n\t\t}\n\t\tcatch (const std::bad_any_cast & e) {\n\
    \t\t\t// ignore\n\t\t}\n\t}\n\treturn integers;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660108243
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ re;\n\tfor (int i = 0; i < values.size(); i++) {\n\t\tif (values[i].type() ==\
    \ typeid(long)) {\n\t\t\tre.push_back(std::any_cast<long>(values[i]));\n\t\t}\n\
    \t}\n\treturn re;\n}\nint main() {\n    auto candidate = filter_integers;\n  \
    \  assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n  \
    \  assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpdqfqiw4f: /tmp/tmpdqfqiw4f.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108243
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n\tstd::vector<long>\
    \ result;\n\tfor (auto v : values) {\n\t\tif (v.type() == typeid(long)) {\n\t\t\
    \tresult.push_back(std::any_cast<long>(v));\n\t\t}\n\t}\n\treturn result;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: 'tmprq_oiv98: /tmp/tmprq_oiv98.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108243
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ ret;\n    for (auto i : values) {\n        try {\n            ret.push_back(std::any_cast<long>(i));\n\
    \        } catch (const std::bad_any_cast& e) {\n            std::cout << e.what()\
    \ << '\\n';\n        }\n    }\n    return ret;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpaamgoejn: /tmp/tmpaamgoejn.cpp:22: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108243
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n  std::vector<long>\
    \ ret;\n  for (int i = 0; i < values.size(); i++) {\n    std::any a = values[i];\n\
    \    if (std::any_cast<long>(&a)) {\n      ret.push_back(std::any_cast<long>(a));\n\
    \    }\n  }\n  return ret;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpdj0_h6nl: /tmp/tmpdj0_h6nl.cpp:21: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108243
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given vector of\
    \ any cppthon values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (std::any& v : values) {\n        if (std::any_cast<long>(&v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: Exception
  stderr: 'tmpbsz9x2my: /tmp/tmpbsz9x2my.cpp:20: int main(): Assertion `candidate((std::vector<std::any>({4,
    std::map<long,long>(), std::vector<long>(), 23.2, 9, "adasd"}))) == (std::vector<long>({(long)4,
    (long)9}))'' failed.

    '
  stdout: ''
  timestamp: 1660108243

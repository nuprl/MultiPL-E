name: HumanEval_37_sort_even
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes a vector\
  \ l and returns a vector l' such that\n// l' is identical to l in the odd indicies,\
  \ while its values at the even indicies are equal\n// to the values of the even\
  \ indicies of l, but sorted.\n// >>> sort_even((std::vector<long>({(long)1, (long)2,\
  \ (long)3})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n// >>> sort_even((std::vector<long>({(long)5,\
  \ (long)6, (long)3, (long)4})))\n// (std::vector<long>({(long)3, (long)6, (long)5,\
  \ (long)4}))\nstd::vector<long> sort_even(std::vector<long> l) {\n"
tests: "}\nint main() {\n    auto candidate = sort_even;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3}))) == (std::vector<long>({(long)1, (long)2, (long)3})));\n \
  \   assert(candidate((std::vector<long>({(long)5, (long)3, (long)-5, (long)2, (long)-3,\
  \ (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10}))) == (std::vector<long>({(long)-10,\
  \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)5, (long)0, (long)9, (long)1,\
  \ (long)123})));\n    assert(candidate((std::vector<long>({(long)5, (long)8, (long)-12,\
  \ (long)4, (long)23, (long)2, (long)3, (long)11, (long)12, (long)-10}))) == (std::vector<long>({(long)-12,\
  \ (long)8, (long)3, (long)4, (long)5, (long)2, (long)12, (long)11, (long)23, (long)-10})));\n\
  }\n"
completions: []
stop_tokens:
- "\n}"

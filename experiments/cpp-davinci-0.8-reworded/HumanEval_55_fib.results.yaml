language: cpp
name: HumanEval_55_fib
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\nif(n<=1)\nreturn 1;\nelse return fib(n-1)+fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmpiprntneh: /tmp/tmpiprntneh.cpp:17: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tstd::vector<long> fib(n + 1);\n\tfib[0] = 0;\n\t\
    fib[1] = 1;\n\tfor (long i = 2; i <= n; i++) {\n\t\tfib[i] = fib[i - 1] + fib[i\
    \ - 2];\n\t}\n\treturn fib[n];\n}\nint main() {\n    auto candidate = fib;\n \
    \   assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n   \
    \ assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12))\
    \ == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long a = 0;\n  long b = 1;\n  while (n > 0) {\n\
    \    a += b;\n    b += a;\n    n -= 1;\n  }\n  return a;\n}\nint main() {\n  \
    \  auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmp18bolnzs: /tmp/tmp18bolnzs.cpp:22: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084347
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n <= 1) {\n    return 1;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: Exception
  stderr: 'tmpn3qfmv4n: /tmp/tmpn3qfmv4n.cpp:18: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tstd::vector<long> fib_memo(n+1);\n\tif (n == 0\
    \ || n == 1) {\n\t\treturn n;\n\t}\n\tif (fib_memo[n] != 0) {\n\t\treturn fib_memo[n];\n\
    \t}\n\tfib_memo[n] = fib(n-1) + fib(n-2);\n\treturn fib_memo[n];\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long a, b, c;\n  a = 1;\n  b = 1;\n  c = 0;\n \
    \ if (n == 1 || n == 2) {\n    return 1;\n  }\n  while (n > 2) {\n    c = a +\
    \ b;\n    a = b;\n    b = c;\n    n = n - 1;\n  }\n  return c;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n < 2) {\n        return n;\n    } else {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long i;\n    long a = 0;\n    long b = 1;\n \
    \   if (n == 0) {\n        return a;\n    }\n    for (i = 2; i <= n; i++) {\n\
    \        a = a + b;\n        b = a - b;\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmpx6pm_a2o: /tmp/tmpx6pm_a2o.cpp:25: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    if (n == 2) {\n        return 1;\n\
    \    }\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n < 2) {\n    return n;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    long a = 0;\n    long b\
    \ = 1;\n    while (n > 0) {\n        long c = a + b;\n        a = b;\n       \
    \ b = c;\n        n -= 1;\n    }\n    return a;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n==0) {\n        return 0;\n    }\n    if\
    \ (n==1) {\n        return 1;\n    }\n    return fib(n-1) + fib(n-2);\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n   \
    \ long a = 0;\n    long b = 1;\n    for (long i = 2; i <= n; i++) {\n        long\
    \ next = a + b;\n        a = b;\n        b = next;\n    }\n    return b;\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long f1 = 0;\n    long f2 = 1;\n    long f3 =\
    \ 1;\n    for (long i = 0; i < n - 1; i++) {\n        f3 = f1 + f2;\n        f1\
    \ = f2;\n        f2 = f3;\n    }\n    return f3;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n <= 1)\n    return n;\n  return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tif (n < 2) {\n\t\treturn n;\n\t}\n\telse {\n\t\t\
    return fib(n - 1) + fib(n - 2);\n\t}\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if(n<=1)\n  return n;\n  return fib(n-1)+fib(n-2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long a = 0;\n  long b = 1;\n  while (n-- > 0) {\n\
    \    long t = a + b;\n    a = b;\n    b = t;\n  }\n  return a;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tif (n <= 2)\n\t\treturn 1;\n\treturn fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    if (n == 0) {\n        return\
    \ 0;\n    }\n    else if (n == 1) {\n        return 1;\n    }\n    else {\n  \
    \      return fib(n - 1) + fib(n - 2);\n    }\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n==0) return 0;\n    if (n==1) return 1;\n\
    \    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n <= 2)\n        return 1;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tlong arr[n+1];\n\tarr[0] = 0;\n\tarr[1] = 1;\n\t\
    for(int i=2;i<=n;i++)\n\t\tarr[i] = arr[i-1] + arr[i-2];\n\treturn arr[n];\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  return (n <= 1) ? n : fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    std::vector<long> fibs =\
    \ {0, 1};\n    while (fibs.size() <= n) {\n        long f = fibs.size();\n   \
    \     fibs.push_back(fibs[f - 1] + fibs[f - 2]);\n    }\n    return fibs[n];\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n < 3) {\n        return 1;\n    }\n    return\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long a = 0;\n  long b = 1;\n  long c = 0;\n  long\
    \ i = 0;\n  while (i < n) {\n    c = a + b;\n    a = b;\n    b = c;\n    i++;\n\
    \  }\n  return a;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n     assert(n>=0);\n     if (n==0||n==1) return n;\n\
    \     long last = 0;\n     long nextlast = 1;\n     long result = 0;\n     for\
    \ (long i=2; i<=n; i++) {\n         result = last + nextlast;\n         nextlast\
    \ = last;\n         last = result;\n     }\n     return result;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmp88rpjfd3: /tmp/tmp88rpjfd3.cpp:25: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tassert(n>=0);\n\tif (n == 0) {\n\t\treturn 0;\n\
    \t} else if (n == 1) {\n\t\treturn 1;\n\t} else {\n\t\tlong n_1 = 0;\n\t\tlong\
    \ n_2 = 1;\n\t\tlong n_3 = 0;\n\t\tfor (long i = 2; i <= n; i++) {\n\t\t\tn_3\
    \ = n_1 + n_2;\n\t\t\tn_1 = n_2;\n\t\t\tn_2 = n_3;\n\t\t}\n\t\treturn n_3;\n\t\
    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n < 0) {\n    return -1;\n  }\n  else if (n\
    \ == 0) {\n    return 0;\n  }\n  else if (n == 1) {\n    return 1;\n  }\n  else\
    \ {\n    return fib(n - 1) + fib(n - 2);\n  }\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0 || n == 1) {\n    return 1;\n  } else\
    \ {\n    return fib(n - 1) + fib(n - 2);\n  }\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmpy_q5rkdl: /tmp/tmpy_q5rkdl.cpp:19: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long first = 0;\n    long second = 1;\n    long\
    \ i;\n    for (i = 0; i < n; i++) {\n        long temp = first;\n        first\
    \ = second;\n        second = temp + second;\n    }\n    return first;\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long f1 = 0;\n    long f2 = 1;\n    long temp;\n\
    \    while (n > 0) {\n        temp = f1;\n        f1 = f2;\n        f2 = temp\
    \ + f2;\n        n--;\n    }\n    return f1;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n < 0) {\n    assert(false);\n  }\n  if (n\
    \ == 0) {\n    return 0;\n  }\n  if (n == 1) {\n    return 1;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    if (n == 0) {\n        return\
    \ 0;\n    }\n    else if (n == 1) {\n        return 1;\n    }\n    else {\n  \
    \      return fib(n - 1) + fib(n - 2);\n    }\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    if (n < 2) {\n        return\
    \ n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tif (n == 0) {\n\t\treturn 0;\n\t}\n\tif (n == 1)\
    \ {\n\t\treturn 1;\n\t}\n\treturn fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\t//cppcheck-suppress redundantAssignment\n\tlong\
    \ i = 0;\n\tlong j = 1;\n\t//cppcheck-suppress redundantAssignment\n\tlong k =\
    \ 1;\n\tlong count = 2;\n\t//cppcheck-suppress redundantAssignment\n\tlong t;\n\
    \tif (n == 0) {\n\t\treturn 0;\n\t}\n\tif (n == 1) {\n\t\treturn 1;\n\t}\n\twhile\
    \ (count < n) {\n\t\tt = i + j;\n\t\ti = j;\n\t\tj = t;\n\t\tcount = count + 1;\n\
    \t}\n\treturn j;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: Exception
  stderr: 'tmp4pof9xr5: /tmp/tmp4pof9xr5.cpp:35: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    assert(n <= 45);\n    std::vector<long>\
    \ f(n+1);\n    f[0] = 0;\n    f[1] = 1;\n    for (long i = 2; i <= n; i++) {\n\
    \        f[i] = f[i-1] + f[i-2];\n    }\n    return f[n];\n}\nint main() {\n \
    \   auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tassert(n >= 0);\n\tlong a = 0;\n\tlong b = 1;\n\
    \tlong counter = 0;\n\twhile (counter < n) {\n\t\tlong a_ = a;\n\t\tlong b_ =\
    \ b;\n\t\ta = b_;\n\t\tb = a_ + b_;\n\t\tcounter = counter + 1;\n\t}\n\treturn\
    \ a;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long a = 0;\n    long b = 1;\n    long c = 0;\n\
    \    while (n-- > 0) {\n        c = a + b;\n        a = b;\n        b = c;\n \
    \   }\n    return a;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n   if (n == 0) {\n      return 0;\n   }\n   if (n\
    \ == 1) {\n      return 1;\n   }\n   return fib(n - 1) + fib(n - 2);\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    // Task 1: Define a function that returns the\
    \ n-th Fibonacci number.\n    return 0;\n}\nint main() {\n    auto candidate =\
    \ fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmp0p7260mf: /tmp/tmp0p7260mf.cpp:16: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  assert(n >= 0);\n  std::vector<long> f(n + 1);\n\
    \  f[0] = 0;\n  f[1] = 1;\n  for (long i = 2; i <= n; i++) {\n    f[i] = f[i -\
    \ 1] + f[i - 2];\n  }\n  return f[n];\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) {\n        return\
    \ n;\n    }\n    else {\n        return fib(n - 1) + fib(n - 2);\n    }\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long t0 = 0;\n  long t1 = 1;\n  long s;\n  int\
    \ i;\n  if (n <= 1)\n    return n;\n  for (i = 2; i <= n; i++) {\n    s = t0 +\
    \ t1;\n    t0 = t1;\n    t1 = s;\n  }\n  return s;\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    else {\n        return fib(n -\
    \ 1) + fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  // Convert to 0-based indexing.\n  n = n - 1;\n\
    \  long prior = 0;\n  long current = 1;\n  // Loop invariant: prior = fib(n -\
    \ 1) and current = fib(n).\n  while (n > 0) {\n    // At the start of each iteration\
    \ of this loop, we have prior = fib(i - 1)\n    // and current = fib(i) where\
    \ i is the loop counter.\n    // We want to maintain this invariant when the loop\
    \ counter decreases.\n    // Substituting i - 1 for i gives prior = fib(i - 2)\
    \ and current = fib(i - 1).\n    // Adding these equations gives 2*current = fib(i)\
    \ + fib(i - 1).\n    // Rearranging gives current = fib(i) + fib(i - 1) and prior\
    \ = fib(i - 1).\n    // So we maintain the loop invariant by adding prior to current\
    \ and then\n    // setting prior to the old value of current.\n    current = current\
    \ + prior;\n    prior = current - prior;\n    n = n - 1;\n  }\n  return current;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0)\n        return 0;\n    if (n ==\
    \ 1)\n        return 1;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\nif (n == 0 || n == 1)\nreturn n;\nlong res = fib(n\
    \ - 1) + fib(n - 2);\nreturn res;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) {\n        return\
    \ n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0)\n    {\n        return 0;\n    }\n\
    \    else if (n == 1)\n    {\n        return 1;\n    }\n    else\n    {\n    \
    \    return fib(n - 1) + fib(n - 2);\n    }\n    \n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n==0 || n==1) {\n        return 1;\n    }\n\
    \    else {\n        return fib(n-1) + fib(n-2);\n    }\n}\nint main() {\n   \
    \ auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmpqvh4tcxn: /tmp/tmpqvh4tcxn.cpp:20: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long a=0,b=1,c=1;\n    if(n==0)\n        return\
    \ 0;\n    if(n==1)\n        return 1;\n    while(n>1)\n    {\n        c=a+b;\n\
    \        a=b;\n        b=c;\n        n--;\n    }\n    return c;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\nif (n < 2) {\nreturn n;\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8l5f2q8h.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmp8l5f2q8h.cpp:14:12: error: a function-definition is not allowed here before\
    \ \u2018{\u2019 token\n   14 | int main() {\n      |            ^\n/tmp/tmp8l5f2q8h.cpp:21:1:\
    \ error: expected \u2018}\u2019 at end of input\n   21 | }\n      | ^\n/tmp/tmp8l5f2q8h.cpp:10:18:\
    \ note: to match this \u2018{\u2019\n   10 | long fib(long n) {\n      |     \
    \             ^\n/tmp/tmp8l5f2q8h.cpp:21:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   21 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660084351
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    return 0;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmp45wby3b3: /tmp/tmp45wby3b3.cpp:15: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long a, b, c;\n  a = 0;\n  b = 1;\n  long i;\n\
    \  for (i = 0; i < n; i++) {\n    c = a + b;\n    a = b;\n    b = c;\n  }\n  return\
    \ a;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0)\n        return 0;\n    else if (n\
    \ == 1)\n        return 1;\n    else\n        return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if(n == 0) return 0;\n  else if(n == 1) return\
    \ 1;\n  else return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tif (n == 0)\n\t\treturn 1;\n\tif (n == 1)\n\t\t\
    return 1;\n\treturn fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmph0c_f68w: /tmp/tmph0c_f68w.cpp:19: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long first = 0;\n  long second = 1;\n  long tmp;\n\
    \  long i;\n  for (i = 0; i < n; i++) {\n    tmp = first;\n    first = second;\n\
    \    second = tmp + second;\n  }\n  return first;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n <= 1) {\n    return n;\n  } else {\n    return\
    \ fib(n - 1) + fib(n - 2);\n  }\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    return n <= 1 ? n : fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n < 2) {\n        return n;\n    }\n    else\
    \ {\n        return fib(n - 1) + fib(n - 2);\n    }\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long result;\n    if(n==0) {\n        result\
    \ = 0;\n    }\n    else if(n==1) {\n        result = 1;\n    }\n    else {\n \
    \       result = fib(n-1) + fib(n-2);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  else if (n\
    \ == 1) {\n    return 1;\n  }\n  else {\n    return fib(n - 1) + fib(n - 2);\n\
    \  }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n <= 1) {\n        return n;\n    }\n   \
    \ else {\n        return fib(n - 1) + fib(n - 2);\n    }\n}\nint main() {\n  \
    \  auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n < 2)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n <= 1)\n        return n;\n    else\n  \
    \      return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate =\
    \ fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n==0) {\n    return 0;\n  }\n  if (n==1) {\n\
    \    return 1;\n  }\n  return fib(n-1)+fib(n-2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  else if (n\
    \ == 1) {\n    return 1;\n  }\n  else {\n    return fib(n - 1) + fib(n - 2);\n\
    \  }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n// WRITE YOUR CODE HERE\n// USE RECURSION, find the\
    \ n-th fibonacci number of integer n, i.e. fib(n)\nif (n==0) return 0;\nif (n==1)\
    \ return 1;\nreturn fib(n-1)+fib(n-2);\n}\nint main() {\n    auto candidate =\
    \ fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    return n == 0 ? 0 : n == 1 ? 1 : fib(n - 1) +\
    \ fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    long f0 = 0;\n    long f1\
    \ = 1;\n    long f2 = 1;\n    for (int i = 0; i < n; i++) {\n        f2 = f0 +\
    \ f1;\n        f0 = f1;\n        f1 = f2;\n    }\n    return f0;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n==0) { return 0; }\n  else if (n==1) { return\
    \ 1; }\n  else { return fib(n-1) + fib(n-2); }\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tif (n <= 1)\n\t\treturn n;\n\treturn fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tlong a, b, c;\n\ta = 0;\n\tb = 1;\n\tfor (int i\
    \ = 0; i < n; i++) {\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn a;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long a = 0;\n  long b = 1;\n  for (int i = 0; i\
    \ < n; i++) {\n    long c = a + b;\n    a = b;\n    b = c;\n  }\n  return a;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tif (n == 0) {\n\t\treturn 0;\n\t}\n\tif (n == 1)\
    \ {\n\t\treturn 1;\n\t}\n\tlong pre = 0;\n\tlong cur = 1;\n\tlong ans = 1;\n\t\
    for (long i = 2; i <= n; i++) {\n\t\tans = pre + cur;\n\t\tpre = cur;\n\t\tcur\
    \ = ans;\n\t}\n\treturn ans;\n}\nint main() {\n    auto candidate = fib;\n   \
    \ assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8))\
    \ == (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12))\
    \ == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    \n    if (n == 0) {\n        return 0;\n    }\
    \ else if (n == 1) {\n        return 1;\n    } else {\n        return fib(n -\
    \ 1) + fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if(n == 0 || n == 1)\n    return n;\n  else\n \
    \   return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) return 0;\n  if (n == 1) return 1;\n\
    \  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084354
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  assert(n >= 0);\n  return (n<2)? n : fib(n-1) +\
    \ fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  return n <= 1 ? n : fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) return n;\n\
    \    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  else if (n\
    \ == 1) {\n    return 1;\n  }\n  else {\n    return fib(n - 1) + fib(n - 2);\n\
    \  }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0 || n == 1) {\n        return n;\n\
    \    }\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long f0, f1, i;\n  assert(n >= 0);\n  if (n < 2)\n\
    \    return n;\n  f0 = 0;\n  f1 = 1;\n  for (i = 2; i <= n; i++) {\n    long f2\
    \ = f0 + f1;\n    f0 = f1;\n    f1 = f2;\n  }\n  return f1;\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084354
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n>=0);\n    int i;\n    long fib0, fib1,\
    \ temp;\n    fib0 = 0;\n    fib1 = 1;\n    for (i=2; i<=n; i++) {\n        temp\
    \ = fib0 + fib1;\n        fib0 = fib1;\n        fib1 = temp;\n    }\n    return\
    \ fib1;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084354
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0)\n        return 0;\n    if (n ==\
    \ 1)\n        return 1;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long result = 0;\n    if (n == 0) {\n       \
    \ result = 0;\n    } else if (n == 1) {\n        result = 1;\n    } else {\n \
    \       result = fib(n - 1) + fib(n - 2);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084354
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    if (n == 0 || n == 1)\n\
    \        return n;\n    else {\n        long a = 0;\n        long b = 1;\n   \
    \     long ans = 0;\n        for (long i = 2; i <= n; i++) {\n            ans\
    \ = a + b;\n            a = b;\n            b = ans;\n        }\n        return\
    \ ans;\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084354
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long prev = 0;\n    long curr = 1;\n    for (long\
    \ i = 0; i < n; i++) {\n        long sum = prev + curr;\n        prev = curr;\n\
    \        curr = sum;\n    }\n    return prev;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084354
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ else if (n == 1) {\n        return 1;\n    }\n    else {\n        return fib(n\
    \ - 1) + fib(n - 2);\n    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if(n==0 || n==1)\n  return n;\n  else\n  return\
    \ fib(n-1)+fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n <= 1)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084355
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  int x = 1;\n  int y = 1;\n  int i = 1;\n  if (n\
    \ == 1) {\n    return 1;\n  }\n  while (i < n) {\n    int z = x + y;\n    x =\
    \ y;\n    y = z;\n    i++;\n  }\n  return y;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmpbyk_3aqd: /tmp/tmpbyk_3aqd.cpp:27: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084355
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  assert (n >= 0);\n  if (n < 2) {\n    return n;\n\
    \  }\n  long f1 = 0;\n  long f2 = 1;\n  long sum = 0;\n  for (int i = 2; i <=\
    \ n; i++) {\n    sum = f1 + f2;\n    f1 = f2;\n    f2 = sum;\n  }\n  return sum;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084355
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tassert(n >= 0);\n\tif (n < 2)\n\t\treturn n;\n\t\
    long prev = 0;\n\tlong curr = 1;\n\tlong next;\n\tfor (long i = 1; i < n; i++)\
    \ {\n\t\tnext = prev + curr;\n\t\tprev = curr;\n\t\tcurr = next;\n\t}\n\treturn\
    \ curr;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084355
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long a = 0;\n    long b = 1;\n    long i = 0;\n\
    \    while (i < n) {\n        assert((a) < (INT_MAX));\n        assert((b) < (INT_MAX));\n\
    \        long temp = a;\n        a = b;\n        b = temp + b;\n        i++;\n\
    \    }\n    return a;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084355
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long prev = 0;\n    long prev_prev = 0;\n   \
    \ long current = 1;\n    if (n == 0) {\n        return prev;\n    }\n    for (long\
    \ i = 1; i < n; i++) {\n        prev_prev = prev;\n        prev = current;\n \
    \       current = prev_prev + prev;\n    }\n    return current;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084355
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tlong a = 0;\n\tlong b = 1;\n\tlong c = 1;\n\tfor\
    \ (int i = 1; i < n; i++) {\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn\
    \ c;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084355
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n==0 || n==1) {\n        return 1;\n    }\
    \ else {\n        return fib(n-1) + fib(n-2);\n    }\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmpd4e2aptw: /tmp/tmpd4e2aptw.cpp:19: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084355
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  std::cout << \"Fib called with: \" << n << std::endl;\n\
    \  if (n <= 1) {\n    return n;\n  } else {\n    return fib(n - 1) + fib(n - 2);\n\
    \  }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: 'Fib called with: 10

    Fib called with: 9

    Fib called with: 8

    Fib called with: 7

    Fib called with: 6

    Fib called with: 5

    Fib called with: 4

    Fib called with: 3

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 1

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 3

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 1

    Fib called with: 4

    Fib called with: 3

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 1

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 5

    Fib called with: 4

    Fib called with: 3

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 1

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 3

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 1

    Fib called with: 6

    Fib called with: 5

    Fib called with: 4

    Fib called with: 3

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 1

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 3

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 1

    Fib called with: 4

    Fib called with: 3

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 1

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 7

    Fib called with: 6

    Fib called with: 5

    Fib called with: 4

    Fib called with: 3

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 1

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 3

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 1

    Fib called with: 4

    Fib called with: 3

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 1

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 5

    Fib called with: 4

    Fib called with: 3

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 1

    Fib called with: 2

    Fib called with: 1

    Fib called with: 0

    Fib called with: 3

    Fib called with: 2

    Fib called wit'
  timestamp: 1660084355
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0 || n == 1) {\n        return n;\n\
    \    } else {\n        return fib(n - 1) + fib(n - 2);\n    }\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084355
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  assert(n>=0);\n  long a = 0;\n  long b = 1;\n \
    \ while (n > 0) {\n    long c = a+b;\n    a = b;\n    b = c;\n    n--;\n  }\n\
    \  return a;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084355
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  long a = 0;\n\
    \  long b = 1;\n  for (long i = 2; i <= n; i++) {\n    long c = a + b;\n    a\
    \ = b;\n    b = c;\n  }\n  return b;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084356
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long prev = 1;\n  long curr = 1;\n  long tmp;\n\
    \  for (long i = 2; i < n; i++) {\n    tmp = curr;\n    curr = prev + curr;\n\
    \    prev = tmp;\n  }\n  return curr;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084355
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n==0) return 0;\n  if (n==1) return 1;\n  if\
    \ (n>1)  return fib(n-1)+fib(n-2);\n  return 0;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084356
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long a = 0;\n  long b = 1;\n  long c = 1;\n  for\
    \ (long i = 2; i <= n; i++) {\n    a = b;\n    b = c;\n    c = a + b;\n  }\n \
    \ return c;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: Exception
  stderr: 'tmpxkea1wv5: /tmp/tmpxkea1wv5.cpp:23: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084356
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n   if(n <= 1) return n;\n   long fibo1 = 0;\n   long\
    \ fibo2 = 1;\n   long fibonacci;\n   for(long i = 2; i <= n; i++) {\n      fibonacci\
    \ = fibo1 + fibo2;\n      fibo1 = fibo2;\n      fibo2 = fibonacci;\n   }\n   return\
    \ fibonacci;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084356
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tif (n == 0) {\n\t\treturn 0;\n\t}\n\tif (n == 1)\
    \ {\n\t\treturn 1;\n\t}\n\treturn fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n < 2)\n    return n;\n  return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084356
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0 || n == 1) {\n        return n;\n\
    \    }\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    //<<< 'fib(',n,')'\n    if (n == 0) {\n     \
    \   return 0;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084356
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    // This is just a sample function body, replace\
    \ it with your implementation.\n    int a=0,b=1,c,i;\n    if(n==0)\n    return\
    \ a;\n    for(i=2;i<=n;i++)\n    {\n        c=a+b;\n        a=b;\n        b=c;\n\
    \    }\n    return b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084356
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0)\n        return 0;\n    else if (n\
    \ == 1)\n        return 1;\n    else\n        return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    if (n == 0) return 0;\n\
    \    if (n == 1) return 1;\n    long prev1 = 0;\n    long prev2 = 1;\n    long\
    \ result = 0;\n    for (long i = 1; i < n; i++) {\n        result = prev1 + prev2;\n\
    \        prev1 = prev2;\n        prev2 = result;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084356
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    \n    std::vector<long> sequence(n + 1);\n  \
    \  sequence[0] = 0;\n    sequence[1] = 1;\n    for (int i = 2; i <= n; i++) {\n\
    \        sequence[i] = sequence[i - 1] + sequence[i - 2];\n    }\n    return sequence[n];\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084356
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  // Compute the (n + 1)st Fibonacci number.\n  //\
    \ >>> fib = fibonacci(100)\n  // >>> fib(0)\n  // (0)\n  // >>> fib(10)\n  //\
    \ (55)\n  // >>> fib(15)\n  // (610)\n  // >>> fib(20)\n  // (6765)\n  // >>>\
    \ fib(30)\n  // (832040)\n  // >>> fib(50)\n  // (12586269025)\n  // >>> fib(80)\n\
    \  // (23416728348467685)\n  // >>> fib(100)\n  // (354224848179261915075)\n \
    \ // >>> fib(150)\n  // (9969216677189303386214405760200)\n  // >>> fib(200)\n\
    \  // (280571172992510140037611932413038677189525)\n  // >>> fib(250)\n  // (5527939700884757)\n\
    \  // >>> fib(300)\n  // (222232244629420445529739893461909967206666939096499764990979600)\n\
    \  // >>> fib(350)\n  // (3311525479307809953070431844712733180520993556801281283841441306676852726186730501081473316097030556482884523438534005241995479988861105648319121169640758318906527890855154366159582987279682987510631200575428783453215515103870818298969791613127856265033195487140214287532698187962046936097879900350962302291026368131493195275630227837628441540360584402572114334961180023091208287046088923962328835461505776583271252546093591128203925285393434620904245248929403901706233888991085841065183173360437470737908552631764325\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmpemqks12q: /tmp/tmpemqks12q.cpp:42: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084356
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n// code here\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmpm7sad33v: /tmp/tmpm7sad33v.cpp:15: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084356
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0 || n == 1) {\n        return n;\n\
    \    }\n    else {\n        return fib(n - 1) + fib(n - 2);\n    }\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084357
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tif (n == 0) {\n\t\treturn 0;\n\t}\n\tif (n == 1)\
    \ {\n\t\treturn 1;\n\t}\n\treturn fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\nlong result = 1;\nlong prev_result = 1;\nlong previous_prev_result\
    \ = 1;\n// ...write code here...\nfor(int i=2;i<n;i++){\n    previous_prev_result\
    \ = prev_result;\n    prev_result = result;\n    result = previous_prev_result\
    \ + prev_result;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfu290uke.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmpfu290uke.cpp:20:12: error: a function-definition is not allowed here before\
    \ \u2018{\u2019 token\n   20 | int main() {\n      |            ^\n/tmp/tmpfu290uke.cpp:27:1:\
    \ error: expected \u2018}\u2019 at end of input\n   27 | }\n      | ^\n/tmp/tmpfu290uke.cpp:10:18:\
    \ note: to match this \u2018{\u2019\n   10 | long fib(long n) {\n      |     \
    \             ^\n/tmp/tmpfu290uke.cpp:27:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   27 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660084357
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  assert(n >= 0);\n  if (n <= 1) {\n    return n;\n\
    \  }\n  long prev = 0;\n  long res = 1;\n  for (long i = 2; i <= n; i++) {\n \
    \   long new_res = res + prev;\n    prev = res;\n    res = new_res;\n  }\n  return\
    \ res;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084357
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  assert(n >= 0);\n  long prev_prev = 0;\n  long\
    \ prev = 1;\n  long curr = n;\n  long i = 2;\n  while (i <= n) {\n    curr = prev\
    \ + prev_prev;\n    prev_prev = prev;\n    prev = curr;\n    i = i + 1;\n  }\n\
    \  return curr;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084357
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tlong a = 0;\n\tlong b = 1;\n\tlong i = 0;\n\tlong\
    \ c = 0;\n\tif (n == 0)\n\t\treturn 0;\n\tif (n == 1)\n\t\treturn 1;\n\twhile\
    \ (i < n) {\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\ti++;\n\t}\n\treturn c;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmp96g62mwo: /tmp/tmp96g62mwo.cpp:29: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084357
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n < 2) {\n        return n;\n    }\n    return\
    \ fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084357
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n < 2)\n        return n;\n    else\n   \
    \     return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\t// #### BEGIN SOLUTION ####\n\tif (n == 0 || n\
    \ == 1)\n\t\treturn n;\n\treturn fib(n - 1) + fib(n - 2);\n\t// #### END SOLUTION\
    \ ####\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n <= 2) {\n    return 1;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tlong a = 0;\n\tlong b = 1;\n\tlong c = 0;\n\tfor\
    \ (long i = 0; i < n; i++) {\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\t\
    return c;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: Exception
  stderr: 'tmpqjlezjq8: /tmp/tmpqjlezjq8.cpp:23: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    \n    if (n == 0 || n == 1)\n        return n;\n\
    \    \n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate =\
    \ fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  \tlong a = 0;\n\tlong b = 1;\n\tlong i = 0;\n\t\
    while (i < n){\n\t\tlong tmp = a;\n\t\ta = b;\n\t\tb = tmp + b;\n\t\ti = i + 1;\n\
    \t}\n\treturn a;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n==0) return 0;\n  if (n==1) return 1;\n  return\
    \ fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    // Assume positive n.\n    assert(n >= 0);\n\
    \    // Return nth Fibonacci number.\n    if (n == 0 || n == 1)\n        return\
    \ n;\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long n1=0;\n  long n2=1;\n  long n3=0;\n  long\
    \ i=0;\n  while(i<n){\n    n3=n1+n2;\n    n1=n2;\n    n2=n3;\n    i=i+1;\n  }\n\
    \  return n1;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long a=0,b=1,c;\n  if(n==0)\n    return 0;\n  if(n==1)\n\
    \    return 1;\n  else\n  {\n    for(int i=2;i<=n;i++)\n    {\n      c=a+b;\n\
    \      a=b;\n      b=c;\n    }\n    return c;\n  }\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long current = 0;\n  long next = 1;\n  while (n\
    \ != 0) {\n    long temp = next;\n    next = current + next;\n    current = temp;\n\
    \    n--;\n  }\n  return current;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\nif (n < 2)\nreturn n;\nelse\nreturn fib(n - 1) +\
    \ fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n==0) {\n        return 0;\n    } else if\
    \ (n==1) {\n        return 1;\n    } else {\n        return fib(n-1) + fib(n-2);\n\
    \    }\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tif (n == 0) {\n\t\treturn 0;\n\t}\n\telse if (n\
    \ == 1) {\n\t\treturn 1;\n\t}\n\treturn fib(n - 1) + fib(n - 2);\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tif (n < 2) {\n\t\treturn 1;\n\t}\n\treturn fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: Exception
  stderr: 'tmp9z_hyy5a: /tmp/tmp9z_hyy5a.cpp:18: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tlong first = 0;\n\tlong second = 1;\n\tfor (int\
    \ i = 0; i < n; i++) {\n\t\tlong third = first + second;\n\t\tfirst = second;\n\
    \t\tsecond = third;\n\t}\n\treturn first;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tif (n < 2) {\n\t\treturn n;\n\t}\n\tlong first\
    \ = 0;\n\tlong second = 1;\n\tfor (long i = 2; i <= n; i++) {\n\t\tlong third\
    \ = first + second;\n\t\tfirst = second;\n\t\tsecond = third;\n\t}\n\treturn second;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084359
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if(n == 0) {\n    return 0;\n  }\n  if(n == 1)\
    \ {\n    return 1;\n  }\n  long tmp = 1;\n  long x = 0;\n  long y = 1;\n  while(n\
    \ > 1) {\n    tmp = x + y;\n    x = y;\n    y = tmp;\n    n = n - 1;\n  }\n  return\
    \ tmp;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084359
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long x,y;\n    if (n <= 1) return n;\n    x =\
    \ fib(n-1);\n    y = fib(n-2);\n    return x+y;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084359
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long a = 0;\n  long b = 1;\n  for (int i = 0; i\
    \ < n; i++) {\n    long c = a + b;\n    a = b;\n    b = c;\n  }\n  return a;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0)\n        return 0;\n    else if (n\
    \ == 1)\n        return 1;\n    else\n        return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\treturn (n<2)?1:fib(n-1)+fib(n-2);\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmpm9uxrmxz: /tmp/tmpm9uxrmxz.cpp:15: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084359
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0 || n == 1) {\n        return n;\n\
    \    }\n    else {\n        return fib(n - 1) + fib(n - 2);\n    }\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084357
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0 || n == 1) {\n        return n;\n\
    \    }\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084353
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n==0 || n==1) {\n        return n;\n    }\n\
    \    long ret=0;\n    long pre=1;\n    long before_pre=0;\n    for (long i=2;\
    \ i<=n; i++) {\n        ret=pre+before_pre;\n        before_pre=pre;\n       \
    \ pre=ret;\n    }\n    return ret;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084359
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\t// Insert your code here\n\treturn 0;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmp9c39jgtw: /tmp/tmp9c39jgtw.cpp:16: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\treturn n == 0 ? 0 : n <= 2 ? 1 : fib(n - 1) + fib(n\
    \ - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    if (n < 2) {\n        return\
    \ n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  //MISSINGCODE\n  //REPLACE \"return 0\" WITH SOLUTION\n\
    \  return 0;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: Exception
  stderr: 'tmpewbjol8u: /tmp/tmpewbjol8u.cpp:17: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n <= 1)\n    return n;\n  return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n < 2) {\n    return n;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\treturn fib_helper(n);\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5h2iblq4.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmp5h2iblq4.cpp:11:9: error: \u2018fib_helper\u2019 was not declared in this\
    \ scope\n   11 |  return fib_helper(n);\n      |         ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n < 2) {\n        return n;\n    }\n    long\
    \ a = 0;\n    long b = 1;\n    for (int i = 1; i < n; i++) {\n        long c =\
    \ a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1)\
    \ {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0 || n == 1) {\n        return n;\n\
    \    }\n    long result = fib(n - 1) + fib(n - 2);\n    return result;\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  long a = 0;\n  long b = 1;\n  long c = 0;\n  if\
    \ (n <= 0) {\n    return 0;\n  }\n  if (n == 1) {\n    return 1;\n  }\n  while\
    \ (n > 1) {\n    c = a + b;\n    a = b;\n    b = c;\n    n--;\n  }\n  return c;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0)\n        return 0;\n    else if (n\
    \ == 1)\n        return 1;\n    else\n        return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n < 2) {\n        return n;\n    }\n    else\
    \ {\n        return fib(n - 1) + fib(n - 2);\n    }\n}\nint main() {\n    auto\
    \ candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084351
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long a = 0;\n    long b = 1;\n    long c = a\
    \ + b;\n    for (long i = 2; i <= n; i++) {\n        c = a + b;\n        a = b;\n\
    \        b = c;\n    }\n    return c;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n <= 1)\n    return n;\n  return fib(n - 1)\
    \ + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  static std::map<long, long> memo;\n  if (n <= 2)\
    \ {\n    return 1;\n  }\n  if (memo.find(n) != memo.end()) {\n    return memo[n];\n\
    \  }\n  long fib_n = fib(n - 1) + fib(n - 2);\n  memo[n] = fib_n;\n  return fib_n;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    if (n == 0) return 0;\n\
    \    if (n == 1) return 1;\n    long fib1 = 0;\n    long fib2 = 1;\n    long fib\
    \ = 0;\n    for (long i = 2; i <= n; i++) {\n        fib = fib1 + fib2;\n    \
    \    fib1 = fib2;\n        fib2 = fib;\n    }\n    return fib;\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\t\n\tif(n==0)\n\t\treturn 0;\n\tif(n==1)\n\t\treturn\
    \ 1;\n\treturn fib(n-1)+fib(n-2);\n\t\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0) {\n        return 0;\n    }\n   \
    \ if (n == 1) {\n        return 1;\n    }\n    return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084349
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\nlong n1, n2, n3;\nif (n <= 1)\nreturn n;\nn1 = 0;\n\
    n2 = 1;\nfor (long i = 2; i <= n; i++) {\nn3 = n1 + n2;\nn1 = n2;\nn2 = n3;\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjypzohsh.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmpjypzohsh.cpp:21:12: error: a function-definition is not allowed here before\
    \ \u2018{\u2019 token\n   21 | int main() {\n      |            ^\n/tmp/tmpjypzohsh.cpp:28:1:\
    \ error: expected \u2018}\u2019 at end of input\n   28 | }\n      | ^\n/tmp/tmpjypzohsh.cpp:10:18:\
    \ note: to match this \u2018{\u2019\n   10 | long fib(long n) {\n      |     \
    \             ^\n/tmp/tmpjypzohsh.cpp:28:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   28 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    // Your code here\n    // Recursion\n    if (n\
    \ == 0 || n == 1)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n}\n\
    int main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    if (n < 2) return n;\n \
    \   //else\n    long a = 0;\n    long b = 1;\n    long c = 0;\n    int i = 0;\n\
    \    while (i < n) {\n        a = b;\n        b = c;\n        c = a + b;\n   \
    \     i += 1;\n    }\n    return c;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n>=0);\n    if (n == 0 || n == 1)\n  \
    \      return n;\n    return fib(n-1) + fib(n-2);\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tlong a, b, c;\n\ta = 1;\n\tb = 1;\n\tfor (int i\
    \ = 0; i < n - 2; i++) {\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn\
    \ b;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) ==\
    \ (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n\
    \    assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n == 0 || n == 1) {\n        return n;\n\
    \    } else {\n        return fib(n - 1) + fib(n - 2);\n    }\n}\nint main() {\n\
    \    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084355
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  assert(n >= 0);\n  if (n == 0) {\n    return 0;\n\
    \  }\n  if (n == 1) {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n\
    }\nint main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    static std::map<long, long> memo = {{0, 0}, {1,\
    \ 1}};\n    auto it = memo.find(n);\n    if (it != memo.end()) {\n        return\
    \ it->second;\n    } else {\n        long result = fib(n - 1) + fib(n - 2);\n\
    \        memo[n] = result;\n        return result;\n    }\n}\nint main() {\n \
    \   auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084360
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long n1 = 1;\n    long n2 = 1;\n    long t;\n\
    \    for (long i = 2; i < n; i++) {\n        t = n1;\n        n1 = n2;\n     \
    \   n2 = t + n2;\n    }\n    return n2;\n}\nint main() {\n    auto candidate =\
    \ fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084361
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n// >>> fib((10))\n// (55)\nif (n == 10) {\nreturn\
    \ 55;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5lgfb9y6.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmp5lgfb9y6.cpp:16:12: error: a function-definition is not allowed here before\
    \ \u2018{\u2019 token\n   16 | int main() {\n      |            ^\n/tmp/tmp5lgfb9y6.cpp:23:1:\
    \ error: expected \u2018}\u2019 at end of input\n   23 | }\n      | ^\n/tmp/tmp5lgfb9y6.cpp:10:18:\
    \ note: to match this \u2018{\u2019\n   10 | long fib(long n) {\n      |     \
    \             ^\n/tmp/tmp5lgfb9y6.cpp:23:1: warning: control reaches end of non-void\
    \ function [-Wreturn-type]\n   23 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660084361
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    return n;\n}\nint main() {\n    auto candidate\
    \ = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n\
    \    assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n \
    \   assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmpmekm_5dp: /tmp/tmpmekm_5dp.cpp:15: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084361
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long a = 0;\n    long b = 1;\n    long c = 0;\n\
    \    for (long i = 0; i < n; i++) {\n        a = b;\n        b = c;\n        c\
    \ = a + b;\n    }\n    return c;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084361
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n\tlong result = 1;\n\tlong prev = -1;\n\tlong i =\
    \ 0;\n\tlong sum = 0;\n\twhile (i <= n) {\n\t\tsum = result + prev;\n\t\tprev\
    \ = result;\n\t\tresult = sum;\n\t\ti = i + 1;\n\t}\n\treturn result;\n}\nint\
    \ main() {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n\
    \    assert(candidate((1)) == (1));\n    assert(candidate((8)) == (21));\n   \
    \ assert(candidate((11)) == (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084361
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\nlong memo[n+1];\nmemo[0] = 0;\nmemo[1] = 1;\nfor\
    \ (int i = 2; i <= n; i++) {\nmemo[i] = memo[i-1] + memo[i-2];\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps2e5cj73.cpp: In function \u2018long int fib(long int)\u2019:\n\
    /tmp/tmps2e5cj73.cpp:17:12: error: a function-definition is not allowed here before\
    \ \u2018{\u2019 token\n   17 | int main() {\n      |            ^\n/tmp/tmps2e5cj73.cpp:24:1:\
    \ error: expected \u2018}\u2019 at end of input\n   24 | }\n      | ^\n/tmp/tmps2e5cj73.cpp:10:18:\
    \ note: to match this \u2018{\u2019\n   10 | long fib(long n) {\n      |     \
    \             ^\n/tmp/tmps2e5cj73.cpp:24:1: warning: no return statement in function\
    \ returning non-void [-Wreturn-type]\n   24 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660084361
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    assert(n >= 0);\n    if (n <= 1) {\n        return\
    \ n;\n    }\n    long fib_n = fib(n - 1) + fib(n - 2);\n    assert(fib_n > 0);\n\
    \    return fib_n;\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084361
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long a = 0;\n    long b = 1;\n    long c = 0;\n\
    \    while (n > 0) {\n        c = a + b;\n        a = b;\n        b = c;\n   \
    \     n--;\n    }\n    return c;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: Exception
  stderr: 'tmp2skyu9id: /tmp/tmp2skyu9id.cpp:24: int main(): Assertion `candidate((10))
    == (55)'' failed.

    '
  stdout: ''
  timestamp: 1660084361
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if (n < 2) {\n    return n;\n  }\n  return fib(n\
    \ - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n    assert(candidate((10))\
    \ == (55));\n    assert(candidate((1)) == (1));\n    assert(candidate((8)) ==\
    \ (21));\n    assert(candidate((11)) == (89));\n    assert(candidate((12)) ==\
    \ (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084347
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n  if(n==0){\n    return 0;\n  }\n  else if(n==1){\n\
    \    return 1;\n  }\n  else{\n    return fib(n-1)+fib(n-2);\n  }\n}\nint main()\
    \ {\n    auto candidate = fib;\n    assert(candidate((10)) == (55));\n    assert(candidate((1))\
    \ == (1));\n    assert(candidate((8)) == (21));\n    assert(candidate((11)) ==\
    \ (89));\n    assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084361
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    long first = 0;\n    long second = 1;\n    if\
    \ (n < 2) {\n        return n;\n    }\n    for (long i = 2; i <= n; i++) {\n \
    \       long temp = second;\n        second = first + second;\n        first =\
    \ temp;\n    }\n    return second;\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084361
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return n-th Fibonacci\
    \ number.\n// >>> fib((10))\n// (55)\n// >>> fib((1))\n// (1)\n// >>> fib((8))\n\
    // (21)\nlong fib(long n) {\n    if (n < 2)\n        return n;\n    else\n   \
    \     return fib(n - 1) + fib(n - 2);\n}\nint main() {\n    auto candidate = fib;\n\
    \    assert(candidate((10)) == (55));\n    assert(candidate((1)) == (1));\n  \
    \  assert(candidate((8)) == (21));\n    assert(candidate((11)) == (89));\n   \
    \ assert(candidate((12)) == (144));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660084358

name: HumanEval_64_vowels_count
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function vowels_count\
  \ which takes a string representing\n// a word as input and returns the number of\
  \ vowels in the string.\n// Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here,\
  \ 'y' is also a\n// vowel, but only when it is at the end of the given word.\n//\
  \ Example:\n// >>> vowels_count((\"abcde\"))\n// (2)\n// >>> vowels_count((\"ACEDY\"\
  ))\n// (3)\nlong vowels_count(std::string s) {\n"
tests: "}\nint main() {\n    auto candidate = vowels_count;\n    assert(candidate((\"\
  abcde\")) == (2));\n    assert(candidate((\"Alone\")) == (3));\n    assert(candidate((\"\
  key\")) == (2));\n    assert(candidate((\"bye\")) == (1));\n    assert(candidate((\"\
  keY\")) == (2));\n    assert(candidate((\"bYe\")) == (1));\n    assert(candidate((\"\
  ACEDY\")) == (3));\n}\n"
completions: ["  // Assume that the input will be a string representing a word,\n\
    \  // meaning it will only contain letters and no spaces.\n  // Also the input\
    \ will not be empty.\n  long count = 0;\n  for (int i = 0; i < s.length(); i++)\
    \ {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n      count++;\n    }\n  }\n  if (s[s.length() - 1] == 'y') {\n \
    \   count++;\n  }\n  return count;", "\tlong count=0;\n\tint n=s.length();\n\t\
    char s_arr[n+1];\n\tstrcpy(s_arr,s.c_str());\n\tint flag=0;\n\tfor(int i=0;i<n;i++)\n\
    \t{\n\t\tif(s_arr[i]=='a'||s_arr[i]=='e'||s_arr[i]=='i'||s_arr[i]=='o'||s_arr[i]=='u')\n\
    \t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse if(s_arr[i]=='y')\n\t\t{\n\t\t\tif(i==n-1)\n\
    \t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    long n\
    \ = 0;\n    // your code goes here\n    for(int i=0;i<s.length();i++)\n    {\n\
    \        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n        {\n\
    \            n++;\n        }\n        else if(s[i]=='y'&&i==s.length()-1)\n  \
    \      {\n            n++;\n        }\n    }\n    return n;", "    // Write your\
    \ code here.\n    int len = s.length();\n    int count = 0;\n    int i;\n    for(i=0;i<len;i++)\n\
    \    {\n        if((s[i]=='a')||(s[i]=='e')||(s[i]=='i')||(s[i]=='o')||(s[i]=='u'))\n\
    \        {\n            count++;\n        }\n        else if((s[i]=='y')&&(i==len-1))\n\
    \        {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n       \
    \     count++;\n        }\n    }\n    if (s[s.length() - 1] == 'y') {\n      \
    \  count++;\n    }\n    return count;", "  std::set<char> s1{'a', 'e', 'i', 'o',\
    \ 'u'};\n  long count = 0;\n  for (long i = 0; i < s.length(); i++) {\n    if\
    \ (s1.find(tolower(s[i])) != s1.end()) {\n      count++;\n    }\n  }\n  if (s1.find(tolower(s[s.length()\
    \ - 1])) == s1.end()) {\n    count--;\n  }\n  return count;", "  // Your code\
    \ here\n  int count = 0;\n  int i = 0;\n  int length = s.length();\n  for(i =\
    \ 0; i < length; i++)\n  {\n    if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u')\n    {\n      count++;\n    }\n    else if(s[i]\
    \ == 'y' && i == length - 1)\n    {\n      count++;\n    }\n  }\n  return count;",
  "  // Write your code here\n  // to print results to the standard output please\
    \ use std::cout\n  // Example: std::cout << \"Hello world!\";\n  long count=0;\n\
    \  for(int i=0;i<s.length();i++)\n  {\n    if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \      count++;\n  }\n  if(s[s.length()-1]=='y')\n    count++;\n  return count;",
  "    long c=0;\n    for(int i=0; i<s.length(); i++) {\n        if(s[i]=='a' || s[i]=='e'\
    \ || s[i]=='i' || s[i]=='o' || s[i]=='u') c++;\n        if(s[i]=='y' && i==s.length()-1)\
    \ c++;\n    }\n    return c;", "    long counter = 0;\n    int i = 0;\n    while\
    \ (s[i] != '\\0') {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u') {\n            counter++;\n        }\n        i++;\n\
    \    }\n    if (s[i-1] == 'y') {\n        counter++;\n    }\n    return counter;",
  "//     Write your code here\n    long n = s.length();\n    long count = 0;\n  \
    \  for(long i = 0; i < n; i++){\n        if(s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u'){\n            count++;\n        }\n  \
    \      else if(s[i] == 'y' && i == n-1){\n            count++;\n        }\n  \
    \  }\n    return count;", "    long count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        char c = s[i];\n        if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') {\n            count++;\n        }\n        if (c ==\
    \ 'y' && i == s.length() - 1) {\n            count++;\n        }\n    }\n    return\
    \ count;", "\tlong count = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\t\
    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n\
    \t\t\tcount++;\n\t}\n\tif (s[s.length() - 1] == 'y')\n\t\tcount++;\n\treturn count;",
  "    int count = 0;\n    std::string vowels = \"aeiouy\";\n    std::string input\
    \ = s;\n    std::transform(input.begin(), input.end(), input.begin(), ::tolower);\n\
    \    std::cout << input << '\\n';\n    for (auto const &vowel : vowels) {\n  \
    \      std::size_t found = input.find(vowel);\n        while (found != std::string::npos)\
    \ {\n            if (vowel == 'y' && found != input.length() - 1) {\n        \
    \        found = input.find(vowel, found + 1);\n                continue;\n  \
    \          }\n            count++;\n            found = input.find(vowel, found\
    \ + 1);\n        }\n    }\n    return count;", "  long count = 0;\n  for (char&\
    \ c : s) {\n    if (tolower(c) == 'a' || tolower(c) == 'e' || tolower(c) == 'i'\
    \ || tolower(c) == 'o' || tolower(c) == 'u') {\n      ++count;\n    }\n  }\n \
    \ if (s[s.length() - 1] == 'y') {\n    ++count;\n  }\n  return count;", "\tlong\
    \ counter = 0;\n\tlong len = s.length();\n\tfor (long i = 0; i < len; i++) {\n\
    \t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n\
    \t\t\tcounter++;\n\t}\n\tif (s[len - 1] == 'y')\n\t\tcounter++;\n\treturn counter;",
  "    long count = 0;\n    long length = s.length();\n    for (long i = 0; i < length;\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            count += 1;\n        }\n        else if (s[i]\
    \ == 'y' && i != length - 1) {\n            count += 1;\n        }\n    }\n  \
    \  return count;", "    long count = 0;\n    for (long i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            count += 1;\n        }\n        else if (s[i]\
    \ == 'y' && i == s.length() - 1) {\n            count += 1;\n        }\n    }\n\
    \    return count;", "    /*\n    */\n    long n = 0;\n    for (long i = 0; i\
    \ < s.length(); i++) {\n        char c = s[i];\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {\n            n++;\n        }\n      \
    \  if (c == 'y' && i < s.length() - 1) {\n            n++;\n        }\n    }\n\
    \    return n;", "\tassert(s.length() > 0);\n\tlong vowels = 0;\n\tbool y_vowel\
    \ = false;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\ty_vowel = false;\n\t\
    \tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n\t\t\ty_vowel = true;\n\t\t}\n\t\tif (s[i] == 'y' && (i == s.length() - 1))\
    \ {\n\t\t\ty_vowel = true;\n\t\t}\n\t\tif (y_vowel) {\n\t\t\tvowels += 1;\n\t\t\
    }\n\t}\n\treturn vowels;", "\tlong count=0;\n\tfor(int i=0;i<s.length();i++)\n\
    \t{\n\t\tif(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u')\n\t\
    \t{\n\t\t\tcount++;\n\t\t}\n\t\telse if(s[i]=='y' && (i+1)<s.length())\n\t\t{\n\
    \t\t\tif(s[i+1]=='a' || s[i+1]=='e' || s[i+1]=='i' || s[i+1]=='o' || s[i+1]=='u')\n\
    \t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    long vowels\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n        if (s[i] == 'y' && (i == s.length() - 1)) {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "  std::transform(s.begin(), s.end(),\
    \ s.begin(), ::tolower);\n  long count = 0;\n  bool y = false;\n  for (auto x\
    \ : s) {\n    if (x == 'a' || x == 'e' || x == 'i' || x == 'o' || x == 'u') {\n\
    \      count++;\n    }\n    if (x == 'y') {\n      y = true;\n    }\n  }\n  if\
    \ (y) {\n    count++;\n  }\n  return count;", "\tint n = 0;\n\tfor (int i = 0;\
    \ i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u')\n\t\t\tn++;\n\t}\n\treturn n;", "\t// checking the\
    \ vowel count in the given string\n\tlong count = 0;\n\tfor (int i = 0; i < s.length();\
    \ i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u' || s[i] == 'y') {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
  "    long count = 0;\n    int len = s.length();\n    std::transform(s.begin(), s.end(),\
    \ s.begin(), ::tolower);\n    for (int i = 0; i < len; i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n      \
    \      count++;\n        if (s[i] == 'y' && i != len - 1)\n            count++;\n\
    \    }\n    return count;", "\tlong vowels = 0;\n\tfor (auto i = 0; i < s.length();\
    \ i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u') {\n\t\t\tvowels++;\n\t\t}\n\t\telse if (s[i] == 'y' && i == s.length()\
    \ - 1) {\n\t\t\tvowels++;\n\t\t}\n\t}\n\treturn vowels;", "    int count = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if ((s[i] == 'a') || (s[i]\
    \ == 'e') || (s[i] == 'i') || (s[i] == 'o') || (s[i] == 'u')) {\n            count++;\n\
    \        }\n        else if ((s[i] == 'y') && (i == s.length() - 1)) {\n     \
    \       count++;\n        }\n    }\n    return count;", "    std::string vowels\
    \ = \"aeiou\";\n    long n = s.length();\n    long ans = 0;\n    for (long i =\
    \ 0; i < n; i++) {\n        char c = s[i];\n        if (c == 'y' && i == n - 1)\
    \ {\n            ans++;\n        } else if (vowels.find(c) != std::string::npos)\
    \ {\n            ans++;\n        }\n    }\n    return ans;", "    long n = s.length();\n\
    \    long count = 0;\n    for (long i = 0; i < n; i++) {\n        if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n       \
    \     count++;\n        }\n    }\n    if (s[n - 1] == 'y') {\n        count++;\n\
    \    }\n    return count;", "  // Replace the statements below with your own code.\n\
    \  // This is a dummy function which always returns 1.\n  int cnt = 0;\n  for(int\
    \ i = 0; i < s.length(); i++) {\n    if(s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n      cnt++;\n    }\n    if(s[i] == 'y'\
    \ && i == s.length() - 1) {\n      cnt++;\n    }\n  }\n  return cnt;", "  long\
    \ count = 0;\n  int last = s.length() - 1;\n  for (int i = 0; i < s.length();\
    \ i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u') {\n      count++;\n    }\n    if (s[i] == 'y' && i == last) {\n\
    \      count++;\n    }\n  }\n  return count;", "    // Your code here\n    long\
    \ count = 0;\n    char c;\n    int i;\n    for(i=0;i<s.length();i++)\n    {\n\
    \        c = s[i];\n        if(c=='a' || c=='e' || c=='i' || c=='o' || c=='u')\n\
    \        {\n            count++;\n        }\n        else if(c=='y' && i==s.length()-1)\n\
    \        {\n            count++;\n        }\n    }\n    return count;", "\t//\
    \ YOUR CODE GOES HERE\n\tstd::cout << \"first string \" << s << \"\\n\";\n\t//\
    \ remove the last character\n\ts.pop_back();\n\tstd::cout << \"string \" << s\
    \ << \"\\n\";\n\treturn s.length();", "  int count = 0;\n  for (int i = 0; i <\
    \ s.length(); i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u') {\n      count += 1;\n    }\n    if (s[i] == 'y' && i\
    \ != s.length() - 1) {\n      count += 1;\n    }\n  }\n  return count;", "  long\
    \ count = 0;\n  std::transform(s.begin(), s.end(), s.begin(), ::tolower);\n  for\
    \ (auto x : s) {\n    if (x == 'a' || x == 'e' || x == 'i' || x == 'o' || x ==\
    \ 'u')\n      count++;\n  }\n  if (s[s.length() - 1] == 'y')\n    count++;\n \
    \ return count;", "    // Write your code here\n    // Don't print it\n    //\
    \ Don't return it\n    if(s.length() == 0)\n    {\n        return 0;\n    }\n\
    \    long count = 0;\n    for(int i = 0; i < s.length(); i++)\n    {\n       \
    \ char c = s[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u')\n        {\n            count++;\n        }\n        else if(i == s.length()\
    \ - 1 && c == 'y')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;", "    int vowels = 0;\n    for (int i = 0; i < s.length(); i++) {\n\
    \        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            vowels++;\n        }\n        else if (s[i] == 'y' &&\
    \ i == s.length() - 1) {\n            vowels++;\n        }\n    }\n    return\
    \ vowels;", "    long count=0;\n    for(int i=0;i<s.length();i++)\n    {\n   \
    \ \tif(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n    \t{\n    \t\
    \tcount++;\n    \t}\n    \telse if(s[i]=='y' && i==s.length()-1)\n    \t{\n  \
    \  \t\tcount++;\n    \t}\n    }\n    return count;", "  int vowels = 0;\n  for\
    \ (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n      vowels++;\n    }\n    if (s[i]\
    \ == 'y' && i == s.length() - 1) {\n      vowels++;\n    }\n  }\n  return vowels;",
  "    /* Do not modify this function */\n    long count = 0;\n    for (int i = 0;\
    \ i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n        if\
    \ (s[i] == 'y' && (i != s.length() - 1)) {\n            continue;\n        }\n\
    \        if (s[i] == 'y' && (i == s.length() - 1)) {\n            count++;\n \
    \       }\n    }\n    return count;", "    // I made the assumption that the string\
    \ is a word, not a sentence.\n    // Capital and lowercase do not matter.\n  \
    \  long result = 0;\n    for (char c : s) {\n        if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' || c == 'y')\n            result++;\n  \
    \  }\n    if (s[s.length() - 1] == 'y')\n        result--;\n    return result;",
  "    // Write your code here\n    long count = 0;\n    for(auto i = 0; i < s.length();\
    \ i++) {\n        switch(s[i]) {\n            case 'a':\n            case 'e':\n\
    \            case 'i':\n            case 'o':\n            case 'u':\n       \
    \     case 'y':\n                count++;\n                break;\n          \
    \  default:\n                break;\n        }\n    }\n    if(s[s.length() - 1]\
    \ == 'y') {\n        count += 1;\n    }\n    return count;", "  // your code here\n\
    \tstd::string::iterator it;\n\tlong count = 0;\n\tfor(it = s.begin(); it!=s.end();\
    \ it++){\n\t\tif(*it == 'a' || *it == 'e' || *it == 'i' || *it == 'o' || *it ==\
    \ 'u'){\n\t\t\tcount++;\n\t\t}\n\t\telse if(*it == 'y' && it == s.end()-1){\n\t\
    \t\tcount++;\n\t\t}\n\t}\n\treturn count;", "    long vowels = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n        }\n\
    \        if (s[i] == 'y' && i != s.length() - 1) {\n            vowels++;\n  \
    \      }\n    }\n    return vowels;", "  long c = 0;\n  if (s[s.length() - 1]\
    \ == 'y') {\n    c++;\n  }\n  for (long i = 0; i < s.length(); i++) {\n    if\
    \ (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\
    \      c++;\n    }\n  }\n  return c;", "  return std::count_if(s.begin(), s.end(),\
    \ [](char c) {\n    return (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u' ||\n            c == 'A' || c == 'E' || c == 'I' || c == 'O' || c ==\
    \ 'U');\n  });", "  long count = 0;\n  for (int i = 0; i < s.length(); i++) {\n\
    \    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n      count++;\n    }\n  }\n  if (s[s.length() - 1] == 'y') {\n    count++;\n\
    \  }\n  return count;", "    long cnt = 0;\n    char c;\n    c = s[0];\n    if\
    \ (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n        cnt +=\
    \ 1;\n    }\n    for (int i = 1; i < s.length(); i++) {\n        if (s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n           \
    \ cnt += 1;\n        }\n    }\n    char last_char = s[s.length() - 1];\n    if\
    \ (last_char == 'y') {\n        cnt += 1;\n    }\n    return cnt;", "  long count\
    \ = 0;\n  bool flag = false;\n  for (long i = 0; i < s.length(); i++) {\n    if\
    \ (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\
    \      count++;\n    }\n    if (s[i] == 'y') {\n      flag = true;\n    }\n  }\n\
    \  if (flag == true) {\n    count++;\n  }\n  return count;", "\tif (s == \"\"\
    ) {\n\t\treturn 0;\n\t}\n\tif (s[0] == 'a' || s[0] == 'e' || s[0] == 'i' || s[0]\
    \ == 'o' || s[0] == 'u') {\n\t\treturn 1 + vowels_count(s.substr(1));\n\t}\n\t\
    if (s[0] == 'y' && s.length() == 1) {\n\t\treturn 1;\n\t}\n\tif (s[0] == 'y' &&\
    \ s.length() != 1) {\n\t\treturn vowels_count(s.substr(1));\n\t}\n\treturn vowels_count(s.substr(1));",
  "  // use std::string::size_type to store the index where we find a vowel.\n  std::string::size_type\
    \ vowel_index;\n  std::string vowels(\"AEIOUaeiou\");\n  long counter(0);\n  for\
    \ (vowel_index = s.find_first_of(vowels);\n       vowel_index != std::string::npos;\n\
    \       vowel_index = s.find_first_of(vowels, vowel_index + 1)) {\n    // If a\
    \ vowel is found, increment the counter.\n    ++counter;\n  }\n  // If the final\
    \ letter of the word is 'y', increment the counter.\n  if (s.back() == 'y') {\n\
    \    ++counter;\n  }\n  return counter;", "  // PUT YOUR CODE HERE\n  // PUT YOUR\
    \ CODE HERE\n  long n=0;\n  for(unsigned int i=0;i<s.length();i++)\n  {\n    if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \    {\n      n++;\n    }\n    else if(s[i]=='y'&&i==s.length()-1)\n    {\n  \
    \    n++;\n    }\n  }\n  return n;\n  // PUT YOUR CODE HERE\n  // PUT YOUR CODE\
    \ HERE", "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    for (unsigned int i = 0; i < s.length(); i++) {\n        if\
    \ (tolower(s[i]) == 'a' || tolower(s[i]) == 'e' || tolower(s[i]) == 'i' || tolower(s[i])\
    \ == 'o' || tolower(s[i]) == 'u') {\n            count++;\n        }\n    }\n\
    \    if (s[s.length() - 1] == 'y') {\n        count++;\n    }\n    return count;",
  "  long count = 0;\n  for (size_t i = 0; i < s.size(); i++) {\n    if (s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      count++;\n\
    \    }\n    if (s[i] == 'y' && i == s.size() - 1) {\n      count++;\n    }\n \
    \ }\n  return count;", "\t// Write your code here\n\tlong count = 0;\n\tfor (int\
    \ i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n\t\t\tcount++;\n\t\t}\n\t\telse if (s[i]\
    \ == 'y' && i == s.length() - 1) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
  "    long num_vowels = 0;\n    for (long i = 0; i < s.size(); i++) {\n        if\
    \ (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\
    \            num_vowels += 1;\n        }\n        else if (s[i] == 'y' && i ==\
    \ s.size() - 1) {\n            num_vowels += 1;\n        }\n    }\n    return\
    \ num_vowels;", "\tint count = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\
    \tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n\t\t\tcount++;\n\t\t}\n\t\telse if (s[i] == 'y' && i != s.length() - 1) {\n\
    \t\t\tcontinue;\n\t\t}\n\t\telse if (s[i] == 'y' && i == s.length() - 1) {\n\t\
    \t\tcount++;\n\t\t}\n\t}\n\treturn count;", "\tint vowels = 0;\n\tfor (int i =\
    \ 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u') {\n\t\t\tvowels++;\n\t\t}\n\t\telse if (s[i]\
    \ == 'y' && (i == s.length() - 1)) {\n\t\t\tvowels++;\n\t\t}\n\t}\n\treturn vowels;",
  "  int c = 0;\n  for (auto &x : s) {\n    if (tolower(x) == 'a' || tolower(x) ==\
    \ 'e' || tolower(x) == 'i' ||\n        tolower(x) == 'o' || tolower(x) == 'u'\
    \ || tolower(x) == 'y') {\n      c++;\n    }\n  }\n  return c;", "  std::string\
    \ vowels = \"aeiouy\";\n  long count = 0;\n  for (char letter : s) {\n    if (vowels.find(tolower(letter))\
    \ != std::string::npos) {\n      count++;\n    }\n  }\n  return count;", "  long\
    \ c=0;\n  for(int i=0;i<s.length();i++)\n  {\n    if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \    {\n      c++;\n    }\n    else if(s[i]=='y'&&i==s.length()-1)\n    {\n  \
    \    c++;\n    }\n  }\n  return c;", "    long count = 0;\n    for (char c : s)\
    \ {\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\
    \            count += 1;\n        }\n    }\n    // 'y' is only a vowel at the\
    \ end of the word\n    if (s[s.length() - 1] == 'y') {\n        count += 1;\n\
    \    }\n    return count;", "    std::string vowels = \"aeiouy\";\n    long count\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        std::string c(1, s[i]);\n\
    \        std::string l(1, s[s.length() - 1]);\n        if (vowels.find(c) != std::string::npos)\
    \ {\n            count += 1;\n        }\n        if (c == \"y\" && l == \"y\"\
    ) {\n            count += 1;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    int len = s.length();\n    for (int i = 0; i < len; i++) {\n\
    \        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            count++;\n        }\n        if (s[i] == 'y' && i !=\
    \ len - 1) {\n            count++;\n        }\n    }\n    return count;", "  long\
    \ cnt = 0;\n  if (s[s.size() - 1] == 'y') {\n    cnt++;\n  }\n  for (long i =\
    \ 0; i < s.size(); i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' ||\
    \ s[i] == 'o' || s[i] == 'u') {\n      cnt++;\n    }\n  }\n  return cnt;", " \
    \   long n=s.length();\n    long count=0;\n    for(long i=0;i<n;i++)\n    {\n\
    \        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n        {\n\
    \            count++;\n        }\n        else if(s[i]=='y'&&i==n-1)\n       \
    \ {\n            count++;\n        }\n    }\n    return count;", "\tlong count=0;\n\
    \tfor(int i=0;i<s.length();i++)\n\t{\n\t\tif(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \t\t{\n\t\t\tcount++;\n\t\t}\n\t\telse if(s[i]=='y' && i==s.length()-1)\n\t\t\
    {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;", "    long count = 0;\n    bool\
    \ is_last_vowel = false;\n    for (long i = 0; i < s.length(); i++) {\n      \
    \  if (i == s.length() - 1) {\n            switch (s[i]) {\n                case\
    \ 'a':\n                case 'e':\n                case 'i':\n               \
    \ case 'o':\n                case 'u':\n                case 'y':\n          \
    \          count++;\n                    break;\n                default:\n  \
    \                  break;\n            }\n        } else {\n            switch\
    \ (s[i]) {\n                case 'a':\n                case 'e':\n           \
    \     case 'i':\n                case 'o':\n                case 'u':\n      \
    \              count++;\n                    break;\n                case 'y':\n\
    \                    is_last_vowel = true;\n                    break;\n     \
    \           default:\n                    is_last_vowel = false;\n           \
    \         break;\n            }\n        }\n    }\n    if (is_last_vowel) {\n\
    \        count++;\n    }\n    return count;", "\tlong ans = 0;\n\tfor (long i\
    \ = 0; i < s.size(); i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u')\n\t\t\tans++;\n\t}\n\tif (s[s.size() - 1] ==\
    \ 'y')\n\t\tans++;\n\treturn ans;", "    long n = s.length();\n    long cnt =\
    \ 0;\n    std::vector<char> vowels = {'a', 'e', 'i', 'o', 'u'};\n    for (int\
    \ i = 0; i < n; i++) {\n        if (s[i] == 'y' && i < n - 1) {\n            continue;\n\
    \        }\n        if (std::find(vowels.begin(), vowels.end(), s[i]) != vowels.end())\
    \ {\n            cnt++;\n        }\n    }\n    return cnt;", "    int count =\
    \ 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n            count++;\n\
    \        if (s[i] == 'y' && i == s.length() - 1)\n            count++;\n    }\n\
    \    return count;", "  int sum = 0;\n  for (int i = 0; i < s.length(); i++) {\n\
    \    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n      sum++;\n    }\n  }\n  if (s[s.length() - 1] == 'y') {\n    sum++;\n\
    \  }\n  return sum;", "    long count = 0;\n    int i = 0;\n    bool flag = false;\n\
    \    while(s[i] != '\\0'){\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u'){\n            count++;\n        }\n        if(s[i]\
    \ == 'y'){\n            flag = true;\n        }\n        else{\n            flag\
    \ = false;\n        }\n        i++;\n    }\n    if(flag == true){\n        count++;\n\
    \    }\n    return count;", "    long vowels_count=0;\n    int size = s.size();\n\
    \    for(int i=0;i<size;i++){\n        if(s[i]=='a' || s[i]=='e' || s[i]=='i'\
    \ || s[i]=='o' || s[i]=='u'){\n            vowels_count++;\n        }\n      \
    \  else if(s[i]=='y' && i==size-1){\n            vowels_count++;\n        }\n\
    \    }\n    return vowels_count;", "  long count = 0;\n  for (int i = 0; i < s.length();\
    \ i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u') {\n      count++;\n    }\n  }\n  return count;", "  // Write your\
    \ code here.\n  long n = s.length();\n  long count = 0;\n  for(long i = 0; i <\
    \ n; i++) {\n    if((s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') || (s[i] == 'y' && i == n - 1)) {\n      count++;\n    }\n \
    \ }\n  return count;", "\tlong ctr = 0;\n\tfor (int i = 0; i < s.length(); i++)\
    \ {\n\t\tchar ch = s[i];\n\t\tif (ch == 'a' || ch == 'e' || ch == 'i' || ch ==\
    \ 'o' || ch == 'u') {\n\t\t\tctr += 1;\n\t\t}\n\t\tif (ch == 'y' && i == s.length()\
    \ - 1) {\n\t\t\tctr += 1;\n\t\t}\n\t}\n\treturn ctr;", "    // Write your code\
    \ here.\n    std::transform(s.begin(), s.end(), s.begin(), ::tolower);\n    long\
    \ vowelCount = 0;\n    for (auto c : s) {\n        if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n            vowelCount++;\n        }\n\
    \    }\n    return vowelCount;", "    // Replace this line with your code\n\t\
    int j=0;\n\tfor(int i=0;s[i]!='\\0';i++)\n\t{\n\t\tif(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \t\t\tj++;\n\t}\n\treturn j;", "    // Write your code here\n    // To print results\
    \ to the standard output you can use cout\n    // Example: cout << \"Hello world!\"\
    ;\n    return 0;", "    // Write your code here\n    long count = 0;\n    for(long\
    \ i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u')\n            count++;\n    }\n    if(s[s.length()\
    \ - 1] == 'y')\n        count++;\n    return count;", "\t// Write your code here\n\
    \tlong count = 0;\n\tif (s[s.length() - 1] == 'y')\n\t\tcount++;\n\tfor (long\
    \ i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u')\n\t\t\tcount++;\n\t}\n\treturn count;", " \
    \   int count=0;\n    for(int i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \        {\n            count++;\n        }\n        else if(s[i]=='y'&&i==s.length()-1)\n\
    \        {\n            count++;\n        }\n    }\n    return count;", "  //\
    \ Replace the following statements with your solution\n  long c = 0;\n  for(int\
    \ i = 0; i < s.length(); i++) {\n    if(s[i] == 'a' || s[i] == 'e' || s[i] ==\
    \ 'i' || s[i] == 'o' || s[i] == 'u') {\n      c++;\n    }\n    if(s[i] == 'y'\
    \ && i == s.length() - 1) {\n      c++;\n    }\n  }\n  return c;", "    // REPLACE\
    \ THE BODY OF THIS FUNCTION WITH YOUR OWN IMPLEMENTATION\n    int count = 0;\n\
    \    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n\
    \        }\n        else if(s[i] == 'y' && (i != s.length() - 1)) {\n        \
    \    continue;\n        }\n        else if(s[i] == 'y' && (i == s.length() - 1))\
    \ {\n            count++;\n        }\n    }\n    return count;", "\tlong count\
    \ = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\t\t\tcount++;\n\t\t\
    }\n\t\telse if (s[i] == 'y' && i == s.length() - 1) {\n\t\t\tcount++;\n\t\t}\n\
    \t}\n\treturn count;", "  int count = 0;\n  for (int i = 0; i < s.length(); i++)\
    \ {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n      count++;\n    }\n  }\n  if (s[s.length() - 1] == 'y') {\n \
    \   count++;\n  }\n  return count;", "    long count = 0;\n    std::string vowels\
    \ = \"aeiouy\";\n    for (int i = 0; i < s.length(); i++) {\n        if (vowels.find(tolower(s[i]))\
    \ != std::string::npos) {\n            count++;\n        }\n    }\n    return\
    \ count;", "\t// Write your code here\n\t// To print results to the standard output\
    \ you can use print\n\t// Example:\n\t// cout << \"Hello world!\";\n    int vowels\
    \ = 0;\n    int length = s.length();\n    for(int i = 0; i < length; i++) {\n\
    \        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u'){\n            vowels += 1;\n        } else if(s[i] == 'y' && i == length\
    \ - 1) {\n            vowels += 1;\n        }\n    }\n    return vowels;", " \
    \   long c = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if ((s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') || (s[i]\
    \ == 'y' && i == s.length() - 1)) {\n            c++;\n        }\n    }\n    return\
    \ c;", "    long length = s.length();\n    long count = 0;\n    for (long i =\
    \ 0; i < length; i++) {\n        char c = s[i];\n        c = tolower(c);\n   \
    \     if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n      \
    \      count++;\n        }\n    }\n    return count;", "\t// make a list of vowels\n\
    \tstd::vector<char> vowels = {'a', 'e', 'i', 'o', 'u', 'y'};\n\tlong count = 0;\n\
    \tfor (int i = 0; i < s.length(); i++) {\n\t\t// the first loop takes each character\n\
    \t\t// in the input word and assigns it to s[i]\n\t\tfor (int j = 0; j < vowels.size();\
    \ j++) {\n\t\t\t// the second loop takes each character\n\t\t\t// in the vowels\
    \ list and assigns it to\n\t\t\t// vowels[j]\n\t\t\tif (s[i] == vowels[j]) {\n\
    \t\t\t\t// If a character in the input word\n\t\t\t\t// is a vowel, increase the\
    \ count\n\t\t\t\tcount += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    if (s.size()\
    \ == 0) {\n        return 0;\n    }\n    else {\n        long count = 0;\n   \
    \     if (s[0] == 'a' || s[0] == 'e' || s[0] == 'i' || s[0] == 'o' || s[0] ==\
    \ 'u') {\n            count++;\n        }\n        return vowels_count(s.substr(1))\
    \ + count;\n    }", "    long count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        switch (s[i]) {\n            case 'a':\n            case 'e':\n\
    \            case 'i':\n            case 'o':\n            case 'u':\n       \
    \     case 'y':\n                count++;\n        }\n    }\n    return count;",
  "\tlong count = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\t\t\tcount++;\n\
    \t\t}\n\t\telse if (s[i] == 'y' && (i == s.length() - 1)) {\n\t\t\tcount++;\n\t\
    \t}\n\t}\n\treturn count;", "  long res = 0;\n  for (char c : s) {\n    res +=\
    \ std::string(\"aeiouy\").find(std::tolower(c)) != std::string::npos;\n  }\n \
    \ return res;", "\tlong vowels = 0;\n\tstd::string vowels_l = \"aeiou\";\n\tfor\
    \ (long i = 0; i < s.length(); i++) {\n\t\tif (vowels_l.find(tolower(s[i])) !=\
    \ std::string::npos) {\n\t\t\tvowels++;\n\t\t}\n\t}\n\treturn vowels;", "    long\
    \ count = 0;\n    long i = 0;\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u'){\n        count = count + 1;\n    }\n    i =\
    \ i + 1;\n    while (i < s.length()){\n        if (s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\n            count = count +\
    \ 1;\n        }\n        i = i + 1;\n    }\n    if (s[s.length() - 1] == 'y'){\n\
    \        count = count + 1;\n    }\n    return count;", "    long sum = 0;\n \
    \   for (size_t i = 0; i < s.size(); i++) {\n        if (s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n            sum++;\n    \
    \    if (s[i] == 'y' && (i == s.size() - 1))\n            sum++;\n    }\n    return\
    \ sum;", "    long result = 0;\n    for (int i = 0; i < s.length(); i++) {\n \
    \       if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n            result += 1;\n        }\n        if (s[i] == 'y' && i ==\
    \ s.length() - 1) {\n            result += 1;\n        }\n    }\n    return result;",
  "    long count=0;\n    for(long i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \        {\n            count++;\n        }\n        else if(s[i]=='y'&&i==s.length()-1)\n\
    \        {\n            count++;\n        }\n    }\n    return count;", "    long\
    \ count = 0;\n    for (long i = 0; i < s.length(); i++) {\n        if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n         \
    \   count++;\n        if (s[i] == 'y' && i == s.length() - 1)\n            count++;\n\
    \    }\n    return count;", "    // Insert your code here\n    //\n    long count\
    \ = 0;\n    for(int i = 0; i < s.length(); i++){\n        if(s[i] == 'a' || s[i]\
    \ == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\n            count++;\n\
    \        }\n    }\n    if(s[s.length()-1] == 'y'){\n        count++;\n    }\n\
    \    return count;", "\tlong count=0;\n\tchar vowels[] = {'a','e','i','o','u','y'};\n\
    \tfor(int i=0;i<s.length();i++){\n\t\tfor(int j=0;j<6;j++){\n\t\t\tif(s[i]==vowels[j]){\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;", "    long cnt = 0;\n\
    \    for (char c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' || c ==\
    \ 'o' || c == 'u') {\n            cnt++;\n        }\n    }\n    return cnt;",
  "    long ans = 0;\n    int len = s.length();\n    for (int i = 0; i < len; i++)\
    \ {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            ans++;\n        }\n        if (s[i] == 'y' && i == len\
    \ - 1) {\n            ans++;\n        }\n    }\n    return ans;", "  // Fill this\
    \ in.\n    long len=s.length();\n    long count=0;\n    for(long i=0;i<len;i++)\n\
    \    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \        {\n            count++;\n        }\n    }\n    return count;", "\tlong\
    \ vowels = 0;\n\tint len = s.length();\n\tfor (int i = 0; i < len; i++) {\n\t\t\
    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\
    \t\t\tvowels++;\n\t\t}\n\t\telse if (s[i] == 'y' && i == len - 1) {\n\t\t\tvowels++;\n\
    \t\t}\n\t}\n\treturn vowels;", "    // REPLACE THE QUESTION MARKS WITH YOUR CODE\n\
    \    int count = 0;\n    //for(int i = 0; i < s.length(); i++) {\n    if(s[s.length()-1]\
    \ == 'y') {\n        count += 1;\n    }\n    for(int i = 0; i < s.length(); i++)\
    \ {\n        if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            count += 1;\n        }\n    }\n    return count;", " \
    \ long vowels = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n      vowels++;\n\
    \    if (s[i] == 'y' && i != s.length() - 1)\n      vowels++;\n  }\n  return vowels;",
  "  long count = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n      count++;\n\
    \    if (s[i] == 'y' && i == s.length() - 1)\n      count++;\n  }\n  return count;",
  "    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        switch\
    \ (s[i]) {\n            case 'a':\n            case 'e':\n            case 'i':\n\
    \            case 'o':\n            case 'u':\n            case 'y':\n       \
    \         count++;\n                break;\n            default:\n           \
    \     break;\n        }\n    }\n    return count;", "    long count = 0;\n   \
    \ for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n    \
    \    }\n    }\n    if (s[s.length() - 1] == 'y') {\n        count++;\n    }\n\
    \    return count;", "    // Write your solution here.\n    return std::count_if(s.begin(),\
    \ s.end(), [](char c) {\n        char lower = std::tolower(c);\n        return\
    \ lower == 'a' || lower == 'e' || lower == 'i' || lower == 'o' || lower == 'u';\n\
    \    });", "    std::cout << s << std::endl;\n    // Returns the number of vowels\
    \ in s\n    long num_vowels = 0;\n    for (unsigned int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            if (s[i] == 'y' && i == s.length() - 1) {\n \
    \               num_vowels++;\n            } else if (s[i] != 'y') {\n       \
    \         num_vowels++;\n            }\n        }\n    }\n    return num_vowels;",
  "    long n = 0;\n    for (long i = 0; i < s.size(); i++) {\n        if (s[i] ==\
    \ 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n       \
    \     n++;\n        }\n        if (s[i] == 'y' && (i == s.size() - 1)) {\n   \
    \         n++;\n        }\n    }\n    return n;", "    long n_vowels = 0;\n  \
    \  // Your code here\n    // Placeholder, delete this.\n    std::string vowels\
    \ = \"aeiou\";\n    for (char c : s) {\n        if (vowels.find(c) != std::string::npos)\
    \ {\n            n_vowels++;\n        }\n    }\n    if (s[s.size() - 1] == 'y')\
    \ {\n        n_vowels++;\n    }\n    return n_vowels;", "    // Write your code\
    \ here\n    // To print results to the standard output you can use std::cout\n\
    \    // Example: std::cout << \"Hello world!\";\n    // std::cout << \"Hello world!\"\
    ;\n    int i,count=0;\n    for(i=0;i<s.length();i++)\n    {\n    \tif(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \    \t{\n    \t\tcount++;\n    \t}\n    }\n    if(s[s.length()-1]=='y')\n   \
    \ {\n    \tcount--;\n    }\n    return count;", "    int vowels = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n      \
    \  }\n        else if (s[i] == 'y' && i == s.length() - 1) {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "  std::string vowels = \"aeiou\";\n \
    \ long cnt = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (vowels.find(s[i])\
    \ != std::string::npos)\n      cnt++;\n  }\n  if (s[s.size() - 1] == 'y')\n  \
    \  cnt++;\n  return cnt;", "    long count = 0;\n    for (long i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            count++;\n        }\n    }\n    return count;",
  "    long count=0;\n    for(int i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \        {\n            count++;\n        }\n        else if(s[i]=='y'&&i==s.length()-1)\n\
    \        {\n            count++;\n        }\n    }\n    return count;", "    std::set<char>\
    \ vowels = {'a', 'e', 'i', 'o', 'u'};\n    int count = 0;\n    for (int i = 0;\
    \ i < s.length(); i++) {\n        // we can use s[i] or s.at(i) to access an individual\
    \ character\n        if (vowels.find(s[i]) != vowels.end()) {\n            count++;\n\
    \        }\n    }\n    if (s[s.length() - 1] == 'y') {\n        count++;\n   \
    \ }\n    return count;", "   long c = 0;\n   \n   for (int i = 0; i < s.length();\
    \ i++) {\n      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u') {\n         c++;\n      } else if (s[i] == 'y' && i == s.length()\
    \ - 1) {\n         c++;\n      }\n   }\n   \n   return c;", "\t// write your code\
    \ here.\n\tint i=0,count=0;\n\twhile(s[i]!='\\0')\n\t{\n\t\tif(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \t\t\tcount++;\n\t\ti++;\n\t}\n\tif(s[i-1]=='y')\n\t\tcount--;\n\treturn count;",
  "    // Your code here!\n    long count = 0;\n    int len = s.length();\n    if(len\
    \ < 1){\n      return 0;\n    }\n    if(len == 1){\n      if(s == \"a\"||s ==\
    \ \"e\"||s == \"i\"||s == \"o\"||s == \"u\"){\n        return 1;\n      }else{\n\
    \        return 0;\n      }\n    }\n    for(int i = 0; i < len; i++){\n      if(s[i]\
    \ == 'a'||s[i] == 'e'||s[i] == 'i'||s[i] == 'o'||s[i] == 'u'){\n        count\
    \ += 1;\n      }\n    }\n    if(s[len-1] == 'a'||s[len-1] == 'e'||s[len-1] ==\
    \ 'i'||s[len-1] == 'o'||s[len-1] == 'u'){\n      return count;\n    }else{\n \
    \     return count-1;\n    }", "  long count = 0;\n  std::string vowels = \"aeiouy\"\
    ;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == 'y' && i == s.length()\
    \ - 1) {\n      count++;\n    }\n    for (int j = 0; j < 6; j++) {\n      if (tolower(s[i])\
    \ == vowels[j]) {\n        count++;\n      }\n    }\n  }\n  return count;", "\t\
    long count = 0;\n\tfor (long i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\t\t\tcount++;\n\
    \t\t}\n\t\telse if (s[i] == 'y' && i == s.length() - 1) {\n\t\t\tcount++;\n\t\t\
    }\n\t}\n\treturn count;", "  long count = 0;\n  int n = s.length();\n  for (int\
    \ i = 0; i < n; i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u') {\n      count++;\n    }\n    if (s[i] == 'y' && i !=\
    \ n - 1) {\n      continue;\n    }\n    if (s[i] == 'y' && i == n - 1) {\n   \
    \   count++;\n    }\n  }\n  return count;", "\tint count = 0;\n\tfor (int i =\
    \ 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u') {\n\t\t\tcount += 1;\n\t\t}\n\t\telse if (s[i]\
    \ == 'y' && i != s.length() - 1) {\n\t\t\tcontinue;\n\t\t}\n\t\telse if (s[i]\
    \ == 'y' && i == s.length() - 1) {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;",
  "\t// Write your code here\n\t// To print results to the standard output you can\
    \ use std::cout\n\t// Example: std::cout << \"Hello world!\";\n\tlong count =\
    \ 0;\n\tstd::string vowels = \"aeiou\";\n\tstd::string input = s;\n\tfor (long\
    \ i = 0; i < input.length(); i++) {\n\t\tinput[i] = std::tolower(input[i]);\n\t\
    }\n\tfor (long i = 0; i < input.length(); i++) {\n\t\tif (vowels.find(input[i])\
    \ != std::string::npos) {\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (vowels.find(input[input.length()\
    \ - 1]) == std::string::npos) {\n\t\tcount--;\n\t}\n\treturn count;", "  long\
    \ count = 0;\n  for (unsigned int i = 0; i < s.length(); i++) {\n    if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \  count++;\n    }\n    if (s[i] == 'y' && i == s.length() - 1) {\n      count++;\n\
    \    }\n  }\n  return count;", "    // your code goes here\n    long count = 0;\n\
    \    for(int i = 0; i < s.length(); i++) {\n      if(s[i] == 'a' || s[i] == 'e'\
    \ || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n        count++;\n      }\n\
    \      if(s[i] == 'y' && i == s.length() - 1) {\n        count++;\n      }\n \
    \   }\n    return count;", "    // put your code here\n    long c = 0;\n    for(int\
    \ i = 0; i < s.length(); i++) {\n        if(s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u')\n            c++;\n    }\n    return c;",
  "    char vowels[] = {'a', 'e', 'i', 'o', 'u', 'y'};\n    long count = 0;\n    for\
    \ (long i = 0; i < s.length(); i++) {\n        for (long j = 0; j < 6; j++) {\n\
    \            if (s[i] == vowels[j]) {\n                count++;\n            }\n\
    \        }\n    }\n    if (s[s.length() - 1] == 'y') {\n        count++;\n   \
    \ }\n    return count;", "    long count = 0;\n    std::string aeiouy = \"aeiouy\"\
    ;\n    for (long i = 0; i < s.length(); i++) {\n        for (long j = 0; j < aeiouy.length();\
    \ j++) {\n            if (s[i] == aeiouy[j]) {\n                count += 1;\n\
    \            }\n        }\n    }\n    if (s[s.length() - 1] == 'y') {\n      \
    \  count += 1;\n    }\n    return count;", "    std::vector<char> vowels {'a',\
    \ 'e', 'i', 'o', 'u', 'y'};\n    long count = 0;\n    for (auto i: s) {\n    \
    \    if (std::find(vowels.begin(), vowels.end(), i) != vowels.end()) {\n     \
    \       ++count;\n        }\n    }\n    if (count > 0 && s[s.size() - 1] == 'y')\
    \ {\n        ++count;\n    }\n    return count;", "    std::transform(s.begin(),\
    \ s.end(), s.begin(), ::tolower);\n    long count = 0;\n    for (long i = 0; i\
    \ < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i'\
    \ || s[i] == 'o' || s[i] == 'u')\n            count++;\n    }\n    if (s[s.length()\
    \ - 1] == 'y')\n        count++;\n    return count;", "\t// Fill this value\n\t\
    long len = s.length();\n\tlong count = 0;\n\tfor(long i = 0; i < len; i++) {\n\
    \t\tif(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n\t\t\tcount++;\n\t\t}\n\t\telse if(s[i] == 'y' && i == len - 1) {\n\t\t\t\
    count++;\n\t\t}\n\t}\n\treturn count;", "    long count=0;\n    for(long i=0;i<s.length();i++)\n\
    \    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n  \
    \      {\n            count++;\n        }\n        else if(s[i]=='y'&&i==s.length()-1)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n    //WRITE\
    \ YOUR CODE HERE", "    long count = 0;\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            count++;\n        }\n    }\n    if (s[s.length() - 1]\
    \ == 'y') {\n        count++;\n    }\n    return count;", "    // your code here\n\
    \    long count = 0;\n    for(int i = 0; i < s.length(); i++){\n      if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){\n     \
    \   count++;\n      }\n      else if(s[i] == 'y' && i == s.length() - 1){\n  \
    \      count++;\n      }\n    }\n    return count;", "    long result = 0;\n \
    \   for (int i = 0; i < s.length(); i++) {\n        char c = s[i];\n        if\
    \ (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            result++;\n\
    \        }\n        if (c == 'y' && i == s.length() - 1) {\n            result++;\n\
    \        }\n    }\n    return result;", "  int count = 0;\n  for (int i = 0; i\
    \ < s.length(); i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u')\n      count++;\n    if (s[i] == 'y' && i == s.length()\
    \ - 1)\n      count++;\n  }\n  return count;", "    int count = 0;\n    for (int\
    \ i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n            count++;\n        }\n \
    \   }\n    if (s[s.length() - 1] == 'y') {\n        count++;\n    }\n    return\
    \ count;", "\tlong ret = 0;\n\t// a\n\tret += std::count(s.begin(), s.end(), 'a');\n\
    \t// e\n\tret += std::count(s.begin(), s.end(), 'e');\n\t// i\n\tret += std::count(s.begin(),\
    \ s.end(), 'i');\n\t// o\n\tret += std::count(s.begin(), s.end(), 'o');\n\t//\
    \ u\n\tret += std::count(s.begin(), s.end(), 'u');\n\t// y\n\tstd::string lastChar(s.end()\
    \ - 1, s.end());\n\tif (lastChar == \"y\") {\n\t\tret += 1;\n\t}\n\treturn ret;",
  "// INSERT YOUR CODE HERE\n    long vowels = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n            vowels++;\n        }\n        else if (s[i] ==\
    \ 'y' && i == s.length() - 1) {\n            vowels++;\n        }\n    }\n   \
    \ return vowels;", "    long vowels=0;\n    for(long i=0;i<s.length();i++)\n \
    \   {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n   \
    \     {\n            vowels++;\n        }\n        else if(s[i]=='y'&&i==s.length()-1)\n\
    \        {\n            vowels++;\n        }\n    }\n    return vowels;", "\t\
    long count = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\t\t\tcount++;\n\
    \t\t}\n\t\telse if (s[i] == 'y' && i == s.length() - 1) {\n\t\t\tcount++;\n\t\t\
    }\n\t}\n\treturn count;", "  // Insert your code here.\n    std::string vowels\
    \ = \"AEIOUaeiou\";\n    long count = 0;\n    for(char c : s){\n        if(vowels.find(c)\
    \ != std::string::npos){\n            count++;\n        }\n    }\n    return count;",
  "  long cnt = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      cnt++;\n\
    \    }\n  }\n  if (s[s.size() - 1] == 'y') {\n    cnt++;\n  }\n  return cnt;",
  "  // Your code goes here.\n  // Don't write main().\n  // Don't take input, it\
    \ is passed as function argument.\n  // Don't print output.\n  // Taking input\
    \ and printing output is handled automatically.\n  long ans=0;\n  //std::cout<<s.length();\n\
    \  for(long i=0;i<s.length();i++)\n  {\n    if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y')\n\
    \    {\n      ans++;\n    }\n  }\n  if(s[s.length()-1]=='y')\n  {\n    ans--;\n\
    \  }\n  return ans;", "\t// WRITE YOUR CODE HERE\n\tstd::string vowels = \"aeiou\"\
    ;\n\tlong count = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tif (vowels.find(s[i])\
    \ != std::string::npos) {\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (s[s.length() - 1]\
    \ == 'y') {\n\t\tcount++;\n\t}\n\treturn count;", "    int n = s.length();\n \
    \   int counter = 0;\n    int last = n - 1;\n    // check if first letter is vowel\n\
    \    if (s[0] == 'a' || s[0] == 'e' || s[0] == 'i' || s[0] == 'o' || s[0] == 'u')\n\
    \        counter++;\n    // check if last letter is vowel\n    if (s[last] ==\
    \ 'a' || s[last] == 'e' || s[last] == 'i' || s[last] == 'o' || s[last] == 'u')\n\
    \        counter++;\n    // check if last letter is 'y'\n    if (s[last] == 'y')\n\
    \        counter++;\n    // use for loop to check for vowels in the middle of\
    \ the string\n    for (int i = 1; i < last; i++) {\n        if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n            counter++;\n\
    \    }\n    return counter;", "  long i=0;\n  for(char c:s){\n    if(c=='a' ||\
    \ c=='e' || c=='i' || c=='o' || c=='u' || c=='y')\n      i++;\n  }\n  return i;",
  "\tlong count = 0;\n\tfor (auto c : s) {\n\t\tswitch (c) {\n\t\t\tcase 'a':\n\t\t\
    \tcase 'e':\n\t\t\tcase 'i':\n\t\t\tcase 'o':\n\t\t\tcase 'u':\n\t\t\tcase 'y':\n\
    \t\t\t\tcount++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\
    \treturn count;", "    long count = 0;\n    for (int i = 0; i < s.length(); i++)\
    \ {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            count += 1;\n        }\n    }\n    if (s[s.length() -\
    \ 1] == 'y') {\n        count += 1;\n    }\n    return count;", "\t// your code\
    \ here\n\t// s.length() == 0\n\tif (s.length() == 0) {\n\t\treturn 0;\n\t}\n\t\
    // s[0] == vowel\n\tif (s[0] == 'a' || s[0] == 'e' || s[0] == 'i' || s[0] == 'o'\
    \ || s[0] == 'u') {\n\t\treturn 1 + vowels_count(s.substr(1));\n\t}\n\t// s[0]\
    \ == consonent\n\telse {\n\t\treturn vowels_count(s.substr(1));\n\t}", "    long\
    \ counter = 0;\n    for (size_t i = 0; i < s.size(); i++) {\n        if (s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \        counter++;\n        }\n    }\n    if (s[s.size() - 1] == 'y') {\n   \
    \     counter++;\n    }\n    return counter;", "  // Write your code here.\n \
    \ long count = 0;\n  for(int i = 0; i < s.length(); i++) {\n    if(s[i] == 'a'\
    \ || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n      count++;\n\
    \    }\n    if(s[i] == 'y' && i == s.length() - 1) {\n      count++;\n    }\n\
    \  }\n  return count;", "    int count = 0;\n    for (int i = 0; i < s.length();\
    \ i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u')\n            count++;\n        if (s[i] == 'y' && i != s.length()\
    \ - 1)\n            count++;\n    }\n    return count;", "  assert(s.length()\
    \ > 0);\n  long no_of_vowels = 0;\n  std::vector<char> vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'};\n  char last_letter = s[s.length() - 1];\n  if (std::find(vowels.begin(),\
    \ vowels.end(), last_letter) != vowels.end()) {\n    no_of_vowels++;\n  }\n  for\
    \ (int i = 0; i < s.length() - 1; i++) {\n    if (std::find(vowels.begin(), vowels.end(),\
    \ s[i]) != vowels.end()) {\n      no_of_vowels++;\n    }\n  }\n  return no_of_vowels;",
  "    long int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if\
    \ (tolower(s[i]) == 'a' || tolower(s[i]) == 'e' || tolower(s[i]) == 'i' || tolower(s[i])\
    \ == 'o' || tolower(s[i]) == 'u') {\n            count++;\n        }\n    }\n\
    \    return count;", "    long count = 0;\n    std::string vowels = \"AEIOUaeiou\"\
    ;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'y' && i ==\
    \ s.length() - 1) {\n            count++;\n        }\n        else if (vowels.find(s[i])\
    \ != std::string::npos) {\n            count++;\n        }\n    }\n    return\
    \ count;", "  // Your code\n  long count = 0;\n  for(int i = 0; i < s.length();\
    \ i++) {\n    if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u')\n      count++;\n  }\n  if(s[s.length() - 1] == 'y')\n    count++;\n\
    \  return count;", "    long count = 0;\n    for (auto i : s) {\n        if (i\
    \ == 'a' || i == 'e' || i == 'i' || i == 'o' || i == 'u') {\n            count++;\n\
    \        }\n    }\n    return count;", "    long vowel_count = 0;\n    bool vowel\
    \ = false;\n    char vowels[10] = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'};\n    for (char c : s) {\n        for (char x : vowels) {\n           \
    \ if (c == x) {\n                vowel = true;\n                break;\n     \
    \       }\n        }\n        if (vowel) {\n            vowel_count++;\n     \
    \       vowel = false;\n        }\n    }\n    return vowel_count;", "   std::set<char>\
    \ vowels;\n   vowels.insert('a');\n   vowels.insert('e');\n   vowels.insert('i');\n\
    \   vowels.insert('o');\n   vowels.insert('u');\n   long ans = 0;\n   for (long\
    \ i = 0; i < s.size(); i++) {\n      if (vowels.find(s[i]) != vowels.end()) {\n\
    \         ans++;\n      }\n   }\n   if (vowels.find(s[s.size() - 1]) != vowels.end())\
    \ {\n      ans++;\n   }\n   return ans;", "\t// Write your code here\n\tlong res\
    \ = 0;\n\tfor (long i = 0; i < s.length(); i++) {\n\t\tchar c = s[i];\n\t\tif\
    \ (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n\t\t\tres++;\n\
    \t\t}\n\t\tif (c == 'y' && i == s.length() - 1) {\n\t\t\tres++;\n\t\t}\n\t}\n\t\
    return res;", "\tlong count = 0;\n\tfor (auto ch: s) {\n\t\tif (ch == 'a' || ch\
    \ == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n\t\t\tcount++;\n\t\t}\n\t\
    }\n\tif (s[s.length() - 1] == 'y') {\n\t\tcount++;\n\t}\n\treturn count;", " \
    \ long numVowels = 0;\n  for (int i = 0; i < s.length(); i++) {\n    char c =\
    \ tolower(s[i]);\n    if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u') {\n      numVowels++;\n    }\n  }\n  return numVowels;", "  // Write your\
    \ code here\n  int count = 0;\n  for(int i = 0; i < s.length(); i++) {\n    if(s[i]\
    \ == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n    \
    \  count++;\n    }\n    else if(s[i] == 'y' && i == s.length() - 1) {\n      count++;\n\
    \    }\n  }\n  return count;", "    /* Your code here */\n    long count = 0;\n\
    \    for(int i = 0; i < s.length(); i++){\n        if((s[i] == 'a' || s[i] ==\
    \ 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') && i != s.length()-1){\n \
    \           count += 1;\n        }else if(s[i] == 'y' && i == s.length()-1){\n\
    \            count += 1;\n        }\n    }\n    return count;", "  long vowels\
    \ = 0;\n  int len = s.length();\n  for (int i = 0; i < len; i++) {\n    char ch\
    \ = s[i];\n    if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u')\
    \ {\n      vowels++;\n    }\n    if (ch == 'y' && i == len - 1) {\n      vowels++;\n\
    \    }\n  }\n  return vowels;", "    long r = 0;\n    for (auto e : s) {\n   \
    \     if (e == 'a' || e == 'e' || e == 'i' || e == 'o' || e == 'u')\n        \
    \    r++;\n    }\n    if (s[s.size() - 1] == 'y')\n        r++;\n    return r;",
  "    long count=0;\n    for(int i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \        {\n            count++;\n        }\n        else if(s[i]=='y'&&i==s.length()-1)\n\
    \        {\n            count++;\n        }\n    }\n    return count;", "\t//\
    \ Here we have made a list of vowels\n\tstd::vector<char> vowels {'a', 'e', 'i',\
    \ 'o', 'u', 'y'};\n\tlong count = 0;\n\tbool last_was_y = false;\n\tfor (auto\
    \ c : s) {\n\t\t// Here we search for each char in string s in the vowels vector\n\
    \t\t// If found we increment the counter. Also, we also check if the\n\t\t// last\
    \ char was 'y'\n\t\tif (std::find(vowels.begin(), vowels.end(), c) != vowels.end())\
    \ {\n\t\t\tcount++;\n\t\t\tif (c == 'y') {\n\t\t\t\tlast_was_y = true;\n\t\t\t\
    }\n\t\t}\n\t\telse {\n\t\t\t// If the last char was y and current char is not\
    \ a vowel\n\t\t\t// We decrement the counter as we have already added 1 for 'y'\n\
    \t\t\tif (last_was_y) {\n\t\t\t\tcount--;\n\t\t\t\tlast_was_y = false;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn count;", "    long count = 0;\n    for (int i = 0; i <\
    \ s.length(); i++) {\n        if ((s[i] == 'a') || (s[i] == 'e') || (s[i] == 'i')\
    \ || (s[i] == 'o') || (s[i] == 'u')) {\n            count++;\n        }\n    \
    \    else if ((s[i] == 'y') && (i == s.length() - 1)) {\n            count++;\n\
    \        }\n    }\n    return count;", "  long res = 0;\n  for (int i = 0; i <\
    \ s.size(); i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i]\
    \ == 'o' || s[i] == 'u') {\n      res++;\n    }\n  }\n  if (s[s.size() - 1] ==\
    \ 'y') {\n    res++;\n  }\n  return res;", "    long result=0;\n    for(long i=0;i<s.length();i++){\n\
    \        switch(s[i]){\n            case 'a':\n            case 'e':\n       \
    \     case 'i':\n            case 'o':\n            case 'u':\n            case\
    \ 'y':\n                result++;\n                break;\n            default:\n\
    \                break;\n        }\n    }\n    if(s[s.length()-1]!='y'){\n   \
    \     result--;\n    }\n    return result;", "    // Your code here\n    long\
    \ vowels = 0;\n    char vow[] = {'a', 'e', 'i', 'o', 'u'};\n    char prev = s[0];\n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (std::find(std::begin(vow),\
    \ std::end(vow), s[i]) != std::end(vow))\n            vowels++;\n        if (s[i]\
    \ == 'y' && i != s.length() - 1)\n            vowels--;\n        prev = s[i];\n\
    \    }\n    return vowels;", "    if (s.length()==0) return 0;\n    long num_vowels\
    \ = 0;\n    for (auto it = s.begin(); it!=s.end(); ++it) {\n        if (*it=='a'\
    \ || *it=='e' || *it=='i' || *it=='o' || *it=='u')\n            num_vowels +=\
    \ 1;\n    }\n    if (s[s.length()-1]=='y')\n        num_vowels += 1;\n    return\
    \ num_vowels;", "\t// Replace the following code with your implementation.\n\t\
    // You may define additional function(s) if needed.\n\tint y_count = 0;\n\tint\
    \ vowel_count = 0;\n\t// check last letter\n\tif (s[s.length() - 1] == 'y') {\n\
    \t\ty_count++;\n\t}\n\t// check all vowels\n\tfor (int i = 0; i < s.length();\
    \ i++) {\n\t\tif (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\
    \ s[i] == 'u') {\n\t\t\tvowel_count++;\n\t\t}\n\t}\n\treturn vowel_count + y_count;",
  "  long count = 0;\n  int n = s.length();\n  for (int i = 0; i < n; i++) {\n   \
    \ if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\
    \ {\n      count++;\n    }\n  }\n  return count;", "   long c = 0;\n   for (int\
    \ i = 0; i < s.length(); i++) {\n      if (s[i] == 'a' || s[i] == 'e' || s[i]\
    \ == 'i' || s[i] == 'o' || s[i] == 'u') {\n         c++;\n      }\n   }\n   return\
    \ c;", "    long cnt = 0;\n    for (int i = 0; i < s.size(); i++) {\n        char\
    \ c = s[i];\n        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u')\n            cnt++;\n    }\n    if (s[s.size() - 1] == 'y')\n        cnt++;\n\
    \    return cnt;", "    long ans = 0;\n    if (s[s.length() - 1] == 'y') {\n \
    \       ans++;\n    }\n    int i = 0;\n    while (i < s.length()) {\n        if\
    \ (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n\
    \            ans++;\n        }\n        i++;\n    }\n    return ans;", "    int\
    \ count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        switch (s[i])\
    \ {\n            case 'a':\n            case 'e':\n            case 'i':\n   \
    \         case 'o':\n            case 'u':\n            case 'y':\n          \
    \      count++;\n                break;\n            default:\n              \
    \  break;\n        }\n    }\n    return count;", "\t// assertion to ensure that\
    \ the input is a string\n\tassert(typeid(s).name() == typeid(std::string).name());\n\
    \tlong count = 0;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\t// if the character\
    \ is vowel, increment the count variable\n\t\tif (s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u' || s[i] == 'y') {\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\t// if y is at the end of the string and is a vowel, increment the\
    \ count variable\n\tif (s[s.length() - 1] == 'y') {\n\t\tcount++;\n\t}\n\treturn\
    \ count;", "  std::set<char> vowels;\n  vowels.insert('a');\n  vowels.insert('e');\n\
    \  vowels.insert('i');\n  vowels.insert('o');\n  vowels.insert('u');\n  vowels.insert('y');\n\
    \  long result = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (vowels.find(tolower(s[i]))\
    \ != vowels.end()) {\n      result++;\n    }\n  }\n  if (vowels.find(tolower(s[s.length()\
    \ - 1])) == vowels.end()) {\n    result--;\n  }\n  return result;", "    long\
    \ c=0;\n    int i;\n    for(i=0;i<s.length();i++)\n    {\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u')\n\
    \        {\n            c++;\n        }\n        else if(s[i]=='y'&&i==s.length()-1)\n\
    \        {\n            c++;\n        }\n    }\n    return c;", "    long vowels\
    \ = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' ||\
    \ s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            vowels++;\n\
    \        }\n        if (s[i] == 'y' && i == s.length() - 1) {\n            vowels++;\n\
    \        }\n    }\n    return vowels;", "    long vcount = 0;\n    for (int i\
    \ = 0; i < s.length(); i++) {\n        char c = s[i];\n        if (c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            vcount++;\n   \
    \     }\n        if (c == 'y' && i != s.length() - 1) {\n            vcount++;\n\
    \        }\n    }\n    return vcount;", "    //+BEGIN_SOLUTION\n    long cnt =\
    \ 0;\n    for (char c : s) {\n        if (c == 'a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u') {\n            cnt++;\n        }\n    }\n    if (s.back()\
    \ == 'y') {\n        cnt++;\n    }\n    return cnt;\n    //+END_SOLUTION", " \
    \   long count = 0;\n    long n = s.length();\n    for (int i = 0; i < n; i++)\
    \ {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i]\
    \ == 'u') {\n            count++;\n        }\n    }\n    if (s[n - 1] == 'y')\
    \ {\n        count++;\n    }\n    return count;", "    long ans = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a' || s[i] == 'e' ||\
    \ s[i] == 'i' || s[i] == 'o' || s[i] == 'u') {\n            ans++;\n        }\n\
    \    }\n    if (s[s.length() - 1] == 'y') {\n        ans++;\n    }\n    return\
    \ ans;", "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n  \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n            count++;\n        }\n    }\n    return count;", "    std::string\
    \ vowels = \"aeiouy\";\n    std::string letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    std::vector<int> in;\n    for (int i = 0; i < s.length(); i++) {\n    \
    \    for (int j = 0; j < vowels.length(); j++) {\n            if (s[i] == vowels[j])\
    \ {\n                in.push_back(i);\n            }\n        }\n    }\n    int\
    \ count = 0;\n    if (in.size() > 0) {\n        for (int i = 0; i < in.size();\
    \ i++) {\n            if (i > 0) {\n                if (in[i] != in[i - 1] + 1)\
    \ {\n                    count++;\n                }\n            } else {\n \
    \               count++;\n            }\n        }\n    }\n    return count;"]
stop_tokens:
- "\n}"

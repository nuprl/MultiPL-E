name: HumanEval_27_flip_case
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// For a given string, flip\
  \ lowercase characters to uppercase and uppercase to lowercase.\n// >>> flip_case((\"\
  Hello\"))\n// (\"hELLO\")\nstd::string flip_case(std::string string) {\n"
tests: "}\nint main() {\n    auto candidate = flip_case;\n    assert(candidate((\"\
  \")) == (\"\"));\n    assert(candidate((\"Hello!\")) == (\"hELLO!\"));\n    assert(candidate((\"\
  These violent delights have violent ends\")) == (\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\"));\n}\n"
completions: ["\t// write your code here\n\tfor (int i = 0; i < string.length(); i++)\
    \ {\n\t\tif (string[i] >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i]\
    \ - 32;\n\t\t}\n\t\telse if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i]\
    \ = string[i] + 32;\n\t\t}\n\t}\n\treturn string;", "  string.resize(256);\n \
    \ for(int i=0;i<string.size();i++)\n  {\n    if(islower(string[i]))\n    {\n \
    \     string[i]=toupper(string[i]);\n    }\n    else if(isupper(string[i]))\n\
    \    {\n      string[i]=tolower(string[i]);\n    }\n  }\n  return string;", "\t\
    int i = 0;\n\twhile (string[i] != '\\0')\n\t{\n\t\tif (string[i] >= 65 && string[i]\
    \ <= 90)\n\t\t{\n\t\t\tstring[i] = string[i] + 32;\n\t\t}\n\t\telse if (string[i]\
    \ >= 97 && string[i] <= 122)\n\t\t{\n\t\t\tstring[i] = string[i] - 32;\n\t\t}\n\
    \t\ti++;\n\t}\n\treturn string;", '  return "";', "    std::transform(string.begin(),\
    \ string.end(), string.begin(), ::tolower);\n    return string;", "    std::transform(string.begin(),\
    \ string.end(), string.begin(), ::tolower);\n    return string;", "  for (int\
    \ i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i] <=\
    \ 'z')\n      string[i] = string[i] - 32;\n    else if (string[i] >= 'A' && string[i]\
    \ <= 'Z')\n      string[i] = string[i] + 32;\n  }\n  return string;", "    //\
    \ not complete\n    for (int i = 0; i < string.length(); i++) {\n        if (std::isupper(string[i]))\
    \ {\n            string[i] = std::tolower(string[i]);\n        } else {\n    \
    \        string[i] = std::toupper(string[i]);\n        }\n    }\n    return string;",
  "\tint i = 0;\n\twhile (string[i] != '\\0')\n\t{\n\t\tif (string[i] >= 'a' && string[i]\
    \ <= 'z')\n\t\t{\n\t\t\tstring[i] = string[i] - 'a' + 'A';\n\t\t}\n\t\telse if\
    \ (string[i] >= 'A' && string[i] <= 'Z')\n\t\t{\n\t\t\tstring[i] = string[i] -\
    \ 'A' + 'a';\n\t\t}\n\t\ti++;\n\t}\n\treturn string;", "    char* string_arr =\
    \ string.c_str();\n    int length = string.length();\n    char* string_arr_new\
    \ = new char[length+1];\n    int j = 0;\n    for(int i = 0; i < length; i++) {\n\
    \        if(string_arr[i] >= 'a' && string_arr[i] <= 'z') {\n            string_arr_new[j]\
    \ = string_arr[i] - 32;\n            j++;\n        }\n        else if(string_arr[i]\
    \ >= 'A' && string_arr[i] <= 'Z') {\n            string_arr_new[j] = string_arr[i]\
    \ + 32;\n            j++;\n        }\n        else {\n            string_arr_new[j]\
    \ = string_arr[i];\n            j++;\n        }\n    }\n    string_arr_new[j]\
    \ = '\\0';\n    return string_arr_new;", "    for(int i=0; i<string.length();\
    \ i++){\n        if(islower(string[i])){\n            string[i] = toupper(string[i]);\n\
    \        }else{\n            string[i] = tolower(string[i]);\n        }\n    }\n\
    \    return string;", "    std::string result{};\n    for (char c : string) {\n\
    \        if (islower(c)) {\n            result += toupper(c);\n        } else\
    \ {\n            result += tolower(c);\n        }\n    }\n    return result;",
  "  std::string newStr;\n  for (unsigned int i = 0; i < string.length(); i++) {\n\
    \    if (string[i] >= 'a' && string[i] <= 'z') {\n      newStr += string[i] -\
    \ 32;\n    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      newStr +=\
    \ string[i] + 32;\n    } else {\n      newStr += string[i];\n    }\n  }\n  return\
    \ newStr;", "\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i]\
    \ <= 'Z' && string[i] >= 'A') {\n\t\t\tstring[i] = string[i] + 32;\n\t\t}\n\t\t\
    else if (string[i] <= 'z' && string[i] >= 'a') {\n\t\t\tstring[i] = string[i]\
    \ - 32;\n\t\t}\n\t}\n\treturn string;", "  for (unsigned int i = 0; i < string.length();\
    \ i++) {\n    if(isupper(string[i])) {\n      string[i] = tolower(string[i]);\n\
    \    } else {\n      string[i] = toupper(string[i]);\n    }\n  }\n  return string;",
  '  //Implement your solution here', "    // Read only region end\n    for(int i=0;i<string.length();i++)\n\
    \    {\n        if(string[i]>='a' && string[i]<='z')\n        {\n            string[i]=string[i]-32;\n\
    \        }\n        else if(string[i]>='A' && string[i]<='Z')\n        {\n   \
    \         string[i]=string[i]+32;\n        }\n    }\n    return string;", "\t\
    string=\n  \n  return string;", "  for (char &c : string) {\n    if (c >= 'a'\
    \ && c <= 'z')\n      c = toupper(c);\n    else if (c >= 'A' && c <= 'Z')\n  \
    \    c = tolower(c);\n  }\n  return string;", "    int l = string.length();\n\
    \    char string_flipped[l];\n    for (int i = 0; i < l; i++) {\n        if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            string_flipped[i] = string[i] - 32;\n\
    \        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string_flipped[i]\
    \ = string[i] + 32;\n        } else {\n            string_flipped[i] = string[i];\n\
    \        }\n    }\n    return string_flipped;", "    for(int i=0;i<string.length();i++){\n\
    \        if(string[i] >= 'a' && string[i] <= 'z'){\n            string[i] = string[i]\
    \ - 32;\n        }else if(string[i] >= 'A' && string[i] <= 'Z'){\n           \
    \ string[i] = string[i] + 32;\n        }\n    }\n    return string;", '  return
    string;', "\tfor (size_t i = 0; i < string.size(); i++) {\n\t\tif (islower(string[i]))\n\
    \t\t\tstring[i] = toupper(string[i]);\n\t\telse if (isupper(string[i]))\n\t\t\t\
    string[i] = tolower(string[i]);\n\t}\n\treturn string;", "    std::string new_string;\n\
    \    for (unsigned int i = 0; i < string.length(); i++) {\n        if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            new_string += (string[i] - 32);\n\
    \        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            new_string\
    \ += (string[i] + 32);\n        } else {\n            new_string += string[i];\n\
    \        }\n    }\n    return new_string;", "\tstd::string output=\"\";\n\tstd::string\
    \ s=string;\n\tfor(int i=0;i<s.length();i++)\n\t{\n\t\tif(s[i]>='a' && s[i]<='z')\n\
    \t\t\ts[i]=s[i]-32;\n\t\telse if(s[i]>='A' && s[i]<='Z')\n\t\t\ts[i]=s[i]+32;\n\
    \t}\n\toutput=s;\n\treturn output;", '', "    char ch;\n    for(int i=0;i<string.length();i++)\n\
    \    {\n        ch=string[i];\n        if(ch>='A' && ch<='Z')\n        {\n   \
    \         string[i]=tolower(ch);\n        }\n        else if(ch>='a' && ch<='z')\n\
    \        {\n            string[i]=toupper(ch);\n        }\n    }\n    return string;",
  "    std::string str = \"\";\n    for(int i = 0; i < string.length(); i++) {\n \
    \       if(string[i] >= 'a' && string[i] <= 'z') {\n            str += (char)(string[i]\
    \ - 32);\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z') {\n\
    \            str += (char)(string[i] + 32);\n        }\n        else {\n     \
    \       str += string[i];\n        }\n    }\n    return str;", "\t// your code\
    \ goes here\n\tfor(int i=0;i<string.length();i++)\n\t{\n\t\tif(string[i]>='a'\
    \ && string[i]<='z')\n\t\t{\n\t\t\tstring[i]=string[i]-32;\n\t\t}\n\t\telse if(string[i]>='A'\
    \ && string[i]<='Z')\n\t\t{\n\t\t\tstring[i]=string[i]+32;\n\t\t}\n\t}\n\treturn\
    \ string;", "    std::string result;\n    std::transform(string.begin(), string.end(),\
    \ string.begin(), ::tolower);\n    return result;", "\tfor (auto &c : string)\
    \ {\n\t\tif (c >= 'a' && c <= 'z') {\n\t\t\tc -= 32;\n\t\t} else if (c >= 'A'\
    \ && c <= 'Z') {\n\t\t\tc += 32;\n\t\t}\n\t}\n\treturn string;", "    std::transform(string.begin(),\
    \ string.end(), string.begin(), ::tolower);\n    return string;", "    std::string\
    \ result = \"\";\n    for (unsigned int i = 0; i < string.length(); i++) {\n \
    \       if (string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i]\
    \ - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n        \
    \    result += string[i] + 32;\n        } else {\n            result += string[i];\n\
    \        }\n    }\n    return result;", "  for (int i = 0; i < string.length();\
    \ i++) {\n    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i]\
    \ - 'a' + 'A';\n    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n     \
    \ string[i] = string[i] - 'A' + 'a';\n    }\n  }\n  return string;", "    for(auto&\
    \ c : string) {\n        if(isupper(c)) {\n            c = tolower(c);\n     \
    \   } else {\n            c = toupper(c);\n        }\n    }\n    return string;",
  "\tstd::transform(string.begin(), string.end(), string.begin(), ::tolower);\n\t\
    return string;", "    std::transform(string.begin(), string.end(), string.begin(),\n\
    \                   [](char c) { return std::isupper(c) ? std::tolower(c) : std::toupper(c);\
    \ });\n    return string;", "  for (auto& c : string) {\n    if (isupper(c)) c\
    \ = tolower(c);\n    else if (islower(c)) c = toupper(c);\n  }\n  return string;",
  "    for(int i=0; i<string.length(); i++){\n        if(isupper(string[i])){\n  \
    \          string[i] = tolower(string[i]);\n        }\n        else if(islower(string[i])){\n\
    \            string[i] = toupper(string[i]);\n        }\n    }\n    return string;",
  "  std::string flipped_case = \"\";\n  for (int i = 0; i < string.length(); i++)\
    \ {\n    if (string[i] >= 65 && string[i] <= 90) {\n      flipped_case += (char)(string[i]\
    \ + 32);\n    } else if (string[i] >= 97 && string[i] <= 122) {\n      flipped_case\
    \ += (char)(string[i] - 32);\n    } else {\n      flipped_case += string[i];\n\
    \    }\n  }\n  return flipped_case;", "    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]>='a' && string[i]<='z')\n            string[i] = toupper(string[i]);\n\
    \        else if(string[i]>='A' && string[i]<='Z')\n            string[i] = tolower(string[i]);\n\
    \    }\n    return string;", "\tstd::transform(string.begin(), string.end(), string.begin(),\
    \ ::tolower);\n\n\treturn string;", "    for(int i=0; i<string.length(); i++){\n\
    \        if(string[i] >= 'a' && string[i] <= 'z')\n            string[i] = string[i]\
    \ - 32;\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n            string[i]\
    \ = string[i] + 32;\n    }\n    return string;", "\tfor (int i = 0; i < string.length();\
    \ i++) {\n\t\tif (string[i] >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = toupper(string[i]);\n\
    \t\t}\n\t\telse if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] =\
    \ tolower(string[i]);\n\t\t}\n\t}\n\treturn string;", '    ', "    std::string\
    \ result = \"\";\n    for (auto i : string) {\n        if (i >= 'a' && i <= 'z')\
    \ {\n            result += i - 32;\n        } else if (i >= 'A' && i <= 'Z') {\n\
    \            result += i + 32;\n        } else {\n            result += i;\n \
    \       }\n    }\n    return result;", "  for (int i = 0; i < string.length();\
    \ i++) {\n    if (islower(string[i])) {\n      string[i] = toupper(string[i]);\n\
    \    } else {\n      string[i] = tolower(string[i]);\n    }\n  }\n  return string;",
  "  for (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] = string[i] - 32;\n    } else if (string[i] >= 'A'\
    \ && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return\
    \ string;", "    std::string result;\n    int i;\n    char c;\n    for (i = 0;\
    \ i < string.length(); i++) {\n        c = string[i];\n        if (c >= 'a' &&\
    \ c <= 'z')\n            result += toupper(c);\n        else if (c >= 'A' && c\
    \ <= 'Z')\n            result += tolower(c);\n        else\n            result\
    \ += c;\n    }\n    return result;", "  std::string s = \"\";\n  for (int i =\
    \ 0; i < string.length(); i++) {\n    if (isupper(string[i])) {\n      s += tolower(string[i]);\n\
    \    } else {\n      s += toupper(string[i]);\n    }\n  }\n  return s;", "   \
    \ for(int i=0; i<string.length(); i++){\n        if(string[i]>='a' && string[i]<='z'){\n\
    \            string[i] = 'A' + (string[i] - 'a');\n        }else if(string[i]>='A'\
    \ && string[i]<='Z'){\n            string[i] = 'a' + (string[i] - 'A');\n    \
    \    }\n    }\n    return string;", "    std::string result;\n    std::transform(string.begin(),\
    \ string.end(), back_inserter(result),[](char c) {\n        if (std::isupper(c))\
    \ return std::tolower(c);\n        if (std::islower(c)) return std::toupper(c);\n\
    \        return c;\n    });\n    return result;", "    for(int i=0;i<string.length();i++){\n\
    \        if(string[i] >= 'a' && string[i] <= 'z'){\n            string[i] = string[i]\
    \ - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z'){\n\
    \            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return\
    \ string;", "    for(int i=0; i<string.length();i++){\n        if(string[i]>='a'\
    \ && string[i]<='z'){\n            string[i]=string[i]-32;\n        }\n      \
    \  else if(string[i]>='A' && string[i]<='Z'){\n            string[i]=string[i]+32;\n\
    \        }\n    }\n    return string;", "    for(int i=0; i<string.length(); i++){\n\
    \        int character = string[i];\n        if(character >= 97 && character <=\
    \ 122){\n            string[i] = (char)(character - 32);\n        }\n        else\
    \ if(character >= 65 && character <= 90){\n            string[i] = (char)(character\
    \ + 32);\n        }\n    }\n    return string;", "\tfor (size_t i = 0; i < string.size();\
    \ i++) {\n\t\tif (isupper(string[i])) {\n\t\t\tstring[i] = tolower(string[i]);\n\
    \t\t}\n\t\telse if (islower(string[i])) {\n\t\t\tstring[i] = toupper(string[i]);\n\
    \t\t}\n\t}\n\treturn string;", "\tfor (int i = 0; i < string.length(); i++) {\n\
    \t\tif (string[i] >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] -\
    \ 32;\n\t\t}\n\t\telse if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i]\
    \ = string[i] + 32;\n\t\t}\n\t}\n\treturn string;", "  std::string new_string\
    \ = \"\";\n  for (char ch: string) {\n    if (ch >= 65 && ch <= 90) {\n      new_string\
    \ += (char)(ch + 32);\n    } else if (ch >= 97 && ch <= 122) {\n      new_string\
    \ += (char)(ch - 32);\n    } else {\n      new_string += ch;\n    }\n  }\n  return\
    \ new_string;", "  for (int i = 0; i < string.length(); i++) {\n    if (isupper(string[i]))\
    \ {\n      string[i] = tolower(string[i]);\n    } else {\n      string[i] = toupper(string[i]);\n\
    \    }\n  }\n  return string;", "    for(int i=0;i<string.length();i++){\n   \
    \     if(string[i]>=65&&string[i]<=90){\n            string[i]+=32;\n        }\n\
    \        else if(string[i]>=97&&string[i]<=122){\n            string[i]-=32;\n\
    \        }\n    }\n    return string;", "  for (int i = 0; i < string.length();\
    \ i++) {\n    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i]\
    \ - 32;\n    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i]\
    \ = string[i] + 32;\n    }\n  }\n  return string;", "    int i;\n    char ch;\n\
    \    for(i=0;i<string.length();i++)\n    {\n        ch=string[i];\n        if(isupper(ch))\n\
    \            string[i]=tolower(ch);\n        else\n            string[i]=toupper(ch);\n\
    \    }\n    return string;", "    std::string new_string;\n    for (char c : string)\
    \ {\n        if (c >= 'a' && c <= 'z') {\n            new_string += std::toupper(c);\n\
    \        } else if (c >= 'A' && c <= 'Z') {\n            new_string += std::tolower(c);\n\
    \        } else {\n            new_string += c;\n        }\n    }\n    return\
    \ new_string;", "\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i]\
    \ <= 'Z' && string[i] >= 'A') {\n\t\t\tstring[i] = tolower(string[i]);\n\t\t}\n\
    \t\telse if (string[i] <= 'z' && string[i] >= 'a') {\n\t\t\tstring[i] = toupper(string[i]);\n\
    \t\t}\n\t}\n\treturn string;", "  //  return string();\n  // return string;\n\
    \  //  return \"\";\n  //  return \" \";\n  //  return \"aAaA\";\n  //  return\
    \ \"BbBb\";\n  //  return \"1234\";\n  //  return \" \";\n  //  return \"aAaA\"\
    ;\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //\
    \  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return\
    \ \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\"\
    ;\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //\
    \  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return\
    \ \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\"\
    ;\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //\
    \  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return\
    \ \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\"\
    ;\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //\
    \  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return\
    \ \"aAaA\";\n  //  return \"aAaA\";\n  //  return \"aAaA\";\n  //  return", " \
    \   for(int i=0;i<string.length();i++){\n        if(string[i]>='a' && string[i]<='z'){\n\
    \            string[i] = toupper(string[i]);\n        }\n        else if(string[i]>='A'\
    \ && string[i]<='Z'){\n            string[i] = tolower(string[i]);\n        }\n\
    \    }\n    return string;", "    for(auto &ch : string) {\n        ch = islower(ch)\
    \ ? toupper(ch) : tolower(ch);\n    }\n    return string;", "    std::string flipped_string\
    \ = \"\";\n    int i = 0;\n    while (string[i] != '\\0') {\n        if (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n            flipped_string += (string[i] - 32);\n\
    \        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            flipped_string\
    \ += (string[i] + 32);\n        } else {\n            flipped_string += string[i];\n\
    \        }\n        i++;\n    }\n    return flipped_string;", "    std::string\
    \ s;\n    std::transform(string.begin(), string.end(), string.begin(), ::tolower);\n\
    \    std::cout << string << std::endl;\n    for (auto i : string) {\n        if\
    \ (islower(i))\n            s += toupper(i);\n        else\n            s += tolower(i);\n\
    \    }\n    return s;", "  for (int i = 0; i < string.length(); i++) {\n    if\
    \ (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] - 32;\n\
    \    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i]\
    \ + 32;\n    }\n  }\n  return string;", "  int len = string.length();\n  char\
    \ char_array[len+1];\n  strcpy(char_array, string.c_str());\n  for (int i = 0;\
    \ i < len; i++) {\n    char_array[i] = tolower(char_array[i]);\n  }\n  return\
    \ char_array;", "  for (int i = 0; i < string.length(); i++) {\n    if (isupper(string[i]))\
    \ {\n      string[i] = tolower(string[i]);\n    } else {\n      string[i] = toupper(string[i]);\n\
    \    }\n  }\n  return string;", "  for (int i = 0; i < string.length(); i++) {\n\
    \    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i]\
    \ - 'a' + 'A';\n    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n     \
    \ string[i] = string[i] - 'A' + 'a';\n    }\n  }\n  return string;", "    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]>=65 && string[i]<=90){\n \
    \           string[i]+=32;\n        }\n        else if(string[i]>=97 && string[i]<=122){\n\
    \            string[i]-=32;\n        }\n    }\n    return string;", "\tstd::string\
    \ s=\"\";\n\tfor(int i=0;i<string.length();i++)\n\t{\n\t\tchar a=string[i];\n\t\
    \tif(a>='a' && a<='z')\n\t\t{\n\t\t\ta=a-'a'+'A';\n\t\t}\n\t\telse if(a>='A' &&\
    \ a<='Z')\n\t\t{\n\t\t\ta=a-'A'+'a';\n\t\t}\n\t\ts+=a;\n\t}\n\treturn s;", " \
    \ std::string output_string;\n  for (int i = 0; i < string.length(); i++) {\n\
    \    if (string[i] >= 65 && string[i] <= 90) {\n      output_string += (char)(string[i]\
    \ + 32);\n    } else if (string[i] >= 97 && string[i] <= 122) {\n      output_string\
    \ += (char)(string[i] - 32);\n    } else {\n      output_string += string[i];\n\
    \    }\n  }\n  return output_string;", "    for(char& c : string) {\n        if(isupper(c))\
    \ {\n            c = tolower(c);\n        } else {\n            c = toupper(c);\n\
    \        }\n    }\n    return string;", "  for (int i = 0; i < string.length();\
    \ i++) {\n    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i]\
    \ - 32;\n    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i]\
    \ = string[i] + 32;\n    }\n  }\n  return string;", "  for (auto it = string.begin();\
    \ it != string.end(); ++it) {\n    if (*it >= 'a' && *it <= 'z') {\n      *it\
    \ = (*it - 'a') + 'A';\n    } else if (*it >= 'A' && *it <= 'Z') {\n      *it\
    \ = (*it - 'A') + 'a';\n    }\n  }\n  return string;", "  std::string string2;\n\
    \  for(int i=0;i<string.length();i++){\n    if(std::isupper(string[i])){\n   \
    \   string2.push_back(std::tolower(string[i]));\n    }\n    else{\n      string2.push_back(std::toupper(string[i]));\n\
    \    }\n  }\n  return string2;", "    std::string result=\"\";\n    int difference\
    \ = 'a'-'A';\n    for(int i=0;i<string.length();i++){\n        if(string[i]>='a'\
    \ && string[i]<='z'){\n            result+=string[i]-difference;\n        }\n\
    \        else if(string[i]>='A' && string[i]<='Z'){\n            result+=string[i]+difference;\n\
    \        }\n        else\n            result+=string[i];\n    }\n    return result;",
  "    for(int i=0;i<string.length();i++){\n        if(string[i]>='a'&&string[i]<='z'){\n\
    \            string[i]=string[i]-32;\n        }\n        else if(string[i]>='A'&&string[i]<='Z'){\n\
    \            string[i]=string[i]+32;\n        }\n    }\n    return string;", "\t\
    std::string result = string;\n\tfor (int i = 0; i < string.length(); i++) {\n\t\
    \tif (string[i] > 'A' && string[i] < 'Z') {\n\t\t\tresult[i] = result[i] + 32;\n\
    \t\t}\n\t\telse if (string[i] > 'a' && string[i] < 'z') {\n\t\t\tresult[i] = result[i]\
    \ - 32;\n\t\t}\n\t}\n\treturn result;", "  char t;\n  for(int i=0;i<string.length();i++)\n\
    \  {\n    if((int)string[i]>64 && (int)string[i]<91)\n    {\n      t=string[i]+32;\n\
    \      string[i]=t;\n    }\n    else if((int)string[i]>96 && (int)string[i]<123)\n\
    \    {\n      t=string[i]-32;\n      string[i]=t;\n    }\n  }\n  return string;",
  "    // your code here\n    for(int i=0;i<string.length();i++)\n    {\n      if(string[i]>='a'\
    \ && string[i]<='z')\n        string[i] = string[i] - 32;\n      else if(string[i]>='A'\
    \ && string[i]<='Z')\n        string[i] = string[i] + 32;\n    }\n    return string;",
  "    int len = string.length();\n    std::string output;\n    for(int i = 0; i <\
    \ len; i++) {\n        if(string[i] >= 'a' && string[i] <= 'z')\n            output\
    \ += (string[i] - 'a' + 'A');\n        else if(string[i] >= 'A' && string[i] <=\
    \ 'Z')\n            output += (string[i] - 'A' + 'a');\n        else\n       \
    \     output += string[i];\n    }\n    return output;", "    for(auto& c : string)\
    \ {\n        if(isupper(c)) {\n            c = tolower(c);\n        } else {\n\
    \            c = toupper(c);\n        }\n    }\n    return string;", "    std::string\
    \ result;\n    for (int i = 0; i < string.length(); i++) {\n        int b = (int)string[i];\n\
    \        if (b >= 97 && b <= 122) {\n            b = b - 32;\n        } else if\
    \ (b >= 65 && b <= 90) {\n            b = b + 32;\n        }\n        result.push_back((char)b);\n\
    \    }\n    return result;", "  for (int i = 0; i < string.length(); i++) {\n\
    \    if (islower(string[i])) {\n      string[i] = toupper(string[i]);\n    } else\
    \ {\n      string[i] = tolower(string[i]);\n    }\n  }\n  return string;", "\t\
    std::cout << \"String is: \"<< string << std::endl;\n\tfor (int i = 0; i < string.length();\
    \ i++) {\n\t\tif (string[i] >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = toupper(string[i]);\n\
    \t\t}\n\t\telse if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] =\
    \ tolower(string[i]);\n\t\t}\n\t}\n\treturn string;", "    std::string str2;\n\
    \    for(int i=0;i<string.length();i++){\n        if(isupper(string[i])){\n  \
    \          str2+=tolower(string[i]);\n        }\n        else if(islower(string[i])){\n\
    \            str2+=toupper(string[i]);\n        }\n        else{\n           \
    \ str2+=string[i];\n        }\n    }\n    return str2;", "    std::string s =\
    \ \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (islower(string[i]))\n\
    \            s = s + toupper(string[i]);\n        else\n            s = s + tolower(string[i]);\n\
    \    }\n    return s;", "\t// for(unsigned int i = 0; i < string.length(); i++)\
    \ {\n\t//     if(islower(string[i])) {\n\t//         string[i] = toupper(string[i]);\n\
    \t//     } else {\n\t//         string[i] = tolower(string[i]);\n\t//     }\n\t\
    // }\n\t// return string;\n\tstd::transform(string.begin(), string.end(), string.begin(),\
    \ ::tolower);\n\treturn string;", "    for(int i=0;i<string.length();i++){\n \
    \       if(string[i]>=65 && string[i]<=90){\n            string[i]+=32;\n    \
    \    }\n        else if(string[i]>=97 && string[i]<=122){\n            string[i]-=32;\n\
    \        }\n    }\n    return string;", "    std::string s=\"\";\n    for(int\
    \ i=0;i<string.length();i++){\n        if(islower(string[i])){\n            s=s+char(toupper(string[i]));\n\
    \        }\n        else if(isupper(string[i])){\n            s=s+char(tolower(string[i]));\n\
    \        }\n        else{\n            s=s+string[i];\n        }\n    }\n    return\
    \ s;", "    for(int i=0;i<string.length();i++){\n        if(islower(string[i])){\n\
    \            string[i]=toupper(string[i]);\n        }\n        else{\n       \
    \     string[i]=tolower(string[i]);\n        }\n    }\n    return string;", " \
    \   std::string new_string;\n    for (auto letter : string) {\n        if (islower(letter))\
    \ {\n            new_string += toupper(letter);\n        } else {\n          \
    \  new_string += tolower(letter);\n        }\n    }\n    return new_string;",
  "    for(int i=0; i<string.length(); i++){\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z'){\n            string[i] = string[i] - 'a' + 'A';\n        }\n      \
    \  else if(string[i] >= 'A' && string[i] <= 'Z'){\n            string[i] = string[i]\
    \ - 'A' + 'a';\n        }\n    }\n    return string;", "    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]>=65&&string[i]<=90){\n            string[i]+=32;\n     \
    \   }\n        else if(string[i]>=97&&string[i]<=122){\n            string[i]-=32;\n\
    \        }\n    }\n    return string;", "  for (int i = 0; i < string.length();\
    \ i++) {\n    if (string[i] >= 'a' && string[i] <= 'z')\n      string[i] -= 32;\n\
    \    else if (string[i] >= 'A' && string[i] <= 'Z')\n      string[i] += 32;\n\
    \  }\n  return string;", "    std::string result = \"\";\n    for (auto c : string)\
    \ {\n        if (std::isupper(c)) {\n            result += std::tolower(c);\n\
    \        } else {\n            result += std::toupper(c);\n        }\n    }\n\
    \    return result;", "  std::string flipped_string;\n  for (int i = 0; i < string.length();\
    \ i++) {\n    char current_char = string[i];\n    if (islower(current_char)) {\n\
    \      flipped_string.push_back(toupper(current_char));\n    } else {\n      flipped_string.push_back(tolower(current_char));\n\
    \    }\n  }\n  return flipped_string;", "  // Your code here\n  // Can be solved\
    \ using just one loop using XOR operator\n  int n = string.length();\n  for(int\
    \ i=0;i<n;i++){\n    if(string[i]>='a' && string[i]<='z'){\n      string[i] =\
    \ string[i] - 32;\n    }\n    else if(string[i]>='A' && string[i]<='Z'){\n   \
    \   string[i] = string[i] + 32;\n    }\n  }\n  return string;", "\tstd::string\
    \ flipped = \"\";\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n\t\t\tflipped += string[i] - 32;\n\t\t} else\
    \ if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tflipped += string[i] + 32;\n\
    \t\t} else {\n\t\t\tflipped += string[i];\n\t\t}\n\t}\n\treturn flipped;", " \
    \   for(int i=0;i<string.length();i++){\n        if(string[i]>=65&&string[i]<=90){\n\
    \            string[i]+=32;\n        }\n        else if(string[i]>=97&&string[i]<=122){\n\
    \            string[i]-=32;\n        }\n    }\n    return string;", "    std::stringstream\
    \ ss;\n    for (const auto& it : string) {\n        if (isupper(it)) {\n     \
    \       ss << static_cast<char>(tolower(it));\n        } else {\n            ss\
    \ << static_cast<char>(toupper(it));\n        }\n    }\n    return ss.str();",
  "  for (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 65 && string[i]\
    \ <= 90) {\n      string[i] = string[i] + 32;\n    } else if (string[i] >= 97\
    \ && string[i] <= 122) {\n      string[i] = string[i] - 32;\n    }\n  }\n  return\
    \ string;", "    for(int i=0;i<string.length();i++){\n        if(string[i]>=65\
    \ && string[i]<=90){\n            string[i]+=32;\n        }\n        else if(string[i]>=97\
    \ && string[i]<=122){\n            string[i]-=32;\n        }\n    }\n    return\
    \ string;", "    for(int i=0;i<string.length();i++){\n        if(islower(string[i])){\n\
    \            string[i]=toupper(string[i]);\n        }\n        else{\n       \
    \     string[i]=tolower(string[i]);\n        }\n    }\n    return string;", " \
    \   std::string result = string;\n    int i;\n    int n = string.length();\n \
    \   for(i=0;i<n;i++)\n    {\n        if(islower(string[i]))\n        {\n     \
    \       result[i] = toupper(string[i]);\n        }\n        else\n        {\n\
    \            result[i] = tolower(string[i]);\n        }\n    }\n    return result;",
  "    std::string flippedString = \"\";\n    std::string::iterator itr;\n    for(itr\
    \ = string.begin(); itr != string.end(); itr++) {\n        if (islower(*itr))\n\
    \            flippedString += toupper(*itr);\n        else\n            flippedString\
    \ += tolower(*itr);\n    }\n    return flippedString;", '   return "";', '    //
    TODO', "\t// implementation\n\treturn \"hELLO\";", "  std::string s;\n  // Convert\
    \ every character of the string to its flipped-case counterpart.\n  for (char\
    \ c : string) {\n    if (isupper(c)) {\n      c = tolower(c);\n    } else if (islower(c))\
    \ {\n      c = toupper(c);\n    }\n    s += c;\n  }\n  return s;", "  std::string\
    \ result;\n  for (const char& ch : string) {\n    if (std::isupper(ch)) {\n  \
    \    result += std::tolower(ch);\n    } else {\n      result += std::toupper(ch);\n\
    \    }\n  }\n  return result;", "  std::string str;\n  for(char i:string){\n \
    \   if(i>='a' && i<='z')\n      str.push_back(i-32);\n    else if(i>='A' && i<='Z')\n\
    \      str.push_back(i+32);\n    else\n      str.push_back(i);\n  }\n  return\
    \ str;", "  std::string str;\n  for(auto i : string) {\n    if(std::isupper(i))\
    \ {\n      str += std::tolower(i);\n    } else {\n      str += std::toupper(i);\n\
    \    }\n  }\n  return str;", "  for (int i = 0; i < string.length(); i++) {\n\
    \    if (string[i] >= 65 && string[i] <= 90) {\n      string[i] = string[i] +\
    \ 32;\n    } else if (string[i] >= 97 && string[i] <= 122) {\n      string[i]\
    \ = string[i] - 32;\n    }\n  }\n  return string;", "    for(int i=0;i<string.length();i++){\n\
    \        string[i]^=32;\n    }\n    return string;", "    for(int i=0; i<string.length();\
    \ i++){\n        if(string[i] >= 'a' && string[i] <= 'z'){\n            string[i]\
    \ -= 32;\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z'){\n\
    \            string[i] += 32;\n        }\n    }\n    return string;", "  // The\
    \ strings are mutable. Use a loop to flip each character.\n  int length = string.length();\n\
    \  for (int i = 0; i < length; i++) {\n    // If the character is lowercase, flip\
    \ it to uppercase.\n    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i]\
    \ = string[i] - 32;\n    }\n    // If the character is uppercase, flip it to lowercase.\n\
    \    else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i]\
    \ + 32;\n    }\n  }\n  return string;", "  std::string result = \"\";\n  for (int\
    \ i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i] <=\
    \ 'z') {\n      result += toupper(string[i]);\n    } else if (string[i] >= 'A'\
    \ && string[i] <= 'Z') {\n      result += tolower(string[i]);\n    } else {\n\
    \      result += string[i];\n    }\n  }\n  return result;", "    for(int i=0;i<string.length();i++){\n\
    \        if(isupper(string[i])){\n            string[i]=tolower(string[i]);\n\
    \        }\n        else if(islower(string[i])){\n            string[i]=toupper(string[i]);\n\
    \        }\n    }\n    return string;", "    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]>=65&&string[i]<=90){\n            string[i]+=32;\n     \
    \   }\n        else if(string[i]>=97&&string[i]<=122){\n            string[i]-=32;\n\
    \        }\n    }\n  return string;", "\tstd::transform(string.begin(), string.end(),\
    \ string.begin(), [](char c) {\n\t\treturn std::isupper(c) ? std::tolower(c) :\
    \ std::toupper(c);\n\t});\n\treturn string;", "    for(int i=0; i<string.length();\
    \ i++){\n        if(islower(string[i])){\n            string[i] = toupper(string[i]);\n\
    \        }else{\n            string[i] = tolower(string[i]);\n        }\n    }\n\
    \    return string;", "    std::transform(string.begin(), string.end(), string.begin(),\
    \ ::tolower);\n    return string;", "    std::string result;\n    for (int i =\
    \ 0; i < string.length(); i++) {\n        if(isupper(string[i])) {\n         \
    \   result += tolower(string[i]);\n        } else {\n            result += toupper(string[i]);\n\
    \        }\n    }\n    return result;", "\tstd::string answer = \"\";\n\tfor (int\
    \ i = 0; i < string.length(); i++) {\n\t\tchar x = string[i];\n\t\tif (islower(x))\
    \ {\n\t\t\tx = toupper(x);\n\t\t}\n\t\telse if (isupper(x)) {\n\t\t\tx = tolower(x);\n\
    \t\t}\n\t\tanswer += x;\n\t}\n\treturn answer;", "  for (int i = 0; i < string.length();\
    \ i++) {\n    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = toupper(string[i]);\n\
    \    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i] = tolower(string[i]);\n\
    \    }\n  }\n  return string;", "    for(int i=0;i<string.length();i++){\n   \
    \     if(string[i]>=65 && string[i]<=90){\n            string[i] = string[i] +\
    \ 32;\n        }\n        else if(string[i]>=97 && string[i]<=122){\n        \
    \    string[i] = string[i] - 32;\n        }\n    }\n    return string;", "\tint\
    \ i;\n\tstd::string string2(string);\n\tfor (i = 0; i < string.length(); i++)\
    \ {\n\t\tif (string[i] >= 65 && string[i] <= 90) {\n\t\t\tstring2[i] = tolower(string[i]);\n\
    \t\t}\n\t\telse if (string[i] >= 97 && string[i] <= 122) {\n\t\t\tstring2[i] =\
    \ toupper(string[i]);\n\t\t}\n\t}\n\treturn string2;", "\tfor (char &c : string)\
    \ {\n\t\tif (c >= 'a' && c <= 'z') {\n\t\t\tc -= 'a' - 'A';\n\t\t} else if (c\
    \ >= 'A' && c <= 'Z') {\n\t\t\tc += 'a' - 'A';\n\t\t}\n\t}\n\treturn string;",
  "  std::string x = string;\n  for (int i = 0; i < string.length(); i++) {\n    if\
    \ (islower(string[i])) {\n      x[i] = toupper(string[i]);\n    } else {\n   \
    \   x[i] = tolower(string[i]);\n    }\n  }\n  return x;", "\t//use std::transform\
    \ to apply lambda to each character\n\tstd::transform(string.begin(), string.end(),\
    \ string.begin(), [](char c) {\n\t\treturn std::islower(c) ? std::toupper(c) :\
    \ std::tolower(c);\n\t});\n\treturn string;", "\t// For each character in the\
    \ string,\n\tfor (auto &character : string) {\n\t\t// If the character is an uppercase\
    \ letter,\n\t\tif (isupper(character)) {\n\t\t\t// Switch the character to lowercase.\n\
    \t\t\tcharacter = tolower(character);\n\t\t// Otherwise, if the character is a\
    \ lowercase letter,\n\t\t} else if (islower(character)) {\n\t\t\t// Switch the\
    \ character to uppercase.\n\t\t\tcharacter = toupper(character);\n\t\t}\n\t}\n\
    \t// Return the string.\n\treturn string;", "    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]>='a' && string[i]<='z')\n            string[i]=string[i]-32;\n\
    \        else if(string[i]>='A' && string[i]<='Z')\n            string[i]=string[i]+32;\n\
    \    }\n    return string;", "    std::string str;\n    for(auto x:string){\n\
    \        if(std::isupper(x))\n            str+=std::tolower(x);\n        else\
    \ if(std::islower(x))\n            str+=std::toupper(x);\n        else\n     \
    \       str+=x;\n    }\n    return str;", "\tfor (int i = 0; i < string.length();\
    \ i++) {\n\t\tif (isupper(string[i])) {\n\t\t\tstring[i] = tolower(string[i]);\n\
    \t\t}\n\t\telse {\n\t\t\tstring[i] = toupper(string[i]);\n\t\t}\n\t}\n\treturn\
    \ string;", "    for(int i=0;i<string.length();i++){\n        if(string[i]>='a'\
    \ && string[i]<='z'){\n            string[i] = toupper(string[i]);\n        }else\
    \ if(string[i]>='A' && string[i]<='Z'){\n            string[i] = tolower(string[i]);\n\
    \        }\n    }\n    return string;", "\tfor (size_t i = 0; i < string.size();\
    \ i++) {\n\t\tif (string[i] >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i]\
    \ - 'a' + 'A';\n\t\t}\n\t\telse if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\
    \t\tstring[i] = string[i] - 'A' + 'a';\n\t\t}\n\t}\n\treturn string;", "    int\
    \ i;\n    std::string string1;\n    for(i=0;i<string.length();i++)\n    {\n  \
    \      if(islower(string[i]))\n        {\n            string1+=toupper(string[i]);\n\
    \        }\n        else if(isupper(string[i]))\n        {\n            string1+=tolower(string[i]);\n\
    \        }\n        else{\n            string1+=string[i];\n        }\n    }\n\
    \    return string1;", "    std::string s;\n    for(int i=0;i<string.length();i++){\n\
    \        if(string[i]>='a' && string[i]<='z'){\n            s+=toupper(string[i]);\n\
    \        }\n        else if(string[i]>='A' && string[i]<='Z'){\n            s+=tolower(string[i]);\n\
    \        }\n        else{\n            s+=string[i];\n        }\n    }\n    return\
    \ s;", "  std::string result = \"\";\n  for (int i = 0; i < string.length(); i++)\
    \ {\n    if (islower(string[i])) {\n      result += toupper(string[i]);\n    }\
    \ else {\n      result += tolower(string[i]);\n    }\n  }\n  return result;",
  "  for (size_t i = 0; i < string.size(); i++) {\n    if (string[i] >= 'a' && string[i]\
    \ <= 'z') {\n      string[i] -= 32;\n    } else if (string[i] >= 'A' && string[i]\
    \ <= 'Z') {\n      string[i] += 32;\n    }\n  }\n  return string;", "\t// put\
    \ your code here\n\tstd::string s = \"\";\n\tfor (int i = 0; i < string.length();\
    \ i++) {\n\t\tif (string[i] >= 'a' && string[i] <= 'z') {\n\t\t\ts += string[i]\
    \ - 32;\n\t\t}\n\t\telse if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\ts\
    \ += string[i] + 32;\n\t\t}\n\t\telse {\n\t\t\ts += string[i];\n\t\t}\n\t}\n\t\
    return s;", "  for (int i = 0; i < string.length(); i++) {\n    if (isupper(string[i]))\n\
    \      string[i] = tolower(string[i]);\n    else\n      string[i] = toupper(string[i]);\n\
    \  }\n  return string;", "    char a = 'a';\n    char z = 'z';\n    char A = 'A';\n\
    \    char Z = 'Z';\n    int size = string.size();\n    for (int i = 0; i < size;\
    \ i++) {\n        if ((string[i] >= a) && (string[i] <= z)) {\n            string[i]\
    \ -= 32;\n        } else if ((string[i] >= A) && (string[i] <= Z)) {\n       \
    \     string[i] += 32;\n        }\n    }\n    return string;", "    std::transform(string.begin(),\
    \ string.end(), string.begin(), ::tolower);\n    return string;", "\t// for(i,0,strlen(string)){\n\
    \t//     if(string[i]>=65 && string[i]<=90){\n\t//         string[i] = string[i]\
    \ + 32;\n\t//     }\n\t//     else if(string[i]>=97 && string[i]<=122){\n\t//\
    \         string[i] = string[i] - 32;\n\t//     }\n\t// }\n\t// return string;\n\
    \tfor(int i=0;i<string.length();i++){\n\t\tif(string[i] >= 65 && string[i] <=\
    \ 90){\n\t\t\tstring[i] = string[i] + 32;\n\t\t}\n\t\telse if(string[i] >= 97\
    \ && string[i] <= 122){\n\t\t\tstring[i] = string[i] - 32;\n\t\t}\n\t}\n\treturn\
    \ string;", "  std::string result = \"\";\n  for (char i : string) {\n    if (i\
    \ >= 'a' && i <= 'z') {\n      result += toupper(i);\n    } else if (i >= 'A'\
    \ && i <= 'Z') {\n      result += tolower(i);\n    } else {\n      result += i;\n\
    \    }\n  }\n  return result;", "  \n  std::string str;\n  int len = string.length();\n\
    \  for(int i=0;i<len;i++)\n  {\n    if(islower(string[i]))\n      str+=toupper(string[i]);\n\
    \    else\n      str+=tolower(string[i]);\n  }\n  return str;", "\tchar *arr =\
    \ (char *)string.c_str();\n\tint n = string.length();\n\tfor (int i = 0; i < n;\
    \ i++) {\n\t\tif (arr[i] >= 'a' && arr[i] <= 'z') {\n\t\t\tarr[i] = arr[i] - 'a'\
    \ + 'A';\n\t\t}\n\t\telse if (arr[i] >= 'A' && arr[i] <= 'Z') {\n\t\t\tarr[i]\
    \ = arr[i] - 'A' + 'a';\n\t\t}\n\t}\n\treturn arr;", "  for (int i = 0; i < string.length();\
    \ i++) {\n    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = toupper(string[i]);\n\
    \    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i] = tolower(string[i]);\n\
    \    }\n  }\n  return string;", "    for(int i=0;i<string.length();i++){\n   \
    \     if(string[i]>='a' && string[i]<='z')\n        string[i]=string[i]-32;\n\
    \        else if(string[i]>='A' && string[i]<='Z')\n        string[i]=string[i]+32;\n\
    \    }\n    return string;", "\tfor (int i = 0; i < string.length(); i++) {\n\t\
    \tif (string[i] >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = toupper(string[i]);\n\
    \t\t}\n\t\telse if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] =\
    \ tolower(string[i]);\n\t\t}\n\t}\n\treturn string;", "\t// Flip the case of each\
    \ character, building up the result in the new string.\n\tstd::string result;\n\
    \tfor (int i = 0; i < string.length(); i++) {\n\t\tresult += islower(string[i])\
    \ ? toupper(string[i]) : tolower(string[i]);\n\t}\n\treturn result;", "\tfor (int\
    \ i = 0; i < string.length(); i++) {\n\t\tif (string[i] >= 'a' && string[i] <=\
    \ 'z') {\n\t\t\tstring[i] -= 'a' - 'A';\n\t\t}\n\t\telse if (string[i] >= 'A'\
    \ && string[i] <= 'Z') {\n\t\t\tstring[i] += 'a' - 'A';\n\t\t}\n\t}\n\treturn\
    \ string;", '  return "";', "  for (int i = 0; i < string.length(); i++) {\n \
    \   if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] -\
    \ 32;\n    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i]\
    \ = string[i] + 32;\n    }\n  }\n  return string;", "    std::string flipped_string;\n\
    \    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a'\
    \ && string[i] <= 'z') {\n            flipped_string += string[i] - 32;\n    \
    \    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            flipped_string\
    \ += string[i] + 32;\n        } else {\n            flipped_string += string[i];\n\
    \        }\n    }\n    return flipped_string;", "\t// your code here\n\tfor (int\
    \ i = 0; i < string.length(); i++) {\n\t\tif (islower(string[i])) {\n\t\t\tstring[i]\
    \ = toupper(string[i]);\n\t\t}\n\t\telse {\n\t\t\tstring[i] = tolower(string[i]);\n\
    \t\t}\n\t}\n\treturn string;", "    int i = 0;\n    while(string[i] != '\\0')\
    \ {\n        if(string[i] >= 'a' && string[i] <= 'z')\n            string[i] =\
    \ string[i] - 32;\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n   \
    \         string[i] = string[i] + 32;\n        i++;\n    }\n    return string;",
  '  return string;', "    for(int i=0;i<string.length();i++){\n        if(islower(string[i]))\n\
    \            string[i]=toupper(string[i]);\n        else\n            string[i]=tolower(string[i]);\n\
    \    }\n    return string;", "    for(int i=0;i<string.length();i++){\n      \
    \  if(string[i]>='a' && string[i]<='z'){\n            string[i]=string[i]-'a'+'A';\n\
    \        }\n        else if(string[i]>='A' && string[i]<='Z'){\n            string[i]=string[i]-'A'+'a';\n\
    \        }\n    }\n    return string;", "  for (size_t i = 0; i < string.size();\
    \ i++) {\n    if (islower(string[i])) {\n      string[i] = toupper(string[i]);\n\
    \    } else {\n      string[i] = tolower(string[i]);\n    }\n  }\n  return string;",
  "\tint len = string.length();\n\tstd::string str;\n\tint i;\n\tfor (i = 0; i < len;\
    \ i++) {\n\t\tif (islower(string[i])) {\n\t\t\tstr.push_back(toupper(string[i]));\n\
    \t\t}\n\t\telse if (isupper(string[i])) {\n\t\t\tstr.push_back(tolower(string[i]));\n\
    \t\t}\n\t\telse\n\t\t\tstr.push_back(string[i]);\n\t}\n\treturn str;", "    for(int\
    \ i=0;i<string.length();i++){\n        if(string[i]>='a'&&string[i]<='z'){\n \
    \           string[i]=toupper(string[i]);\n        }\n        else if(string[i]>='A'&&string[i]<='Z'){\n\
    \            string[i]=tolower(string[i]);\n        }\n    }\n    return string;",
  "  for (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 65 && string[i]\
    \ <= 90) {\n      string[i] = string[i] + 32;\n    } else if (string[i] >= 97\
    \ && string[i] <= 122) {\n      string[i] = string[i] - 32;\n    }\n  }\n  return\
    \ string;", "    for(int i=0;i<string.length();i++){\n        if(string[i]>='a'\
    \ && string[i]<='z'){\n            string[i] -= 32;\n        }\n        else if(string[i]>='A'\
    \ && string[i]<='Z'){\n            string[i] += 32;\n        }\n    }\n    return\
    \ string;", "    int size = string.size();\n    for(int i = 0; i < size; i++)\
    \ {\n        if(islower(string[i])) {\n            string[i] = toupper(string[i]);\n\
    \        } else {\n            string[i] = tolower(string[i]);\n        }\n  \
    \  }\n    return string;", "\tstd::string result = string;\n\tstd::transform(result.begin(),\
    \ result.end(), result.begin(), ::tolower);\n\treturn result;", "    for(auto\
    \ i = string.begin(); i != string.end(); i++) {\n        if(*i >= 'a' && *i <=\
    \ 'z') {\n            *i = toupper(*i);\n        } else if(*i >= 'A' && *i <=\
    \ 'Z') {\n            *i = tolower(*i);\n        }\n    }\n    return string;",
  "  std::string s;\n  for(int i=0;i<string.length();i++){\n      if(string[i]>=65\
    \ && string[i]<=90){\n          s+=string[i]+32;\n      }\n      else if(string[i]>=97\
    \ && string[i]<=122){\n          s+=string[i]-32;\n      }\n      else{\n    \
    \      s+=string[i];\n      }\n  }\n  return s;", "    std::string temp;\n   \
    \ for(int i=0;i<string.length();i++){\n        if(string[i]>=65 && string[i]<=90){\n\
    \            temp+=string[i]+32;\n        }\n        else if(string[i]>=97 &&\
    \ string[i]<=122){\n            temp+=string[i]-32;\n        }\n        else{\n\
    \            temp+=string[i];\n        }\n    }\n    return temp;", "\tstd::string\
    \ newString=\"\";\n\tfor(int i=0;i<string.length();i++){\n\t\tif(std::isupper(string[i])){\n\
    \t\t\tnewString+=std::tolower(string[i]);\n\t\t}\n\t\telse if(std::islower(string[i])){\n\
    \t\t\tnewString+=std::toupper(string[i]);\n\t\t}\n\t\telse{\n\t\t\tnewString+=string[i];\n\
    \t\t}\n\t}\n    return newString;", "    std::string str;\n    for(char c : string)\
    \ {\n        if(isupper(c)) {\n            str += tolower(c);\n        } else\
    \ {\n            str += toupper(c);\n        }\n    }\n    return str;", "  for\
    \ (int i = 0; i < string.length(); i++) {\n    if (islower(string[i])) {\n   \
    \   string[i] = toupper(string[i]);\n    } else {\n      string[i] = tolower(string[i]);\n\
    \    }\n  }\n  return string;", "  for (int i = 0; i < string.length(); i++) {\n\
    \    if (isupper(string[i])) {\n      string[i] = tolower(string[i]);\n    } else\
    \ {\n      string[i] = toupper(string[i]);\n    }\n  }\n  return string;", " \
    \ // Your code here.\n  int len = string.length();\n  for(int i=0;i<len;i++){\n\
    \    if(string[i] >= 'a' && string[i] <= 'z'){\n      string[i] = string[i] -\
    \ 'a' + 'A';\n    }\n    else if(string[i] >= 'A' && string[i] <= 'Z'){\n    \
    \  string[i] = string[i] - 'A' + 'a';\n    }\n  }\n  return string;", "    std::string\
    \ new_string;\n    for (char c : string) {\n        if (std::isupper(c)) {\n \
    \           new_string += (char)std::tolower(c);\n        } else {\n         \
    \   new_string += (char)std::toupper(c);\n        }\n    }\n    return new_string;",
  "  for (char& c : string) {\n    if (islower(c)) {\n      c = toupper(c);\n    }\
    \ else {\n      c = tolower(c);\n    }\n  }\n  return string;", "  int i;\n  for(i=0;i<string.length();i++)\n\
    \  {\n    if(string[i]>='a' && string[i]<='z')\n      string[i]=string[i]-'a'+'A';\n\
    \    else if(string[i]>='A' && string[i]<='Z')\n      string[i]=string[i]-'A'+'a';\n\
    \  }\n  return string;", "    std::string result = \"\";\n    for (int i = 0;\
    \ i < string.length(); i++) {\n        if (isupper(string[i])) {\n           \
    \ result += tolower(string[i]);\n        } else {\n            result += toupper(string[i]);\n\
    \        }\n    }\n    return result;", "    // First, check that the string is\
    \ not empty.\n    assert(string.length() > 0);\n    std::string new_string;\n\
    \    for (auto c : string) {\n        if (std::isupper(c)) {\n            new_string\
    \ += std::tolower(c);\n        } else {\n            new_string += std::toupper(c);\n\
    \        }\n    }\n    return new_string;", "    for(int i=0; i<string.length();\
    \ i++){\n        if(string[i]>='a' && string[i]<='z'){\n            string[i]\
    \ = 'A' + (string[i] - 'a');\n        }else if(string[i]>='A' && string[i]<='Z'){\n\
    \            string[i] = 'a' + (string[i] - 'A');\n        }\n    }\n    return\
    \ string;", "    // Error Handling\n    if (string.length()==0) {\n        return\
    \ \"\";\n    }\n    // Implementation\n    for (int i=0; i<string.length(); i++)\
    \ {\n        if (string[i] >= 65 && string[i] <= 90) {\n            string[i]\
    \ += 32;\n        } else if (string[i] >= 97 && string[i] <= 122) {\n        \
    \    string[i] -= 32;\n        }\n    }\n    return string;", "\tfor (char& element\
    \ : string) {\n\t\tif (element >= 'a' && element <= 'z') {\n\t\t\telement = element\
    \ - 32;\n\t\t}\n\t\telse if (element >= 'A' && element <= 'Z') {\n\t\t\telement\
    \ = element + 32;\n\t\t}\n\t}\n\treturn string;", "\tstd::string temp;\n\tfor\
    \ (char c : string) {\n\t\tif (isupper(c)) {\n\t\t\ttemp += tolower(c);\n\t\t\
    }\n\t\telse {\n\t\t\ttemp += toupper(c);\n\t\t}\n\t}\n\treturn temp;", "    //\
    \ Write your code here.\n    for(int i=0;i<string.length();i++){\n        if(islower(string[i])){\n\
    \            string[i]=toupper(string[i]);\n        }\n        else if(isupper(string[i])){\n\
    \            string[i]=tolower(string[i]);\n        }\n    }\n    return string;",
  "    std::string flippedString = \"\";\n    std::locale loc;\n    for (std::string::size_type\
    \ i=0; i<string.length(); ++i) {\n        if (std::islower(string[i],loc)) {\n\
    \            flippedString += std::toupper(string[i],loc);\n        } else {\n\
    \            flippedString += std::tolower(string[i],loc);\n        }\n    }\n\
    \    return flippedString;", "    std::string s = \"\";\n    for (int i = 0; i\
    \ < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z')\
    \ {\n            s += (char)(string[i] - 32);\n        } else if (string[i] >=\
    \ 'A' && string[i] <= 'Z') {\n            s += (char)(string[i] + 32);\n     \
    \   } else {\n            s += string[i];\n        }\n    }\n    return s;", " \
    \   for(char & c : string)\n        if(c >= 'a' && c <= 'z')\n            c =\
    \ c + 'A' - 'a';\n        else if(c >= 'A' && c <= 'Z')\n            c = c + 'a'\
    \ - 'A';\n    return string;", "  for (auto& c : string) {\n    if (std::isupper(c))\n\
    \      c = std::tolower(c);\n    else\n      c = std::toupper(c);\n  }\n  return\
    \ string;", "\tstd::string result = \"\";\n\tint i;\n\tfor (i = 0; i < string.length();\
    \ i++) {\n\t\tif (string[i] >= 'a' && string[i] <= 'z') {\n\t\t\tresult += (char)(string[i]\
    \ - 32);\n\t\t}\n\t\telse if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\t\
    result += (char)(string[i] + 32);\n\t\t}\n\t\telse {\n\t\t\tresult += string[i];\n\
    \t\t}\n\t}\n\treturn result;", "  for (int i = 0; i < string.length(); i++) {\n\
    \    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i]\
    \ - 32;\n    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i]\
    \ = string[i] + 32;\n    }\n  }\n  return string;", "    for(int i=0;i<string.length();i++){\n\
    \        if(islower(string[i])){\n            string[i]=toupper(string[i]);\n\
    \        }\n        else{\n            string[i]=tolower(string[i]);\n       \
    \ }\n    }\n  return string;", "    string newString;\n    for(char& c : string)\
    \ {\n        if(c >= 'a' && c <= 'z') {\n            c = toupper(c);\n       \
    \ } else if(c >= 'A' && c <= 'Z') {\n            c = tolower(c);\n        }\n\
    \        newString += c;\n    }\n    return newString;"]
stop_tokens:
- "\n}"

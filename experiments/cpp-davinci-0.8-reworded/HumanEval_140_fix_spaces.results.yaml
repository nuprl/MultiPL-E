language: cpp
name: HumanEval_140_fix_spaces
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int i, j;\n    int n = text.length();\n    char arr[n];\n    int cnt\
    \ = 0;\n    for(i = 0; i < n; i++) {\n        if(text[i] == ' ') {\n         \
    \   cnt++;\n        }\n        else {\n            cnt = 0;\n        }\n     \
    \   if(cnt > 2) {\n            arr[i] = '-';\n        }\n        else if(text[i]\
    \ == ' ') {\n            arr[i] = '_';\n        }\n        else {\n          \
    \  arr[i] = text[i];\n        }\n    }\n    std::string res = \"\";\n    for(i\
    \ = 0; i < n; i++) {\n        res += arr[i];\n    }\n    return res;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpd343vd7v: /tmp/tmpd343vd7v.cpp:47: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // Your code goes here\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmppal_n6pt: /tmp/tmppal_n6pt.cpp:19: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // Write your code here\n    // You may print the string or display it\
    \ on the screen\n    int n = text.length();\n    if(n == 0){\n        return text;\n\
    \    }\n    if(n == 1){\n        if(text[0] == ' '){\n            return \"_\"\
    ;\n        }else{\n            return text;\n        }\n    }\n    int i=0;\n\
    \    int count = 0;\n    for(i=0;i<n;i++){\n        if(text[i] == ' '){\n    \
    \        count++;\n        }else{\n            break;\n        }\n    }\n    if(count\
    \ == 0){\n        return text;\n    }\n    if(count == 1){\n        if(text[i]\
    \ == ' '){\n            text[i] = '-';\n        }else{\n            text[i-1]\
    \ = '_';\n        }\n    }else{\n        if(text[i] == ' '){\n            text[i]\
    \ = '-';\n        }else{\n            text[i-1] = '_';\n        }\n        for(int\
    \ j=i+1;j<n;j++){\n            if(text[j] == ' '){\n                if(text[j-1]\
    \ == ' '){\n                    text[j] = '-';\n                }else{\n     \
    \               text[j] = '_';\n                }\n            }\n        }\n\
    \    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpk_7tp1eu: /tmp/tmpk_7tp1eu.cpp:67: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\
    \t\ttext[i] = '_';\n\t\t}\n\t}\n\tfor (int i = 0; i < text.length(); i++) {\n\t\
    \tif (text[i] == '_' && text[i + 1] == '_') {\n\t\t\tif (text[i + 2] == '_') {\n\
    \t\t\t\ttext[i] = '-';\n\t\t\t}\n\t\t}\n\t}\n\treturn text;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxyv82gb3: /tmp/tmpxyv82gb3.cpp:34: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // Write your code here\n    std::string result = text;\n    bool twoSpaces\
    \ = false;\n    int spaceCount = 0;\n    for (int i = 0; i < text.length(); i++)\
    \ {\n        if (text[i] == ' ') {\n            spaceCount++;\n            if\
    \ (spaceCount > 2) {\n                twoSpaces = true;\n            }\n     \
    \   } else {\n            spaceCount = 0;\n        }\n    }\n    spaceCount =\
    \ 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\
    \ ') {\n            if (twoSpaces) {\n                spaceCount++;\n        \
    \        if (spaceCount > 2) {\n                    result[i] = '-';\n       \
    \         } else {\n                    result[i] = '_';\n                }\n\
    \            } else {\n                result[i] = '_';\n            }\n     \
    \   }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxz34xv6y: /tmp/tmpxz34xv6y.cpp:51: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int len = text.length();\n    // uppercase the first letter\n    text[0]\
    \ = toupper(text[0]);\n    int i = 0;\n    int count_of_spaces = 0;\n    while(i\
    \ < len) {\n        if(i+1 < len) {\n            if(text[i] == ' ' && text[i+1]\
    \ == ' ') {\n                count_of_spaces++;\n            } else {\n      \
    \          count_of_spaces = 0;\n            }\n        }\n        if(count_of_spaces\
    \ == 2) {\n            text[i] = '-';\n        } else if(text[i] == ' ') {\n \
    \           text[i] = '_';\n        }\n        i++;\n    }\n    return text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp1q0wt1ta: /tmp/tmp1q0wt1ta.cpp:42: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n     \
    \   if (text[i] == ' ') {\n            count++;\n        }\n        else if (text[i]\
    \ != ' ') {\n            count = 0;\n        }\n        if (count >= 2) {\n  \
    \          text[i] = '-';\n        }\n        else if (count == 1) {\n       \
    \     text[i] = '_';\n        }\n    }\n    return text;\n}\nint main() {\n  \
    \  auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpnhierx_g: /tmp/tmpnhierx_g.cpp:36: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // 0. count spaces and consecutive spaces\n    int consecutive_spaces\
    \ = 0;\n    int spaces = 0;\n    for (std::string::iterator it = text.begin();\
    \ it != text.end(); ++it) {\n        if (*it == ' ') {\n            ++consecutive_spaces;\n\
    \            ++spaces;\n        } else {\n            consecutive_spaces = 0;\n\
    \        }\n    }\n    // 1. make space for an underscore or dash\n    int j =\
    \ spaces;\n    if (consecutive_spaces > 2) {\n        j += (consecutive_spaces\
    \ - 2);\n    }\n    for (int i = text.size() - 1; i >= 0; --i) {\n        if (text[i]\
    \ == ' ') {\n            if (consecutive_spaces > 2) {\n                text[j--]\
    \ = '-';\n                consecutive_spaces = 0;\n            } else {\n    \
    \            text[j--] = '_';\n            }\n        } else {\n            text[j--]\
    \ = text[i];\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpsypo1q_a: /tmp/tmpsypo1q_a.cpp:47: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tstd::string ans = \"\";\n\tint num_spaces = 0;\n\tfor (int i = 0; i < text.length();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tnum_spaces++;\n\t\t} else {\n\t\t\t\
    num_spaces = 0;\n\t\t}\n\t\tif (num_spaces == 1) {\n\t\t\tans += \"_\";\n\t\t\
    } else if (num_spaces == 2) {\n\t\t\tans += \"-\";\n\t\t} else if (num_spaces\
    \ == 0) {\n\t\t\tans += text[i];\n\t\t}\n\t}\n\treturn ans;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmplt71hj4t: /tmp/tmplt71hj4t.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    // write your solution here\n    bool flag =\
    \ true;\n    int count = 0;\n    for(int i = 0; i < text.length(); i++){\n   \
    \     if(text[i] == ' '){\n            count++;\n            if(count == 1){\n\
    \                if(flag){\n                    result += '_';\n             \
    \       flag = false;\n                }\n                else{\n            \
    \        result += '-';\n                }\n            }\n        }\n       \
    \ else{\n            count = 0;\n            result += text[i];\n        }\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpwm5zfyuo: /tmp/tmpwm5zfyuo.cpp:42: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string ret = \"\";\n    bool hasSpace = false;\n    bool firstSpace\
    \ = false;\n    bool firstWord = true;\n    bool hasSpaceBefore = false;\n   \
    \ for (auto it = text.begin(); it != text.end(); it++) {\n        if (*it == '\
    \ ') {\n            hasSpace = true;\n            if (firstWord && hasSpace) {\n\
    \                firstWord = false;\n                continue;\n            }\n\
    \            if (hasSpaceBefore) {\n                ret.pop_back();\n        \
    \        ret.push_back('-');\n            } else {\n                ret.push_back('_');\n\
    \            }\n            hasSpaceBefore = true;\n        } else {\n       \
    \     hasSpaceBefore = false;\n            ret.push_back(*it);\n        }\n  \
    \  }\n    return ret;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpf5huincp: /tmp/tmpf5huincp.cpp:44: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\t// remove 2 or more spaces at the start of the text\n\twhile (text.substr(0,2)\
    \ == \"  \")\n\t\ttext = text.substr(2);\n\t// replace spaces with underscores\n\
    \tfor (int i = 0; i < text.length(); i++)\n\t\tif (text[i] == ' ')\n\t\t\ttext[i]\
    \ = '_';\n\t// replace more than 2 spaces with dashes\n\tfor (int i = 0; i < text.length()-1;\
    \ i++)\n\t\tif (text.substr(i,3) == \"___\")\n\t\t\ttext[i+1] = '-';\n\t// if\
    \ the text starts with a _, remove it\n\tif (text[0] == '_')\n\t\ttext = text.substr(1);\n\
    \treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp5vdqi3cs: /tmp/tmp5vdqi3cs.cpp:36: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int count_space = 0;\n    std::string result;\n    for (int i = 0; i\
    \ < text.length(); i++) {\n        if (text[i] == ' ') {\n            count_space++;\n\
    \            if (count_space == 2) {\n                result += \"_\";\n     \
    \       }\n            else if (count_space > 2) {\n                continue;\n\
    \            }\n        }\n        else {\n            if (count_space == 1) {\n\
    \                result += \"_\";\n            }\n            else if (count_space\
    \ > 2) {\n                result += \"-\";\n            }\n            count_space\
    \ = 0;\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp4q_3ipg8: /tmp/tmp4q_3ipg8.cpp:43: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string new_text;\n    int count_space = 0;\n    for (int i = 0;\
    \ i < text.length(); i++) {\n        char current_char = text[i];\n        if\
    \ (current_char == ' ') {\n            count_space++;\n            if (count_space\
    \ == 1) {\n                new_text.push_back('_');\n            }\n         \
    \   else if (count_space == 2) {\n                new_text.push_back('_');\n \
    \           }\n            else if (count_space > 2) {\n                new_text.push_back('-');\n\
    \            }\n        }\n        else {\n            count_space = 0;\n    \
    \        new_text.push_back(current_char);\n        }\n    }\n    return new_text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp2gqkmxro: /tmp/tmp2gqkmxro.cpp:43: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int cnt = 0;\n    std::string res = \"\";\n    for (int i = 0; i < text.size();\
    \ i++) {\n        if (text[i] == ' ') {\n            cnt++;\n            if (cnt\
    \ > 2) {\n                res += '-';\n            }\n        } else {\n     \
    \       if (cnt >= 2) {\n                res += '_';\n            }\n        \
    \    cnt = 0;\n            res += text[i];\n        }\n    }\n    if (cnt >= 2)\
    \ {\n        res += '_';\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmprmgxe9wg: /tmp/tmprmgxe9wg.cpp:39: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n  int arr[256];\n  for(int i=0;i<text.length();i++){\n    arr[i]=0;\n  }\n\
    \  for(int i=0;i<text.length();i++){\n    if(text[i]==' '){\n      arr[i]=1;\n\
    \    }\n  }\n  for(int i=0;i<text.length();i++){\n    if(arr[i]==1 && arr[i+1]==1){\n\
    \      arr[i]=2;\n    }\n  }\n  for(int i=0;i<text.length();i++){\n    if(arr[i]==2\
    \ && arr[i+1]==2){\n      arr[i+1]=3;\n    }\n  }\n  for(int i=0;i<text.length();i++){\n\
    \    if(arr[i]==2){\n      text[i]='_';\n    }\n    if(arr[i]==3){\n      text[i]='-';\n\
    \    }\n  }\n  return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpx4iurx77: /tmp/tmpx4iurx77.cpp:47: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // Your code goes here\n    return text;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp17dgktgc: /tmp/tmp17dgktgc.cpp:21: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = \"\";\n    int cnt = 0;\n    for (int i = 0; i <\
    \ text.size(); i++) {\n        if (text[i] == ' ') {\n            cnt++;\n   \
    \         if (cnt == 1) {\n                result += \"_\";\n            }\n \
    \           else if (cnt == 2) {\n                result += \"_\";\n         \
    \   }\n            else if (cnt > 2) {\n                result += \"-\";\n   \
    \         }\n        }\n        else {\n            result += text[i];\n     \
    \       cnt = 0;\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmptgxbdgo0: /tmp/tmptgxbdgo0.cpp:42: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int count=0;\n    std::string result = \"\";\n    for(int i=0;i<text.length();i++){\n\
    \        if(text[i]==' '){\n            count++;\n            if(count==1){\n\
    \                result+=\"_\";\n            }\n            else if(count>2){\n\
    \                result+=\"-\";\n            }\n        }\n        else{\n   \
    \         result+=text[i];\n            count=0;\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpnvcgxx2t: /tmp/tmpnvcgxx2t.cpp:38: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\t// TODO: Implement me\n\treturn text;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcj5x378z: /tmp/tmpcj5x378z.cpp:21: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int len = text.length();\n    if(len == 0){\n        return text;\n \
    \   }\n    char prev = text[0];\n    std::string output;\n    int count = 0;\n\
    \    output += text[0];\n    if(len == 1){\n        return output;\n    }\n  \
    \  if(text[0] == ' '){\n        count = 1;\n    }\n    for(int i = 1; i < len;\
    \ i++){\n        if(text[i] == ' '){\n            if(prev == ' '){\n         \
    \       count++;\n            }\n            if(count == 2){\n               \
    \ output += '-';\n            }\n            else if(count == 1){\n          \
    \      output += '_';\n            }\n        }\n        else{\n            output\
    \ += text[i];\n            count = 0;\n        }\n        prev = text[i];\n  \
    \  }\n    return output;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp5c35zsct: /tmp/tmp5c35zsct.cpp:52: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n  int i = 0;\n  for (int k = 0; k < text.size(); k++) {\n    if (text[k]\
    \ == ' ') {\n      i++;\n    }\n  }\n  if (i == 1) {\n    for (int k = 0; k <\
    \ text.size(); k++) {\n      if (text[k] == ' ') {\n        text[k] = '_';\n \
    \     }\n    }\n  }\n  if (i > 1) {\n    int j = 0;\n    while (text[j] == ' ')\
    \ {\n      text[j] = '_';\n      j++;\n    }\n    while (text[text.size() - 1]\
    \ == ' ') {\n      text[text.size() - 1] = '_';\n    }\n    int count = 0;\n \
    \   for (int k = 0; k < text.size(); k++) {\n      if (text[k] == ' ') {\n   \
    \     count++;\n      }\n      if (text[k] != ' ') {\n        count = 0;\n   \
    \   }\n      if (count > 2) {\n        text[k] = '-';\n      }\n    }\n  }\n \
    \ return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp2vk7ksjn: /tmp/tmp2vk7ksjn.cpp:55: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n  \t//your code goes here\n\tstd::string s = \"\";\n\tint p = 0;\n\tfor(int\
    \ i = 0; i < text.length(); i++){\n\t\tif(text[i] != ' '){\n\t\t\ts += text[i];\n\
    \t\t\tp = 0;\n\t\t}\n\t\telse{\n\t\t\tif(p == 2){\n\t\t\t\ts += '-';\n\t\t\t\t\
    p = 0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ts += '_';\n\t\t\t\tp++;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn s;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp_mgwzn7n: /tmp/tmp_mgwzn7n.cpp:41: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126888
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n  int count = 0;\n  bool flag = false;\n  for (int i = 0; i < text.length();\
    \ i++) {\n    if (text[i] == ' ') {\n      count++;\n      if (count == 2) {\n\
    \        flag = true;\n      }\n    } else {\n      if (flag) {\n        text[i-1]\
    \ = '-';\n        flag = false;\n      }\n      if (count == 1) {\n        text[i-1]\
    \ = '_';\n      }\n      count = 0;\n    }\n  }\n  if (flag) {\n    text[text.length()-1]\
    \ = '-';\n  }\n  if (count == 1) {\n    text[text.length()-1] = '_';\n  }\n  return\
    \ text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpm7yl1rcx: /tmp/tmpm7yl1rcx.cpp:46: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int spaces = 0;\n    std::string output = \"\";\n    for (char & ch :\
    \ text) {\n        if (ch == ' ') {\n            spaces += 1;\n        } else\
    \ {\n            if (spaces == 1) {\n                output += '_';\n        \
    \    } else if (spaces > 1) {\n                output += '-';\n            }\n\
    \            output += ch;\n            spaces = 0;\n        }\n    }\n    if\
    \ (spaces == 1) {\n        output += '_';\n    } else if (spaces > 1) {\n    \
    \    output += '-';\n    }\n    return output;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp4qm2d7f7: /tmp/tmp4qm2d7f7.cpp:41: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tstd::string new_text;\n\tint prev_space = 0;\n\tfor (int i = 0; i < text.length();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tif (prev_space == 0) {\n\t\t\t\tnew_text.push_back('_');\n\
    \t\t\t\tprev_space = 1;\n\t\t\t} else if (prev_space == 1) {\n\t\t\t\tnew_text.push_back('_');\n\
    \t\t\t\tprev_space = 2;\n\t\t\t} else if (prev_space == 2) {\n\t\t\t\tnew_text.push_back('-');\n\
    \t\t\t\tprev_space = 3;\n\t\t\t} else {\n\t\t\t\tnew_text.push_back('-');\n\t\t\
    \t\tprev_space = 3;\n\t\t\t}\n\t\t} else {\n\t\t\tnew_text.push_back(text[i]);\n\
    \t\t\tprev_space = 0;\n\t\t}\n\t}\n\treturn new_text;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp6v03tdyy: /tmp/tmp6v03tdyy.cpp:44: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int i, len;\n    std::string ans = \"\";\n    for(i = 0, len = text.length();\
    \ i < len; i++) {\n        if(i == 0 && text[i] == ' ')\n            continue;\n\
    \        if(text[i] == ' ' && text[i+1] == ' ') {\n            ans.push_back('-');\n\
    \            while(text[i] == ' ')\n                i++;\n            i--;\n \
    \       }\n        else if(text[i] == ' ')\n            ans.push_back('_');\n\
    \        else\n            ans.push_back(text[i]);\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpu9yc0lzj: /tmp/tmpu9yc0lzj.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s = \"\";\n    int count = 0;\n    for(int i = 0; i < text.length();\
    \ i++) {\n        if(text[i] == ' ') {\n            count++;\n            if(count\
    \ >= 2) {\n                s.push_back('-');\n            }\n        } else {\n\
    \            count = 0;\n            s.push_back(text[i]);\n        }\n    }\n\
    \    return s;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpx0pmnv0y: /tmp/tmpx0pmnv0y.cpp:33: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\t\n\tfor(int i=0;i<text.length();i++)\n\t{\n\t\tif(text[i]==' ' && text[i+1]=='\
    \ ' && text[i+2]==' ')\n\t\t{\n\t\t\ttext[i]='-';\n\t\t\ti++;\n\t\t}\n\t\telse\
    \ if(text[i]==' ' && text[i+1]==' ')\n\t\t{\n\t\t\ttext[i]='_';\n\t\t\ti++;\n\t\
    \t}\n\t\telse if(text[i]==' ')\n\t\t{\n\t\t\ttext[i]='_';\n\t\t}\n\t}\n\treturn\
    \ text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpi6hp_3lf: /tmp/tmpi6hp_3lf.cpp:39: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int j = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i]\
    \ == ' ') {\n            if (j > 0 && text[j - 1] == ' ') {\n                continue;\n\
    \            }\n            if (i + 1 < text.size() && text[i + 1] == ' ') {\n\
    \                text[j++] = '-';\n            } else {\n                text[j++]\
    \ = '_';\n            }\n        } else {\n            text[j++] = text[i];\n\
    \        }\n    }\n    return text.substr(0, j);\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpexeg8j_k: /tmp/tmpexeg8j_k.cpp:36: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n        } else\
    \ {\n            count = 0;\n        }\n        if (count <= 2) {\n          \
    \  if (text[i] == ' ') {\n                result += '_';\n            } else {\n\
    \                result += text[i];\n            }\n        } else {\n       \
    \     if (text[i] == ' ') {\n                result += '-';\n            } else\
    \ {\n                result += text[i];\n            }\n        }\n    }\n   \
    \ return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpyuethk14: /tmp/tmpyuethk14.cpp:44: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\
    \t\tif (i == 0) {\n\t\t\t\ttext.erase(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t\telse\
    \ if (text[i - 1] == ' ') {\n\t\t\t\ttext.erase(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\
    \t\t\telse if (text[i + 1] == ' ') {\n\t\t\t\ttext[i] = '-';\n\t\t\t}\n\t\t\t\
    else if (text[i + 1] != ' ') {\n\t\t\t\ttext[i] = '_';\n\t\t\t}\n\t\t}\n\t}\n\t\
    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp6l48k6me: /tmp/tmp6l48k6me.cpp:39: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    bool is_space = false;\n    int count = 0;\n\
    \    for (auto c : text) {\n        if (c == ' ') {\n            if (count > 2)\
    \ {\n                result += \"-\";\n            } else {\n                result\
    \ += \"_\";\n            }\n            is_space = true;\n            count++;\n\
    \        } else {\n            if (is_space) {\n                count = 0;\n \
    \               is_space = false;\n            }\n            result += c;\n \
    \       }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpxycdei3m: /tmp/tmpxycdei3m.cpp:42: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\
    \t\tif (i == 0) {\n\t\t\t\tif (text[i + 1] == ' ') {\n\t\t\t\t\ttext.erase(text.begin()\
    \ + i);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttext[i] = '_';\n\
    \t\t\t\t}\n\t\t\t}\n\t\t\telse if (i != text.length() - 1) {\n\t\t\t\tif (text[i\
    \ + 1] == ' ') {\n\t\t\t\t\ttext.erase(text.begin() + i);\n\t\t\t\t\ti--;\n\t\t\
    \t\t}\n\t\t\t\telse if (text[i - 1] == ' ') {\n\t\t\t\t\ttext[i] = '-';\n\t\t\t\
    \t}\n\t\t\t\telse {\n\t\t\t\t\ttext[i] = '_';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\
    \ {\n\t\t\t\tif (text[i - 1] == ' ') {\n\t\t\t\t\ttext[i] = '-';\n\t\t\t\t}\n\t\
    \t\t\telse {\n\t\t\t\t\ttext[i] = '_';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpwjm23315: /tmp/tmpwjm23315.cpp:54: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ')\
    \ {\n            if(i == 0) {\n                text.erase(i, 1);\n           \
    \     i--;\n            }\n            else if(text[i-1] == ' ') {\n         \
    \       text.erase(i, 1);\n                text[i-1] = '-';\n                i--;\n\
    \            }\n            else {\n                text[i] = '_';\n         \
    \   }\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp4xjrt7ng: /tmp/tmp4xjrt7ng.cpp:38: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n  if (text.size() < 3) {\n    std::replace(text.begin(), text.end(), ' ',\
    \ '_');\n    return text;\n  }\n  // if (text.size() == 3) {\n  //   for (int\
    \ i = 0; i < text.size(); i++) {\n  //     std::replace(text.begin(), text.end(),\
    \ ' ', '_');\n  //   }\n  //   return text;\n  // }\n  int spaceCount = 0;\n \
    \ for (int i = 0; i < text.size(); i++) {\n    if (text[i] == ' ') {\n      spaceCount++;\n\
    \    }\n  }\n  if (spaceCount < 3) {\n    std::replace(text.begin(), text.end(),\
    \ ' ', '_');\n    return text;\n  }\n  if (spaceCount == 3) {\n    std::replace(text.begin(),\
    \ text.end(), ' ', '_');\n    return text;\n  }\n  if (spaceCount > 3) {\n   \
    \ std::replace(text.begin(), text.end(), ' ', '-');\n    return text;\n  }\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpeuigk0x1: /tmp/tmpeuigk0x1.cpp:48: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tint prev = 0;\n\tint i = 0;\n\tfor (i = 0; i < text.length(); i++) {\n\t\
    \tif (text[i] == ' ') {\n\t\t\tif (i - prev > 2) {\n\t\t\t\ttext[prev] = '-';\n\
    \t\t\t\tprev = i;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext[prev] = '_';\n\t\t\t\t\
    prev = i;\n\t\t\t}\n\t\t}\n\t}\n\tif (i - prev > 2) {\n\t\ttext[prev] = '-';\n\
    \t}\n\telse {\n\t\ttext[prev] = '_';\n\t}\n\treturn text;\n}\nint main() {\n \
    \   auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp9v7js_vc: /tmp/tmp9v7js_vc.cpp:39: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::vector<char> v(text.begin(), text.end());\n    std::vector<char>\
    \ output;\n    int consecutive = 0;\n    for (int i = 0; i < v.size(); i++) {\n\
    \        if (v[i] == ' ') {\n            if (output.size() != 0 && output[output.size()\
    \ - 1] == '_') {\n                continue;\n            }\n            if (consecutive\
    \ == 2) {\n                consecutive = 0;\n                output.push_back('-');\n\
    \            } else {\n                consecutive++;\n                output.push_back('_');\n\
    \            }\n        } else {\n            consecutive = 0;\n            output.push_back(v[i]);\n\
    \        }\n    }\n    return std::string(output.begin(), output.end());\n}\n\
    int main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpqwb3tyx0: /tmp/tmpqwb3tyx0.cpp:41: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string ret = \"\";\n    int i=0;\n    while(i<text.length()){\n\
    \        if(text[i]==' '){\n            if(i==0){\n                ret += \"_\"\
    ;\n            }\n            else if(text[i-1]==' '){\n                if(ret[ret.length()-1]=='_'){\n\
    \                    ret += '-';\n                }\n                else{\n \
    \                   ret += '_';\n                }\n            }\n          \
    \  else{\n                ret += '_';\n            }\n        }\n        else{\n\
    \            ret += text[i];\n        }\n        i++;\n    }\n    return ret;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpi4w5navt: /tmp/tmpi4w5navt.cpp:45: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tint count_space = 0;\n\tstd::string result = \"\";\n\tint i;\n\tfor (i\
    \ = 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tcount_space++;\n\
    \t\t}\n\t\telse {\n\t\t\tcount_space = 0;\n\t\t}\n\t\tif (count_space == 1) {\n\
    \t\t\tresult += \"_\";\n\t\t}\n\t\telse if (count_space == 2) {\n\t\t\tresult\
    \ += \"-\";\n\t\t}\n\t\telse if (count_space == 0) {\n\t\t\tresult += text[i];\n\
    \t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpq8b86oxr: /tmp/tmpq8b86oxr.cpp:41: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int consecutive_spaces = 0;\n    for (int i = 0; i < text.length(); i++)\
    \ {\n        if (text[i] == ' ') {\n            consecutive_spaces++;\n      \
    \  } else {\n            consecutive_spaces = 0;\n        }\n        if (consecutive_spaces\
    \ == 1) {\n            text[i] = '_';\n        } else if (consecutive_spaces >\
    \ 2) {\n            text[i] = '-';\n        }\n    }\n    return text;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpmshihzqe: /tmp/tmpmshihzqe.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tint i=0;\n\twhile(i<text.length()){\n\t\tif(text[i]==' '){\n\t\t\tint j=i+1;\n\
    \t\t\twhile(j<text.length() && text[j]==' '){\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif(j-i>=2){\n\
    \t\t\t\ttext.replace(i,j-i,\"-\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\ttext.replace(i,1,\"\
    _\");\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\treturn text;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpcq3oklyy: /tmp/tmpcq3oklyy.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int x = text.length();\n    // std::cout << \"Text length: \" << x <<\
    \ \"\\n\";\n    std::string result = \"\";\n    int ctr = 0;\n    for (int i =\
    \ 0; i < x; i++) {\n        if (text[i] == ' ') {\n            ctr++;\n      \
    \      // std::cout << \"ctr is: \" << ctr << \"\\n\";\n            if (ctr <\
    \ 3) {\n                result += \"_\";\n            }\n            else {\n\
    \                result += \"-\";\n            }\n        }\n        else {\n\
    \            ctr = 0;\n            result += text[i];\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmplhtz6tfc: /tmp/tmplhtz6tfc.cpp:42: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int space = 0;\n    int i = 0;\n    std::string result = \"\";\n    while(i\
    \ < text.length()) {\n        if(text[i] == ' ') {\n            space++;\n   \
    \         if(space == 2) {\n                result += '_';\n            }\n  \
    \          else if(space > 2) {\n                result += '-';\n            }\n\
    \        }\n        else {\n            result += text[i];\n            space\
    \ = 0;\n        }\n        i++;\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpce0i8mwx: /tmp/tmpce0i8mwx.cpp:39: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n  std::string output = \"\";\n  std::string prev_char = \"\";\n  for (auto\
    \ c : text) {\n    if (c == ' ' && prev_char == \" \") {\n      output.pop_back();\n\
    \      output += '-';\n    } else if (c == ' ') {\n      output += '_';\n    }\
    \ else {\n      output += c;\n    }\n    prev_char = c;\n  }\n  return output;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp2j94l52b: /tmp/tmp2j94l52b.cpp:34: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // Your code here\n    int len = text.length();\n    int count = 0;\n\
    \    int count_ = 0;\n    for(int i = 0; i < len; i++){\n        if(text[i] ==\
    \ ' '){\n            count++;\n        }\n        else{\n            count = 0;\n\
    \        }\n        if(count >= 2){\n            count_++;\n        }\n    }\n\
    \    if(count_ == 0){\n        for(int i = 0; i < len; i++){\n            if(text[i]\
    \ == ' '){\n                text[i] = '_';\n            }\n        }\n    }\n\
    \    else{\n        for(int i = 0; i < len; i++){\n            if(text[i] == '\
    \ '){\n                if(text[i+1] == ' '){\n                    if(text[i+2]\
    \ == ' '){\n                        text[i] = '-';\n                    }\n  \
    \                  else{\n                        text[i] = '_';\n           \
    \         }\n                }\n                else{\n                    text[i]\
    \ = '_';\n                }\n            }\n        }\n    }\n    return text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpm_viyxhm: /tmp/tmpm_viyxhm.cpp:61: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126889
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tint current_space_count = 0;\n\tstd::string result = \"\";\n\tfor (int\
    \ i = 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tcurrent_space_count++;\n\
    \t\t\tif (current_space_count == 1) {\n\t\t\t\tresult += \"_\";\n\t\t\t}\n\t\t\
    \telse if (current_space_count == 2) {\n\t\t\t\tresult += \"_\";\n\t\t\t}\n\t\t\
    \telse if (current_space_count > 2) {\n\t\t\t\tresult += \"-\";\n\t\t\t}\n\t\t\
    }\n\t\telse {\n\t\t\tcurrent_space_count = 0;\n\t\t\tresult += text[i];\n\t\t\
    }\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp6i26wq2k: /tmp/tmp6i26wq2k.cpp:42: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tstd::string res = \"\";\n\tint len = text.length();\n\tint i = 0;\n\tint\
    \ f = 0;\n\tint c = 0;\n\tif(len == 0)\n\t\treturn res;\n\twhile(i < len) {\n\t\
    \tif(text[i] == ' ') {\n\t\t\tc++;\n\t\t\tif(c == 1) {\n\t\t\t\tres += text[i];\n\
    \t\t\t}\n\t\t\telse if(c == 2) {\n\t\t\t\tres += '_';\n\t\t\t}\n\t\t\telse if(c\
    \ > 2) {\n\t\t\t\tif(f == 0) {\n\t\t\t\t\tres += '-';\n\t\t\t\t\tf = 1;\n\t\t\t\
    \t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tres += text[i];\n\t\t\tc = 0;\n\t\t\tf\
    \ = 0;\n\t\t}\n\t\ti++;\n\t}\n\treturn res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpoe7723a3: /tmp/tmpoe7723a3.cpp:50: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int i=0;\n    int j=0;\n    int count=0;\n    for(i=0;i<text.length();i++){\n\
    \        if(text[i]==' '){\n            count++;\n        }\n        else{\n \
    \           count=0;\n        }\n        if(count>=2){\n            text[i]='-';\n\
    \        }\n    }\n    for(i=0;i<text.length();i++){\n        if(text[i]==' '){\n\
    \            text[i]='_';\n        }\n    }\n    return text;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpo77zfypa: /tmp/tmpo77zfypa.cpp:40: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // This is a very simple one, worth reading and understanding.\n    //\
    \ Easily solved, but there are many edge cases.\n    // We can return an new string\
    \ and work with it.\n    int len = text.length();\n    std::string res;\n    //\
    \ Assume that our string is ' ' terminated and not empty.\n    // Now we iterate\
    \ over the string, there are three cases.\n    // 1) There is no space\n    //\
    \ 2) There is only one space\n    // 3) There are two or more spaces\n    // If\
    \ we see the first two, no matter what the string was\n    // before the space,\
    \ we simply add the next character and ignore\n    // everything before it.\n\
    \    // This is why we need to treat the final case differently.\n    // If we\
    \ are in the final case, then we add an underscore to our\n    // result string\
    \ and only add the next character if it is not a space.\n    // We want to keep\
    \ track of the number of spaces we see in a row.\n    // To do that, we simply\
    \ keep a counter, which we increment by one\n    // when we see a space and set\
    \ it to zero when we see a non-space.\n    int cnt = 0;\n    for (int i = 0; i\
    \ < len; i++) {\n        if (text[i] == ' ') {\n            cnt++;\n        }\
    \ else {\n            if (cnt == 0) {\n                res += text[i];\n     \
    \       } else if (cnt == 1) {\n                res += '_';\n                res\
    \ += text[i];\n                cnt = 0;\n            } else {\n              \
    \  res += '-';\n                res += text[i];\n                cnt = 0;\n  \
    \          }\n        }\n    }\n    // Handles case where string ends with more\
    \ than one space.\n    if (cnt > 1) {\n        res += '-';\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp7topgkwm: /tmp/tmp7topgkwm.cpp:61: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n  std::string s=\"\";\n  int count=0;\n  for(int i=0;i<text.length();i++){\n\
    \    if(text[i]==' '){\n      if(count<2){\n        s+='_';\n        count++;\n\
    \      }\n      else{\n        s+='-';\n        count++;\n      }\n    }\n   \
    \ else{\n      s+=text[i];\n      count=0;\n    }\n  }\n  return s;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp6r41m9fd: /tmp/tmp6r41m9fd.cpp:40: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\
    \t\tif (i == 0) {\n\t\t\t\ttext.erase(text.begin() + i);\n\t\t\t\ti--;\n\t\t\t\
    }\n\t\t\telse if (text[i - 1] == ' ') {\n\t\t\t\ttext.erase(text.begin() + i);\n\
    \t\t\t\ti--;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext[i] = '_';\n\t\t\t}\n\t\t}\n\t\
    }\n\tint cnt = 0;\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i]\
    \ == '_') {\n\t\t\tcnt++;\n\t\t}\n\t\telse {\n\t\t\tcnt = 0;\n\t\t}\n\t\tif (cnt\
    \ == 3) {\n\t\t\ttext[i] = '-';\n\t\t\tcnt = 0;\n\t\t}\n\t}\n\treturn text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpm1m6451j: /tmp/tmpm1m6451j.cpp:50: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tint spaces = 0;\n\tstd::string result;\n\tfor (int i = 0; i < text.length();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tspaces++;\n\t\t\tif (spaces >= 2) {\n\
    \t\t\t\tif (result[result.length() - 1] != '-') {\n\t\t\t\t\tresult += '-';\n\t\
    \t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspaces = 0;\n\t\t\tresult += text[i];\n\t\
    \t}\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpl5q2y64w: /tmp/tmpl5q2y64w.cpp:35: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // your code here\n    std::string temp;\n    if(text[0]==' ')\n    \
    \    temp+='_';\n    int count=0;\n    for(int i=0;i<text.length();i++)\n    {\n\
    \        if(text[i]==' ')\n        {\n            count++;\n            if(count>2)\n\
    \                temp+='-';\n            else\n                temp+='_';\n  \
    \      }\n        else\n        {\n            count=0;\n            temp+=text[i];\n\
    \        }\n    }\n    return temp;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpedifwuou: /tmp/tmpedifwuou.cpp:43: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    for(int i = 0; i < text.length(); i++) {\n        // take first space\
    \ of the string\n        if(text[i] == ' ') {\n            // add underscore on\
    \ that space\n            text[i] = '_';\n            // count space\n       \
    \     int space_count = 1;\n            // check for consecutive spaces\n    \
    \        for(int j = i+1; j < text.length(); j++) {\n                if(text[j]\
    \ == ' ') {\n                    // if space count is more than 2 add - instead\
    \ of _\n                    if(space_count >= 2) {\n                        text[j]\
    \ = '-';\n                    }\n                    space_count++;\n        \
    \        }\n                else {\n                    break;\n             \
    \   }\n            }\n        }\n    }\n    return text;\n}\nint main() {\n  \
    \  auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpe49vx3m0: /tmp/tmpe49vx3m0.cpp:44: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int space = 0;\n    for (int i = 0; i < text.length(); i++) {\n     \
    \   if (text[i] == ' ') {\n            space++;\n        }\n        else {\n \
    \           space = 0;\n        }\n        if (space > 2) {\n            text[i]\
    \ = '-';\n        }\n        else if (space == 1) {\n            text[i] = '_';\n\
    \        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpostvpgst: /tmp/tmpostvpgst.cpp:36: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // Write your code here\n    std::string modifiedString;\n    int spaceCount\
    \ = 0;\n    for(int i = 0; i < text.length(); i++){\n        if(text[i] == ' '){\n\
    \            spaceCount++;\n            if(spaceCount == 2){\n               \
    \ modifiedString += '-';\n            }\n        }\n        else if(text[i] !=\
    \ ' '){\n            spaceCount = 0;\n            modifiedString += text[i];\n\
    \        }\n    }\n    return modifiedString;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp1ah3nxwv: /tmp/tmp1ah3nxwv.cpp:35: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\t// replace all spaces with underscores\n\twhile(text.find(\" \") != std::string::npos)\n\
    \t\ttext.replace(text.find(\" \"), 1, \"_\");\n\t// replace all triple spaces\
    \ with dashes\n\twhile(text.find(\"___\") != std::string::npos)\n\t\ttext.replace(text.find(\"\
    ___\"), 3, \"-\");\n\t// replace all double spaces with underscores\n\twhile(text.find(\"\
    __\") != std::string::npos)\n\t\ttext.replace(text.find(\"__\"), 2, \"_\");\n\t\
    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp1rd1q0t4: /tmp/tmp1rd1q0t4.cpp:30: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // replace all spaces with underscores\n    std::replace(text.begin(),\
    \ text.end(), ' ', '_');\n    // check if there are more than 2 consecutive spaces\n\
    \    for (size_t i = 1; i < text.size(); i++) {\n        if (text[i] == '_' &&\
    \ text[i - 1] == '_') {\n            text[i] = '-';\n        }\n    }\n    //\
    \ we need to do a second pass to fix possible consecutive underscores\n    //\
    \ at the end of the string\n    for (size_t i = text.size() - 1; i > 0; i--) {\n\
    \        if (text[i] == '_' && text[i - 1] == '_') {\n            text[i] = '-';\n\
    \        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmprgm6hmbl: /tmp/tmprgm6hmbl.cpp:36: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string ans = \"\";\n    int cnt = 0;\n    for(int i = 0; i < text.size();\
    \ i++) {\n        if(text[i] == ' ') {\n            cnt++;\n            if(cnt\
    \ == 1) {\n                ans += '_';\n            }\n            else if(cnt\
    \ > 2) {\n                ans += '-';\n            }\n        }\n        else\
    \ {\n            ans += text[i];\n            cnt = 0;\n        }\n    }\n   \
    \ return ans;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp0uw84_st: /tmp/tmp0uw84_st.cpp:38: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\ttext[0] = toupper(text[0]);\n\tfor (int i = 1; i < text.length(); i++)\
    \ {\n\t\tif (text[i] == ' ') {\n\t\t\tif (text[i-1] == ' ') {\n\t\t\t\ttext[i]\
    \ = '-';\n\t\t\t} else {\n\t\t\t\ttext[i] = '_';\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmp4jb9xao7: /tmp/tmp4jb9xao7.cpp:32: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tint len = text.length();\n\tint space_count = 0;\n\tint i = 0;\n\twhile(text[i]\
    \ == ' '){\n\t\ttext.erase(text.begin() + i);\n\t\tspace_count++;\n\t}\n\tfor(i\
    \ = 0; i < len; i++){\n\t\tif(text[i] == ' '){\n\t\t\tspace_count++;\n\t\t\tif(space_count\
    \ == 3){\n\t\t\t\ttext[i] = '-';\n\t\t\t\tspace_count = 0;\n\t\t\t}\n\t\t\telse{\n\
    \t\t\t\ttext[i] = '_';\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tspace_count = 0;\n\t\t\
    }\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n  \
    \  assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmptlsdw2gj: /tmp/tmptlsdw2gj.cpp:44: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n     \
    \   if (text[i] == ' ') {\n            count++;\n        }\n        else {\n \
    \           count = 0;\n        }\n        if (count > 2) {\n            text[i]\
    \ = '-';\n        }\n        else if (count == 1) {\n            text[i] = '_';\n\
    \        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpn20cswta: /tmp/tmpn20cswta.cpp:36: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n  for(int i = 0; i < text.length(); i++) {\n    if(text[i] == ' ') {\n  \
    \    if(i != 0 && text[i - 1] == ' ') {\n        text[i] = '-';\n      } else\
    \ {\n        text[i] = '_';\n      }\n    }\n  }\n  return text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpsumystxh: /tmp/tmpsumystxh.cpp:31: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tstd::string result;\n\tint count = 0;\n\tfor (char c : text) {\n\t\tif\
    \ (c == ' ') {\n\t\t\tcount++;\n\t\t} else {\n\t\t\tresult += c;\n\t\t\tcount\
    \ = 0;\n\t\t}\n\t\tif (count == 2) {\n\t\t\tresult += '-';\n\t\t\tcount = 0;\n\
    \t\t}\n\t\tif (count == 1) {\n\t\t\tresult += '_';\n\t\t\tcount = 0;\n\t\t}\n\t\
    }\n\treturn result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpzio913v8: /tmp/tmpzio913v8.cpp:40: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tint n = text.length();\n\tint count = 0;\n\tfor (int i = 0; i < n; i++)\
    \ {\n\t\tif (text[i] == ' ') {\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (count > 2) {\n\
    \t\tstd::string ans = \"\";\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (text[i]\
    \ == ' ') {\n\t\t\t\tif (text[i + 1] == ' ') {\n\t\t\t\t\tans += '-';\n\t\t\t\t\
    }\n\t\t\t\telse {\n\t\t\t\t\tans += '_';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\
    \t\t\tans += text[i];\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n\telse {\n\t\tstd::string\
    \ ans = \"\";\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (text[i] == ' ') {\n\
    \t\t\t\tans += '_';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tans += text[i];\n\t\t\t}\n\
    \t\t}\n\t\treturn ans;\n\t}\n\t// Write your solution here\n\t// return \"\";\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpz2y3rbzy: /tmp/tmpz2y3rbzy.cpp:58: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    for(int i = 1; i < text.length(); i++) {\n        if(text[i-1] != ' '\
    \ || text[i] != ' ') {\n            continue;\n        }\n        if(text[i] ==\
    \ ' ' && text[i+1] == ' ') {\n            text[i] = '-';\n        }\n        text[i]\
    \ = '_';\n    }\n    if(text[0] == ' ') {\n        text[0] = '_';\n    }\n   \
    \ return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpxu2i1yfo: /tmp/tmpxu2i1yfo.cpp:32: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tif (text.size() == 0) {\n\t\treturn \"\";\n\t}\n\telse {\n\t\tchar first_char\
    \ = text[0];\n\t\tif (first_char == ' ') {\n\t\t\tfirst_char = '_';\n\t\t}\n\t\
    \tstd::string rest_of_string = text.substr(1);\n\t\tstd::string result = fix_spaces(rest_of_string);\n\
    \t\tif (first_char == ' ' && result[0] == ' ') {\n\t\t\treturn '-' + result;\n\
    \t\t}\n\t\telse {\n\t\t\treturn first_char + result;\n\t\t}\n\t}\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp8s8uzx6h: /tmp/tmp8s8uzx6h.cpp:38: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = \"\";\n    int count_space = 0;\n    for (int i\
    \ = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n            count_space\
    \ += 1;\n        } else {\n            count_space = 0;\n        }\n        if\
    \ (count_space == 1) {\n            result += '_';\n        } else if (count_space\
    \ == 2) {\n            result += '-';\n        } else if (count_space > 2) {\n\
    \            continue;\n        } else {\n            result += text[i];\n   \
    \     }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp1sarw61a: /tmp/tmp1sarw61a.cpp:39: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126891
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int last = 0;\n    int ctr = 0;\n    for(int i = 0; i < text.length();\
    \ i++) {\n        if(text[i] == ' ') {\n            ctr++;\n        } else {\n\
    \            ctr = 0;\n        }\n        if(ctr == 1) {\n            text[i]\
    \ = '_';\n        } else if(ctr > 2) {\n            text[i] = '-';\n        }\n\
    \    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmplmkzohkd: /tmp/tmplmkzohkd.cpp:35: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tint state=0;\n\tint count =0;\n\tfor(int i=0; i<text.length(); i++){\n\t\
    \tif(text[i]==' '){\n\t\t\tcount++;\n\t\t\tif(count==1){\n\t\t\t\tstate=1;\n\t\
    \t\t}\n\t\t\telse if(count==2){\n\t\t\t\tstate=2;\n\t\t\t}\n\t\t\telse if(count>2){\n\
    \t\t\t\tstate=3;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tcount=0;\n\t\t}\n\t}\n\tif(state==0){\n\
    \t\treturn text;\n\t}\n\telse if(state==1){\n\t\treturn text.substr(1,text.length()-1);\n\
    \t}\n\telse if(state==2){\n\t\tstd::string o = \"\";\n\t\tfor(int i=0; i<text.length();\
    \ i++){\n\t\t\tif(text[i]==' '){\n\t\t\t\to = o + '_';\n\t\t\t}\n\t\t\telse{\n\
    \t\t\t\to = o + text[i];\n\t\t\t}\n\t\t}\n\t\treturn o;\n\t}\n\telse if(state==3){\n\
    \t\tstd::string o = \"\";\n\t\tint count=0;\n\t\tfor(int i=0; i<text.length();\
    \ i++){\n\t\t\tif(text[i]==' '){\n\t\t\t\tcount++;\n\t\t\t\tif(count==1){\n\t\t\
    \t\t\to = o + '_';\n\t\t\t\t}\n\t\t\t\telse if(count>1){\n\t\t\t\t\to = o + '-';\n\
    \t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcount=0;\n\t\t\t\to = o + text[i];\n\t\
    \t\t}\n\t\t}\n\t\treturn o;\n\t}\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpfxcf6lxn: /tmp/tmpfxcf6lxn.cpp:76: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string b = \"\";\n    if(text[0] == ' '){\n        b += '_';\n \
    \   }\n    for(int i = 0; i < text.length(); i++){\n        if(text[i] == ' '\
    \ && text[i+1] == ' '){\n            b += '-';\n            i++;\n        }\n\
    \        else if(text[i] == ' '){\n            b += '_';\n        }\n        else{\n\
    \            b += text[i];\n        }\n    }\n    return b;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpvm02bs8_: /tmp/tmpvm02bs8_.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string res = \"\";\n    if(text.length() == 0){\n        return\
    \ res;\n    }\n    int consecutive = 0;\n    for(int i = 0; i < text.length();\
    \ i++){\n        if(text[i] == ' '){\n            consecutive++;\n           \
    \ if(consecutive == 1){\n                res += '_';\n            }\n        \
    \    else if(consecutive == 2){\n                res += '_';\n            }\n\
    \            else if(consecutive > 2){\n                res += '-';\n        \
    \    }\n        }\n        else{\n            consecutive = 0;\n            res\
    \ += text[i];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmppv1m04zt: /tmp/tmppv1m04zt.cpp:45: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n     \
    \   if (text[i] == ' ') {\n            count++;\n        }\n        else {\n \
    \           count = 0;\n        }\n        if (count == 1) {\n            text[i]\
    \ = '_';\n        }\n        else if (count > 2) {\n            text[i] = '-';\n\
    \        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpo1zyv3po: /tmp/tmpo1zyv3po.cpp:36: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tint count = 0;\n\tstd::string result = \"\";\n\tfor (int i = 0; i < text.length();\
    \ i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tcount++;\n\t\t\tif (count > 2) {\n\t\
    \t\t\tresult += '-';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult += '_';\n\t\t\t}\n\
    \t\t}\n\t\telse {\n\t\t\tcount = 0;\n\t\t\tresult += text[i];\n\t\t}\n\t}\n\t\
    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpifdqyulk: /tmp/tmpifdqyulk.cpp:39: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n   \
    \ assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmps3vnhkdl: /tmp/tmps3vnhkdl.cpp:20: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string spaces = \"\";\n    for (int i = 0; i < text.length(); i++)\
    \ {\n        if (text[i] == ' ') {\n            if (spaces.length() < 2) {\n \
    \               spaces += ' ';\n            } else {\n                spaces +=\
    \ '-';\n            }\n        } else {\n            if (spaces.length() > 0)\
    \ {\n                text.replace(i - spaces.length(), spaces.length(), spaces);\n\
    \                i += spaces.length() - 1;\n                spaces = \"\";\n \
    \           }\n        }\n    }\n    if (spaces.length() > 0) {\n        text.replace(text.length()\
    \ - spaces.length(), spaces.length(), spaces);\n    }\n    return text;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp9jeg4vho: /tmp/tmp9jeg4vho.cpp:39: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n     \
    \   if (text[i] == ' ') {\n            count++;\n        }\n        else {\n \
    \           count = 0;\n        }\n        if (count == 2) {\n            text[i]\
    \ = '-';\n        }\n        else if (count > 2) {\n            text[i] = '-';\n\
    \        }\n        else {\n            text[i] = text[i];\n        }\n    }\n\
    \    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ') {\n\
    \            text[i] = '_';\n        }\n    }\n    std::string result = text;\n\
    \    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpw1h_1n9o: /tmp/tmpw1h_1n9o.cpp:45: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // remove all whitespaces at start of string\n    int idx = 0;\n    for\
    \ (int i = 0; i < text.length(); i++) {\n        if (text[i] != ' ') {\n     \
    \       idx = i;\n            break;\n        }\n    }\n    std::string first\
    \ = text.substr(idx, text.length() - idx);\n    std::string res = \"\";\n    int\
    \ count = 0;\n    for (int i = 0; i < first.length(); i++) {\n        if (first[i]\
    \ == ' ') {\n            count++;\n        } else {\n            count = 0;\n\
    \        }\n        if (count == 0) {\n            res += first[i];\n        }\
    \ else if (count == 1) {\n            res += '_';\n        } else if (count ==\
    \ 2) {\n            res = res.substr(0, res.length() - 1);\n            res +=\
    \ '-';\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp8ctm7e5o: /tmp/tmp8ctm7e5o.cpp:47: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n  for(int i = 0; i < text.length(); i++) {\n    if(text[i] == ' ') {\n  \
    \    if(i > 0 && text[i-1] == ' ') {\n        text[i] = '-';\n      } else {\n\
    \        text[i] = '_';\n      }\n    }\n  }\n  return text;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpq8gryts0: /tmp/tmpq8gryts0.cpp:31: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i < text.size();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n        } else\
    \ {\n            if (count == 1) {\n                result += '_';\n         \
    \   } else if (count > 2) {\n                result += '-';\n            }\n \
    \           result += text[i];\n            count = 0;\n        }\n    }\n   \
    \ if (count == 1) {\n        result += '_';\n    } else if (count > 2) {\n   \
    \     result += '-';\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp_4q7z87r: /tmp/tmp_4q7z87r.cpp:41: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // Implement code here\n    int i = 0;\n    while(i < text.length()){\n\
    \        if(text[i] == ' ' && text[i+1] == ' '){\n            text.replace(i,1,\"\
    -\");\n        }\n        else if(text[i] == ' '){\n            text.replace(i,1,\"\
    _\");\n        }\n        i++;\n    }\n    return text;\n}\nint main() {\n   \
    \ auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpi_qxmgop: /tmp/tmpi_qxmgop.cpp:32: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tint spaces = 0;\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i]\
    \ == ' ') {\n\t\t\tspaces++;\n\t\t}\n\t}\n\tif (spaces < 2) {\n\t\tfor (int i\
    \ = 0; i < text.length(); i++) {\n\t\t\tif (text[i] == ' ') {\n\t\t\t\ttext[i]\
    \ = '_';\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tint back = 0;\n\t\tfor (int i = 0;\
    \ i < text.length(); i++) {\n\t\t\tif (text[i] == ' ') {\n\t\t\t\tback++;\n\t\t\
    \t}\n\t\t\telse {\n\t\t\t\tif (back > 2) {\n\t\t\t\t\ttext[i - back] = '-';\n\t\
    \t\t\t\tfor (int j = 1; j < back; j++) {\n\t\t\t\t\t\ttext[i - back + j] = ' ';\n\
    \t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttext[i - back] = '_';\n\t\t\t\
    \t\tfor (int j = 1; j < back; j++) {\n\t\t\t\t\t\ttext[i - back + j] = ' ';\n\t\
    \t\t\t\t}\n\t\t\t\t}\n\t\t\t\tback = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn text;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp6q1gg58v: /tmp/tmp6q1gg58v.cpp:56: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\t// replace 1 space with \" \"\n\tint spaces = 1;\n\tfor (int i = 0; i <\
    \ text.length(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tif (spaces == 1) {\n\
    \t\t\t\ttext[i] = '_';\n\t\t\t\tspaces++;\n\t\t\t}\n\t\t\telse if (spaces == 2)\
    \ {\n\t\t\t\ttext[i] = '_';\n\t\t\t\tspaces++;\n\t\t\t}\n\t\t\telse if (spaces\
    \ > 2) {\n\t\t\t\ttext[i] = '-';\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tspaces = 1;\n\
    \t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpfvdkk_7n: /tmp/tmpfvdkk_7n.cpp:42: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    \tstd::string ans = \"\";\n\tint cnt = 0;\n\tfor(int i = 0; i < text.size();\
    \ i++) {\n\t\tif(text[i] == ' ') cnt++;\n\t\telse cnt = 0;\n\t\tif(cnt == 2) ans\
    \ += '-';\n\t\telse if(cnt == 1) ans += '_';\n\t\telse ans += text[i];\n\t}\n\t\
    return ans;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpw5winany: /tmp/tmpw5winany.cpp:30: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int count = 0;\n    std::string str = \"\";\n    std::string ans = \"\
    \";\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ')\
    \ {\n            count++;\n            if(count > 2) {\n                str =\
    \ '-';\n            }\n            else {\n                str = '_';\n      \
    \      }\n        }\n        else {\n            str = text[i];\n            count\
    \ = 0;\n        }\n        ans += str;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp4sfcqn0z: /tmp/tmp4sfcqn0z.cpp:41: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // write your code here\n    std::string result = \"\";\n    int space_count\
    \ = 0;\n    bool previous_space = false;\n    for(char c : text){\n        if(c\
    \ == ' '){\n            space_count += 1;\n            if(space_count > 2 && !previous_space){\n\
    \                result.append(\"-\");\n                previous_space = true;\n\
    \            }\n        }\n        else{\n            space_count = 0;\n     \
    \       previous_space = false;\n            result.append(1, c);\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpol448s3l: /tmp/tmpol448s3l.cpp:38: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tstd::string fix_spaces;\n\tfix_spaces.reserve(text.size());\n\tfix_spaces.push_back(text[0]);\n\
    \tfor (int i = 1; i < text.size(); i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tif\
    \ (text[i - 1] == ' ') {\n\t\t\t\tif (fix_spaces.back() == '_')\n\t\t\t\t\tfix_spaces.push_back('-');\n\
    \t\t\t\telse\n\t\t\t\t\tfix_spaces.push_back('_');\n\t\t\t}\n\t\t\telse\n\t\t\t\
    \tfix_spaces.push_back('_');\n\t\t}\n\t\telse\n\t\t\tfix_spaces.push_back(text[i]);\n\
    \t}\n\treturn fix_spaces;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpy_vlp42u: /tmp/tmpy_vlp42u.cpp:38: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    assert(text != \"\");\n    std::string result = \"\";\n    int spaces_count\
    \ = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] ==\
    \ ' ') {\n            spaces_count++;\n        } else {\n            if (spaces_count\
    \ == 0) {\n                result += text[i];\n            } else if (spaces_count\
    \ == 1) {\n                result += '_';\n                result += text[i];\n\
    \                spaces_count = 0;\n            } else if (spaces_count == 2)\
    \ {\n                result += '_';\n                result += text[i];\n    \
    \            spaces_count = 0;\n            } else {\n                result +=\
    \ '-';\n                result += text[i];\n                spaces_count = 0;\n\
    \            }\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpd96no1b8: /tmp/tmpd96no1b8.cpp:44: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n  // Insert code here\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpasait0c3: /tmp/tmpasait0c3.cpp:19: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int index = 0;\n    int count = 0;\n    while(index < text.length() &&\
    \ text[index] == ' ') {\n        index++;\n    }\n    text = text.substr(index);\n\
    \    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ') {\n\
    \            count++;\n        }\n        else {\n            count = 0;\n   \
    \     }\n        if(count > 2) {\n            text[i] = '-';\n        }\n    \
    \    else if(count == 1) {\n            text[i] = '_';\n        }\n    }\n   \
    \ return text;\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpgxouw91l: /tmp/tmpgxouw91l.cpp:41: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = \"\";\n    int count = 0;\n    for (int i = 0; i\
    \ < text.length(); i++) {\n        if (text[i] == ' ') {\n            count++;\n\
    \        } else {\n            if (count == 1) {\n                result += \"\
    _\";\n            } else if (count > 1) {\n                result += \"-\";\n\
    \            }\n            result += text[i];\n            count = 0;\n     \
    \   }\n    }\n    if (count == 1) {\n        result += \"_\";\n    } else if (count\
    \ > 1) {\n        result += \"-\";\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmppj9nu0la: /tmp/tmppj9nu0la.cpp:41: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126893
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    int spaceCount = 0;\n    for (auto it = text.begin();\
    \ it != text.end(); it++) {\n        if (*it == ' ') {\n            spaceCount++;\n\
    \            if (spaceCount > 2) {\n                result.pop_back();\n     \
    \           result.push_back('-');\n            } else {\n                result.push_back('_');\n\
    \            }\n        } else {\n            spaceCount = 0;\n            result.push_back(*it);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpntxt5d7p: /tmp/tmpntxt5d7p.cpp:38: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126894
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n  int spaces = 0;\n  for (int i = 0; i < text.length(); i++) {\n    if (text[i]\
    \ == ' ') {\n      spaces++;\n    }\n  }\n  std::string new_text;\n  if (spaces\
    \ <= 2) {\n    for (int i = 0; i < text.length(); i++) {\n      if (text[i] ==\
    \ ' ') {\n        new_text += '_';\n      } else {\n        new_text += text[i];\n\
    \      }\n    }\n  } else {\n    int spaces = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n      if (text[i] == ' ') {\n        spaces++;\n      } else {\n   \
    \     if (spaces > 2) {\n          new_text += '-';\n          spaces = 0;\n \
    \       } else if (spaces > 0) {\n          for (int j = 0; j < spaces; j++) {\n\
    \            new_text += '_';\n          }\n          spaces = 0;\n        }\n\
    \        new_text += text[i];\n      }\n    }\n  }\n  return new_text;\n}\nint\
    \ main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660126894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tint space = 0;\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i]\
    \ == ' ') {\n\t\t\tspace++;\n\t\t}\n\t\telse {\n\t\t\tspace = 0;\n\t\t}\n\t\t\
    if (space == 1) {\n\t\t\ttext[i] = '_';\n\t\t}\n\t\telse if (space > 2) {\n\t\t\
    \ttext[i] = '-';\n\t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto candidate\
    \ = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpm6w24wbc: /tmp/tmpm6w24wbc.cpp:36: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tint count = 0;\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i]\
    \ == ' ') {\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (count == 0) {\n\t\treturn text;\n\
    \t}\n\telse if (count == 1) {\n\t\tfor (int i = 0; i < text.length(); i++) {\n\
    \t\t\tif (text[i] == ' ') {\n\t\t\t\ttext[i] = '_';\n\t\t\t}\n\t\t}\n\t\treturn\
    \ text;\n\t}\n\telse if (count == 2) {\n\t\tfor (int i = 0; i < text.length();\
    \ i++) {\n\t\t\tif (text[i] == ' ') {\n\t\t\t\ttext[i] = '_';\n\t\t\t}\n\t\t}\n\
    \t\treturn text;\n\t}\n\telse {\n\t\tfor (int i = 0; i < text.length(); i++) {\n\
    \t\t\tif (text[i] == ' ') {\n\t\t\t\ttext[i] = '-';\n\t\t\t}\n\t\t}\n\t\treturn\
    \ text;\n\t}\n}\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"\
    Example\")) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) ==\
    \ (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\"\
    )) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"Exa   mple\"\
    )) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpg3z63dcg: /tmp/tmpg3z63dcg.cpp:53: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string s;\n    int count=0;\n    for(int i=0;i<text.length();i++){\n\
    \        if(text[i]==' '){\n            count++;\n            if(count==1){\n\
    \                s+='_';\n            }\n            else if(count==2){\n    \
    \            s+='_';\n            }\n            else if(count>2){\n         \
    \       s+='-';\n            }\n        }\n        else{\n            count=0;\n\
    \            s+=text[i];\n        }\n    }\n    return s;\n}\nint main() {\n \
    \   auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp9y9m15_j: /tmp/tmp9y9m15_j.cpp:42: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n\tint count = 0;\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i]\
    \ == ' ') {\n\t\t\tcount += 1;\n\t\t}\n\t\telse {\n\t\t\tcount = 0;\n\t\t}\n\t\
    \tif (count == 2) {\n\t\t\ttext[i - 1] = '-';\n\t\t}\n\t\telse if (count == 1)\
    \ {\n\t\t\ttext[i] = '_';\n\t\t}\n\t}\n\treturn text;\n}\nint main() {\n    auto\
    \ candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"Example\"\
    ));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n  \
    \  assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpy73de97b: /tmp/tmpy73de97b.cpp:36: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result = \"\";\n    int space_count = 0;\n    for (auto &c\
    \ : text) {\n        if (c == ' ') {\n            space_count++;\n           \
    \ if (space_count > 2) {\n                c = '-';\n            } else {\n   \
    \             c = '_';\n            }\n        } else {\n            space_count\
    \ = 0;\n        }\n        result += c;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpfky4bnuo: /tmp/tmpfky4bnuo.cpp:37: int main(): Assertion `candidate(("Exa   mple"))
    == ("Exa-mple")'' failed.

    '
  stdout: ''
  timestamp: 1660126894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    // std::string s;\n    // char prev = ' ';\n    // for(auto c : text)\
    \ {\n    //     if(c == ' ') {\n    //         if(prev == ' ') {\n    //     \
    \        s += \"-\";\n    //         } else {\n    //             s += \"_\";\n\
    \    //         }\n    //     } else {\n    //         s += c;\n    //     }\n\
    \    //     prev = c;\n    // }\n    // return s;\n    std::string s;\n    for(int\
    \ i = 0; i < text.size(); i++) {\n        if(text[i] == ' ') {\n            if(i\
    \ == 0 || (i > 0 && text[i-1] == ' ')) {\n                s += \"-\";\n      \
    \      } else {\n                s += \"_\";\n            }\n        } else {\n\
    \            s += text[i];\n        }\n    }\n    return s;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpi54asw9l: /tmp/tmpi54asw9l.cpp:48: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int space_counter = 0;\n    std::string result;\n    for (int i = 0;\
    \ i < text.length(); i++) {\n        if (text[i] == ' ') {\n            space_counter++;\n\
    \            if (space_counter == 1) {\n                result += '_';\n     \
    \       }\n            else if (space_counter == 2) {\n                result[result.length()\
    \ - 1] = '-';\n            }\n        }\n        else {\n            space_counter\
    \ = 0;\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\"\
    )) == (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp9y1oejsg: /tmp/tmp9y1oejsg.cpp:38: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int i = 0;\n    int count = 0;\n    std::string::iterator sit;\n    for(sit\
    \ = text.begin(); sit != text.end(); sit++) {\n        if(*sit == ' ') {\n   \
    \         count++;\n        }\n        else {\n            count = 0;\n      \
    \  }\n        if(count > 1) {\n            *sit = '-';\n        }\n        else\
    \ {\n            *sit = '_';\n        }\n    }\n    return text;\n}\nint main()\
    \ {\n    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) ==\
    \ (\"Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpmf8zig9h: /tmp/tmpmf8zig9h.cpp:36: int main(): Assertion `candidate(("Example"))
    == ("Example")'' failed.

    '
  stdout: ''
  timestamp: 1660126894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    int len = text.length();\n    int cspace = 0;\n    for(int i = 0; i <\
    \ len; i++) {\n        if(text[i] == ' ') {\n            cspace++;\n        }\n\
    \        else {\n            cspace = 0;\n        }\n        if(cspace > 2) {\n\
    \            text[i] = '-';\n        }\n        else if(cspace == 1) {\n     \
    \       text[i] = '_';\n        }\n    }\n    return text;\n}\nint main() {\n\
    \    auto candidate = fix_spaces;\n    assert(candidate((\"Example\")) == (\"\
    Example\"));\n    assert(candidate((\"Mudasir Hanif \")) == (\"Mudasir_Hanif_\"\
    ));\n    assert(candidate((\"Yellow Yellow  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert(candidate((\"Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"\
    \   Exa 1 2 2 mple\")) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmpy7s4d5g_: /tmp/tmpy7s4d5g_.cpp:37: int main(): Assertion `candidate(("Yellow
    Yellow  Dirty  Fellow")) == ("Yellow_Yellow__Dirty__Fellow")'' failed.

    '
  stdout: ''
  timestamp: 1660126894
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string text, replace\
    \ all spaces in it with underscores, \n// and if a string has more than 2 consecutive\
    \ spaces, \n// then replace all consecutive spaces with - \n// >>> fix_spaces((\"\
    \ Example\"))\n// (\"Example\")\n// >>> fix_spaces((\" Example 1\"))\n// (\"Example_1\"\
    )\n// >>> fix_spaces((\" Example 2\"))\n// (\"_Example_2\")\n// >>> fix_spaces((\"\
    \ Example 3\"))\n// (\"_Example-3\")\nstd::string fix_spaces(std::string text)\
    \ {\n    std::string result;\n    int count = 0;\n    for (int i = 0; i < text.length();\
    \ i++) {\n        if (text[i] == ' ') {\n            count++;\n        } else\
    \ {\n            if (count == 1) {\n                result.push_back('_');\n \
    \           } else if (count > 2) {\n                result.push_back('-');\n\
    \            }\n            result.push_back(text[i]);\n            count = 0;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = fix_spaces;\n\
    \    assert(candidate((\"Example\")) == (\"Example\"));\n    assert(candidate((\"\
    Mudasir Hanif \")) == (\"Mudasir_Hanif_\"));\n    assert(candidate((\"Yellow Yellow\
    \  Dirty  Fellow\")) == (\"Yellow_Yellow__Dirty__Fellow\"));\n    assert(candidate((\"\
    Exa   mple\")) == (\"Exa-mple\"));\n    assert(candidate((\"   Exa 1 2 2 mple\"\
    )) == (\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: 'tmp3atfrnx4: /tmp/tmp3atfrnx4.cpp:35: int main(): Assertion `candidate(("Mudasir
    Hanif ")) == ("Mudasir_Hanif_")'' failed.

    '
  stdout: ''
  timestamp: 1660126894

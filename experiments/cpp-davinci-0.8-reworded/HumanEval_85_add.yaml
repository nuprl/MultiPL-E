name: HumanEval_85_add
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a non-empty vector\
  \ of integers lst. add the even elements that are at odd indices..\n// Examples:\n\
  // >>> add((std::vector<long>({(long)4, (long)2, (long)6, (long)7})))\n// (2)\n\
  long add(std::vector<long> lst) {\n"
tests: "}\nint main() {\n    auto candidate = add;\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)88}))) == (88));\n    assert(candidate((std::vector<long>({(long)4, (long)5,\
  \ (long)6, (long)7, (long)2, (long)122}))) == (122));\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)0, (long)6, (long)7}))) == (0));\n    assert(candidate((std::vector<long>({(long)4,\
  \ (long)4, (long)6, (long)8}))) == (12));\n}\n"
completions: ["    std::vector<long>::iterator it;\n    long sum = 0;\n    int odd_even_flag\
    \ = 0;\n    for(it = lst.begin(); it != lst.end(); it++) {\n        if(odd_even_flag\
    \ == 0) {\n            if(*it % 2 == 0)\n                sum += *it;\n       \
    \ }\n        odd_even_flag = !odd_even_flag;\n    }\n    return sum;", "\t", "\t\
    long result = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 1\
    \ && lst[i] % 2 == 0) {\n\t\t\tresult += lst[i];\n\t\t}\n\t}\n\treturn result;",
  "long sum = 0;\nfor(int i = 0; i < lst.size(); i++) {\nif(i % 2 == 1 && lst[i] %\
    \ 2 == 0) {\nsum += lst[i];", "  long res=0;\n  for(int i=0;i<lst.size();i+=2)\n\
    \    res+=lst[i];\n  return res;", "    long sum=0;\n    for(int i=0;i<lst.size();i++)\n\
    \    {\n        if(i%2!=0 && lst[i]%2==0)\n        {\n            sum=sum+lst[i];\n\
    \        }\n    }\n    return sum;", '    return accumulate(lst.begin()+1, lst.end(),
    0, [](long x, long y){return x+((y%2==0)?y:0);});', "    assert(lst.size() > 0);\n\
    \    long ans = 0;\n    // AssertionError: assert(lst.size() > 0)\n    for (int\
    \ i = 0; i < lst.size(); i++) {\n        if (i % 2 != 0 && lst[i] % 2 == 0) {\n\
    \            ans += lst[i];\n        }\n    }\n    return ans;", "\tlong sum =\
    \ 0;\n\t// Loop through array, add even numbers found in odd indices to variable\
    \ sum\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 1 && lst[i]\
    \ % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "  long res =\
    \ 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 1 && lst[i] %\
    \ 2 == 0) {\n      res += lst[i];\n    }\n  }\n  return res;", "  long res = 0;\n\
    \  long i = 0;\n  while (i < lst.size()) {\n    if (i % 2 == 1) {\n      if (lst[i]\
    \ % 2 == 0) {\n        res += lst[i];\n      }\n    }\n    i++;\n  }\n  return\
    \ res;", "\t// Your code here\n\tint n = lst.size();\n\tint sum = 0;\n\tfor (int\
    \ i = 0; i < n; i++) {\n\t\tif (i % 2 == 0 && lst[i] % 2 == 0)\n\t\t\tsum += lst[i];\n\
    \t}\n\treturn sum;", "  long res = 0;\n  for (long i = 0; i < lst.size(); i++)\
    \ {\n    if ((i % 2 == 1) && (lst[i] % 2 == 0)) {\n      res += lst[i];\n    }\n\
    \  }\n  return res;", "    long ans = 0;\n    for(int i = 0; i < lst.size(); i++){\n\
    \        if(lst[i] % 2 == 0 && i % 2 != 0){\n            ans += lst[i];\n    \
    \    }\n    }\n    return ans;", "    return std::accumulate(lst.begin() + 1,\
    \ lst.end(), lst[0], [](auto x, auto y) {\n        return x + (y % 2 == 0 ? y\
    \ : 0);\n    });", "   long res = 0;\n   for(int i = 0; i < lst.size(); i++){\n\
    \      if(i % 2 == 1 && lst[i] % 2 == 0){\n         res += lst[i];\n      }\n\
    \   }\n   return res;", "  long res = 0;\n  // BEGIN\n  for (int i = 0; i < lst.size();\
    \ i += 2) {\n    if (lst[i] % 2 == 0) {\n      res += lst[i];\n    }\n  }\n  //\
    \ END\n  return res;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if(i % 2 == 1){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;", "\tlong sum = 0;\n\tfor (long i = 0; i < lst.size(); i++) {\n\
    \t\tif ((i % 2 == 1) && (lst[i] % 2 == 0)) {\n\t\t\tsum += lst[i];\n\t\t}\n\t\
    }\n\treturn sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n\
    \    if (i % 2 != 0 && lst[i] % 2 == 0) {\n      sum += lst[i];\n    }\n  }\n\
    \  return sum;", "    long sum = 0;\n    for(int i = 1; i < lst.size(); i+=2)\n\
    \    {\n        if(lst[i] % 2 == 0)\n        {\n            sum+=lst[i];\n   \
    \     }\n    }\n    return sum;", "  // replace with your code\n  long sum=0;\n\
    \  for(long i=0;i<lst.size();i+=2)\n  {\n    if(lst[i]%2==0)\n    {\n      sum+=lst[i];\n\
    \    }\n  }\n  return sum;", "    long res = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] % 2 == 0 && i % 2 != 0) {\n            res += lst[i];\n\
    \        }\n    }\n    return res;", "  long ans = 0;\n  for(int i = 0; i < lst.size();\
    \ i++) {\n    if(lst[i] % 2 == 0 && i % 2 == 1) {\n      ans += lst[i];\n    }\n\
    \  }\n  return ans;", "  int i=0;\n  long ans=0;\n  while(i<lst.size()){\n   \
    \ if(i%2!=0 && lst[i]%2==0){\n      ans+=lst[i];\n    }\n    i++;\n  }\n  return\
    \ ans;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n     \
    \   if (i % 2 == 1 && lst[i] % 2 == 0) {\n            sum += lst[i];\n       \
    \ }\n    }\n    return sum;", "    long res = 0;\n    for(long i = 0; i < lst.size();\
    \ i++) {\n        if(lst[i] % 2 == 0 && i % 2 == 1) {\n            res += lst[i];\n\
    \        }\n    }\n    return res;", "  long acc = 0;\n  // BEGIN SOLUTION\n \
    \ int n = lst.size();\n  if (n==0) return 0;\n  int i=0;\n  while (i<n) {\n  \
    \  if (i%2) acc += lst[i];\n    i++;\n  }\n  // END SOLUTION\n  return acc;",
  "    std::vector<long> v;\n    for(int i=0;i<lst.size();i++){\n        if(i%2==1)\n\
    \            v.push_back(lst[i]);\n    }\n    for(int i=0;i<v.size();i++){\n \
    \       if(v[i]%2==0)\n            return v[i];\n    }\n    return 0;", "  long\
    \ sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 != 0 && lst[i]\
    \ % 2 == 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "  long sum =\
    \ 0;\n  for (int i = 0; i < lst.size(); i++){\n    if (i % 2 != 0 && lst[i] %\
    \ 2 == 0){\n      sum += lst[i];\n    }\n  }\n  return sum;", "//     BEGIN SOLUTION\n\
    \    return std::accumulate(lst.begin() + 1, lst.end(), 0L,\n    [](long a, long\
    \ b) { return a + ((b % 2) ? 0 : b); });\n//     END SOLUTION", "    long sum\
    \ = 0;\n    for(auto e: lst) {\n        if(e % 2 == 0) {\n            sum += e;\n\
    \        }\n    }\n    return sum;", "    auto res = 0L;\n    auto b = 1;\n  \
    \  for (auto e : lst) {\n        if (b & 1) {\n            res += e;\n       \
    \ }\n        b++;\n    }\n    return res;", "    long s = 0;\n    for(int i =\
    \ 1; i < lst.size(); i += 2) {\n        if(lst[i] % 2 == 0)\n            s +=\
    \ lst[i];\n    }\n    return s;", "    // For example if lst is a vector of 5\
    \ elements, then indices are:\n    // 0, 1, 2, 3, 4\n    // The even indices are\
    \ 0, 2, 4\n    // The odd indices are 1, 3\n    long res = 0;\n    for (int i\
    \ = 0; i < lst.size(); i++) {\n        if (i % 2 != 0 && lst[i] % 2 == 0) {\n\
    \            res += lst[i];\n        }\n    }\n    return res;", "  long sum =\
    \ 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 1 && lst[i] %\
    \ 2 == 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "\tlong sum = 0;\n\
    \tfor (int i = 0; i < lst.size(); i+=2) {\n\t\tif (lst[i] % 2 == 0) {\n\t\t\t\
    sum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "  long r = 0;\n  for (long i = 0;\
    \ i < lst.size(); i++) {\n    if (i % 2 != 0 && lst[i] % 2 == 0) {\n      r +=\
    \ lst[i];\n    }\n  }\n  return r;", "    long sum = 0;\n    for(int i = 0; i\
    \ < lst.size(); i++) {\n        if (i % 2 == 1 && lst[i] % 2 == 0) {\n       \
    \     sum += lst[i];\n        }\n    }\n    return sum;", "    // input: (std::vector<long>)(lst)\n\
    \    // returns: (long)(res)\n    // res = (long)(0)\n    long res = 0;\n    //\
    \ template<class T> class vector {\n    //     public:\n    //         /*fields*/\n\
    \    //         size_t size;\n    //         /*methods*/\n    //         void\
    \ push_back(T);\n    //         T& at(size_t);\n    //         T& operator[](size_t);\n\
    \    //         vector<T>::iterator begin();\n    //         vector<T>::iterator\
    \ end();\n    // };\n    // class vector<long>::iterator {\n    //     public:\n\
    \    //         /*fields*/\n    //         long* it;\n    //         /*methods*/\n\
    \    //         long& operator*();\n    //         vector<long>::iterator& operator++();\n\
    \    //         bool operator!=(vector<long>::iterator& other);\n    // };\n \
    \   for (std::vector<long>::iterator it = lst.begin(); (it != lst.end()); ++it)\
    \ {\n        if (!(res % 2)) {\n            res += *it;\n        }\n    }\n  \
    \  return res;", "    long temp = 0;\n    for(long i = 0; i < lst.size(); i++){\n\
    \        if(i % 2 != 0 && lst[i] % 2 == 0){\n            temp += lst[i];\n   \
    \     }\n    }\n    return temp;", "\tif (lst.size() == 0) {\n\t\treturn 0;\n\t\
    }\n\telse {\n\t\tlong first = lst[0];\n\t\tstd::vector<long> rest(lst.begin()\
    \ + 1, lst.end());\n\t\tif (first % 2 == 0) {\n\t\t\treturn add(rest);\n\t\t}\n\
    \t\telse {\n\t\t\treturn first + add(rest);\n\t\t}\n\t}", "\tlong a=0;\n\tfor(int\
    \ i=0;i<lst.size();i+=2)\n\t{\n\t\tif(lst[i]%2==0)\n\t\t{\n\t\t\ta+=lst[i];\n\t\
    \t}\n\t}\n\treturn a;", "    long c=0;\n    for(int i=0;i<lst.size();i++)\n  \
    \  {\n    \tif(i%2==1)\n    \t{\n    \t\tif(lst[i]%2==0)\n    \t\t{\n    \t\t\t\
    c+=lst[i];\n    \t\t}\n    \t}\n    }\n    return c;", "  long output = 0;\n \
    \ for (int i = 0; i < lst.size(); i += 2) {\n    output += lst[i];\n  }\n  return\
    \ output;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif\
    \ (i % 2 == 1 && lst[i] % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn\
    \ sum;", "// get the list's length\nint len = lst.size();\nassert(len > 0);\n\
    // initialize the sum\nlong sum = 0;\nfor (int i = 0; i < len; i += 2) {\nif (lst[i]\
    \ % 2 == 0) {\nsum += lst[i];", "    long sum = 0;\n    for(int i = 1; i < lst.size();\
    \ i+=2) {\n        if(lst[i] % 2 == 0) {\n            sum += lst[i];\n       \
    \ }\n    }\n    return sum;", "  /* Fill this stub */\n  long sum = 0;\n  int\
    \ j = 1;\n  for(int i = 0; i < lst.size(); i++)\n  {\n    if(i == j)\n    {\n\
    \      sum += lst[i];\n      j += 2;\n    }\n  }\n  return sum;", "    long res\
    \ = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0\
    \ && i % 2 != 0) {\n            res += lst[i];\n        }\n    }\n    return res;",
  "\tstd::vector<long> evens = std::vector<long>();\n\tlong sum = 0;\n\tfor (int i\
    \ = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 1 && lst[i] % 2 == 0) {\n\t\t\t\
    evens.push_back(lst[i]);\n\t\t}\n\t}\n\tfor (int i = 0; i < evens.size(); i++)\
    \ {\n\t\tsum += evens[i];\n\t}\n\treturn sum;", "  int result = 0;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    if ((lst[i] % 2 == 0) && (i % 2 != 0)) {\n\
    \      result += lst[i];\n    }\n  }\n  return result;", "    long res = 0;\n\
    \    for(int i = 0; i < lst.size(); i++) {\n        if(i%2==1 && lst[i]%2==0)\
    \ {\n            res += lst[i];\n        }\n    }\n    return res;", "    int\
    \ sum = 0;\n    for(int i = 1; i < lst.size(); i+=2)\n    {\n        if(lst[i]\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;", "  long sum = 0;\n  // Write your code here\n  // To print results to\
    \ the standard output you can use the printf function\n  for(auto i = 0; i < lst.size();\
    \ ++i)\n  {\n      if(i % 2 != 0)\n      {\n          if(lst[i] % 2 == 0)\n  \
    \        {\n              sum += lst[i];\n          }\n      }\n  }\n  return\
    \ sum;", "\tlong res = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i\
    \ % 2 != 0 && lst[i] % 2 == 0)\n\t\t\tres += lst[i];\n\t}\n\treturn res;", "\t\
    long sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 1 &&\
    \ lst[i] % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "    long\
    \ res = 0;\n    for(int i = 0; i < lst.size(); i += 2)\n        res += lst[i];\n\
    \    return res;", "\t// initialize the sum of even elements at odd indices to\
    \ 0\n\tlong sum = 0;\n\t// iterate through the vector lst\n\tfor (int i = 0; i\
    \ < lst.size(); i++) {\n\t\t// check if the current index is odd and the element\
    \ at that index is even\n\t\tif (i % 2 == 1 && lst[i] % 2 == 0) {\n\t\t\t// add\
    \ the even element at the odd index to the sum\n\t\t\tsum += lst[i];\n\t\t}\n\t\
    }\n\t// return the sum of even elements at odd indices\n\treturn sum;", "\tint\
    \ sum = 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 != 0 && lst[i]\
    \ % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "    long count\
    \ = 0;\n    for(long i = 1; i < lst.size(); i += 2) {\n        if(lst[i] % 2 ==\
    \ 0) {\n            count += lst[i];\n        }\n    }\n    return count;", " \
    \ // Write your code here\n  // To print results to the standard output you can\
    \ use std::cout\n  // Example: std::cout << \"Hello world!\";\n  long sum = 0;\n\
    \  for(int i = 0; i < lst.size(); i++){\n    if(i % 2 == 1 && lst[i] % 2 == 0){\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;", "  long sum = 0;\n  for (long\
    \ i = 0; i < lst.size(); i++) {\n    if (i % 2 == 1) {\n      sum += lst[i];\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    for(int i = 1; i < lst.size();\
    \ i += 2) {\n        if(lst[i] % 2 == 0) {\n            sum += lst[i];\n     \
    \   }\n    }\n    return sum;", "    int sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if (i % 2 == 1 && lst[i] % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "    // Write your code here\n    long sum\
    \ = 0;\n    for(int i = 1; i < lst.size(); i+=2){\n        if(lst[i] % 2 == 0){\n\
    \            sum+=lst[i];\n        }\n    }\n    return sum;", "  int a=0;\n \
    \ for(int i=0;i<lst.size();i++){\n    if(i%2!=0&&lst[i]%2==0){\n      a+=lst[i];\n\
    \    }\n  }\n  return a;", "    long sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++) {\n        if(i % 2 != 0 && lst[i] % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "\tlong sum=0;\n\tint len=lst.size();\n\t\
    for(int i=0;i<len;i++)\n\t{\n\t\tif(i%2==0 && lst[i]%2==0)\n\t\t\tsum+=lst[i];\n\
    \t}\n\treturn sum;", "    // Write your code here\n    // To print results to\
    \ the standard output you can use PrintfDebug or cout\n    // Example: PrintfDebug(\"\
    Debug messages...\\n\");\n    //long arr[lst.size()];\n    long sum=0;\n    for(int\
    \ i=0;i<lst.size();i++)\n    {\n        if(i%2==0 && lst[i]%2==0)\n        {\n\
    \            sum+=lst[i];\n        }\n    }\n    return sum;", "    int len =\
    \ lst.size();\n    long sum = 0;\n    for(int i = 0; i < len; i++){\n        if(lst[i]\
    \ % 2 == 0 && i % 2 != 0){\n            sum += lst[i];\n        }\n    }\n   \
    \ return sum;", "    long ans=0;\n    for(int i=0;i<lst.size();i++)\n    {\n \
    \       if(i%2==1&&lst[i]%2==0)\n        {\n            ans+=lst[i];\n       \
    \ }\n    }\n    return ans;", "    long sum=0;\n    int i=0;\n    while(i<lst.size()){\n\
    \        if(lst[i]%2==0){\n            sum+=lst[i];\n        }\n        i+=2;\n\
    \    }\n    return sum;", "\tint i,x=0;\n\tfor(i=0;i<lst.size();i++){\n\t\tif(i%2==1\
    \ && lst[i]%2==0){\n\t\t\tx+=lst[i];\n\t\t}\n\t}\n\treturn x;", return 0;, " \
    \   // Write your code here\n    int sum = 0;\n    for(int i = 0; i < lst.size();\
    \ i++){\n        if(i % 2 == 1 && lst[i] % 2 == 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "    std::cout << \"given lst\\n\";\n   \
    \ for(int i=0;i<lst.size();i++)\n        std::cout << lst[i] << \" \";\n    std::cout\
    \ << \"\\n\";\n    long sum=0;\n    for(int i=0;i<lst.size();i++)\n    {\n   \
    \     if(i%2 == 1 && lst[i]%2 == 0)\n            sum+=lst[i];\n    }\n    return\
    \ sum;", "    // for(long &x:lst) x*=2;\n    std::for_each(lst.begin(),lst.end(),[](long\
    \ &x){x*=2;}); // lambda function\n    long sum=0;\n    for(long i=1;i<lst.size();i+=2)\n\
    \        sum+=lst[i];\n    return sum;", "    long x=0;\n    int j=0;\n    for(int\
    \ i=0;i<lst.size();i+=2)\n    {\n        if(lst[i]%2==0)\n        {\n        \
    \    x+=lst[i];\n        }\n    }\n    return x;", "  long sum = 0;\n  // C++14\
    \ style\n  // for (int i = 0; i < lst.size(); i += 2) {\n  //   if (lst[i] % 2\
    \ == 0) {\n  //     sum += lst[i];\n  //   }\n  // }\n  // C++17 style\n  // for\
    \ (auto [i, e] : enumerate(lst)) {\n  //   if (i % 2 != 0) {\n  //     if (e %\
    \ 2 == 0) {\n  //       sum += e;\n  //     }\n  //   }\n  // }\n  // C++11 style\n\
    \  for (auto it = lst.begin(); it != lst.end(); it += 2) {\n    if (*it % 2 ==\
    \ 0) {\n      sum += *it;\n    }\n  }\n  return sum;", "  int ans = 0;\n  for(int\
    \ i = 0; i < lst.size(); i++) {\n    if(i%2 == 1 && lst[i]%2 == 0) ans += lst[i];\n\
    \  }\n  return ans;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n\
    \        if(lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;", "  long sum = 0;\n  for (unsigned int i = 0; i < lst.size();\
    \ i++) {\n    if (i % 2 == 1 && lst[i] % 2 == 0) {\n      sum += lst[i];\n   \
    \ }\n  }\n  return sum;", "  long res=0;\n  //for(i,0,lst.size(),2)\n  //  res+=lst[i];\n\
    \  int i=0;\n  while(i<lst.size()){\n    res+=lst[i];\n    i+=2;\n  }\n  return\
    \ res;", "    auto sum = 0L;\n    auto i = 0UL;\n    auto n = lst.size();\n  \
    \  while (i < n) {\n        auto item = lst[i];\n        if (i % 2 == 1 && item\
    \ % 2 == 0) {\n            sum += item;\n        }\n        i += 1;\n    }\n \
    \   return sum;", "    long sum = 0;\n    long length = lst.size();\n    for (int\
    \ i = 0; i < length; i++) {\n        if (i % 2 != 0 && lst[i] % 2 == 0) {\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;", "\tlong total =\
    \ 0;\n\tfor (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 != 0 && lst[i] %\
    \ 2 == 0) {\n\t\t\ttotal += lst[i];\n\t\t}\n\t}\n\treturn total;", "    auto acc\
    \ = 0L;\n    auto i = -1;\n    auto lst2 = lst;\n    std::for_each(lst2.begin(),\
    \ lst2.end(), [&i, &acc](long i) {\n        if (i % 2 == 0 && i % 2 == i) {\n\
    \            acc += i;\n        }\n    });\n    return acc;", "  std::cout <<\
    \ \"lst: \";\n  for (long &x: lst) {\n    std::cout << x << \" \";\n  }\n  std::cout\
    \ << std::endl;\n  long res = 0;\n  for (int i = 0; i < lst.size(); i++) {\n \
    \   if (i % 2 == 1 && lst[i] % 2 == 0) {\n      res += lst[i];\n    }\n  }\n \
    \ return res;", "\tlong sum = 0;\n\tfor (long i = 0; i < lst.size(); i++) {\n\t\
    \tif (i % 2 == 1) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "    int\
    \ i;\n    long ans = 0;\n    for(i=0;i<lst.size();i++){\n        if(i%2 == 1 &&\
    \ lst[i]%2 == 0){\n            ans += lst[i];\n        }\n    }\n    return ans;",
  "    long sum=0;\n    for(long i=0;i<lst.size();i++)\n    {\n        if(i%2==1 &&\
    \ lst[i]%2==0)\n        {\n            sum+=lst[i];\n        }\n    }\n    return\
    \ sum;", "    long result = 0;\n    for (int i = 0; i < lst.size(); i++) {\n \
    \       if (i % 2 != 0 && lst[i] % 2 == 0) {\n            result += lst[i];\n\
    \        }\n    }\n    return result;", "    // Your code here\n    long sum =\
    \ 0;\n    for(long i = 0; i < lst.size(); i++)\n    {\n        if(lst[i] % 2 ==\
    \ 0 && i % 2 != 0)\n        {\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;", "    long result;\n    result = 0;\n    int idx;\n    idx =\
    \ 0;\n    int i;\n    i = 0;\n    while (i < lst.size()) {\n        if (lst[i]\
    \ % 2 == 0 && idx % 2 == 1) {\n            result = result + lst[i];\n       \
    \ }\n        idx = idx + 1;\n        i = i + 1;\n    }\n    return result;", " \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(i%2==1\
    \ && lst[i]%2==0) {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(unsigned int i = 0; i < lst.size(); i++)\
    \ {\n        if(i % 2 == 1 && lst[i] % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "  long s = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (i % 2 != 0 && lst[i] % 2 == 0) {\n      s += lst[i];\n    }\n\
    \  }\n  return s;", "    long sum = 0;\n    for(int i = 1; i < lst.size(); i+=2)\
    \ {\n        if(lst[i] % 2 == 0) {\n            sum += lst[i];\n        }\n  \
    \  }\n    return sum;", "\tint evensum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (i % 2 == 1 && lst[i] % 2 == 0)\n\t\t\tevensum += lst[i];\n\t\
    }\n\treturn evensum;", "  // your code here ...\n  long sum=0;\n  for(int i=0;i<lst.size();i++){\n\
    \    if(i%2==1 && lst[i]%2==0){\n      sum+=lst[i];\n    }\n  }\n  return sum;",
  "    long sum = 0;\n    for(int i = 1; i < lst.size(); i = i + 2) {\n        if(lst[i]\
    \ % 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;",
  "    long res = 0;\n    // Write your code here\n    // To print results to the\
    \ standard output you can use print\n    // Example: print \"Hello world!\"\n\
    \    for(long i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0 && i %\
    \ 2 != 0) {\n            res += lst[i];\n        }\n    }\n    return res;", " \
    \   long sum = 0;\n    //FILL IN CODE\n    for(int i=0;i<lst.size();i+=2){\n \
    \       if(lst[i]%2==0){\n            sum+=lst[i];\n        }\n    }\n    return\
    \ sum;", "    int i,j=0;\n    long ans=0;\n    int n=lst.size();\n    for(i=0;i<n;i+=2)\n\
    \    {\n        if(lst[i]%2==0)\n        {\n            ans+=lst[i];\n       \
    \ }\n    }\n    return ans;", "    long sum = 0;\n    for(int i = 1; i < lst.size();\
    \ i += 2) {\n        if(lst[i] % 2 == 0) {\n            sum += lst[i];\n     \
    \   }\n    }\n    return sum;", "    long res = 0;\n    for(long i = 0; i < lst.size();\
    \ i++)\n        if(i % 2 != 0 && lst[i] % 2 == 0)\n            res += lst[i];\n\
    \    return res;", "    long ret = 0;\n    bool isOdd=false;\n    for(int i=0;i<lst.size();i++){\n\
    \        if(isOdd){\n            if(lst[i]%2==0){\n                ret+=lst[i];\n\
    \            }\n        }\n        isOdd=!isOdd;\n    }\n    return ret;", '  return
    std::accumulate(lst.begin() + 1, lst.end(), 0, [](auto a, auto b) { return a +
    (b % 2 == 0 ? b : 0); });', "    long s=0;\n    for(long i=0;i<lst.size();i++){\n\
    \        if(i%2==1 && lst[i]%2==0){\n            s+=lst[i];\n        }\n    }\n\
    \    return s;", "    // Your code here\n    long add=0;\n    for(int i=0;i<lst.size();i++){\n\
    \        if(i%2!=0){\n            if(lst[i]%2==0){\n                add+=lst[i];\n\
    \            }\n        }\n    }\n    return add;", "    long sum = 0;\n    for(int\
    \ i = 1; i < lst.size(); i+=2) {\n        if(lst[i] % 2 == 0) {\n            sum\
    \ += lst[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    if ((lst[i] % 2 == 0) && (i % 2 != 0)) {\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;", "  // your code here\n  int\
    \ answer = 0;\n  for(int i = 1; i < lst.size(); i++)\n  {\n      if(lst[i] % 2\
    \ == 0)\n      {\n          answer += lst[i];\n      }\n  }\n  return answer;",
  "\tlong sum = 0;\n\tfor (long i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 1)\
    \ {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "    long result = 0;\n\
    \    for (unsigned long i = 0; i < lst.size(); i++) {\n        if ((i % 2 == 1)\
    \ && (lst[i] % 2 == 0)) {\n            result += lst[i];\n        }\n    }\n \
    \   return result;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++)\
    \ {\n    if (i % 2 == 1 && lst[i] % 2 == 0) {\n      sum += lst[i];\n    }\n \
    \ }\n  return sum;", "  return std::accumulate(lst.begin() + 1, lst.end(), lst[0],\n\
    \                         [](long acc, long elem) {\n                        \
    \   return acc + (elem % 2 ? 0 : elem);\n                         });", "  long\
    \ res = 0;\n  // TODO: implement your code here\n  for(long j = 0; j < lst.size();\
    \ j++){\n    if(lst[j] % 2 == 0 && j % 2 != 0){\n      res += lst[j];\n    }\n\
    \  }\n  return res;", "    long res = 0;\n    for(int i = 1; i < lst.size(); i+=2)\
    \ {\n        if(lst[i] % 2 == 0) {\n            res += lst[i];\n        }\n  \
    \  }\n    return res;", "\tlong oddSum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (i % 2 != 0 && lst[i] % 2 == 0) {\n\t\t\toddSum += lst[i];\n\t\
    \t}\n\t}\n\treturn oddSum;", "  assert(lst.size() > 0);\n  long sum = 0;\n  for\
    \ (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 1 && lst[i] % 2 == 0) {\n\
    \      sum += lst[i];\n    }\n  }\n  return sum;", "    long sum = 0;\n    for(int\
    \ i = 0; i < lst.size(); i++) {\n        if (i % 2 == 1) {\n            sum +=\
    \ lst[i];\n        }\n    }\n    return sum;", "  long answer = 0;\n  for (int\
    \ i = 0; i < lst.size(); i++) {\n    if (i % 2 == 1 && lst[i] % 2 == 0) {\n  \
    \    answer += lst[i];\n    }\n  }\n  return answer;", "  long ans = 0;\n  for(long\
    \ i = 0; i < lst.size(); i++) {\n    if(lst[i] % 2 == 0) {\n      ans += lst[i];\n\
    \    }\n  }\n  return ans;", "  long sum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (i % 2 != 0 && lst[i] % 2 == 0)\n      sum += lst[i];\n  }\n\
    \  return sum;", "    long sum = 0;\n    for(int i = 0; i < lst.size(); i++) {\n\
    \        if(i%2 != 0 && lst[i]%2 == 0) {\n            sum += lst[i];\n       \
    \ }\n    }\n    return sum;", "\tint sum = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (i % 2 == 1 && lst[i] % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t\
    }\n\t}\n\treturn sum;", "int sum=0;\nfor(int i=0;i<lst.size();i++)\n  {\n    if(i%2!=0\
    \ && lst[i]%2==0)\n       sum+=lst[i];\n  }\n  return sum;", "    int i;\n   \
    \ long sum = 0;\n    for(i=0;i<lst.size();i++){\n        if(i%2!=0 && lst[i]%2==0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;", "    long ans\
    \ = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(i % 2 == 1) {\n\
    \            if(lst[i] % 2 == 0) {\n                ans += lst[i];\n         \
    \   }\n        }\n    }\n    return ans;", "  return std::accumulate(lst.begin()\
    \ + 1, lst.end(), 0L, [](long a, long b) {\n           return (b & 1) ? a + b\
    \ : a;\n         });", "    int sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n\
    \        if(lst[i] % 2 == 0 && i % 2 != 0){\n            sum += lst[i];\n    \
    \    }\n    }\n    return sum;", "    long result = 0;\n    int size = lst.size();\n\
    \    for(int i = 0; i < size; i++) {\n        if(lst[i] % 2 == 0 && i % 2 != 0)\
    \ {\n            result += lst[i];\n        }\n    }\n    return result;", " \
    \ long result = 0;\n  // result = std::accumulate(lst.begin(), lst.end(), 0);\n\
    \  // return result;\n  // int i = 0;\n  // while (i < lst.size()) {\n  //   result\
    \ += lst[i];\n  //   i++;\n  // }\n  // return result;\n  for (long i = 0; i <\
    \ lst.size(); i++) {\n    if (i % 2 == 1) {\n      result += lst[i];\n    }\n\
    \  }\n  return result;", "    long long int sum = 0;\n    if(lst.size()==0)\n\
    \        return 0;\n    for(int i=0;i<lst.size();i+=2)\n    {\n        if(lst[i]%2==0)\n\
    \            sum+=lst[i];\n    }\n    return sum;", "\tlong ans = 0;\n\tfor (int\
    \ i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 != 0) {\n\t\t\tans += lst[i];\n\
    \t\t}\n\t}\n\treturn ans;", "    long sum = 0;\n    int i = 1;\n    while (i <\
    \ lst.size()) {\n        if (lst[i] % 2 == 0) {\n            sum += lst[i];\n\
    \        }\n        i += 2;\n    }\n    return sum;", "\tlong total = 0;\n\tfor\
    \ (int i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 1 && lst[i] % 2 == 0) {\n\
    \t\t\ttotal += lst[i];\n\t\t}\n\t}\n\treturn total;", "  // your code here\n \
    \ int ans = 0;\n  for(int i = 0; i < lst.size(); i++)\n  {\n    if(i % 2 == 1\
    \ && lst[i] % 2 == 0)\n    {\n      ans += lst[i];\n    }\n  }\n  return ans;",
  "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if (i % 2 == 1 &&\
    \ lst[i] % 2 == 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;", "   long\
    \ sum=0;\n   for(int i=0;i<lst.size();i++){\n   \tif(i%2==1){\n   \t\tif(lst[i]%2==0){\n\
    \   \t\t\tsum+=lst[i];\n   \t\t}\n   \t}\n   }\n   return sum;", "    int s=0;\n\
    \    for(int i=0;i<lst.size();i++){\n        if(i%2!=0&&lst[i]%2==0){\n      \
    \      s+=lst[i];\n        }\n    }\n    return s;", "    long i, sum = 0;\n \
    \   for(i = 0; i < lst.size(); i++) {\n        if(i % 2 != 0 && lst[i] % 2 ==\
    \ 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;", "  int\
    \ len = lst.size();\n  int sum = 0;\n  for(int i = 1; i < len; i = i + 2) {\n\
    \    if(lst[i] % 2 == 0) {\n      sum += lst[i];\n    }\n  }\n  return sum;",
  "  // Write your code here\n  long sum = 0;\n  int n = lst.size();\n  for(int i\
    \ = 0; i < n; i++)\n  {\n      if(i % 2 == 0 && lst[i] % 2 == 0)\n        sum\
    \ += lst[i];\n  }\n  return sum;", "  // Write your solution here\n  \n  long\
    \ sum = 0;\n  for(auto i = lst.begin(); i != lst.end(); i++)\n  {\n    //if(lst[i]\
    \ % 2 == 0) \n    if(*i % 2 == 0)\n    {\n      //for(auto j = i+1; j < lst.end();\
    \ j+=2)\n      for(auto j = i+1; j != lst.end(); j+=2)\n      {\n        //sum\
    \ += lst[j];\n        sum += *j;\n      }\n    }\n  }\n  return sum;", "  int\
    \ sum = 0;\n  for(int i = 0; i < lst.size(); i += 2)\n    if(lst[i] % 2 == 0)\n\
    \      sum += lst[i];\n  return sum;", "    \n    long sum = 0;\n    for(int i\
    \ = 1; i < lst.size(); i+=2)\n    {\n        if(lst[i] % 2 == 0)\n        {\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for(long i = 0; i < lst.size(); i++){\n        if((i % 2 == 1) &&\
    \ (lst[i] % 2 == 0)){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;", "  long sum = 0;\n  for (int i = 0; i < lst.size(); i++) {\n    if ((lst[i]\
    \ % 2 == 0) && (i % 2 != 0)) {\n      sum += lst[i];\n    }\n  }\n  return sum;",
  "\tlong sum = 0;\n\tfor (long i = 0; i < lst.size(); i++) {\n\t\tif (i % 2 == 1)\
    \ {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;", "    // your code here\n\
    \    long sum=0;\n    for(int i=0;i<lst.size();i++)\n    {\n        if(i%2==1\
    \ && lst[i]%2==0)\n        {\n            sum+=lst[i];\n        }\n    }\n   \
    \ return sum;", "\tlong sum = 0;\n\tfor (int i = 0; i < lst.size(); i += 2) {\n\
    \t\tif (lst[i] % 2 == 0)\n\t\t\tsum += lst[i];\n\t}\n\treturn sum;", "    long\
    \ sum = 0;\n    for(unsigned int i = 0; i < lst.size(); i++){\n        if(i %\
    \ 2 != 0 && lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;", "    long ans = 0;\n    for(int i = 0; i < lst.size(); i +=\
    \ 2) {\n        if(lst[i] % 2 == 0) {\n            ans += lst[i];\n        }\n\
    \    }\n    return ans;", "  \n  // Type your code here\n  long sum = 0;\n  long\
    \ i;\n  for(i=0;i<lst.size();i++){\n  if(i%2==1&&lst[i]%2==0){\n  sum+=lst[i];\n\
    \  }\n  }\n  return sum;", '  return 0;', "  long sum = 0;\n  for (int i = 0;\
    \ i < lst.size(); i++) {\n    if (i % 2 == 1 && lst[i] % 2 == 0) {\n      sum\
    \ += lst[i];\n    }\n  }\n  return sum;", "    //your code here\n    long long\
    \ sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i%2 ==\
    \ 1 && lst[i]%2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    int size = lst.size();\n    for(int\
    \ i = 0; i < size; i++){\n        if(i % 2 == 1){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "  int sum = 0;\n  for(int i = 0; i < lst.size();\
    \ i++) {\n    if(i % 2 == 1 && lst[i] % 2 == 0) {\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;", "\treturn 0;", "  long sum = 0;\n  for (long i = 0; i <\
    \ lst.size(); i++) {\n    if (i % 2 != 0 && lst[i] % 2 == 0) {\n      sum += lst[i];\n\
    \    }\n  }\n  return sum;", "    // Good luck!\n    long int i;\n    long int\
    \ sum = 0;\n    for(i=0;i<lst.size();i++){\n        if(i%2==0){\n            if(lst[i]%2==0){\n\
    \                sum = sum + lst[i];\n            }\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for(long i = 0; i < lst.size(); i++) {\n    \
    \    if(i % 2 == 1) {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;", "  long ans = 0;\n  for(int i = 1; i < lst.size(); i += 2) {\n    if(lst[i]\
    \ % 2 == 0) {\n      ans += lst[i];\n    }\n  }\n  return ans;", "\tlong result\
    \ = 0;\n\tfor (int i = 0; i < lst.size(); i += 2) {\n\t\tresult += lst[i];\n\t\
    }\n\treturn result;", "  long evenSum = 0;\n  for (int i = 0; i < lst.size();\
    \ i++) {\n    if (i % 2 != 0 && lst[i] % 2 == 0) {\n      evenSum += lst[i];\n\
    \    }\n  }\n  return evenSum;", "    int sum = 0;\n    for(int i = 1; i < lst.size();\
    \ i += 2) {\n        if(lst[i] % 2 == 0) {\n            sum += lst[i];\n     \
    \   }\n    }\n    return sum;", "    long sum = 0;\n    for(int i = 1; i < lst.size();\
    \ i+=2)\n    {\n        if(lst[i] % 2 == 0)\n        {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;", "  //start writing your code here\n    int\
    \ i=0;\n    long ans=0;\n    while(i<lst.size())\n    {\n        if(i%2==0)\n\
    \        {\n            if(lst[i]%2==0)\n            {\n                ans+=lst[i];\n\
    \            }\n        }\n        i++;\n    }\n    return ans;", "  // your code\
    \ here\n  long count=0;\n  for(long i=0;i<lst.size();i++){\n      if(i%2!=0 &&\
    \ lst[i]%2==0){\n          count=count+lst[i];\n      }\n  }\n  return count;",
  "    std::vector<long> ret;\n    int count = 0;\n    int sum = 0;\n    while(count\
    \ < lst.size()){\n        if(count % 2 == 1 && lst[count] % 2 == 0){\n       \
    \     sum += lst[count];\n        }\n        count++;\n    }\n    return sum;",
  "    long res = 0;\n    int len = lst.size();\n    for(int i = 0; i < len; i++)\
    \ {\n        if(i % 2 == 1 && lst[i] % 2 == 0) {\n            res += lst[i];\n\
    \        }\n    }\n    return res;", "  long s = 0;\n  int i = 0;\n  while (i\
    \ < lst.size()) {\n    if (i % 2 == 1) {\n      if (lst[i] % 2 == 0) {\n     \
    \   s += lst[i];\n      }\n    }\n    i += 1;\n  }\n  return s;", "    int count\
    \ = 0;\n    for(int i = 0; i < lst.size(); i++) {\n        if(lst[i] % 2 == 0\
    \ && i % 2 != 0) {\n            count += lst[i];\n        }\n    }\n    return\
    \ count;", "\tif (lst.size() == 0)\n\t\treturn 0;\n\tlong temp = 0;\n\tfor (int\
    \ i = 0; i < lst.size(); i += 2) {\n\t\tif (lst[i] % 2 == 0)\n\t\t\ttemp += lst[i];\n\
    \t}\n\treturn temp;", "\tlong i, sum = 0;\n\tfor (i = 0; i < lst.size(); i++)\
    \ {\n\t\tif (i % 2 == 1 && lst[i] % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t\
    }\n\treturn sum;", "    // Write your code here.\n    long res=0;\n    for(int\
    \ i=0;i<lst.size();i++)\n    {\n        if(i%2!=0 && lst[i]%2==0)\n        {\n\
    \            res+=lst[i];\n        }\n    }\n    return res;", "  long sum = 0;\n\
    \  for (int i = 0; i < lst.size(); i++){\n      if (i % 2 == 1 && lst[i] % 2 ==\
    \ 0){\n          sum += lst[i];\n      }\n  }\n  return sum;", "//   (1)\n// \
    \  (2)\n//   (3)\n//   (4)\n//   (5)\n//   (6)\n//   (7)\n//   (8)\n//   (9)\n\
    //   (10)\n//   (11)\n//   (12)\n//   (13)\n//   (14)\n//   (15)\n//   (16)\n\
    //   (17)\n//   (18)\n//   (19)\n//   (20)\n//   (21)\n//   (22)\n//   (23)\n\
    //   (24)\n//   (25)\n//   (26)\n//   (27)\n//   (28)\n//   (29)\n//   (30)\n\
    //   (31)\n//   (32)\n//   (33)\n//   (34)\n//   (35)\n//   (36)\n//   (37)\n\
    //   (38)\n//   (39)\n//   (40)\n//   (41)\n//   (42)\n//   (43)\n//   (44)\n\
    //   (45)\n//   (46)\n//   (47)\n//   (48)\n//   (49)\n//   (50)\n//   (51)\n\
    //   (52)\n//   (53)\n//   (54)\n//   (55)\n//   (56)\n//   (57)\n//   (58)\n\
    //   (59)\n//   (60)\n//   (61)\n//   (62)\n//   (63)\n//   (64)\n//   (65)\n\
    //   (66)\n//   (67)\n//   (68)\n//   (69)\n//   (70)\n//   (71)\n//   (72)\n\
    //   (73)\n//   (74)\n//   (75)\n//   (76)\n//   (77)\n//   (78)\n//   (79)\n\
    //   (80)\n//   (81)\n//   (82)\n//   (83)\n//   (84)\n//   (85)\n//", "\tlong\
    \ sum = 0;\n\tlong i = 1;\n\tfor (auto x : lst) {\n\t\tif ((i % 2) == 1 && (x\
    \ % 2) == 0) {\n\t\t\tsum += x;\n\t\t}\n\t\ti++;\n\t}\n\treturn sum;", "    long\
    \ ans=0;\n    for(int i=0;i<lst.size();i++){\n        if(i%2!=0){\n          \
    \  if(lst[i]%2==0){\n                ans+=lst[i];\n            }\n        }\n\
    \    }\n    return ans;", "    long sum = 0;\n    for(int i = 1; i < lst.size();\
    \ i += 2) {\n        if(lst[i] % 2 == 0) {\n            sum += lst[i];\n     \
    \   }\n    }\n    return sum;", "  long sum=0;\n  for(int i=0;i<lst.size();i++){\n\
    \    if(i%2!=0 && lst[i]%2==0){\n      sum+=lst[i];\n    }\n  }\n  return sum;",
  "\t// (long)0 is the default output if you do not return a value in a pure function\n\
    \tlong result = (long)0;\n\t// Write your pure code here:\n\tfor(int i=0;i<lst.size();i++)\n\
    \t{\n\t\tif(i%2!=0)\n\t\t{\n\t\t\tif(lst[i]%2==0)\n\t\t\t{\n\t\t\t\tresult = result\
    \ + lst[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn result;", "    long result = 0;\n \
    \   for (int i = 0; i < lst.size(); i++) {\n        if (i % 2 == 1 && lst[i] %\
    \ 2 == 0) {\n            result += lst[i];\n        }\n    }\n    return result;",
  "    long sum = 0;\n    int index = 1;\n    while (index < lst.size()) {\n     \
    \   if (lst[index] % 2 == 0) {\n            sum += lst[index];\n        }\n  \
    \      index += 2;\n    }\n    return sum;", "  int result = 0;\n  for (int i\
    \ = 0; i < lst.size(); i++) {\n    if (i % 2 != 0 && lst[i] % 2 == 0) {\n    \
    \  result += lst[i];\n    }\n  }\n  return result;", "\t// Write your code here\n\
    \t// To print results to the standard output you can use print\n\t// Example:\n\
    \t// print(\"Hello world!\");\n\tlong result = 0;\n\tfor (int i = 0; i < lst.size();\
    \ i++) {\n\t\tif (i % 2 == 1 && lst[i] % 2 == 0) {\n\t\t\tresult += lst[i];\n\t\
    \t}\n\t}\n\treturn result;", "  long i = 0;\n  long val = 0;\n  while (i < lst.size())\
    \ {\n    if (i % 2 != 0) {\n      if (lst[i] % 2 == 0) {\n        val += lst[i];\n\
    \      }\n    }\n    i++;\n  }\n  return val;", "  long total = 0;\n  for (long\
    \ i = 0; i < lst.size(); i++) {\n    if (i % 2 == 1 && lst[i] % 2 == 0) {\n  \
    \    total += lst[i];\n    }\n  }\n  return total;", "  long sum = 0;\n  // REPLACE\
    \ WITH YOUR CODE\n  for(int i=0;i<lst.size();i++)\n  {\n      if(i%2==1)\n   \
    \   {\n          if(lst[i]%2==0)\n          {\n              sum=sum+lst[i];\n\
    \          }\n      }\n  }\n  return sum;", "    int sum = 0;\n    for(int i =\
    \ 0; i < lst.size(); i++){\n        if(lst[i] % 2 == 0 && i % 2 != 0){\n     \
    \       sum += lst[i];\n        }\n    }\n    return sum;", "  long sum = 0;\n\
    \  for (long i = 0; i < lst.size(); i++) {\n    if (i % 2 != 0 && lst[i] % 2 ==\
    \ 0)\n      sum += lst[i];\n  }\n  return sum;", "  long sum = 0;\n  for (long\
    \ i = 0; i < lst.size(); i++) {\n    if (i % 2 == 1 && lst[i] % 2 == 0) {\n  \
    \    sum += lst[i];\n    }\n  }\n  return sum;", "    int lst_size = lst.size();\n\
    \    if(lst_size < 1) {\n        return 0;\n    }\n    else {\n        if(lst_size\
    \ == 1) {\n            return lst[0];\n        }\n        else {\n           \
    \ long num = lst[1];\n            return num + add(std::vector<long>(lst.begin()\
    \ + 2, lst.end()));\n        }\n    }", "\tif(lst.size() == 0) return 0;\n\tlong\
    \ sum = 0;\n\tfor(int i = 0; i < lst.size(); i++) {\n\t\tif(i % 2 != 0 && lst[i]\
    \ % 2 == 0) {\n\t\t\tsum += lst[i];\n\t\t}\n\t}\n\treturn sum;"]
stop_tokens:
- "\n}"
